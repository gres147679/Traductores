
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.2'

_lr_method = 'LALR'

_lr_signature = '\xb1\x04\x16\xcfV\x9a/\xa9\x90D\xbdCQWa\xba'
    
_lr_action_items = {'GREAT':([26,27,31,33,36,40,90,91,93,101,102,],[-41,-42,-38,-43,65,65,-40,-39,-44,-36,-37,]),'INST_DECLARE':([2,9,75,76,81,113,114,115,116,],[3,3,3,3,3,3,3,3,3,]),'INST_IN':([48,],[80,]),'INST_WRITE':([2,9,75,76,81,113,114,115,116,],[4,4,4,4,4,4,4,4,4,]),'LESS':([26,27,31,33,36,40,90,91,93,101,102,],[-41,-42,-38,-43,68,68,-40,-39,-44,-36,-37,]),'EQEQ':([26,27,31,33,36,40,90,91,93,101,102,],[-41,-42,-38,-43,69,69,-40,-39,-44,-36,-37,]),'EQUAL':([15,],[46,]),'INST_END':([6,10,11,12,13,14,16,21,22,25,26,27,28,29,30,31,32,33,35,36,37,38,39,43,44,45,50,77,78,83,84,85,86,87,88,89,90,91,92,93,94,96,97,98,99,100,101,102,103,104,107,109,112,117,118,119,120,],[-13,-6,-9,-3,-10,-8,-11,-7,-12,-14,-41,-42,-49,-23,-54,-38,-55,-43,-24,-22,-29,-28,-52,-51,-4,77,-53,-2,-21,-18,-15,-20,-19,-26,-27,-56,-40,-39,-57,-44,-50,-48,-46,-47,-25,-45,-36,-37,-65,-5,-60,-58,-63,-64,-59,-61,-62,]),'INST_FOR':([2,9,75,76,81,113,114,115,116,],[18,18,18,18,18,18,18,18,18,]),'INST_WHILE':([2,9,75,76,81,113,114,115,116,],[7,7,7,7,7,7,7,7,7,]),'INST_READ':([2,9,75,76,81,113,114,115,116,],[8,8,8,8,8,8,8,8,8,]),'INST_BEGIN':([2,75,81,113,114,115,116,],[9,9,9,9,9,9,9,]),'MINUS':([26,27,31,33,36,40,47,59,74,90,91,93,95,98,99,100,101,102,105,],[-41,-42,-38,-43,73,73,73,73,73,-40,-39,-44,73,73,73,73,-36,-37,-43,]),'DIVIDE':([26,27,31,33,90,91,93,101,102,105,],[-41,-42,56,-43,-40,-39,-44,56,56,-43,]),'INTERSECTION':([26,27,28,31,33,35,60,90,91,93,94,96,97,98,100,101,102,106,108,],[-41,-42,-49,-38,-43,61,61,-40,-39,-44,-50,61,-46,-47,-45,-36,-37,61,61,]),'RPAREN':([26,27,28,31,33,59,60,74,90,91,93,94,96,97,98,100,101,102,],[-41,-42,-49,-38,-43,93,94,93,-40,-39,-44,-50,-48,-46,-47,-45,-36,-37,]),'SEMICOLON':([6,10,11,12,13,14,16,21,22,25,26,27,28,29,30,31,32,33,35,36,37,38,39,43,44,50,77,78,83,84,85,86,87,88,89,90,91,92,93,94,96,97,98,99,100,101,102,103,107,109,112,117,118,119,120,],[-13,-6,-9,-3,-10,-8,-11,-7,-12,-14,-41,-42,-49,-23,-54,-38,-55,-43,-24,-22,-29,-28,-52,-51,76,-53,-2,-21,-18,-15,-20,-19,-26,-27,-56,-40,-39,-57,-44,-50,-48,-46,-47,-25,-45,-36,-37,-65,-60,-58,-63,-64,-59,-61,-62,]),'NEQEQ':([26,27,31,33,36,40,90,91,93,101,102,],[-41,-42,-38,-43,66,66,-40,-39,-44,-36,-37,]),'TYPEDEF_RANGE':([52,],[85,]),'INST_OF':([26,27,31,33,47,90,91,93,101,102,],[-41,-42,-38,-43,79,-40,-39,-44,-36,-37,]),'-':([26,27,28,31,33,90,91,93,94,96,97,98,100,101,102,105,106,],[-41,-42,-49,-38,-43,-40,-39,-44,-50,-48,-46,-47,-45,-36,-37,110,111,]),'INST_AS':([23,24,82,],[-16,52,-17,]),'COMMA':([23,26,27,28,29,30,31,32,33,35,36,37,38,87,88,90,91,93,94,96,97,98,99,100,101,102,],[51,-41,-42,-49,-23,55,-38,58,-43,-24,-22,-29,-28,-26,-27,-40,-39,-44,-50,-48,-46,-47,-25,-45,-36,-37,]),'PLUS':([26,27,28,31,33,35,36,40,47,59,60,74,90,91,93,94,95,96,97,98,99,100,101,102,105,106,108,],[-41,-42,-49,-38,-43,62,72,72,72,72,62,72,-40,-39,-44,-50,72,62,-46,-47,72,72,-36,-37,-43,62,62,]),'INST_PROGRAM':([0,],[2,]),'$end':([1,5,6,10,11,12,13,14,16,21,22,25,26,27,28,29,30,31,32,33,35,36,37,38,39,43,50,77,78,83,84,85,86,87,88,89,90,91,92,93,94,96,97,98,99,100,101,102,103,107,109,112,117,118,119,120,],[0,-1,-13,-6,-9,-3,-10,-8,-11,-7,-12,-14,-41,-42,-49,-23,-54,-38,-55,-43,-24,-22,-29,-28,-52,-51,-53,-2,-21,-18,-15,-20,-19,-26,-27,-56,-40,-39,-57,-44,-50,-48,-46,-47,-25,-45,-36,-37,-65,-60,-58,-63,-64,-59,-61,-62,]),'INST_ELSE':([6,10,11,12,13,14,16,21,22,25,26,27,28,29,30,31,32,33,35,36,37,38,39,43,50,77,78,83,84,85,86,87,88,89,90,91,92,93,94,96,97,98,99,100,101,102,103,107,109,112,117,118,119,120,],[-13,-6,-9,-3,-10,-8,-11,-7,-12,-14,-41,-42,-49,-23,-54,-38,-55,-43,-24,-22,-29,-28,-52,-51,-53,-2,-21,-18,-15,-20,-19,-26,-27,-56,-40,-39,-57,-44,-50,-48,-46,-47,-25,-45,-36,-37,-65,-60,114,-63,-64,-59,-61,-62,]),'STRING':([4,20,55,58,],[32,32,32,32,]),'TYPEDEF_BOOL':([52,],[86,]),'VAR_IDENTIFIER':([2,3,4,6,7,8,9,10,11,12,13,14,16,17,18,19,20,21,22,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,41,43,46,50,51,53,54,55,56,57,58,61,62,63,64,65,66,67,68,69,70,71,72,73,75,76,77,78,79,80,81,83,84,85,86,87,88,89,90,91,92,93,94,96,97,98,99,100,101,102,103,107,109,112,113,114,115,116,117,118,119,120,],[15,23,33,-13,33,43,15,-6,-9,-3,-10,-8,-11,33,48,33,33,-7,-12,-14,-41,-42,-49,-23,-54,-38,-55,-43,33,-24,-22,-29,-28,-52,33,-51,33,-53,23,33,33,33,33,33,33,33,33,33,-34,-32,-31,33,-33,-30,33,-35,33,33,15,15,-2,-21,105,33,15,-18,-15,-20,-19,-26,-27,-56,-40,-39,-57,-44,-50,-48,-46,-47,-25,-45,-36,-37,-65,105,-58,105,15,15,15,15,-64,-59,-61,-62,]),'NUMBER':([4,6,7,10,11,12,13,14,16,17,19,20,21,22,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,41,43,46,50,53,54,55,56,57,58,61,62,63,64,65,66,67,68,69,70,71,72,73,77,78,79,80,83,84,85,86,87,88,89,90,91,92,93,94,96,97,98,99,100,101,102,103,107,109,112,117,118,119,120,],[27,-13,27,-6,-9,-3,-10,-8,-11,27,27,27,-7,-12,-14,-41,-42,-49,-23,-54,-38,-55,-43,27,-24,-22,-29,-28,-52,27,-51,27,-53,27,27,27,27,27,27,27,27,27,-34,-32,-31,27,-33,-30,27,-35,27,27,-2,-21,27,27,-18,-15,-20,-19,-26,-27,-56,-40,-39,-57,-44,-50,-48,-46,-47,-25,-45,-36,-37,-65,27,-58,27,-64,-59,-61,-62,]),'RANGE':([26,27,31,33,36,59,90,91,93,95,101,102,105,],[-41,-42,-38,-43,70,70,-40,-39,-44,70,-36,-37,-43,]),'INST_DO':([26,27,28,31,33,37,38,42,87,88,90,91,93,94,96,97,98,99,100,101,102,108,],[-41,-42,-49,-38,-43,-29,-28,75,-26,-27,-40,-39,-44,-50,-48,-46,-47,-25,-45,-36,-37,113,]),'LPAREN':([4,6,7,10,11,12,13,14,16,17,19,20,21,22,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,41,43,46,50,53,54,55,56,57,58,61,62,63,64,65,66,67,68,69,70,71,72,73,77,78,79,80,83,84,85,86,87,88,89,90,91,92,93,94,96,97,98,99,100,101,102,103,107,109,112,117,118,119,120,],[34,-13,41,-6,-9,-3,-10,-8,-11,41,41,34,-7,-12,-14,-41,-42,-49,-23,-54,-38,-55,-43,34,-24,-22,-29,-28,-52,41,-51,34,-53,41,41,34,41,41,34,34,34,41,-34,-32,-31,41,-33,-30,41,-35,41,41,-2,-21,34,34,-18,-15,-20,-19,-26,-27,-56,-40,-39,-57,-44,-50,-48,-46,-47,-25,-45,-36,-37,-65,34,-58,34,-64,-59,-61,-62,]),'TIMES':([26,27,28,31,33,35,60,90,91,93,94,96,97,98,100,101,102,105,106,108,],[-41,-42,-49,57,-43,63,63,-40,-39,-44,-50,63,63,-47,-45,57,57,-43,63,63,]),'INST_CASE':([2,9,75,76,81,113,114,115,116,],[17,17,17,17,17,17,17,17,17,]),'AND':([26,27,29,31,33,37,38,42,49,87,88,90,91,93,99,101,102,],[-41,-42,53,-38,-43,-29,-28,53,53,-26,53,-40,-39,-44,-25,-36,-37,]),'INST_THEN':([26,27,31,33,37,38,49,87,88,90,91,93,99,101,102,],[-41,-42,-38,-43,-29,-28,81,-26,-27,-40,-39,-44,-25,-36,-37,]),'INST_IF':([2,9,75,76,81,113,114,115,116,],[19,19,19,19,19,19,19,19,19,]),'GREATEQ':([26,27,31,33,36,40,90,91,93,101,102,],[-41,-42,-38,-43,64,64,-40,-39,-44,-36,-37,]),'f':([4,7,19,20,46,53,54,55,58,],[37,37,37,37,37,37,37,37,37,]),'TYPEDEF_INT':([52,],[83,]),'LESSEQ':([26,27,31,33,36,40,90,91,93,101,102,],[-41,-42,-38,-43,71,71,-40,-39,-44,-36,-37,]),'t':([4,7,19,20,46,53,54,55,58,],[38,38,38,38,38,38,38,38,38,]),'INST_WRITELN':([2,9,75,76,81,113,114,115,116,],[20,20,20,20,20,20,20,20,20,]),'>':([110,111,],[115,116,]),'OR':([26,27,29,31,33,37,38,42,49,87,88,90,91,93,99,101,102,],[-41,-42,54,-38,-43,-29,-28,54,54,-26,-27,-40,-39,-44,-25,-36,-37,]),}

_lr_action = { }
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = { }
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'Tipo':([52,],[84,]),'Lista_Aux':([4,20,55,58,],[39,50,89,92,]),'Bloque_Inst':([2,75,81,113,114,115,116,],[5,103,109,117,118,119,120,]),'Inst_Salida':([2,9,75,76,81,113,114,115,116,],[6,6,6,6,6,6,6,6,6,]),'Factor':([4,7,17,19,20,34,41,46,53,54,55,56,57,58,61,62,63,67,70,72,73,79,80,107,112,],[26,26,26,26,26,26,26,26,26,26,26,90,91,26,26,26,26,26,26,26,26,26,26,26,26,]),'Casos':([79,107,112,],[107,112,112,]),'Operacion_booleana':([4,7,19,20,46,53,54,55,58,],[29,42,49,29,29,87,88,29,29,]),'Inst_Declare':([2,9,75,76,81,113,114,115,116,],[10,10,10,10,10,10,10,10,10,]),'RangoF':([4,20,34,46,55,58,61,62,79,80,107,112,],[28,28,28,28,28,28,28,28,28,28,28,28,]),'Opr_bool':([36,40,],[67,67,]),'Inst_For':([2,9,75,76,81,113,114,115,116,],[11,11,11,11,11,11,11,11,11,]),'program':([0,],[1,]),'Inst':([2,9,75,76,81,113,114,115,116,],[12,44,12,44,12,12,12,12,12,]),'Inst_While':([2,9,75,76,81,113,114,115,116,],[13,13,13,13,13,13,13,13,13,]),'Inst_Lectura':([2,9,75,76,81,113,114,115,116,],[14,14,14,14,14,14,14,14,14,]),'Lista_Inst':([9,76,],[45,104,]),'Expresion':([4,20,46,55,58,],[30,30,78,30,30,]),'Term':([4,7,17,19,20,34,41,46,53,54,55,58,61,62,63,67,70,72,73,79,80,107,112,],[31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,101,102,31,31,31,31,]),'Inst_If':([2,9,75,76,81,113,114,115,116,],[16,16,16,16,16,16,16,16,16,]),'Inst_Asignacion':([2,9,75,76,81,113,114,115,116,],[21,21,21,21,21,21,21,21,21,]),'Rango':([4,20,34,46,55,58,61,62,79,80,107,112,],[35,35,60,35,35,35,96,97,106,108,106,106,]),'Lista_Declare':([3,],[25,]),'Operacion_binaria':([4,7,17,19,20,34,41,46,53,54,55,58,61,62,63,67,70,79,80,107,112,],[36,40,47,40,36,59,74,36,40,40,36,36,95,95,98,99,100,95,95,95,95,]),'Lista_Variables':([3,51,],[24,82,]),'Inst_Case':([2,9,75,76,81,113,114,115,116,],[22,22,22,22,22,22,22,22,22,]),}

_lr_goto = { }
for _k, _v in _lr_goto_items.items():
   for _x,_y in zip(_v[0],_v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = { }
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> INST_PROGRAM Bloque_Inst','program',2,'p_program','parser.py',14),
  ('Bloque_Inst -> INST_BEGIN Lista_Inst INST_END','Bloque_Inst',3,'p_Bloque_Inst','parser.py',29),
  ('Bloque_Inst -> Inst','Bloque_Inst',1,'p_Bloque_Inst','parser.py',30),
  ('Lista_Inst -> Inst','Lista_Inst',1,'p_Lista_Inst','parser.py',48),
  ('Lista_Inst -> Inst SEMICOLON Lista_Inst','Lista_Inst',3,'p_Lista_Inst','parser.py',49),
  ('Inst -> Inst_Declare','Inst',1,'p_Inst','parser.py',56),
  ('Inst -> Inst_Asignacion','Inst',1,'p_Inst','parser.py',57),
  ('Inst -> Inst_Lectura','Inst',1,'p_Inst','parser.py',58),
  ('Inst -> Inst_For','Inst',1,'p_Inst','parser.py',59),
  ('Inst -> Inst_While','Inst',1,'p_Inst','parser.py',60),
  ('Inst -> Inst_If','Inst',1,'p_Inst','parser.py',61),
  ('Inst -> Inst_Case','Inst',1,'p_Inst','parser.py',62),
  ('Inst -> Inst_Salida','Inst',1,'p_Inst','parser.py',63),
  ('Inst_Declare -> INST_DECLARE Lista_Declare','Inst_Declare',2,'p_Inst_Declare','parser.py',79),
  ('Lista_Declare -> Lista_Variables INST_AS Tipo','Lista_Declare',3,'p_Lista_Declare','parser.py',93),
  ('Lista_Variables -> VAR_IDENTIFIER','Lista_Variables',1,'p_Lista_Variables','parser.py',107),
  ('Lista_Variables -> VAR_IDENTIFIER COMMA Lista_Variables','Lista_Variables',3,'p_Lista_Variables','parser.py',108),
  ('Tipo -> TYPEDEF_INT','Tipo',1,'p_Tipo','parser.py',116),
  ('Tipo -> TYPEDEF_BOOL','Tipo',1,'p_Tipo','parser.py',117),
  ('Tipo -> TYPEDEF_RANGE','Tipo',1,'p_Tipo','parser.py',118),
  ('Inst_Asignacion -> VAR_IDENTIFIER EQUAL Expresion','Inst_Asignacion',3,'p_Inst_Asignacion','parser.py',131),
  ('Expresion -> Operacion_binaria','Expresion',1,'p_Expresion','parser.py',154),
  ('Expresion -> Operacion_booleana','Expresion',1,'p_Expresion','parser.py',155),
  ('Expresion -> Rango','Expresion',1,'p_Expresion','parser.py',156),
  ('Operacion_booleana -> Operacion_binaria Opr_bool Operacion_binaria','Operacion_booleana',3,'p_Operacion_booleana','parser.py',160),
  ('Operacion_booleana -> Operacion_booleana AND Operacion_booleana','Operacion_booleana',3,'p_Operacion_booleana','parser.py',161),
  ('Operacion_booleana -> Operacion_booleana OR Operacion_booleana','Operacion_booleana',3,'p_Operacion_booleana','parser.py',162),
  ('Operacion_booleana -> t','Operacion_booleana',1,'p_Operacion_booleana','parser.py',163),
  ('Operacion_booleana -> f','Operacion_booleana',1,'p_Operacion_booleana','parser.py',164),
  ('Opr_bool -> EQEQ','Opr_bool',1,'p_Opr_bool','parser.py',173),
  ('Opr_bool -> NEQEQ','Opr_bool',1,'p_Opr_bool','parser.py',174),
  ('Opr_bool -> GREAT','Opr_bool',1,'p_Opr_bool','parser.py',175),
  ('Opr_bool -> LESS','Opr_bool',1,'p_Opr_bool','parser.py',176),
  ('Opr_bool -> GREATEQ','Opr_bool',1,'p_Opr_bool','parser.py',177),
  ('Opr_bool -> LESSEQ','Opr_bool',1,'p_Opr_bool','parser.py',178),
  ('Operacion_binaria -> Operacion_binaria PLUS Term','Operacion_binaria',3,'p_Operacion_binaria','parser.py',182),
  ('Operacion_binaria -> Operacion_binaria MINUS Term','Operacion_binaria',3,'p_Operacion_binaria','parser.py',183),
  ('Operacion_binaria -> Term','Operacion_binaria',1,'p_Operacion_binaria','parser.py',184),
  ('Term -> Term TIMES Factor','Term',3,'p_Term','parser.py',191),
  ('Term -> Term DIVIDE Factor','Term',3,'p_Term','parser.py',192),
  ('Term -> Factor','Term',1,'p_Term','parser.py',193),
  ('Factor -> NUMBER','Factor',1,'p_Factor','parser.py',200),
  ('Factor -> VAR_IDENTIFIER','Factor',1,'p_Factor','parser.py',201),
  ('Factor -> LPAREN Operacion_binaria RPAREN','Factor',3,'p_Factor','parser.py',202),
  ('Rango -> Operacion_binaria RANGE Operacion_binaria','Rango',3,'p_Rango','parser.py',209),
  ('Rango -> Rango PLUS Rango','Rango',3,'p_Rango','parser.py',210),
  ('Rango -> Rango TIMES Operacion_binaria','Rango',3,'p_Rango','parser.py',211),
  ('Rango -> Rango INTERSECTION Rango','Rango',3,'p_Rango','parser.py',212),
  ('Rango -> RangoF','Rango',1,'p_Rango','parser.py',213),
  ('RangoF -> LPAREN Rango RPAREN','RangoF',3,'p_RangoF','parser.py',220),
  ('Inst_Lectura -> INST_READ VAR_IDENTIFIER','Inst_Lectura',2,'p_Inst_Lectura','parser.py',225),
  ('Inst_Salida -> INST_WRITE Lista_Aux','Inst_Salida',2,'p_Inst_Salida','parser.py',230),
  ('Inst_Salida -> INST_WRITELN Lista_Aux','Inst_Salida',2,'p_Inst_Salida','parser.py',231),
  ('Lista_Aux -> Expresion','Lista_Aux',1,'p_Lista_Aux','parser.py',235),
  ('Lista_Aux -> STRING','Lista_Aux',1,'p_Lista_Aux','parser.py',236),
  ('Lista_Aux -> Expresion COMMA Lista_Aux','Lista_Aux',3,'p_Lista_Aux','parser.py',237),
  ('Lista_Aux -> STRING COMMA Lista_Aux','Lista_Aux',3,'p_Lista_Aux','parser.py',238),
  ('Inst_If -> INST_IF Operacion_booleana INST_THEN Bloque_Inst','Inst_If',4,'p_Inst_If','parser.py',248),
  ('Inst_If -> INST_IF Operacion_booleana INST_THEN Bloque_Inst INST_ELSE Bloque_Inst','Inst_If',6,'p_Inst_If','parser.py',249),
  ('Inst_Case -> INST_CASE Operacion_binaria INST_OF Casos','Inst_Case',4,'p_Inst_Case','parser.py',258),
  ('Casos -> VAR_IDENTIFIER - > Bloque_Inst','Casos',4,'p_Casos','parser.py',261),
  ('Casos -> Rango - > Bloque_Inst','Casos',4,'p_Casos','parser.py',262),
  ('Casos -> Casos Casos','Casos',2,'p_Casos','parser.py',263),
  ('Inst_For -> INST_FOR VAR_IDENTIFIER INST_IN Rango INST_DO Bloque_Inst','Inst_For',6,'p_Inst_For','parser.py',272),
  ('Inst_While -> INST_WHILE Operacion_booleana INST_DO Bloque_Inst','Inst_While',4,'p_Inst_While','parser.py',281),
]
