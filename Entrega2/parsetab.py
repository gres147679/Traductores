
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.2'

_lr_method = 'LALR'

_lr_signature = '\x8d\xee\xeb\x16\xf9 G\xa8\x13=\xabD\xdbR\r\xcc'
    
_lr_action_items = {'GREAT':([26,27,33,35,38,43,45,55,62,74,95,120,121,122,126,135,137,],[-61,-62,-57,-63,79,-63,79,-63,-65,79,79,-59,-60,-58,-64,-55,-56,]),'INST_DECLARE':([10,],[47,]),'INST_IN':([57,],[109,]),'INST_WRITE':([2,10,49,94,97,99,102,110,162,163,164,165,166,168,169,170,171,],[4,4,4,4,-25,-26,4,4,-31,-28,-33,-32,-27,4,4,4,4,]),'LESS':([26,27,33,35,38,43,45,55,62,74,95,120,121,122,126,135,137,],[-61,-62,-57,-63,82,-63,82,-63,-65,82,82,-59,-60,-58,-64,-55,-56,]),'EQEQ':([26,27,29,31,33,35,38,39,42,43,45,55,58,62,72,74,89,95,115,116,117,118,120,121,122,124,125,126,127,128,129,130,131,132,133,134,135,136,137,],[-61,-62,-47,64,-57,-49,83,-48,64,-49,83,-63,64,-65,64,83,64,83,64,-43,64,-44,-59,-60,-58,-42,-70,-64,-71,-69,-67,-68,-46,-38,-45,-66,-55,-41,-56,]),'TOP':([2,10,49,94,97,99,102,110,162,163,164,165,166,168,169,170,171,],[5,5,5,5,-25,-26,5,5,-31,-28,-33,-32,-27,5,5,5,5,]),'NUMBER':([4,8,18,20,21,30,36,40,41,44,52,53,56,60,61,63,64,65,66,67,68,69,70,71,75,76,77,78,79,80,81,82,83,84,85,86,87,88,92,107,109,176,177,],[27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,-53,-51,27,27,-52,27,27,-54,27,27,27,27,27,27,27,27,]),'INST_END':([3,7,12,14,15,17,24,25,26,27,28,29,31,32,33,34,35,37,38,39,43,46,48,49,50,51,55,59,62,89,97,99,100,101,103,106,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,140,141,142,146,147,148,149,150,154,155,156,157,158,159,160,162,163,164,165,166,167,174,175,176,177,178,179,],[-15,-14,-10,-11,-9,-12,-8,-13,-61,-62,-73,-47,-36,-75,-57,-76,-49,-37,-35,-48,-49,-72,-16,100,-6,103,-63,-74,-65,-50,-25,-26,-5,146,-3,-34,-39,-43,-40,-44,-77,-59,-60,-58,-78,-42,-70,-64,-71,-69,-67,-68,-46,-38,-45,-66,-55,-41,-56,-23,-19,-16,-90,-4,-7,-24,-20,167,-16,-81,-79,-22,-18,-21,-17,-31,-28,-33,-32,-27,-83,-88,-82,-84,-85,-86,-87,]),'INST_FOR':([2,10,49,94,97,99,102,110,162,163,164,165,166,168,169,170,171,],[19,19,19,19,-25,-26,19,19,-31,-28,-33,-32,-27,19,19,19,19,]),'INST_WHILE':([2,10,49,94,97,99,102,110,162,163,164,165,166,168,169,170,171,],[8,8,8,8,-25,-26,8,8,-31,-28,-33,-32,-27,8,8,8,8,]),'INST_READ':([2,10,49,94,97,99,102,110,162,163,164,165,166,168,169,170,171,],[9,9,9,9,-25,-26,9,9,-31,-28,-33,-32,-27,9,9,9,9,]),'INST_BEGIN':([2,10,49,94,97,99,102,110,162,163,164,165,166,168,169,170,171,],[10,10,10,10,-25,-26,10,10,-31,-28,-33,-32,-27,10,10,10,10,]),'TRUE':([4,8,20,21,36,40,44,53,63,64,65,66,67,71,],[29,29,29,29,29,29,29,29,29,29,29,29,29,29,]),'MINUS':([4,8,18,20,21,26,27,30,33,35,36,38,40,41,43,44,45,52,53,54,55,56,60,61,62,63,64,65,66,67,68,69,70,71,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,90,91,92,95,104,107,108,109,111,113,120,121,122,126,127,130,131,132,133,134,135,137,139,151,176,177,],[30,30,30,30,30,-61,-62,30,-57,-63,30,88,30,30,-63,30,88,30,30,88,-63,30,30,30,-65,30,30,30,30,30,30,30,30,30,88,30,30,30,-53,-51,30,30,-52,30,30,-54,30,30,30,88,-63,30,88,-63,30,88,30,-63,-63,-59,-60,-58,-64,-63,88,88,88,88,88,-55,-56,88,-63,30,30,]),'DIVIDE':([26,27,33,35,43,55,62,91,104,111,113,120,121,122,126,127,135,137,151,],[-61,-62,68,-63,-63,-63,-65,-63,-63,-63,-63,-59,-60,-58,-64,-63,68,68,-63,]),'INTERSECTION':([26,27,33,35,37,55,62,73,91,93,104,105,111,112,113,114,120,121,122,125,126,127,128,129,130,134,135,136,137,151,152,153,],[-61,-62,-57,-71,75,-63,-65,75,-71,75,-71,75,-71,75,-71,75,-59,-60,-58,-70,-64,-71,-69,-67,-68,-66,-55,75,-56,-71,75,75,]),'RPAREN':([26,27,29,33,35,39,43,55,62,72,73,74,89,91,93,95,104,105,108,111,112,113,114,115,116,117,118,120,121,122,124,125,126,127,128,129,130,131,132,133,134,135,136,137,139,],[-61,-62,-47,-57,-49,-48,-49,-63,-65,124,125,126,-50,138,140,126,148,149,126,157,158,159,160,-39,-43,-40,-44,-59,-60,-58,-42,-70,-64,-63,-69,-67,-68,-46,-38,-45,-66,-55,-41,-56,126,]),'SEMICOLON':([3,7,12,14,15,17,24,25,26,27,28,29,31,32,33,34,35,37,38,39,43,46,48,50,55,59,62,89,99,100,103,106,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,140,141,142,146,148,149,154,155,156,157,158,159,160,162,163,164,165,167,172,173,174,175,],[-15,-14,-10,-11,-9,-12,-8,-13,-61,-62,-73,-47,-36,-75,-57,-76,-49,-37,-35,-48,-49,-72,-16,102,-63,-74,-65,-50,145,-5,-3,-34,-39,-43,-40,-44,-77,-59,-60,-58,-78,-42,-70,-64,-71,-69,-67,-68,-46,-38,-45,-66,-55,-41,-56,-23,-19,-16,-90,-4,-24,-20,-16,-81,-79,-22,-18,-21,-17,-31,-28,-33,-32,-83,176,177,-88,-82,]),'BOTTOM':([2,10,49,94,97,99,102,110,162,163,164,165,166,168,169,170,171,],[11,11,11,11,-25,-26,11,11,-31,-28,-33,-32,-27,11,11,11,11,]),'TYPEDEF_RANGE':([144,],[164,]),'INST_OF':([26,27,33,54,55,62,120,121,122,126,135,137,],[-61,-62,-57,107,-63,-65,-59,-60,-58,-64,-55,-56,]),'INST_AS':([96,98,161,],[-29,144,-30,]),'PLUS':([26,27,33,35,37,38,43,45,54,55,62,73,74,90,91,93,95,104,105,108,111,112,113,114,120,121,122,125,126,127,128,129,130,131,132,133,134,135,136,137,139,151,152,153,],[-61,-62,-57,-63,76,86,-63,86,86,-63,-65,76,86,86,-63,76,86,-63,76,86,-63,76,-63,76,-59,-60,-58,-70,-64,-63,76,-67,-68,86,86,86,-66,-55,76,-56,86,-63,76,76,]),'COMMA':([26,27,29,31,32,33,34,35,37,38,39,43,55,62,89,96,115,116,117,118,120,121,122,124,125,126,127,128,129,130,131,132,133,134,135,136,137,],[-61,-62,-47,-36,67,-57,71,-49,-37,-35,-48,-49,-63,-65,-50,143,-39,-43,-40,-44,-59,-60,-58,-42,-70,-64,-71,-69,-67,-68,-46,-38,-45,-66,-55,-41,-56,]),'CASE_ASSIGN':([26,27,33,55,62,120,121,122,125,126,127,128,129,130,134,135,137,151,152,],[-61,-62,-57,-63,-65,-59,-60,-58,-70,-64,-71,-69,-67,-68,-66,-55,-56,168,169,]),'INST_PROGRAM':([0,],[2,]),'$end':([1,3,6,7,12,13,14,15,17,24,25,26,27,28,29,31,32,33,34,35,37,38,39,43,46,55,59,62,89,100,103,106,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,140,141,142,146,148,149,154,155,156,157,158,159,160,167,174,175,],[0,-15,-1,-14,-10,-2,-11,-9,-12,-8,-13,-61,-62,-73,-47,-36,-75,-57,-76,-49,-37,-35,-48,-49,-72,-63,-74,-65,-50,-5,-3,-34,-39,-43,-40,-44,-77,-59,-60,-58,-78,-42,-70,-64,-71,-69,-67,-68,-46,-38,-45,-66,-55,-41,-56,-23,-19,-16,-90,-4,-24,-20,-16,-81,-79,-22,-18,-21,-17,-83,-88,-82,]),'INST_ELSE':([3,7,12,14,15,17,24,25,26,27,28,29,31,32,33,34,35,37,38,39,43,46,55,59,62,89,100,103,106,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,140,141,142,146,148,149,154,155,156,157,158,159,160,167,174,175,],[-15,-14,-10,-11,-9,-12,-8,-13,-61,-62,-73,-47,-36,-75,-57,-76,-49,-37,-35,-48,-49,-72,-63,-74,-65,-50,-5,-3,-34,-39,-43,-40,-44,-77,-59,-60,-58,-78,-42,-70,-64,-71,-69,-67,-68,-46,-38,-45,-66,-55,-41,-56,-23,-19,-16,-90,-4,-24,-20,-16,171,-79,-22,-18,-21,-17,-83,-88,-82,]),'STRING':([4,21,67,71,],[34,34,34,34,]),'EQUAL':([16,],[53,]),'TYPEDEF_BOOL':([144,],[165,]),'VAR_IDENTIFIER':([2,4,8,9,10,18,19,20,21,30,36,40,41,44,47,49,52,53,56,60,61,63,64,65,66,67,68,69,70,71,75,76,77,78,79,80,81,82,83,84,85,86,87,88,92,94,97,99,102,107,109,110,143,145,162,163,164,165,166,168,169,170,171,176,177,],[16,35,43,46,16,55,57,43,35,55,35,43,91,43,96,16,104,35,55,111,113,43,43,43,43,35,55,55,55,35,127,127,55,-53,-51,55,55,-52,55,55,-54,55,127,55,127,16,-25,-26,16,151,127,16,96,96,-31,-28,-33,-32,-27,16,16,16,16,151,151,]),'INST_IF':([2,10,49,94,97,99,102,110,162,163,164,165,166,168,169,170,171,],[20,20,20,20,-25,-26,20,20,-31,-28,-33,-32,-27,20,20,20,20,]),'RANGE':([26,27,33,35,38,55,62,74,90,91,104,111,113,120,121,122,126,127,135,137,139,151,],[-61,-62,-57,-63,84,-63,-65,84,84,-63,-63,-63,-63,-59,-60,-58,-64,-63,-55,-56,84,-63,]),'INST_DO':([26,27,29,33,39,42,43,55,62,89,115,116,117,118,120,121,122,124,125,126,127,128,129,130,131,132,133,134,135,136,137,153,],[-61,-62,-47,-57,-48,94,-49,-63,-65,-50,-39,-43,-40,-44,-59,-60,-58,-42,-70,-64,-71,-69,-67,-68,-46,-38,-45,-66,-55,-41,-56,170,]),'LPAREN':([4,5,8,11,18,20,21,22,23,30,36,40,41,44,52,53,56,60,61,63,64,65,66,67,68,69,70,71,75,76,77,78,79,80,81,82,83,84,85,86,87,88,92,107,109,176,177,],[36,41,44,52,56,44,36,60,61,56,36,44,92,44,92,36,56,92,92,44,44,44,44,36,56,56,56,36,92,92,56,-53,-51,56,56,-52,56,56,-54,56,92,56,92,92,92,92,92,]),'IN':([26,27,33,35,38,43,45,55,62,74,95,120,121,122,126,135,137,],[-61,-62,-57,-63,87,-63,87,-63,-65,87,87,-59,-60,-58,-64,-55,-56,]),'TIMES':([26,27,33,35,37,43,55,62,73,91,93,104,105,111,112,113,114,120,121,122,125,126,127,128,129,130,134,135,136,137,151,152,153,],[-61,-62,70,-63,77,-63,-63,-65,77,-63,77,-63,77,-63,77,-63,77,-59,-60,-58,-70,-64,-63,77,77,-68,-66,70,77,70,-63,77,77,]),'INST_CASE':([2,10,49,94,97,99,102,110,162,163,164,165,166,168,169,170,171,],[18,18,18,18,-25,-26,18,18,-31,-28,-33,-32,-27,18,18,18,18,]),'AND':([26,27,29,31,33,35,39,42,43,55,58,62,72,89,115,116,117,118,120,121,122,124,125,126,127,128,129,130,131,132,133,134,135,136,137,],[-61,-62,-47,63,-57,-49,-48,63,-49,-63,63,-65,63,-50,-39,-43,63,-44,-59,-60,-58,-42,-70,-64,-71,-69,-67,-68,-46,-38,-45,-66,-55,-41,-56,]),'INST_THEN':([26,27,29,33,39,43,55,58,62,89,115,116,117,118,120,121,122,124,125,126,127,128,129,130,131,132,133,134,135,136,137,],[-61,-62,-47,-57,-48,-49,-63,110,-65,-50,-39,-43,-40,-44,-59,-60,-58,-42,-70,-64,-71,-69,-67,-68,-46,-38,-45,-66,-55,-41,-56,]),'FALSE':([4,8,20,21,36,40,44,53,63,64,65,66,67,71,],[39,39,39,39,39,39,39,39,39,39,39,39,39,39,]),'GREATEQ':([26,27,33,35,38,43,45,55,62,74,95,120,121,122,126,135,137,],[-61,-62,-57,-63,78,-63,78,-63,-65,78,78,-59,-60,-58,-64,-55,-56,]),'NEQEQ':([26,27,29,31,33,35,38,39,42,43,45,55,58,62,72,74,89,95,115,116,117,118,120,121,122,124,125,126,127,128,129,130,131,132,133,134,135,136,137,],[-61,-62,-47,66,-57,-49,80,-48,66,-49,80,-63,66,-65,66,80,66,80,66,-43,66,-44,-59,-60,-58,-42,-70,-64,-71,-69,-67,-68,-46,-38,-45,-66,-55,-41,-56,]),'TYPEDEF_INT':([144,],[162,]),'LENGTH':([2,10,49,94,97,99,102,110,162,163,164,165,166,168,169,170,171,],[22,22,22,22,-25,-26,22,22,-31,-28,-33,-32,-27,22,22,22,22,]),'LESSEQ':([26,27,33,35,38,43,45,55,62,74,95,120,121,122,126,135,137,],[-61,-62,-57,-63,85,-63,85,-63,-65,85,85,-59,-60,-58,-64,-55,-56,]),'RTOI':([2,10,49,94,97,99,102,110,162,163,164,165,166,168,169,170,171,],[23,23,23,23,-25,-26,23,23,-31,-28,-33,-32,-27,23,23,23,23,]),'NOT':([4,8,20,21,36,40,44,53,63,64,65,66,67,71,],[40,40,40,40,40,40,40,40,40,40,40,40,40,40,]),'INST_WRITELN':([2,10,49,94,97,99,102,110,162,163,164,165,166,168,169,170,171,],[21,21,21,21,-25,-26,21,21,-31,-28,-33,-32,-27,21,21,21,21,]),'OR':([26,27,29,31,33,35,39,42,43,55,58,62,72,89,115,116,117,118,120,121,122,124,125,126,127,128,129,130,131,132,133,134,135,136,137,],[-61,-62,-47,65,-57,-49,-48,65,-49,-63,65,-65,65,-50,-39,-43,-40,-44,-59,-60,-58,-42,-70,-64,-71,-69,-67,-68,-46,-38,-45,-66,-55,-41,-56,]),'MOD':([26,27,33,35,43,55,62,91,104,111,113,120,121,122,126,127,135,137,151,],[-61,-62,69,-63,-63,-63,-65,-63,-63,-63,-63,-59,-60,-58,-64,-63,69,69,-63,]),}

_lr_action = { }
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = { }
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'Inst_Funcion':([2,10,49,94,102,110,168,169,170,171,],[3,3,3,3,3,3,3,3,3,3,]),'Tipo':([144,],[163,]),'Factor':([4,8,18,20,21,30,36,40,41,44,52,53,56,60,61,63,64,65,66,67,68,69,70,71,75,76,77,80,81,83,84,86,87,88,92,107,109,176,177,],[26,26,26,26,26,62,26,26,26,26,26,26,26,26,26,26,26,26,26,26,120,121,122,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,]),'Bloque_Inst':([2,10,49,94,102,110,168,169,170,171,],[6,48,48,141,48,154,154,154,154,154,]),'Inst_Salida':([2,10,49,94,102,110,168,169,170,171,],[7,7,7,7,7,7,7,7,7,7,]),'Lista_DeclareTipos':([47,145,],[97,166,]),'Lista_Aux':([4,21,67,71,],[28,59,119,123,]),'Casos':([107,176,177,],[150,178,179,]),'Operacion_booleana':([4,8,20,21,36,40,44,53,63,64,65,66,67,71,],[31,42,58,31,72,89,72,31,115,116,117,118,31,31,]),'Bloque_Control':([110,168,169,170,171,],[155,172,173,174,175,]),'Inst_Declare':([10,],[49,]),'Opr_bool':([38,45,74,95,],[81,81,81,81,]),'Inst_For':([2,10,49,94,102,110,168,169,170,171,],[12,12,12,12,12,12,12,12,12,12,]),'program':([0,],[1,]),'Inst':([2,10,49,94,102,110,168,169,170,171,],[13,50,50,142,50,156,156,156,156,156,]),'Inst_While':([2,10,49,94,102,110,168,169,170,171,],[14,14,14,14,14,14,14,14,14,14,]),'Inst_Lectura':([2,10,49,94,102,110,168,169,170,171,],[15,15,15,15,15,15,15,15,15,15,]),'Lista_Inst':([10,49,102,],[51,101,147,]),'Expresion':([4,21,53,67,71,],[32,32,106,32,32,]),'Term':([4,8,18,20,21,36,40,41,44,52,53,56,60,61,63,64,65,66,67,71,75,76,77,80,81,83,84,86,87,88,92,107,109,176,177,],[33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,135,33,137,33,33,33,33,33,]),'Inst_If':([2,10,49,94,102,110,168,169,170,171,],[17,17,17,17,17,17,17,17,17,17,]),'Lista_Variables':([47,143,145,],[98,161,98,]),'Rango':([4,21,36,41,52,53,60,61,67,71,75,76,87,92,107,109,176,177,],[37,37,73,93,105,37,112,114,37,37,128,129,136,73,152,153,152,152,]),'Lista_Declare':([47,145,],[99,99,]),'Operacion_binaria':([4,8,18,20,21,36,40,41,44,52,53,56,60,61,63,64,65,66,67,71,75,76,77,80,81,83,84,87,92,107,109,176,177,],[38,45,54,45,38,74,45,90,95,90,38,108,90,90,45,45,45,45,38,38,90,90,130,131,132,133,134,90,139,90,90,90,90,]),'Inst_Asignacion':([2,10,49,94,102,110,168,169,170,171,],[24,24,24,24,24,24,24,24,24,24,]),'Inst_Case':([2,10,49,94,102,110,168,169,170,171,],[25,25,25,25,25,25,25,25,25,25,]),}

_lr_goto = { }
for _k, _v in _lr_goto_items.items():
   for _x,_y in zip(_v[0],_v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = { }
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> INST_PROGRAM Bloque_Inst','program',2,'p_program','parser.py',28),
  ('program -> INST_PROGRAM Inst','program',2,'p_program','parser.py',29),
  ('Bloque_Inst -> INST_BEGIN Lista_Inst INST_END','Bloque_Inst',3,'p_Bloque_Inst','parser.py',58),
  ('Bloque_Inst -> INST_BEGIN Inst_Declare Lista_Inst INST_END','Bloque_Inst',4,'p_Bloque_Inst','parser.py',59),
  ('Bloque_Inst -> INST_BEGIN Inst_Declare INST_END','Bloque_Inst',3,'p_Bloque_Inst','parser.py',60),
  ('Lista_Inst -> Inst','Lista_Inst',1,'p_Lista_Inst','parser.py',103),
  ('Lista_Inst -> Inst SEMICOLON Lista_Inst','Lista_Inst',3,'p_Lista_Inst','parser.py',104),
  ('Inst -> Inst_Asignacion','Inst',1,'p_Inst','parser.py',120),
  ('Inst -> Inst_Lectura','Inst',1,'p_Inst','parser.py',121),
  ('Inst -> Inst_For','Inst',1,'p_Inst','parser.py',122),
  ('Inst -> Inst_While','Inst',1,'p_Inst','parser.py',123),
  ('Inst -> Inst_If','Inst',1,'p_Inst','parser.py',124),
  ('Inst -> Inst_Case','Inst',1,'p_Inst','parser.py',125),
  ('Inst -> Inst_Salida','Inst',1,'p_Inst','parser.py',126),
  ('Inst -> Inst_Funcion','Inst',1,'p_Inst','parser.py',127),
  ('Inst -> Bloque_Inst','Inst',1,'p_Inst','parser.py',128),
  ('Inst_Funcion -> RTOI LPAREN Rango RPAREN','Inst_Funcion',4,'p_Inst_Funcion','parser.py',154),
  ('Inst_Funcion -> LENGTH LPAREN Rango RPAREN','Inst_Funcion',4,'p_Inst_Funcion','parser.py',155),
  ('Inst_Funcion -> TOP LPAREN Rango RPAREN','Inst_Funcion',4,'p_Inst_Funcion','parser.py',156),
  ('Inst_Funcion -> BOTTOM LPAREN Rango RPAREN','Inst_Funcion',4,'p_Inst_Funcion','parser.py',157),
  ('Inst_Funcion -> RTOI LPAREN VAR_IDENTIFIER RPAREN','Inst_Funcion',4,'p_Inst_Funcion','parser.py',158),
  ('Inst_Funcion -> LENGTH LPAREN VAR_IDENTIFIER RPAREN','Inst_Funcion',4,'p_Inst_Funcion','parser.py',159),
  ('Inst_Funcion -> TOP LPAREN VAR_IDENTIFIER RPAREN','Inst_Funcion',4,'p_Inst_Funcion','parser.py',160),
  ('Inst_Funcion -> BOTTOM LPAREN VAR_IDENTIFIER RPAREN','Inst_Funcion',4,'p_Inst_Funcion','parser.py',161),
  ('Inst_Declare -> INST_DECLARE Lista_DeclareTipos','Inst_Declare',2,'p_Inst_Declare','parser.py',221),
  ('Lista_DeclareTipos -> Lista_Declare','Lista_DeclareTipos',1,'p_Lista_DeclareTipos','parser.py',228),
  ('Lista_DeclareTipos -> Lista_Declare SEMICOLON Lista_DeclareTipos','Lista_DeclareTipos',3,'p_Lista_DeclareTipos','parser.py',229),
  ('Lista_Declare -> Lista_Variables INST_AS Tipo','Lista_Declare',3,'p_Lista_Declare','parser.py',241),
  ('Lista_Variables -> VAR_IDENTIFIER','Lista_Variables',1,'p_Lista_Variables','parser.py',247),
  ('Lista_Variables -> VAR_IDENTIFIER COMMA Lista_Variables','Lista_Variables',3,'p_Lista_Variables','parser.py',248),
  ('Tipo -> TYPEDEF_INT','Tipo',1,'p_Tipo','parser.py',259),
  ('Tipo -> TYPEDEF_BOOL','Tipo',1,'p_Tipo','parser.py',260),
  ('Tipo -> TYPEDEF_RANGE','Tipo',1,'p_Tipo','parser.py',261),
  ('Inst_Asignacion -> VAR_IDENTIFIER EQUAL Expresion','Inst_Asignacion',3,'p_Inst_Asignacion','parser.py',279),
  ('Expresion -> Operacion_binaria','Expresion',1,'p_Expresion','parser.py',353),
  ('Expresion -> Operacion_booleana','Expresion',1,'p_Expresion','parser.py',354),
  ('Expresion -> Rango','Expresion',1,'p_Expresion','parser.py',355),
  ('Operacion_booleana -> Operacion_binaria Opr_bool Operacion_binaria','Operacion_booleana',3,'p_Operacion_booleana','parser.py',361),
  ('Operacion_booleana -> Operacion_booleana AND Operacion_booleana','Operacion_booleana',3,'p_Operacion_booleana','parser.py',362),
  ('Operacion_booleana -> Operacion_booleana OR Operacion_booleana','Operacion_booleana',3,'p_Operacion_booleana','parser.py',363),
  ('Operacion_booleana -> Operacion_binaria IN Rango','Operacion_booleana',3,'p_Operacion_booleana','parser.py',364),
  ('Operacion_booleana -> LPAREN Operacion_booleana RPAREN','Operacion_booleana',3,'p_Operacion_booleana','parser.py',365),
  ('Operacion_booleana -> Operacion_booleana EQEQ Operacion_booleana','Operacion_booleana',3,'p_Operacion_booleana','parser.py',366),
  ('Operacion_booleana -> Operacion_booleana NEQEQ Operacion_booleana','Operacion_booleana',3,'p_Operacion_booleana','parser.py',367),
  ('Operacion_booleana -> Operacion_binaria EQEQ Operacion_binaria','Operacion_booleana',3,'p_Operacion_booleana','parser.py',368),
  ('Operacion_booleana -> Operacion_binaria NEQEQ Operacion_binaria','Operacion_booleana',3,'p_Operacion_booleana','parser.py',369),
  ('Operacion_booleana -> TRUE','Operacion_booleana',1,'p_Operacion_booleana','parser.py',370),
  ('Operacion_booleana -> FALSE','Operacion_booleana',1,'p_Operacion_booleana','parser.py',371),
  ('Operacion_booleana -> VAR_IDENTIFIER','Operacion_booleana',1,'p_Operacion_booleana','parser.py',372),
  ('Operacion_booleana -> NOT Operacion_booleana','Operacion_booleana',2,'p_Operacion_booleana','parser.py',373),
  ('Opr_bool -> GREAT','Opr_bool',1,'p_Opr_bool','parser.py',393),
  ('Opr_bool -> LESS','Opr_bool',1,'p_Opr_bool','parser.py',394),
  ('Opr_bool -> GREATEQ','Opr_bool',1,'p_Opr_bool','parser.py',395),
  ('Opr_bool -> LESSEQ','Opr_bool',1,'p_Opr_bool','parser.py',396),
  ('Operacion_binaria -> Operacion_binaria PLUS Term','Operacion_binaria',3,'p_Operacion_binaria','parser.py',402),
  ('Operacion_binaria -> Operacion_binaria MINUS Term','Operacion_binaria',3,'p_Operacion_binaria','parser.py',403),
  ('Operacion_binaria -> Term','Operacion_binaria',1,'p_Operacion_binaria','parser.py',404),
  ('Term -> Term TIMES Factor','Term',3,'p_Term','parser.py',413),
  ('Term -> Term DIVIDE Factor','Term',3,'p_Term','parser.py',414),
  ('Term -> Term MOD Factor','Term',3,'p_Term','parser.py',415),
  ('Term -> Factor','Term',1,'p_Term','parser.py',416),
  ('Factor -> NUMBER','Factor',1,'p_Factor','parser.py',427),
  ('Factor -> VAR_IDENTIFIER','Factor',1,'p_Factor','parser.py',428),
  ('Factor -> LPAREN Operacion_binaria RPAREN','Factor',3,'p_Factor','parser.py',429),
  ('Factor -> MINUS Factor','Factor',2,'p_Factor','parser.py',430),
  ('Rango -> Operacion_binaria RANGE Operacion_binaria','Rango',3,'p_Rango','parser.py',441),
  ('Rango -> Rango PLUS Rango','Rango',3,'p_Rango','parser.py',442),
  ('Rango -> Rango TIMES Operacion_binaria','Rango',3,'p_Rango','parser.py',443),
  ('Rango -> Rango INTERSECTION Rango','Rango',3,'p_Rango','parser.py',444),
  ('Rango -> LPAREN Rango RPAREN','Rango',3,'p_Rango','parser.py',445),
  ('Rango -> VAR_IDENTIFIER','Rango',1,'p_Rango','parser.py',446),
  ('Inst_Lectura -> INST_READ VAR_IDENTIFIER','Inst_Lectura',2,'p_Inst_Lectura','parser.py',468),
  ('Inst_Salida -> INST_WRITE Lista_Aux','Inst_Salida',2,'p_Inst_Salida','parser.py',527),
  ('Inst_Salida -> INST_WRITELN Lista_Aux','Inst_Salida',2,'p_Inst_Salida','parser.py',528),
  ('Lista_Aux -> Expresion','Lista_Aux',1,'p_Lista_Aux','parser.py',538),
  ('Lista_Aux -> STRING','Lista_Aux',1,'p_Lista_Aux','parser.py',539),
  ('Lista_Aux -> Expresion COMMA Lista_Aux','Lista_Aux',3,'p_Lista_Aux','parser.py',540),
  ('Lista_Aux -> STRING COMMA Lista_Aux','Lista_Aux',3,'p_Lista_Aux','parser.py',541),
  ('Bloque_Control -> Inst','Bloque_Control',1,'p_Bloque_Control','parser.py',594),
  ('Bloque_Control -> Bloque_Inst','Bloque_Control',1,'p_Bloque_Control','parser.py',595),
  ('Inst_If -> INST_IF Operacion_booleana INST_THEN Bloque_Control','Inst_If',4,'p_Inst_If','parser.py',600),
  ('Inst_If -> INST_IF Operacion_booleana INST_THEN Bloque_Control INST_ELSE Bloque_Control','Inst_If',6,'p_Inst_If','parser.py',601),
  ('Inst_Case -> INST_CASE Operacion_binaria INST_OF Casos INST_END','Inst_Case',5,'p_Inst_Case','parser.py',660),
  ('Casos -> VAR_IDENTIFIER CASE_ASSIGN Bloque_Control SEMICOLON','Casos',4,'p_Casos','parser.py',666),
  ('Casos -> Rango CASE_ASSIGN Bloque_Control SEMICOLON','Casos',4,'p_Casos','parser.py',667),
  ('Casos -> VAR_IDENTIFIER CASE_ASSIGN Bloque_Control SEMICOLON Casos','Casos',5,'p_Casos','parser.py',668),
  ('Casos -> Rango CASE_ASSIGN Bloque_Control SEMICOLON Casos','Casos',5,'p_Casos','parser.py',669),
  ('Inst_For -> INST_FOR VAR_IDENTIFIER INST_IN Rango INST_DO Bloque_Control','Inst_For',6,'p_Inst_For','parser.py',705),
  ('Inst_While -> INST_WHILE Operacion_booleana INST_DO Bloque_Inst','Inst_While',4,'p_Inst_While','parser.py',728),
  ('Inst_While -> INST_WHILE Operacion_booleana INST_DO Inst','Inst_While',4,'p_Inst_While','parser.py',729),
]
