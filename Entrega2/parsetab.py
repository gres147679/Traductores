
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.2'

_lr_method = 'LALR'

_lr_signature = '\x1f\xefT\xef\xd5\x9e\xe9#M\xf9\xee"z\x83Z<'
    
_lr_action_items = {'GREAT':([33,38,40,41,44,48,56,75,91,112,113,117,125,126,],[-52,-48,-51,-53,80,80,-53,80,80,-50,-49,-54,-46,-47,]),'INST_DECLARE':([2,11,64,92,93,100,142,143,144,145,],[3,3,3,3,3,3,3,3,3,3,]),'INST_IN':([59,],[99,]),'INST_WRITE':([2,11,92,93,100,142,143,144,145,],[5,5,5,5,5,5,5,5,5,]),'LESS':([33,38,40,41,44,48,56,75,91,112,113,117,125,126,],[-52,-48,-51,-53,83,83,-53,83,83,-50,-49,-54,-46,-47,]),'EQEQ':([33,38,40,41,44,48,56,75,91,112,113,117,125,126,],[-52,-48,-51,-53,84,84,-53,84,84,-50,-49,-54,-46,-47,]),'TOP':([2,11,92,93,100,142,143,144,145,],[6,6,6,6,6,6,6,6,6,]),'NUMBER':([4,5,8,9,12,14,15,16,17,19,20,22,23,26,27,28,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,49,51,55,56,58,61,67,68,69,70,71,72,76,77,78,79,80,81,82,83,84,85,86,87,88,89,94,96,97,99,103,105,106,107,108,109,110,111,112,113,114,115,116,117,119,120,121,122,123,124,125,126,127,128,130,133,135,136,137,141,146,147,148,149,],[-14,33,-13,33,-6,-9,-3,-10,-8,-11,33,33,33,-7,-12,-19,-21,-59,-52,-62,-36,-30,-64,-48,-65,-51,-38,33,-31,-29,-37,33,33,-61,33,-53,33,-63,33,33,33,33,33,33,33,33,33,-44,-42,-41,33,-43,-40,33,-45,33,33,-39,-2,-28,33,33,-20,-25,-22,-27,-26,-33,-34,-66,-50,-49,-67,-35,-60,-54,33,-58,-56,-57,-32,-55,-46,-47,-17,-75,-18,33,-68,-16,-15,33,-74,-69,-71,-72,]),'INST_END':([4,8,12,14,15,16,17,19,26,27,28,31,32,33,34,35,36,37,38,39,40,41,43,44,45,51,52,53,56,61,89,94,96,103,105,106,107,108,109,110,111,112,113,114,115,116,117,120,121,122,123,124,125,126,127,128,129,130,133,135,136,137,141,146,147,148,149,],[-14,-13,-6,-9,-3,-10,-8,-11,-7,-12,-19,-21,-59,-52,-62,-36,-30,-64,-48,-65,-51,-38,-31,-29,-37,-61,-4,94,-53,-63,-39,-2,-28,-20,-25,-22,-27,-26,-33,-34,-66,-50,-49,-67,-35,-60,-54,-58,-56,-57,-32,-55,-46,-47,-17,-75,-5,-18,-70,-68,-16,-15,-73,-74,-69,-71,-72,]),'INST_FOR':([2,11,92,93,100,142,143,144,145,],[21,21,21,21,21,21,21,21,21,]),'INST_WHILE':([2,11,92,93,100,142,143,144,145,],[9,9,9,9,9,9,9,9,9,]),'INST_READ':([2,11,92,93,100,142,143,144,145,],[10,10,10,10,10,10,10,10,10,]),'INST_BEGIN':([2,92,100,142,143,144,145,],[11,11,11,11,11,11,11,]),'TRUE':([5,9,22,23,42,46,49,55,67,68,69,72,],[35,35,35,35,35,35,35,35,35,35,35,35,]),'MINUS':([33,38,40,41,44,48,56,57,75,91,98,112,113,117,118,122,123,124,125,126,131,138,],[-52,-48,-51,-53,88,88,-53,88,88,88,88,-50,-49,-54,88,88,88,88,-46,-47,-53,88,]),'DIVIDE':([33,38,40,41,56,112,113,117,125,126,131,],[-52,70,-51,-53,-53,-50,-49,-54,70,70,-53,]),'INTERSECTION':([32,33,38,40,43,56,74,112,113,116,117,120,121,122,124,125,126,132,134,],[-59,-52,-48,-51,76,-53,76,-50,-49,-60,-54,-58,-56,-57,-55,-46,-47,76,76,]),'RPAREN':([32,33,35,38,40,41,45,56,73,74,75,89,90,91,95,98,101,102,109,110,112,113,115,116,117,120,121,122,123,124,125,126,138,],[-59,-52,-36,-48,-51,-38,-37,-53,115,116,117,-39,127,117,130,117,136,137,-33,-34,-50,-49,-35,-60,-54,-58,-56,-57,-32,-55,-46,-47,117,]),'SEMICOLON':([4,8,12,14,15,16,17,19,26,27,28,31,32,33,34,35,36,37,38,39,40,41,43,44,45,51,52,56,61,89,94,96,103,105,106,107,108,109,110,111,112,113,114,115,116,117,120,121,122,123,124,125,126,127,128,130,133,135,136,137,141,146,147,148,149,],[-14,-13,-6,-9,-3,-10,-8,-11,-7,-12,64,-21,-59,-52,-62,-36,-30,-64,-48,-65,-51,-38,-31,-29,-37,-61,93,-53,-63,-39,-2,-28,-20,-25,-22,-27,-26,-33,-34,-66,-50,-49,-67,-35,-60,-54,-58,-56,-57,-32,-55,-46,-47,-17,-75,-18,-70,-68,-16,-15,-73,-74,-69,-71,-72,]),'BOTTOM':([2,11,92,93,100,142,143,144,145,],[13,13,13,13,13,13,13,13,13,]),'TYPEDEF_RANGE':([66,],[107,]),'INST_OF':([33,38,40,56,57,112,113,117,125,126,],[-52,-48,-51,-53,97,-50,-49,-54,-46,-47,]),'-':([32,33,38,40,56,112,113,116,117,120,121,122,124,125,126,131,132,],[-59,-52,-48,-51,-53,-50,-49,-60,-54,-58,-56,-57,-55,-46,-47,139,140,]),'INST_AS':([29,30,104,],[-23,66,-24,]),'COMMA':([29,32,33,35,36,37,38,39,40,41,43,44,45,56,89,109,110,112,113,115,116,117,120,121,122,123,124,125,126,],[65,-59,-52,-36,-30,69,-48,72,-51,-38,-31,-29,-37,-53,-39,-33,-34,-50,-49,-35,-60,-54,-58,-56,-57,-32,-55,-46,-47,]),'PLUS':([32,33,38,40,41,43,44,48,56,57,74,75,91,98,112,113,116,117,118,120,121,122,123,124,125,126,131,132,134,138,],[-59,-52,-48,-51,-53,77,87,87,-53,87,77,87,87,87,-50,-49,-60,-54,87,77,-56,-57,87,-55,-46,-47,-53,77,77,87,]),'INST_PROGRAM':([0,],[2,]),'$end':([1,4,7,8,12,14,15,16,17,19,26,27,28,31,32,33,34,35,36,37,38,39,40,41,43,44,45,51,56,61,89,94,96,103,105,106,107,108,109,110,111,112,113,114,115,116,117,120,121,122,123,124,125,126,127,128,130,133,135,136,137,141,146,147,148,149,],[0,-14,-1,-13,-6,-9,-3,-10,-8,-11,-7,-12,-19,-21,-59,-52,-62,-36,-30,-64,-48,-65,-51,-38,-31,-29,-37,-61,-53,-63,-39,-2,-28,-20,-25,-22,-27,-26,-33,-34,-66,-50,-49,-67,-35,-60,-54,-58,-56,-57,-32,-55,-46,-47,-17,-75,-18,-70,-68,-16,-15,-73,-74,-69,-71,-72,]),'INST_ELSE':([4,8,12,14,15,16,17,19,26,27,28,31,32,33,34,35,36,37,38,39,40,41,43,44,45,51,56,61,89,94,96,103,105,106,107,108,109,110,111,112,113,114,115,116,117,120,121,122,123,124,125,126,127,128,130,133,135,136,137,141,146,147,148,149,],[-14,-13,-6,-9,-3,-10,-8,-11,-7,-12,-19,-21,-59,-52,-62,-36,-30,-64,-48,-65,-51,-38,-31,-29,-37,-61,-53,-63,-39,-2,-28,-20,-25,-22,-27,-26,-33,-34,-66,-50,-49,-67,-35,-60,-54,-58,-56,-57,-32,-55,-46,-47,-17,-75,-18,-70,143,-16,-15,-73,-74,-69,-71,-72,]),'STRING':([5,23,69,72,],[39,39,39,39,]),'EQUAL':([18,],[55,]),'TYPEDEF_BOOL':([66,],[108,]),'VAR_IDENTIFIER':([2,3,4,5,8,9,10,11,12,14,15,16,17,19,20,21,22,23,26,27,28,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,49,51,54,55,56,58,61,62,63,65,67,68,69,70,71,72,76,77,78,79,80,81,82,83,84,85,86,87,88,89,92,93,94,96,97,99,100,103,105,106,107,108,109,110,111,112,113,114,115,116,117,119,120,121,122,123,124,125,126,127,128,130,133,135,136,137,141,142,143,144,145,146,147,148,149,],[18,29,-14,41,-13,41,51,18,-6,-9,-3,-10,-8,-11,56,59,41,41,-7,-12,-19,-21,-59,-52,-62,-36,-30,-64,-48,-65,-51,-38,41,-31,-29,-37,41,90,41,-61,95,41,-53,56,-63,101,102,29,41,41,41,56,56,41,56,56,56,-44,-42,-41,56,-43,-40,56,-45,56,56,-39,18,18,-2,-28,131,56,18,-20,-25,-22,-27,-26,-33,-34,-66,-50,-49,-67,-35,-60,-54,56,-58,-56,-57,-32,-55,-46,-47,-17,-75,-18,131,-68,-16,-15,131,18,18,18,18,-74,-69,-71,-72,]),'INST_IF':([2,11,92,93,100,142,143,144,145,],[22,22,22,22,22,22,22,22,22,]),'RANGE':([33,38,40,41,44,56,75,112,113,117,118,125,126,131,138,],[-52,-48,-51,-53,85,-53,85,-50,-49,-54,85,-46,-47,-53,85,]),'INST_DO':([32,33,35,38,40,41,45,50,56,89,109,110,112,113,115,116,117,120,121,122,123,124,125,126,134,],[-59,-52,-36,-48,-51,-38,-37,92,-53,-39,-33,-34,-50,-49,-35,-60,-54,-58,-56,-57,-32,-55,-46,-47,142,]),'LPAREN':([4,5,6,8,9,12,13,14,15,16,17,19,20,22,23,24,25,26,27,28,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,49,51,55,56,58,61,67,68,69,70,71,72,76,77,78,79,80,81,82,83,84,85,86,87,88,89,94,96,97,99,103,105,106,107,108,109,110,111,112,113,114,115,116,117,119,120,121,122,123,124,125,126,127,128,130,133,135,136,137,141,146,147,148,149,],[-14,42,47,-13,49,-6,54,-9,-3,-10,-8,-11,58,49,42,62,63,-7,-12,-19,-21,-59,-52,-62,-36,-30,-64,-48,-65,-51,-38,42,-31,-29,-37,49,49,-61,42,-53,58,-63,49,49,42,58,58,42,119,119,58,-44,-42,-41,58,-43,-40,58,-45,58,58,-39,-2,-28,119,119,-20,-25,-22,-27,-26,-33,-34,-66,-50,-49,-67,-35,-60,-54,119,-58,-56,-57,-32,-55,-46,-47,-17,-75,-18,119,-68,-16,-15,119,-74,-69,-71,-72,]),'TIMES':([32,33,38,40,41,43,56,74,112,113,116,117,120,121,122,124,125,126,131,132,134,],[-59,-52,71,-51,-53,78,-53,78,-50,-49,-60,-54,78,78,-57,-55,71,71,-53,78,78,]),'INST_CASE':([2,11,92,93,100,142,143,144,145,],[20,20,20,20,20,20,20,20,20,]),'AND':([33,35,36,38,40,41,45,50,56,60,73,89,109,110,112,113,115,117,123,125,126,],[-52,-36,67,-48,-51,-38,-37,67,-53,67,67,-39,-33,67,-50,-49,-35,-54,-32,-46,-47,]),'INST_THEN':([33,35,38,40,41,45,56,60,89,109,110,112,113,115,117,123,125,126,],[-52,-36,-48,-51,-38,-37,-53,100,-39,-33,-34,-50,-49,-35,-54,-32,-46,-47,]),'FALSE':([5,9,22,23,42,46,49,55,67,68,69,72,],[45,45,45,45,45,45,45,45,45,45,45,45,]),'GREATEQ':([33,38,40,41,44,48,56,75,91,112,113,117,125,126,],[-52,-48,-51,-53,79,79,-53,79,79,-50,-49,-54,-46,-47,]),'NEQEQ':([33,38,40,41,44,48,56,75,91,112,113,117,125,126,],[-52,-48,-51,-53,81,81,-53,81,81,-50,-49,-54,-46,-47,]),'TYPEDEF_INT':([66,],[105,]),'LENGTH':([2,11,92,93,100,142,143,144,145,],[24,24,24,24,24,24,24,24,24,]),'LESSEQ':([33,38,40,41,44,48,56,75,91,112,113,117,125,126,],[-52,-48,-51,-53,86,86,-53,86,86,-50,-49,-54,-46,-47,]),'RTOI':([2,11,92,93,100,142,143,144,145,],[25,25,25,25,25,25,25,25,25,]),'NOT':([5,9,22,23,42,46,49,55,67,68,69,72,],[46,46,46,46,46,46,46,46,46,46,46,46,]),'INST_WRITELN':([2,11,92,93,100,142,143,144,145,],[23,23,23,23,23,23,23,23,23,]),'>':([139,140,],[144,145,]),'OR':([33,35,36,38,40,41,45,50,56,60,73,89,109,110,112,113,115,117,123,125,126,],[-52,-36,68,-48,-51,-38,-37,68,-53,68,68,-39,-33,-34,-50,-49,-35,-54,-32,-46,-47,]),}

_lr_action = { }
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = { }
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'Inst_Funcion':([2,11,92,93,100,142,143,144,145,],[4,4,4,4,4,4,4,4,4,]),'Tipo':([66,],[106,]),'Factor':([5,9,20,22,23,42,46,49,55,58,67,68,69,70,71,72,76,77,78,82,85,87,88,97,99,119,133,141,],[40,40,40,40,40,40,40,40,40,40,40,40,40,112,113,40,40,40,40,40,40,40,40,40,40,40,40,40,]),'Bloque_Inst':([2,92,100,142,143,144,145,],[7,128,135,146,147,148,149,]),'Inst_Salida':([2,11,92,93,100,142,143,144,145,],[8,8,8,8,8,8,8,8,8,]),'Lista_Aux':([5,23,69,72,],[34,61,111,114,]),'Casos':([97,133,141,],[133,141,141,]),'Operacion_booleana':([5,9,22,23,42,46,49,55,67,68,69,72,],[36,50,60,36,73,89,73,36,109,110,36,36,]),'Inst_Declare':([2,11,64,92,93,100,142,143,144,145,],[12,12,103,12,12,12,12,12,12,12,]),'RangoF':([5,23,42,55,69,72,76,77,97,99,119,133,141,],[32,32,32,32,32,32,32,32,32,32,32,32,32,]),'Opr_bool':([44,48,75,91,],[82,82,82,82,]),'Inst_For':([2,11,92,93,100,142,143,144,145,],[14,14,14,14,14,14,14,14,14,]),'program':([0,],[1,]),'Inst':([2,11,92,93,100,142,143,144,145,],[15,52,15,52,15,15,15,15,15,]),'Inst_While':([2,11,92,93,100,142,143,144,145,],[16,16,16,16,16,16,16,16,16,]),'Inst_Lectura':([2,11,92,93,100,142,143,144,145,],[17,17,17,17,17,17,17,17,17,]),'Lista_Inst':([11,93,],[53,129,]),'Expresion':([5,23,55,69,72,],[37,37,96,37,37,]),'Term':([5,9,20,22,23,42,46,49,55,58,67,68,69,72,76,77,78,82,85,87,88,97,99,119,133,141,],[38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,125,126,38,38,38,38,38,]),'Inst_If':([2,11,92,93,100,142,143,144,145,],[19,19,19,19,19,19,19,19,19,]),'Inst_Asignacion':([2,11,92,93,100,142,143,144,145,],[26,26,26,26,26,26,26,26,26,]),'Rango':([5,23,42,55,69,72,76,77,97,99,119,133,141,],[43,43,74,43,43,43,120,121,132,134,74,132,132,]),'Lista_Declare':([3,],[31,]),'Operacion_binaria':([5,9,20,22,23,42,46,49,55,58,67,68,69,72,76,77,78,82,85,97,99,119,133,141,],[44,48,57,48,44,75,48,91,44,98,48,48,44,44,118,118,122,123,124,118,118,138,118,118,]),'Lista_Variables':([3,65,],[30,104,]),'Inst_Case':([2,11,92,93,100,142,143,144,145,],[27,27,27,27,27,27,27,27,27,]),'Inst_Declareau':([2,11,64,92,93,100,142,143,144,145,],[28,28,28,28,28,28,28,28,28,28,]),}

_lr_goto = { }
for _k, _v in _lr_goto_items.items():
   for _x,_y in zip(_v[0],_v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = { }
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> INST_PROGRAM Bloque_Inst','program',2,'p_program','parser.py',14),
  ('Bloque_Inst -> INST_BEGIN Lista_Inst INST_END','Bloque_Inst',3,'p_Bloque_Inst','parser.py',29),
  ('Bloque_Inst -> Inst','Bloque_Inst',1,'p_Bloque_Inst','parser.py',30),
  ('Lista_Inst -> Inst','Lista_Inst',1,'p_Lista_Inst','parser.py',54),
  ('Lista_Inst -> Inst SEMICOLON Lista_Inst','Lista_Inst',3,'p_Lista_Inst','parser.py',55),
  ('Inst -> Inst_Declare','Inst',1,'p_Inst','parser.py',65),
  ('Inst -> Inst_Asignacion','Inst',1,'p_Inst','parser.py',66),
  ('Inst -> Inst_Lectura','Inst',1,'p_Inst','parser.py',67),
  ('Inst -> Inst_For','Inst',1,'p_Inst','parser.py',68),
  ('Inst -> Inst_While','Inst',1,'p_Inst','parser.py',69),
  ('Inst -> Inst_If','Inst',1,'p_Inst','parser.py',70),
  ('Inst -> Inst_Case','Inst',1,'p_Inst','parser.py',71),
  ('Inst -> Inst_Salida','Inst',1,'p_Inst','parser.py',72),
  ('Inst -> Inst_Funcion','Inst',1,'p_Inst','parser.py',73),
  ('Inst_Funcion -> RTOI LPAREN VAR_IDENTIFIER RPAREN','Inst_Funcion',4,'p_Inst_Funcion','parser.py',85),
  ('Inst_Funcion -> LENGTH LPAREN VAR_IDENTIFIER RPAREN','Inst_Funcion',4,'p_Inst_Funcion','parser.py',86),
  ('Inst_Funcion -> TOP LPAREN VAR_IDENTIFIER RPAREN','Inst_Funcion',4,'p_Inst_Funcion','parser.py',87),
  ('Inst_Funcion -> BOTTOM LPAREN VAR_IDENTIFIER RPAREN','Inst_Funcion',4,'p_Inst_Funcion','parser.py',88),
  ('Inst_Declare -> Inst_Declareau','Inst_Declare',1,'p_Inst_Declare','parser.py',103),
  ('Inst_Declare -> Inst_Declareau SEMICOLON Inst_Declare','Inst_Declare',3,'p_Inst_Declare','parser.py',104),
  ('Inst_Declareau -> INST_DECLARE Lista_Declare','Inst_Declareau',2,'p_Inst_Declareau','parser.py',113),
  ('Lista_Declare -> Lista_Variables INST_AS Tipo','Lista_Declare',3,'p_Lista_Declare','parser.py',129),
  ('Lista_Variables -> VAR_IDENTIFIER','Lista_Variables',1,'p_Lista_Variables','parser.py',143),
  ('Lista_Variables -> VAR_IDENTIFIER COMMA Lista_Variables','Lista_Variables',3,'p_Lista_Variables','parser.py',144),
  ('Tipo -> TYPEDEF_INT','Tipo',1,'p_Tipo','parser.py',153),
  ('Tipo -> TYPEDEF_BOOL','Tipo',1,'p_Tipo','parser.py',154),
  ('Tipo -> TYPEDEF_RANGE','Tipo',1,'p_Tipo','parser.py',155),
  ('Inst_Asignacion -> VAR_IDENTIFIER EQUAL Expresion','Inst_Asignacion',3,'p_Inst_Asignacion','parser.py',168),
  ('Expresion -> Operacion_binaria','Expresion',1,'p_Expresion','parser.py',204),
  ('Expresion -> Operacion_booleana','Expresion',1,'p_Expresion','parser.py',205),
  ('Expresion -> Rango','Expresion',1,'p_Expresion','parser.py',206),
  ('Operacion_booleana -> Operacion_binaria Opr_bool Operacion_binaria','Operacion_booleana',3,'p_Operacion_booleana','parser.py',211),
  ('Operacion_booleana -> Operacion_booleana AND Operacion_booleana','Operacion_booleana',3,'p_Operacion_booleana','parser.py',212),
  ('Operacion_booleana -> Operacion_booleana OR Operacion_booleana','Operacion_booleana',3,'p_Operacion_booleana','parser.py',213),
  ('Operacion_booleana -> LPAREN Operacion_booleana RPAREN','Operacion_booleana',3,'p_Operacion_booleana','parser.py',214),
  ('Operacion_booleana -> TRUE','Operacion_booleana',1,'p_Operacion_booleana','parser.py',215),
  ('Operacion_booleana -> FALSE','Operacion_booleana',1,'p_Operacion_booleana','parser.py',216),
  ('Operacion_booleana -> VAR_IDENTIFIER','Operacion_booleana',1,'p_Operacion_booleana','parser.py',217),
  ('Operacion_booleana -> NOT Operacion_booleana','Operacion_booleana',2,'p_Operacion_booleana','parser.py',218),
  ('Opr_bool -> EQEQ','Opr_bool',1,'p_Opr_bool','parser.py',232),
  ('Opr_bool -> NEQEQ','Opr_bool',1,'p_Opr_bool','parser.py',233),
  ('Opr_bool -> GREAT','Opr_bool',1,'p_Opr_bool','parser.py',234),
  ('Opr_bool -> LESS','Opr_bool',1,'p_Opr_bool','parser.py',235),
  ('Opr_bool -> GREATEQ','Opr_bool',1,'p_Opr_bool','parser.py',236),
  ('Opr_bool -> LESSEQ','Opr_bool',1,'p_Opr_bool','parser.py',237),
  ('Operacion_binaria -> Operacion_binaria PLUS Term','Operacion_binaria',3,'p_Operacion_binaria','parser.py',241),
  ('Operacion_binaria -> Operacion_binaria MINUS Term','Operacion_binaria',3,'p_Operacion_binaria','parser.py',242),
  ('Operacion_binaria -> Term','Operacion_binaria',1,'p_Operacion_binaria','parser.py',243),
  ('Term -> Term TIMES Factor','Term',3,'p_Term','parser.py',250),
  ('Term -> Term DIVIDE Factor','Term',3,'p_Term','parser.py',251),
  ('Term -> Factor','Term',1,'p_Term','parser.py',252),
  ('Factor -> NUMBER','Factor',1,'p_Factor','parser.py',259),
  ('Factor -> VAR_IDENTIFIER','Factor',1,'p_Factor','parser.py',260),
  ('Factor -> LPAREN Operacion_binaria RPAREN','Factor',3,'p_Factor','parser.py',261),
  ('Rango -> Operacion_binaria RANGE Operacion_binaria','Rango',3,'p_Rango','parser.py',268),
  ('Rango -> Rango PLUS Rango','Rango',3,'p_Rango','parser.py',269),
  ('Rango -> Rango TIMES Operacion_binaria','Rango',3,'p_Rango','parser.py',270),
  ('Rango -> Rango INTERSECTION Rango','Rango',3,'p_Rango','parser.py',271),
  ('Rango -> RangoF','Rango',1,'p_Rango','parser.py',272),
  ('RangoF -> LPAREN Rango RPAREN','RangoF',3,'p_RangoF','parser.py',279),
  ('Inst_Lectura -> INST_READ VAR_IDENTIFIER','Inst_Lectura',2,'p_Inst_Lectura','parser.py',292),
  ('Inst_Salida -> INST_WRITE Lista_Aux','Inst_Salida',2,'p_Inst_Salida','parser.py',327),
  ('Inst_Salida -> INST_WRITELN Lista_Aux','Inst_Salida',2,'p_Inst_Salida','parser.py',328),
  ('Lista_Aux -> Expresion','Lista_Aux',1,'p_Lista_Aux','parser.py',337),
  ('Lista_Aux -> STRING','Lista_Aux',1,'p_Lista_Aux','parser.py',338),
  ('Lista_Aux -> Expresion COMMA Lista_Aux','Lista_Aux',3,'p_Lista_Aux','parser.py',339),
  ('Lista_Aux -> STRING COMMA Lista_Aux','Lista_Aux',3,'p_Lista_Aux','parser.py',340),
  ('Inst_If -> INST_IF Operacion_booleana INST_THEN Bloque_Inst','Inst_If',4,'p_Inst_If','parser.py',370),
  ('Inst_If -> INST_IF Operacion_booleana INST_THEN Bloque_Inst INST_ELSE Bloque_Inst','Inst_If',6,'p_Inst_If','parser.py',371),
  ('Inst_Case -> INST_CASE Operacion_binaria INST_OF Casos','Inst_Case',4,'p_Inst_Case','parser.py',383),
  ('Casos -> VAR_IDENTIFIER - > Bloque_Inst','Casos',4,'p_Casos','parser.py',387),
  ('Casos -> Rango - > Bloque_Inst','Casos',4,'p_Casos','parser.py',388),
  ('Casos -> Casos Casos','Casos',2,'p_Casos','parser.py',389),
  ('Inst_For -> INST_FOR VAR_IDENTIFIER INST_IN Rango INST_DO Bloque_Inst','Inst_For',6,'p_Inst_For','parser.py',406),
  ('Inst_While -> INST_WHILE Operacion_booleana INST_DO Bloque_Inst','Inst_While',4,'p_Inst_While','parser.py',422),
]
