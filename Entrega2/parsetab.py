
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.2'

_lr_method = 'LALR'

_lr_signature = '\x937\xbd\xfdn\x02\xe4\x84E\x00\xbb\x16v\x10\xe0\xae'
    
_lr_action_items = {'GREAT':([31,32,37,39,42,46,103,104,106,114,115,],[-46,-47,-43,-48,74,74,-45,-44,-49,-41,-42,]),'INST_DECLARE':([2,11,85,86,92,130,131,132,133,],[3,3,3,3,3,3,3,3,3,]),'INST_IN':([55,],[91,]),'INST_WRITE':([2,11,85,86,92,130,131,132,133,],[5,5,5,5,5,5,5,5,5,]),'LESS':([31,32,37,39,42,46,103,104,106,114,115,],[-46,-47,-43,-48,77,77,-45,-44,-49,-41,-42,]),'EQEQ':([31,32,37,39,42,46,103,104,106,114,115,],[-46,-47,-43,-48,78,78,-45,-44,-49,-41,-42,]),'TOP':([2,11,85,86,92,130,131,132,133,],[6,6,6,6,6,6,6,6,6,]),'NUMBER':([4,5,8,9,12,14,15,16,17,19,20,22,23,26,27,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,47,49,53,57,62,63,64,65,66,67,70,71,72,73,74,75,76,77,78,79,80,81,82,87,89,90,91,96,97,98,99,100,101,102,103,104,105,106,107,109,110,111,112,113,114,115,116,117,119,122,124,125,126,129,134,135,136,137,],[-14,32,-13,32,-6,-9,-3,-10,-8,-11,32,32,32,-7,-12,-19,-46,-47,-54,-33,-28,-59,-43,-60,-48,32,-29,-27,-34,-57,32,-56,32,-58,32,32,32,32,32,32,32,32,32,-39,-37,-36,32,-38,-35,32,-40,32,32,-2,-26,32,32,-23,-20,-25,-24,-31,-32,-61,-45,-44,-62,-49,-55,-53,-51,-52,-30,-50,-41,-42,-17,-70,-18,32,-63,-16,-15,32,-69,-64,-66,-67,]),'INST_END':([4,8,12,14,15,16,17,19,26,27,30,31,32,33,34,35,36,37,38,39,41,42,43,44,49,50,51,57,87,89,96,97,98,99,100,101,102,103,104,105,106,107,109,110,111,112,113,114,115,116,117,118,119,122,124,125,126,129,134,135,136,137,],[-14,-13,-6,-9,-3,-10,-8,-11,-7,-12,-19,-46,-47,-54,-33,-28,-59,-43,-60,-48,-29,-27,-34,-57,-56,-4,87,-58,-2,-26,-23,-20,-25,-24,-31,-32,-61,-45,-44,-62,-49,-55,-53,-51,-52,-30,-50,-41,-42,-17,-70,-5,-18,-65,-63,-16,-15,-68,-69,-64,-66,-67,]),'INST_FOR':([2,11,85,86,92,130,131,132,133,],[21,21,21,21,21,21,21,21,21,]),'INST_WHILE':([2,11,85,86,92,130,131,132,133,],[9,9,9,9,9,9,9,9,9,]),'INST_READ':([2,11,85,86,92,130,131,132,133,],[10,10,10,10,10,10,10,10,10,]),'INST_BEGIN':([2,85,92,130,131,132,133,],[11,11,11,11,11,11,11,]),'TRUE':([5,9,22,23,53,62,63,64,67,],[34,34,34,34,34,34,34,34,34,]),'MINUS':([31,32,37,39,42,46,54,68,84,103,104,106,108,111,112,113,114,115,120,],[-46,-47,-43,-48,82,82,82,82,82,-45,-44,-49,82,82,82,82,-41,-42,-48,]),'DIVIDE':([31,32,37,39,103,104,106,114,115,120,],[-46,-47,65,-48,-45,-44,-49,65,65,-48,]),'INTERSECTION':([31,32,33,37,39,41,69,103,104,106,107,109,110,111,113,114,115,121,123,],[-46,-47,-54,-43,-48,70,70,-45,-44,-49,-55,-53,-51,-52,-50,-41,-42,70,70,]),'RPAREN':([31,32,33,37,39,68,69,83,84,88,93,94,103,104,106,107,109,110,111,113,114,115,],[-46,-47,-54,-43,-48,106,107,116,106,119,125,126,-45,-44,-49,-55,-53,-51,-52,-50,-41,-42,]),'SEMICOLON':([4,8,12,14,15,16,17,19,26,27,30,31,32,33,34,35,36,37,38,39,41,42,43,44,49,50,57,87,89,96,97,98,99,100,101,102,103,104,105,106,107,109,110,111,112,113,114,115,116,117,119,122,124,125,126,129,134,135,136,137,],[-14,-13,-6,-9,-3,-10,-8,-11,-7,-12,-19,-46,-47,-54,-33,-28,-59,-43,-60,-48,-29,-27,-34,-57,-56,86,-58,-2,-26,-23,-20,-25,-24,-31,-32,-61,-45,-44,-62,-49,-55,-53,-51,-52,-30,-50,-41,-42,-17,-70,-18,-65,-63,-16,-15,-68,-69,-64,-66,-67,]),'BOTTOM':([2,11,85,86,92,130,131,132,133,],[13,13,13,13,13,13,13,13,13,]),'TYPEDEF_RANGE':([61,],[98,]),'INST_OF':([31,32,37,39,54,103,104,106,114,115,],[-46,-47,-43,-48,90,-45,-44,-49,-41,-42,]),'-':([31,32,33,37,39,103,104,106,107,109,110,111,113,114,115,120,121,],[-46,-47,-54,-43,-48,-45,-44,-49,-55,-53,-51,-52,-50,-41,-42,127,128,]),'INST_AS':([28,29,95,],[-21,61,-22,]),'COMMA':([28,31,32,33,34,35,36,37,38,39,41,42,43,100,101,103,104,106,107,109,110,111,112,113,114,115,],[60,-46,-47,-54,-33,-28,64,-43,67,-48,-29,-27,-34,-31,-32,-45,-44,-49,-55,-53,-51,-52,-30,-50,-41,-42,]),'PLUS':([31,32,33,37,39,41,42,46,54,68,69,84,103,104,106,107,108,109,110,111,112,113,114,115,120,121,123,],[-46,-47,-54,-43,-48,71,81,81,81,81,71,81,-45,-44,-49,-55,81,71,-51,-52,81,-50,-41,-42,-48,71,71,]),'INST_PROGRAM':([0,],[2,]),'$end':([1,4,7,8,12,14,15,16,17,19,26,27,30,31,32,33,34,35,36,37,38,39,41,42,43,44,49,57,87,89,96,97,98,99,100,101,102,103,104,105,106,107,109,110,111,112,113,114,115,116,117,119,122,124,125,126,129,134,135,136,137,],[0,-14,-1,-13,-6,-9,-3,-10,-8,-11,-7,-12,-19,-46,-47,-54,-33,-28,-59,-43,-60,-48,-29,-27,-34,-57,-56,-58,-2,-26,-23,-20,-25,-24,-31,-32,-61,-45,-44,-62,-49,-55,-53,-51,-52,-30,-50,-41,-42,-17,-70,-18,-65,-63,-16,-15,-68,-69,-64,-66,-67,]),'INST_ELSE':([4,8,12,14,15,16,17,19,26,27,30,31,32,33,34,35,36,37,38,39,41,42,43,44,49,57,87,89,96,97,98,99,100,101,102,103,104,105,106,107,109,110,111,112,113,114,115,116,117,119,122,124,125,126,129,134,135,136,137,],[-14,-13,-6,-9,-3,-10,-8,-11,-7,-12,-19,-46,-47,-54,-33,-28,-59,-43,-60,-48,-29,-27,-34,-57,-56,-58,-2,-26,-23,-20,-25,-24,-31,-32,-61,-45,-44,-62,-49,-55,-53,-51,-52,-30,-50,-41,-42,-17,-70,-18,-65,131,-16,-15,-68,-69,-64,-66,-67,]),'STRING':([5,23,64,67,],[38,38,38,38,]),'EQUAL':([18,],[53,]),'TYPEDEF_BOOL':([61,],[99,]),'VAR_IDENTIFIER':([2,3,4,5,8,9,10,11,12,14,15,16,17,19,20,21,22,23,26,27,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,47,49,52,53,57,58,59,60,62,63,64,65,66,67,70,71,72,73,74,75,76,77,78,79,80,81,82,85,86,87,89,90,91,92,96,97,98,99,100,101,102,103,104,105,106,107,109,110,111,112,113,114,115,116,117,119,122,124,125,126,129,130,131,132,133,134,135,136,137,],[18,28,-14,39,-13,39,49,18,-6,-9,-3,-10,-8,-11,39,55,39,39,-7,-12,-19,-46,-47,-54,-33,-28,-59,-43,-60,-48,39,-29,-27,-34,-57,83,39,-56,88,39,-58,93,94,28,39,39,39,39,39,39,39,39,39,-39,-37,-36,39,-38,-35,39,-40,39,39,18,18,-2,-26,120,39,18,-23,-20,-25,-24,-31,-32,-61,-45,-44,-62,-49,-55,-53,-51,-52,-30,-50,-41,-42,-17,-70,-18,120,-63,-16,-15,120,18,18,18,18,-69,-64,-66,-67,]),'INST_IF':([2,11,85,86,92,130,131,132,133,],[22,22,22,22,22,22,22,22,22,]),'RANGE':([31,32,37,39,42,68,103,104,106,108,114,115,120,],[-46,-47,-43,-48,79,79,-45,-44,-49,79,-41,-42,-48,]),'INST_DO':([31,32,33,34,37,39,43,48,100,101,103,104,106,107,109,110,111,112,113,114,115,123,],[-46,-47,-54,-33,-43,-48,-34,85,-31,-32,-45,-44,-49,-55,-53,-51,-52,-30,-50,-41,-42,130,]),'LPAREN':([4,5,6,8,9,12,13,14,15,16,17,19,20,22,23,24,25,26,27,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,47,49,53,57,62,63,64,65,66,67,70,71,72,73,74,75,76,77,78,79,80,81,82,87,89,90,91,96,97,98,99,100,101,102,103,104,105,106,107,109,110,111,112,113,114,115,116,117,119,122,124,125,126,129,134,135,136,137,],[-14,40,45,-13,47,-6,52,-9,-3,-10,-8,-11,47,47,40,58,59,-7,-12,-19,-46,-47,-54,-33,-28,-59,-43,-60,-48,40,-29,-27,-34,-57,47,-56,40,-58,47,47,40,47,47,40,40,40,47,-39,-37,-36,47,-38,-35,47,-40,47,47,-2,-26,40,40,-23,-20,-25,-24,-31,-32,-61,-45,-44,-62,-49,-55,-53,-51,-52,-30,-50,-41,-42,-17,-70,-18,40,-63,-16,-15,40,-69,-64,-66,-67,]),'TIMES':([31,32,33,37,39,41,69,103,104,106,107,109,110,111,113,114,115,120,121,123,],[-46,-47,-54,66,-48,72,72,-45,-44,-49,-55,72,72,-52,-50,66,66,-48,72,72,]),'INST_CASE':([2,11,85,86,92,130,131,132,133,],[20,20,20,20,20,20,20,20,20,]),'AND':([31,32,34,35,37,39,43,48,56,100,101,103,104,106,112,114,115,],[-46,-47,-33,62,-43,-48,-34,62,62,-31,62,-45,-44,-49,-30,-41,-42,]),'INST_THEN':([31,32,34,37,39,43,56,100,101,103,104,106,112,114,115,],[-46,-47,-33,-43,-48,-34,92,-31,-32,-45,-44,-49,-30,-41,-42,]),'FALSE':([5,9,22,23,53,62,63,64,67,],[43,43,43,43,43,43,43,43,43,]),'GREATEQ':([31,32,37,39,42,46,103,104,106,114,115,],[-46,-47,-43,-48,73,73,-45,-44,-49,-41,-42,]),'NEQEQ':([31,32,37,39,42,46,103,104,106,114,115,],[-46,-47,-43,-48,75,75,-45,-44,-49,-41,-42,]),'TYPEDEF_INT':([61,],[96,]),'LENGTH':([2,11,85,86,92,130,131,132,133,],[24,24,24,24,24,24,24,24,24,]),'LESSEQ':([31,32,37,39,42,46,103,104,106,114,115,],[-46,-47,-43,-48,80,80,-45,-44,-49,-41,-42,]),'RTOI':([2,11,85,86,92,130,131,132,133,],[25,25,25,25,25,25,25,25,25,]),'INST_WRITELN':([2,11,85,86,92,130,131,132,133,],[23,23,23,23,23,23,23,23,23,]),'>':([127,128,],[132,133,]),'OR':([31,32,34,35,37,39,43,48,56,100,101,103,104,106,112,114,115,],[-46,-47,-33,63,-43,-48,-34,63,63,-31,-32,-45,-44,-49,-30,-41,-42,]),}

_lr_action = { }
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = { }
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'Inst_Funcion':([2,11,85,86,92,130,131,132,133,],[4,4,4,4,4,4,4,4,4,]),'Tipo':([61,],[97,]),'Factor':([5,9,20,22,23,40,47,53,62,63,64,65,66,67,70,71,72,76,79,81,82,90,91,122,129,],[31,31,31,31,31,31,31,31,31,31,31,103,104,31,31,31,31,31,31,31,31,31,31,31,31,]),'Bloque_Inst':([2,85,92,130,131,132,133,],[7,117,124,134,135,136,137,]),'Inst_Salida':([2,11,85,86,92,130,131,132,133,],[8,8,8,8,8,8,8,8,8,]),'Lista_Aux':([5,23,64,67,],[44,57,102,105,]),'Casos':([90,122,129,],[122,129,129,]),'Operacion_booleana':([5,9,22,23,53,62,63,64,67,],[35,48,56,35,35,100,101,35,35,]),'Inst_Declare':([2,11,85,86,92,130,131,132,133,],[12,12,12,12,12,12,12,12,12,]),'RangoF':([5,23,40,53,64,67,70,71,90,91,122,129,],[33,33,33,33,33,33,33,33,33,33,33,33,]),'Opr_bool':([42,46,],[76,76,]),'Inst_For':([2,11,85,86,92,130,131,132,133,],[14,14,14,14,14,14,14,14,14,]),'program':([0,],[1,]),'Inst':([2,11,85,86,92,130,131,132,133,],[15,50,15,50,15,15,15,15,15,]),'Inst_While':([2,11,85,86,92,130,131,132,133,],[16,16,16,16,16,16,16,16,16,]),'Inst_Lectura':([2,11,85,86,92,130,131,132,133,],[17,17,17,17,17,17,17,17,17,]),'Lista_Inst':([11,86,],[51,118,]),'Expresion':([5,23,53,64,67,],[36,36,89,36,36,]),'Term':([5,9,20,22,23,40,47,53,62,63,64,67,70,71,72,76,79,81,82,90,91,122,129,],[37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,114,115,37,37,37,37,]),'Inst_If':([2,11,85,86,92,130,131,132,133,],[19,19,19,19,19,19,19,19,19,]),'Inst_Asignacion':([2,11,85,86,92,130,131,132,133,],[26,26,26,26,26,26,26,26,26,]),'Rango':([5,23,40,53,64,67,70,71,90,91,122,129,],[41,41,69,41,41,41,109,110,121,123,121,121,]),'Lista_Declare':([3,],[30,]),'Operacion_binaria':([5,9,20,22,23,40,47,53,62,63,64,67,70,71,72,76,79,90,91,122,129,],[42,46,54,46,42,68,84,42,46,46,42,42,108,108,111,112,113,108,108,108,108,]),'Lista_Variables':([3,60,],[29,95,]),'Inst_Case':([2,11,85,86,92,130,131,132,133,],[27,27,27,27,27,27,27,27,27,]),}

_lr_goto = { }
for _k, _v in _lr_goto_items.items():
   for _x,_y in zip(_v[0],_v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = { }
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> INST_PROGRAM Bloque_Inst','program',2,'p_program','parser.py',14),
  ('Bloque_Inst -> INST_BEGIN Lista_Inst INST_END','Bloque_Inst',3,'p_Bloque_Inst','parser.py',29),
  ('Bloque_Inst -> Inst','Bloque_Inst',1,'p_Bloque_Inst','parser.py',30),
  ('Lista_Inst -> Inst','Lista_Inst',1,'p_Lista_Inst','parser.py',48),
  ('Lista_Inst -> Inst SEMICOLON Lista_Inst','Lista_Inst',3,'p_Lista_Inst','parser.py',49),
  ('Inst -> Inst_Declare','Inst',1,'p_Inst','parser.py',59),
  ('Inst -> Inst_Asignacion','Inst',1,'p_Inst','parser.py',60),
  ('Inst -> Inst_Lectura','Inst',1,'p_Inst','parser.py',61),
  ('Inst -> Inst_For','Inst',1,'p_Inst','parser.py',62),
  ('Inst -> Inst_While','Inst',1,'p_Inst','parser.py',63),
  ('Inst -> Inst_If','Inst',1,'p_Inst','parser.py',64),
  ('Inst -> Inst_Case','Inst',1,'p_Inst','parser.py',65),
  ('Inst -> Inst_Salida','Inst',1,'p_Inst','parser.py',66),
  ('Inst -> Inst_Funcion','Inst',1,'p_Inst','parser.py',67),
  ('Inst_Funcion -> RTOI LPAREN VAR_IDENTIFIER RPAREN','Inst_Funcion',4,'p_Inst_Funcion','parser.py',79),
  ('Inst_Funcion -> LENGTH LPAREN VAR_IDENTIFIER RPAREN','Inst_Funcion',4,'p_Inst_Funcion','parser.py',80),
  ('Inst_Funcion -> TOP LPAREN VAR_IDENTIFIER RPAREN','Inst_Funcion',4,'p_Inst_Funcion','parser.py',81),
  ('Inst_Funcion -> BOTTOM LPAREN VAR_IDENTIFIER RPAREN','Inst_Funcion',4,'p_Inst_Funcion','parser.py',82),
  ('Inst_Declare -> INST_DECLARE Lista_Declare','Inst_Declare',2,'p_Inst_Declare','parser.py',97),
  ('Lista_Declare -> Lista_Variables INST_AS Tipo','Lista_Declare',3,'p_Lista_Declare','parser.py',114),
  ('Lista_Variables -> VAR_IDENTIFIER','Lista_Variables',1,'p_Lista_Variables','parser.py',128),
  ('Lista_Variables -> VAR_IDENTIFIER COMMA Lista_Variables','Lista_Variables',3,'p_Lista_Variables','parser.py',129),
  ('Tipo -> TYPEDEF_INT','Tipo',1,'p_Tipo','parser.py',137),
  ('Tipo -> TYPEDEF_BOOL','Tipo',1,'p_Tipo','parser.py',138),
  ('Tipo -> TYPEDEF_RANGE','Tipo',1,'p_Tipo','parser.py',139),
  ('Inst_Asignacion -> VAR_IDENTIFIER EQUAL Expresion','Inst_Asignacion',3,'p_Inst_Asignacion','parser.py',152),
  ('Expresion -> Operacion_binaria','Expresion',1,'p_Expresion','parser.py',181),
  ('Expresion -> Operacion_booleana','Expresion',1,'p_Expresion','parser.py',182),
  ('Expresion -> Rango','Expresion',1,'p_Expresion','parser.py',183),
  ('Operacion_booleana -> Operacion_binaria Opr_bool Operacion_binaria','Operacion_booleana',3,'p_Operacion_booleana','parser.py',187),
  ('Operacion_booleana -> Operacion_booleana AND Operacion_booleana','Operacion_booleana',3,'p_Operacion_booleana','parser.py',188),
  ('Operacion_booleana -> Operacion_booleana OR Operacion_booleana','Operacion_booleana',3,'p_Operacion_booleana','parser.py',189),
  ('Operacion_booleana -> TRUE','Operacion_booleana',1,'p_Operacion_booleana','parser.py',190),
  ('Operacion_booleana -> FALSE','Operacion_booleana',1,'p_Operacion_booleana','parser.py',191),
  ('Opr_bool -> EQEQ','Opr_bool',1,'p_Opr_bool','parser.py',200),
  ('Opr_bool -> NEQEQ','Opr_bool',1,'p_Opr_bool','parser.py',201),
  ('Opr_bool -> GREAT','Opr_bool',1,'p_Opr_bool','parser.py',202),
  ('Opr_bool -> LESS','Opr_bool',1,'p_Opr_bool','parser.py',203),
  ('Opr_bool -> GREATEQ','Opr_bool',1,'p_Opr_bool','parser.py',204),
  ('Opr_bool -> LESSEQ','Opr_bool',1,'p_Opr_bool','parser.py',205),
  ('Operacion_binaria -> Operacion_binaria PLUS Term','Operacion_binaria',3,'p_Operacion_binaria','parser.py',209),
  ('Operacion_binaria -> Operacion_binaria MINUS Term','Operacion_binaria',3,'p_Operacion_binaria','parser.py',210),
  ('Operacion_binaria -> Term','Operacion_binaria',1,'p_Operacion_binaria','parser.py',211),
  ('Term -> Term TIMES Factor','Term',3,'p_Term','parser.py',218),
  ('Term -> Term DIVIDE Factor','Term',3,'p_Term','parser.py',219),
  ('Term -> Factor','Term',1,'p_Term','parser.py',220),
  ('Factor -> NUMBER','Factor',1,'p_Factor','parser.py',227),
  ('Factor -> VAR_IDENTIFIER','Factor',1,'p_Factor','parser.py',228),
  ('Factor -> LPAREN Operacion_binaria RPAREN','Factor',3,'p_Factor','parser.py',229),
  ('Rango -> Operacion_binaria RANGE Operacion_binaria','Rango',3,'p_Rango','parser.py',236),
  ('Rango -> Rango PLUS Rango','Rango',3,'p_Rango','parser.py',237),
  ('Rango -> Rango TIMES Operacion_binaria','Rango',3,'p_Rango','parser.py',238),
  ('Rango -> Rango INTERSECTION Rango','Rango',3,'p_Rango','parser.py',239),
  ('Rango -> RangoF','Rango',1,'p_Rango','parser.py',240),
  ('RangoF -> LPAREN Rango RPAREN','RangoF',3,'p_RangoF','parser.py',247),
  ('Inst_Lectura -> INST_READ VAR_IDENTIFIER','Inst_Lectura',2,'p_Inst_Lectura','parser.py',260),
  ('Inst_Salida -> INST_WRITE Lista_Aux','Inst_Salida',2,'p_Inst_Salida','parser.py',285),
  ('Inst_Salida -> INST_WRITELN Lista_Aux','Inst_Salida',2,'p_Inst_Salida','parser.py',286),
  ('Lista_Aux -> Expresion','Lista_Aux',1,'p_Lista_Aux','parser.py',291),
  ('Lista_Aux -> STRING','Lista_Aux',1,'p_Lista_Aux','parser.py',292),
  ('Lista_Aux -> Expresion COMMA Lista_Aux','Lista_Aux',3,'p_Lista_Aux','parser.py',293),
  ('Lista_Aux -> STRING COMMA Lista_Aux','Lista_Aux',3,'p_Lista_Aux','parser.py',294),
  ('Inst_If -> INST_IF Operacion_booleana INST_THEN Bloque_Inst','Inst_If',4,'p_Inst_If','parser.py',314),
  ('Inst_If -> INST_IF Operacion_booleana INST_THEN Bloque_Inst INST_ELSE Bloque_Inst','Inst_If',6,'p_Inst_If','parser.py',315),
  ('Inst_Case -> INST_CASE Operacion_binaria INST_OF Casos','Inst_Case',4,'p_Inst_Case','parser.py',324),
  ('Casos -> VAR_IDENTIFIER - > Bloque_Inst','Casos',4,'p_Casos','parser.py',328),
  ('Casos -> Rango - > Bloque_Inst','Casos',4,'p_Casos','parser.py',329),
  ('Casos -> Casos Casos','Casos',2,'p_Casos','parser.py',330),
  ('Inst_For -> INST_FOR VAR_IDENTIFIER INST_IN Rango INST_DO Bloque_Inst','Inst_For',6,'p_Inst_For','parser.py',346),
  ('Inst_While -> INST_WHILE Operacion_booleana INST_DO Bloque_Inst','Inst_While',4,'p_Inst_While','parser.py',359),
]
