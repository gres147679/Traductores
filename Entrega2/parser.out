Created by PLY version 3.4 (http://www.dabeaz.com/ply)

Unused terminals:

    TOP
    COMMENT
    CASE_ASSIGN
    RESERVED
    IN
    BOTTOM
    LENGTH
    RTOI
    NOT
    MOD

Grammar

Rule 0     S' -> program
Rule 1     program -> INST_PROGRAM Bloque_Inst
Rule 2     Bloque_Inst -> INST_BEGIN Lista_Inst INST_END
Rule 3     Bloque_Inst -> Inst
Rule 4     Lista_Inst -> Inst
Rule 5     Lista_Inst -> Inst SEMICOLON Lista_Inst
Rule 6     Inst -> Inst_Declare
Rule 7     Inst -> Inst_Asignacion
Rule 8     Inst -> Inst_Lectura
Rule 9     Inst -> Inst_For
Rule 10    Inst -> Inst_While
Rule 11    Inst -> Inst_If
Rule 12    Inst -> Inst_Case
Rule 13    Inst -> Inst_Salida
Rule 14    Inst_Declare -> INST_DECLARE Lista_Declare
Rule 15    Lista_Declare -> Lista_Variables INST_AS Tipo
Rule 16    Lista_Variables -> VAR_IDENTIFIER
Rule 17    Lista_Variables -> VAR_IDENTIFIER COMMA Lista_Variables
Rule 18    Tipo -> TYPEDEF_INT
Rule 19    Tipo -> TYPEDEF_BOOL
Rule 20    Tipo -> TYPEDEF_RANGE
Rule 21    Inst_Asignacion -> VAR_IDENTIFIER EQUAL Expresion
Rule 22    Expresion -> Operacion_binaria
Rule 23    Expresion -> Operacion_booleana
Rule 24    Expresion -> Rango
Rule 25    Operacion_booleana -> Operacion_binaria Opr_bool Operacion_binaria
Rule 26    Operacion_booleana -> Operacion_booleana AND Operacion_booleana
Rule 27    Operacion_booleana -> Operacion_booleana OR Operacion_booleana
Rule 28    Operacion_booleana -> t
Rule 29    Operacion_booleana -> f
Rule 30    Opr_bool -> EQEQ
Rule 31    Opr_bool -> NEQEQ
Rule 32    Opr_bool -> GREAT
Rule 33    Opr_bool -> LESS
Rule 34    Opr_bool -> GREATEQ
Rule 35    Opr_bool -> LESSEQ
Rule 36    Operacion_binaria -> Operacion_binaria PLUS Term
Rule 37    Operacion_binaria -> Operacion_binaria MINUS Term
Rule 38    Operacion_binaria -> Term
Rule 39    Term -> Term TIMES Factor
Rule 40    Term -> Term DIVIDE Factor
Rule 41    Term -> Factor
Rule 42    Factor -> NUMBER
Rule 43    Factor -> VAR_IDENTIFIER
Rule 44    Factor -> LPAREN Operacion_binaria RPAREN
Rule 45    Rango -> Operacion_binaria RANGE Operacion_binaria
Rule 46    Rango -> Rango PLUS Rango
Rule 47    Rango -> Rango TIMES Operacion_binaria
Rule 48    Rango -> Rango INTERSECTION Rango
Rule 49    Rango -> RangoF
Rule 50    RangoF -> LPAREN Rango RPAREN
Rule 51    Inst_Lectura -> INST_READ VAR_IDENTIFIER
Rule 52    Inst_Salida -> INST_WRITE Lista_Aux
Rule 53    Inst_Salida -> INST_WRITELN Lista_Aux
Rule 54    Lista_Aux -> Expresion
Rule 55    Lista_Aux -> STRING
Rule 56    Lista_Aux -> Expresion COMMA Lista_Aux
Rule 57    Lista_Aux -> STRING COMMA Lista_Aux
Rule 58    Inst_If -> INST_IF Operacion_booleana INST_THEN Bloque_Inst
Rule 59    Inst_If -> INST_IF Operacion_booleana INST_THEN Bloque_Inst INST_ELSE Bloque_Inst
Rule 60    Inst_Case -> INST_CASE Operacion_binaria INST_OF Casos
Rule 61    Casos -> VAR_IDENTIFIER - > Bloque_Inst
Rule 62    Casos -> Rango - > Bloque_Inst
Rule 63    Casos -> Casos Casos
Rule 64    Inst_For -> INST_FOR VAR_IDENTIFIER INST_IN Rango INST_DO Bloque_Inst
Rule 65    Inst_While -> INST_WHILE Operacion_booleana INST_DO Bloque_Inst

Terminals, with rules where they appear

-                    : 61 62
>                    : 61 62
AND                  : 26
BOTTOM               : 
CASE_ASSIGN          : 
COMMA                : 17 56 57
COMMENT              : 
DIVIDE               : 40
EQEQ                 : 30
EQUAL                : 21
GREAT                : 32
GREATEQ              : 34
IN                   : 
INST_AS              : 15
INST_BEGIN           : 2
INST_CASE            : 60
INST_DECLARE         : 14
INST_DO              : 64 65
INST_ELSE            : 59
INST_END             : 2
INST_FOR             : 64
INST_IF              : 58 59
INST_IN              : 64
INST_OF              : 60
INST_PROGRAM         : 1
INST_READ            : 51
INST_THEN            : 58 59
INST_WHILE           : 65
INST_WRITE           : 52
INST_WRITELN         : 53
INTERSECTION         : 48
LENGTH               : 
LESS                 : 33
LESSEQ               : 35
LPAREN               : 44 50
MINUS                : 37
MOD                  : 
NEQEQ                : 31
NOT                  : 
NUMBER               : 42
OR                   : 27
PLUS                 : 36 46
RANGE                : 45
RESERVED             : 
RPAREN               : 44 50
RTOI                 : 
SEMICOLON            : 5
STRING               : 55 57
TIMES                : 39 47
TOP                  : 
TYPEDEF_BOOL         : 19
TYPEDEF_INT          : 18
TYPEDEF_RANGE        : 20
VAR_IDENTIFIER       : 16 17 21 43 51 61 64
error                : 
f                    : 29
t                    : 28

Nonterminals, with rules where they appear

Bloque_Inst          : 1 58 59 59 61 62 64 65
Casos                : 60 63 63
Expresion            : 21 54 56
Factor               : 39 40 41
Inst                 : 3 4 5
Inst_Asignacion      : 7
Inst_Case            : 12
Inst_Declare         : 6
Inst_For             : 9
Inst_If              : 11
Inst_Lectura         : 8
Inst_Salida          : 13
Inst_While           : 10
Lista_Aux            : 52 53 56 57
Lista_Declare        : 14
Lista_Inst           : 2 5
Lista_Variables      : 15 17
Operacion_binaria    : 22 25 25 36 37 44 45 45 47 60
Operacion_booleana   : 23 26 26 27 27 58 59 65
Opr_bool             : 25
Rango                : 24 46 46 47 48 48 50 62 64
RangoF               : 49
Term                 : 36 37 38 39 40
Tipo                 : 15
program              : 0

Parsing method: LALR

state 0

    (0) S' -> . program
    (1) program -> . INST_PROGRAM Bloque_Inst

    INST_PROGRAM    shift and go to state 2

    program                        shift and go to state 1

state 1

    (0) S' -> program .



state 2

    (1) program -> INST_PROGRAM . Bloque_Inst
    (2) Bloque_Inst -> . INST_BEGIN Lista_Inst INST_END
    (3) Bloque_Inst -> . Inst
    (6) Inst -> . Inst_Declare
    (7) Inst -> . Inst_Asignacion
    (8) Inst -> . Inst_Lectura
    (9) Inst -> . Inst_For
    (10) Inst -> . Inst_While
    (11) Inst -> . Inst_If
    (12) Inst -> . Inst_Case
    (13) Inst -> . Inst_Salida
    (14) Inst_Declare -> . INST_DECLARE Lista_Declare
    (21) Inst_Asignacion -> . VAR_IDENTIFIER EQUAL Expresion
    (51) Inst_Lectura -> . INST_READ VAR_IDENTIFIER
    (64) Inst_For -> . INST_FOR VAR_IDENTIFIER INST_IN Rango INST_DO Bloque_Inst
    (65) Inst_While -> . INST_WHILE Operacion_booleana INST_DO Bloque_Inst
    (58) Inst_If -> . INST_IF Operacion_booleana INST_THEN Bloque_Inst
    (59) Inst_If -> . INST_IF Operacion_booleana INST_THEN Bloque_Inst INST_ELSE Bloque_Inst
    (60) Inst_Case -> . INST_CASE Operacion_binaria INST_OF Casos
    (52) Inst_Salida -> . INST_WRITE Lista_Aux
    (53) Inst_Salida -> . INST_WRITELN Lista_Aux

    INST_BEGIN      shift and go to state 9
    INST_DECLARE    shift and go to state 3
    VAR_IDENTIFIER  shift and go to state 15
    INST_READ       shift and go to state 8
    INST_FOR        shift and go to state 18
    INST_WHILE      shift and go to state 7
    INST_IF         shift and go to state 19
    INST_CASE       shift and go to state 17
    INST_WRITE      shift and go to state 4
    INST_WRITELN    shift and go to state 20

    Inst_Salida                    shift and go to state 6
    Inst_Declare                   shift and go to state 10
    Bloque_Inst                    shift and go to state 5
    Inst_If                        shift and go to state 16
    Inst_For                       shift and go to state 11
    Inst_While                     shift and go to state 13
    Inst                           shift and go to state 12
    Inst_Asignacion                shift and go to state 21
    Inst_Case                      shift and go to state 22
    Inst_Lectura                   shift and go to state 14

state 3

    (14) Inst_Declare -> INST_DECLARE . Lista_Declare
    (15) Lista_Declare -> . Lista_Variables INST_AS Tipo
    (16) Lista_Variables -> . VAR_IDENTIFIER
    (17) Lista_Variables -> . VAR_IDENTIFIER COMMA Lista_Variables

    VAR_IDENTIFIER  shift and go to state 23

    Lista_Variables                shift and go to state 24
    Lista_Declare                  shift and go to state 25

state 4

    (52) Inst_Salida -> INST_WRITE . Lista_Aux
    (54) Lista_Aux -> . Expresion
    (55) Lista_Aux -> . STRING
    (56) Lista_Aux -> . Expresion COMMA Lista_Aux
    (57) Lista_Aux -> . STRING COMMA Lista_Aux
    (22) Expresion -> . Operacion_binaria
    (23) Expresion -> . Operacion_booleana
    (24) Expresion -> . Rango
    (36) Operacion_binaria -> . Operacion_binaria PLUS Term
    (37) Operacion_binaria -> . Operacion_binaria MINUS Term
    (38) Operacion_binaria -> . Term
    (25) Operacion_booleana -> . Operacion_binaria Opr_bool Operacion_binaria
    (26) Operacion_booleana -> . Operacion_booleana AND Operacion_booleana
    (27) Operacion_booleana -> . Operacion_booleana OR Operacion_booleana
    (28) Operacion_booleana -> . t
    (29) Operacion_booleana -> . f
    (45) Rango -> . Operacion_binaria RANGE Operacion_binaria
    (46) Rango -> . Rango PLUS Rango
    (47) Rango -> . Rango TIMES Operacion_binaria
    (48) Rango -> . Rango INTERSECTION Rango
    (49) Rango -> . RangoF
    (39) Term -> . Term TIMES Factor
    (40) Term -> . Term DIVIDE Factor
    (41) Term -> . Factor
    (50) RangoF -> . LPAREN Rango RPAREN
    (42) Factor -> . NUMBER
    (43) Factor -> . VAR_IDENTIFIER
    (44) Factor -> . LPAREN Operacion_binaria RPAREN

    STRING          shift and go to state 32
    t               shift and go to state 38
    f               shift and go to state 37
    LPAREN          shift and go to state 34
    NUMBER          shift and go to state 27
    VAR_IDENTIFIER  shift and go to state 33

    Expresion                      shift and go to state 30
    Operacion_binaria              shift and go to state 36
    RangoF                         shift and go to state 28
    Factor                         shift and go to state 26
    Term                           shift and go to state 31
    Lista_Aux                      shift and go to state 39
    Rango                          shift and go to state 35
    Operacion_booleana             shift and go to state 29

state 5

    (1) program -> INST_PROGRAM Bloque_Inst .

    $end            reduce using rule 1 (program -> INST_PROGRAM Bloque_Inst .)


state 6

    (13) Inst -> Inst_Salida .

    $end            reduce using rule 13 (Inst -> Inst_Salida .)
    SEMICOLON       reduce using rule 13 (Inst -> Inst_Salida .)
    INST_END        reduce using rule 13 (Inst -> Inst_Salida .)
    INST_ELSE       reduce using rule 13 (Inst -> Inst_Salida .)
    VAR_IDENTIFIER  reduce using rule 13 (Inst -> Inst_Salida .)
    LPAREN          reduce using rule 13 (Inst -> Inst_Salida .)
    NUMBER          reduce using rule 13 (Inst -> Inst_Salida .)


state 7

    (65) Inst_While -> INST_WHILE . Operacion_booleana INST_DO Bloque_Inst
    (25) Operacion_booleana -> . Operacion_binaria Opr_bool Operacion_binaria
    (26) Operacion_booleana -> . Operacion_booleana AND Operacion_booleana
    (27) Operacion_booleana -> . Operacion_booleana OR Operacion_booleana
    (28) Operacion_booleana -> . t
    (29) Operacion_booleana -> . f
    (36) Operacion_binaria -> . Operacion_binaria PLUS Term
    (37) Operacion_binaria -> . Operacion_binaria MINUS Term
    (38) Operacion_binaria -> . Term
    (39) Term -> . Term TIMES Factor
    (40) Term -> . Term DIVIDE Factor
    (41) Term -> . Factor
    (42) Factor -> . NUMBER
    (43) Factor -> . VAR_IDENTIFIER
    (44) Factor -> . LPAREN Operacion_binaria RPAREN

    t               shift and go to state 38
    f               shift and go to state 37
    NUMBER          shift and go to state 27
    VAR_IDENTIFIER  shift and go to state 33
    LPAREN          shift and go to state 41

    Operacion_binaria              shift and go to state 40
    Term                           shift and go to state 31
    Factor                         shift and go to state 26
    Operacion_booleana             shift and go to state 42

state 8

    (51) Inst_Lectura -> INST_READ . VAR_IDENTIFIER

    VAR_IDENTIFIER  shift and go to state 43


state 9

    (2) Bloque_Inst -> INST_BEGIN . Lista_Inst INST_END
    (4) Lista_Inst -> . Inst
    (5) Lista_Inst -> . Inst SEMICOLON Lista_Inst
    (6) Inst -> . Inst_Declare
    (7) Inst -> . Inst_Asignacion
    (8) Inst -> . Inst_Lectura
    (9) Inst -> . Inst_For
    (10) Inst -> . Inst_While
    (11) Inst -> . Inst_If
    (12) Inst -> . Inst_Case
    (13) Inst -> . Inst_Salida
    (14) Inst_Declare -> . INST_DECLARE Lista_Declare
    (21) Inst_Asignacion -> . VAR_IDENTIFIER EQUAL Expresion
    (51) Inst_Lectura -> . INST_READ VAR_IDENTIFIER
    (64) Inst_For -> . INST_FOR VAR_IDENTIFIER INST_IN Rango INST_DO Bloque_Inst
    (65) Inst_While -> . INST_WHILE Operacion_booleana INST_DO Bloque_Inst
    (58) Inst_If -> . INST_IF Operacion_booleana INST_THEN Bloque_Inst
    (59) Inst_If -> . INST_IF Operacion_booleana INST_THEN Bloque_Inst INST_ELSE Bloque_Inst
    (60) Inst_Case -> . INST_CASE Operacion_binaria INST_OF Casos
    (52) Inst_Salida -> . INST_WRITE Lista_Aux
    (53) Inst_Salida -> . INST_WRITELN Lista_Aux

    INST_DECLARE    shift and go to state 3
    VAR_IDENTIFIER  shift and go to state 15
    INST_READ       shift and go to state 8
    INST_FOR        shift and go to state 18
    INST_WHILE      shift and go to state 7
    INST_IF         shift and go to state 19
    INST_CASE       shift and go to state 17
    INST_WRITE      shift and go to state 4
    INST_WRITELN    shift and go to state 20

    Inst_Salida                    shift and go to state 6
    Inst_Declare                   shift and go to state 10
    Inst_If                        shift and go to state 16
    Inst_For                       shift and go to state 11
    Inst_While                     shift and go to state 13
    Inst                           shift and go to state 44
    Inst_Asignacion                shift and go to state 21
    Inst_Case                      shift and go to state 22
    Inst_Lectura                   shift and go to state 14
    Lista_Inst                     shift and go to state 45

state 10

    (6) Inst -> Inst_Declare .

    $end            reduce using rule 6 (Inst -> Inst_Declare .)
    SEMICOLON       reduce using rule 6 (Inst -> Inst_Declare .)
    INST_END        reduce using rule 6 (Inst -> Inst_Declare .)
    INST_ELSE       reduce using rule 6 (Inst -> Inst_Declare .)
    VAR_IDENTIFIER  reduce using rule 6 (Inst -> Inst_Declare .)
    LPAREN          reduce using rule 6 (Inst -> Inst_Declare .)
    NUMBER          reduce using rule 6 (Inst -> Inst_Declare .)


state 11

    (9) Inst -> Inst_For .

    $end            reduce using rule 9 (Inst -> Inst_For .)
    SEMICOLON       reduce using rule 9 (Inst -> Inst_For .)
    INST_END        reduce using rule 9 (Inst -> Inst_For .)
    INST_ELSE       reduce using rule 9 (Inst -> Inst_For .)
    VAR_IDENTIFIER  reduce using rule 9 (Inst -> Inst_For .)
    LPAREN          reduce using rule 9 (Inst -> Inst_For .)
    NUMBER          reduce using rule 9 (Inst -> Inst_For .)


state 12

    (3) Bloque_Inst -> Inst .

    $end            reduce using rule 3 (Bloque_Inst -> Inst .)
    SEMICOLON       reduce using rule 3 (Bloque_Inst -> Inst .)
    INST_END        reduce using rule 3 (Bloque_Inst -> Inst .)
    INST_ELSE       reduce using rule 3 (Bloque_Inst -> Inst .)
    VAR_IDENTIFIER  reduce using rule 3 (Bloque_Inst -> Inst .)
    LPAREN          reduce using rule 3 (Bloque_Inst -> Inst .)
    NUMBER          reduce using rule 3 (Bloque_Inst -> Inst .)


state 13

    (10) Inst -> Inst_While .

    $end            reduce using rule 10 (Inst -> Inst_While .)
    SEMICOLON       reduce using rule 10 (Inst -> Inst_While .)
    INST_END        reduce using rule 10 (Inst -> Inst_While .)
    INST_ELSE       reduce using rule 10 (Inst -> Inst_While .)
    VAR_IDENTIFIER  reduce using rule 10 (Inst -> Inst_While .)
    LPAREN          reduce using rule 10 (Inst -> Inst_While .)
    NUMBER          reduce using rule 10 (Inst -> Inst_While .)


state 14

    (8) Inst -> Inst_Lectura .

    $end            reduce using rule 8 (Inst -> Inst_Lectura .)
    SEMICOLON       reduce using rule 8 (Inst -> Inst_Lectura .)
    INST_END        reduce using rule 8 (Inst -> Inst_Lectura .)
    INST_ELSE       reduce using rule 8 (Inst -> Inst_Lectura .)
    VAR_IDENTIFIER  reduce using rule 8 (Inst -> Inst_Lectura .)
    LPAREN          reduce using rule 8 (Inst -> Inst_Lectura .)
    NUMBER          reduce using rule 8 (Inst -> Inst_Lectura .)


state 15

    (21) Inst_Asignacion -> VAR_IDENTIFIER . EQUAL Expresion

    EQUAL           shift and go to state 46


state 16

    (11) Inst -> Inst_If .

    $end            reduce using rule 11 (Inst -> Inst_If .)
    SEMICOLON       reduce using rule 11 (Inst -> Inst_If .)
    INST_END        reduce using rule 11 (Inst -> Inst_If .)
    INST_ELSE       reduce using rule 11 (Inst -> Inst_If .)
    VAR_IDENTIFIER  reduce using rule 11 (Inst -> Inst_If .)
    LPAREN          reduce using rule 11 (Inst -> Inst_If .)
    NUMBER          reduce using rule 11 (Inst -> Inst_If .)


state 17

    (60) Inst_Case -> INST_CASE . Operacion_binaria INST_OF Casos
    (36) Operacion_binaria -> . Operacion_binaria PLUS Term
    (37) Operacion_binaria -> . Operacion_binaria MINUS Term
    (38) Operacion_binaria -> . Term
    (39) Term -> . Term TIMES Factor
    (40) Term -> . Term DIVIDE Factor
    (41) Term -> . Factor
    (42) Factor -> . NUMBER
    (43) Factor -> . VAR_IDENTIFIER
    (44) Factor -> . LPAREN Operacion_binaria RPAREN

    NUMBER          shift and go to state 27
    VAR_IDENTIFIER  shift and go to state 33
    LPAREN          shift and go to state 41

    Operacion_binaria              shift and go to state 47
    Term                           shift and go to state 31
    Factor                         shift and go to state 26

state 18

    (64) Inst_For -> INST_FOR . VAR_IDENTIFIER INST_IN Rango INST_DO Bloque_Inst

    VAR_IDENTIFIER  shift and go to state 48


state 19

    (58) Inst_If -> INST_IF . Operacion_booleana INST_THEN Bloque_Inst
    (59) Inst_If -> INST_IF . Operacion_booleana INST_THEN Bloque_Inst INST_ELSE Bloque_Inst
    (25) Operacion_booleana -> . Operacion_binaria Opr_bool Operacion_binaria
    (26) Operacion_booleana -> . Operacion_booleana AND Operacion_booleana
    (27) Operacion_booleana -> . Operacion_booleana OR Operacion_booleana
    (28) Operacion_booleana -> . t
    (29) Operacion_booleana -> . f
    (36) Operacion_binaria -> . Operacion_binaria PLUS Term
    (37) Operacion_binaria -> . Operacion_binaria MINUS Term
    (38) Operacion_binaria -> . Term
    (39) Term -> . Term TIMES Factor
    (40) Term -> . Term DIVIDE Factor
    (41) Term -> . Factor
    (42) Factor -> . NUMBER
    (43) Factor -> . VAR_IDENTIFIER
    (44) Factor -> . LPAREN Operacion_binaria RPAREN

    t               shift and go to state 38
    f               shift and go to state 37
    NUMBER          shift and go to state 27
    VAR_IDENTIFIER  shift and go to state 33
    LPAREN          shift and go to state 41

    Operacion_binaria              shift and go to state 40
    Term                           shift and go to state 31
    Factor                         shift and go to state 26
    Operacion_booleana             shift and go to state 49

state 20

    (53) Inst_Salida -> INST_WRITELN . Lista_Aux
    (54) Lista_Aux -> . Expresion
    (55) Lista_Aux -> . STRING
    (56) Lista_Aux -> . Expresion COMMA Lista_Aux
    (57) Lista_Aux -> . STRING COMMA Lista_Aux
    (22) Expresion -> . Operacion_binaria
    (23) Expresion -> . Operacion_booleana
    (24) Expresion -> . Rango
    (36) Operacion_binaria -> . Operacion_binaria PLUS Term
    (37) Operacion_binaria -> . Operacion_binaria MINUS Term
    (38) Operacion_binaria -> . Term
    (25) Operacion_booleana -> . Operacion_binaria Opr_bool Operacion_binaria
    (26) Operacion_booleana -> . Operacion_booleana AND Operacion_booleana
    (27) Operacion_booleana -> . Operacion_booleana OR Operacion_booleana
    (28) Operacion_booleana -> . t
    (29) Operacion_booleana -> . f
    (45) Rango -> . Operacion_binaria RANGE Operacion_binaria
    (46) Rango -> . Rango PLUS Rango
    (47) Rango -> . Rango TIMES Operacion_binaria
    (48) Rango -> . Rango INTERSECTION Rango
    (49) Rango -> . RangoF
    (39) Term -> . Term TIMES Factor
    (40) Term -> . Term DIVIDE Factor
    (41) Term -> . Factor
    (50) RangoF -> . LPAREN Rango RPAREN
    (42) Factor -> . NUMBER
    (43) Factor -> . VAR_IDENTIFIER
    (44) Factor -> . LPAREN Operacion_binaria RPAREN

    STRING          shift and go to state 32
    t               shift and go to state 38
    f               shift and go to state 37
    LPAREN          shift and go to state 34
    NUMBER          shift and go to state 27
    VAR_IDENTIFIER  shift and go to state 33

    Expresion                      shift and go to state 30
    Operacion_binaria              shift and go to state 36
    RangoF                         shift and go to state 28
    Factor                         shift and go to state 26
    Term                           shift and go to state 31
    Lista_Aux                      shift and go to state 50
    Rango                          shift and go to state 35
    Operacion_booleana             shift and go to state 29

state 21

    (7) Inst -> Inst_Asignacion .

    $end            reduce using rule 7 (Inst -> Inst_Asignacion .)
    SEMICOLON       reduce using rule 7 (Inst -> Inst_Asignacion .)
    INST_END        reduce using rule 7 (Inst -> Inst_Asignacion .)
    INST_ELSE       reduce using rule 7 (Inst -> Inst_Asignacion .)
    VAR_IDENTIFIER  reduce using rule 7 (Inst -> Inst_Asignacion .)
    LPAREN          reduce using rule 7 (Inst -> Inst_Asignacion .)
    NUMBER          reduce using rule 7 (Inst -> Inst_Asignacion .)


state 22

    (12) Inst -> Inst_Case .

    $end            reduce using rule 12 (Inst -> Inst_Case .)
    SEMICOLON       reduce using rule 12 (Inst -> Inst_Case .)
    INST_END        reduce using rule 12 (Inst -> Inst_Case .)
    INST_ELSE       reduce using rule 12 (Inst -> Inst_Case .)
    VAR_IDENTIFIER  reduce using rule 12 (Inst -> Inst_Case .)
    LPAREN          reduce using rule 12 (Inst -> Inst_Case .)
    NUMBER          reduce using rule 12 (Inst -> Inst_Case .)


state 23

    (16) Lista_Variables -> VAR_IDENTIFIER .
    (17) Lista_Variables -> VAR_IDENTIFIER . COMMA Lista_Variables

    INST_AS         reduce using rule 16 (Lista_Variables -> VAR_IDENTIFIER .)
    COMMA           shift and go to state 51


state 24

    (15) Lista_Declare -> Lista_Variables . INST_AS Tipo

    INST_AS         shift and go to state 52


state 25

    (14) Inst_Declare -> INST_DECLARE Lista_Declare .

    $end            reduce using rule 14 (Inst_Declare -> INST_DECLARE Lista_Declare .)
    SEMICOLON       reduce using rule 14 (Inst_Declare -> INST_DECLARE Lista_Declare .)
    INST_END        reduce using rule 14 (Inst_Declare -> INST_DECLARE Lista_Declare .)
    INST_ELSE       reduce using rule 14 (Inst_Declare -> INST_DECLARE Lista_Declare .)
    VAR_IDENTIFIER  reduce using rule 14 (Inst_Declare -> INST_DECLARE Lista_Declare .)
    LPAREN          reduce using rule 14 (Inst_Declare -> INST_DECLARE Lista_Declare .)
    NUMBER          reduce using rule 14 (Inst_Declare -> INST_DECLARE Lista_Declare .)


state 26

    (41) Term -> Factor .

    TIMES           reduce using rule 41 (Term -> Factor .)
    DIVIDE          reduce using rule 41 (Term -> Factor .)
    PLUS            reduce using rule 41 (Term -> Factor .)
    MINUS           reduce using rule 41 (Term -> Factor .)
    EQEQ            reduce using rule 41 (Term -> Factor .)
    NEQEQ           reduce using rule 41 (Term -> Factor .)
    GREAT           reduce using rule 41 (Term -> Factor .)
    LESS            reduce using rule 41 (Term -> Factor .)
    GREATEQ         reduce using rule 41 (Term -> Factor .)
    LESSEQ          reduce using rule 41 (Term -> Factor .)
    INTERSECTION    reduce using rule 41 (Term -> Factor .)
    COMMA           reduce using rule 41 (Term -> Factor .)
    $end            reduce using rule 41 (Term -> Factor .)
    SEMICOLON       reduce using rule 41 (Term -> Factor .)
    INST_END        reduce using rule 41 (Term -> Factor .)
    INST_ELSE       reduce using rule 41 (Term -> Factor .)
    VAR_IDENTIFIER  reduce using rule 41 (Term -> Factor .)
    LPAREN          reduce using rule 41 (Term -> Factor .)
    NUMBER          reduce using rule 41 (Term -> Factor .)
    RPAREN          reduce using rule 41 (Term -> Factor .)
    -               reduce using rule 41 (Term -> Factor .)
    INST_DO         reduce using rule 41 (Term -> Factor .)
    RANGE           reduce using rule 41 (Term -> Factor .)
    INST_OF         reduce using rule 41 (Term -> Factor .)
    AND             reduce using rule 41 (Term -> Factor .)
    OR              reduce using rule 41 (Term -> Factor .)
    INST_THEN       reduce using rule 41 (Term -> Factor .)


state 27

    (42) Factor -> NUMBER .

    TIMES           reduce using rule 42 (Factor -> NUMBER .)
    DIVIDE          reduce using rule 42 (Factor -> NUMBER .)
    PLUS            reduce using rule 42 (Factor -> NUMBER .)
    MINUS           reduce using rule 42 (Factor -> NUMBER .)
    EQEQ            reduce using rule 42 (Factor -> NUMBER .)
    NEQEQ           reduce using rule 42 (Factor -> NUMBER .)
    GREAT           reduce using rule 42 (Factor -> NUMBER .)
    LESS            reduce using rule 42 (Factor -> NUMBER .)
    GREATEQ         reduce using rule 42 (Factor -> NUMBER .)
    LESSEQ          reduce using rule 42 (Factor -> NUMBER .)
    RANGE           reduce using rule 42 (Factor -> NUMBER .)
    COMMA           reduce using rule 42 (Factor -> NUMBER .)
    $end            reduce using rule 42 (Factor -> NUMBER .)
    SEMICOLON       reduce using rule 42 (Factor -> NUMBER .)
    INST_END        reduce using rule 42 (Factor -> NUMBER .)
    INST_ELSE       reduce using rule 42 (Factor -> NUMBER .)
    VAR_IDENTIFIER  reduce using rule 42 (Factor -> NUMBER .)
    LPAREN          reduce using rule 42 (Factor -> NUMBER .)
    NUMBER          reduce using rule 42 (Factor -> NUMBER .)
    INTERSECTION    reduce using rule 42 (Factor -> NUMBER .)
    RPAREN          reduce using rule 42 (Factor -> NUMBER .)
    -               reduce using rule 42 (Factor -> NUMBER .)
    INST_DO         reduce using rule 42 (Factor -> NUMBER .)
    INST_OF         reduce using rule 42 (Factor -> NUMBER .)
    AND             reduce using rule 42 (Factor -> NUMBER .)
    OR              reduce using rule 42 (Factor -> NUMBER .)
    INST_THEN       reduce using rule 42 (Factor -> NUMBER .)


state 28

    (49) Rango -> RangoF .

    PLUS            reduce using rule 49 (Rango -> RangoF .)
    TIMES           reduce using rule 49 (Rango -> RangoF .)
    INTERSECTION    reduce using rule 49 (Rango -> RangoF .)
    $end            reduce using rule 49 (Rango -> RangoF .)
    SEMICOLON       reduce using rule 49 (Rango -> RangoF .)
    INST_END        reduce using rule 49 (Rango -> RangoF .)
    INST_ELSE       reduce using rule 49 (Rango -> RangoF .)
    VAR_IDENTIFIER  reduce using rule 49 (Rango -> RangoF .)
    LPAREN          reduce using rule 49 (Rango -> RangoF .)
    NUMBER          reduce using rule 49 (Rango -> RangoF .)
    COMMA           reduce using rule 49 (Rango -> RangoF .)
    RPAREN          reduce using rule 49 (Rango -> RangoF .)
    -               reduce using rule 49 (Rango -> RangoF .)
    INST_DO         reduce using rule 49 (Rango -> RangoF .)


state 29

    (23) Expresion -> Operacion_booleana .
    (26) Operacion_booleana -> Operacion_booleana . AND Operacion_booleana
    (27) Operacion_booleana -> Operacion_booleana . OR Operacion_booleana

    COMMA           reduce using rule 23 (Expresion -> Operacion_booleana .)
    $end            reduce using rule 23 (Expresion -> Operacion_booleana .)
    SEMICOLON       reduce using rule 23 (Expresion -> Operacion_booleana .)
    INST_END        reduce using rule 23 (Expresion -> Operacion_booleana .)
    INST_ELSE       reduce using rule 23 (Expresion -> Operacion_booleana .)
    VAR_IDENTIFIER  reduce using rule 23 (Expresion -> Operacion_booleana .)
    LPAREN          reduce using rule 23 (Expresion -> Operacion_booleana .)
    NUMBER          reduce using rule 23 (Expresion -> Operacion_booleana .)
    AND             shift and go to state 53
    OR              shift and go to state 54


state 30

    (54) Lista_Aux -> Expresion .
    (56) Lista_Aux -> Expresion . COMMA Lista_Aux

    $end            reduce using rule 54 (Lista_Aux -> Expresion .)
    SEMICOLON       reduce using rule 54 (Lista_Aux -> Expresion .)
    INST_END        reduce using rule 54 (Lista_Aux -> Expresion .)
    INST_ELSE       reduce using rule 54 (Lista_Aux -> Expresion .)
    VAR_IDENTIFIER  reduce using rule 54 (Lista_Aux -> Expresion .)
    LPAREN          reduce using rule 54 (Lista_Aux -> Expresion .)
    NUMBER          reduce using rule 54 (Lista_Aux -> Expresion .)
    COMMA           shift and go to state 55


state 31

    (38) Operacion_binaria -> Term .
    (39) Term -> Term . TIMES Factor
    (40) Term -> Term . DIVIDE Factor

  ! shift/reduce conflict for TIMES resolved as shift
    RANGE           reduce using rule 38 (Operacion_binaria -> Term .)
    PLUS            reduce using rule 38 (Operacion_binaria -> Term .)
    MINUS           reduce using rule 38 (Operacion_binaria -> Term .)
    EQEQ            reduce using rule 38 (Operacion_binaria -> Term .)
    NEQEQ           reduce using rule 38 (Operacion_binaria -> Term .)
    GREAT           reduce using rule 38 (Operacion_binaria -> Term .)
    LESS            reduce using rule 38 (Operacion_binaria -> Term .)
    GREATEQ         reduce using rule 38 (Operacion_binaria -> Term .)
    LESSEQ          reduce using rule 38 (Operacion_binaria -> Term .)
    INST_OF         reduce using rule 38 (Operacion_binaria -> Term .)
    COMMA           reduce using rule 38 (Operacion_binaria -> Term .)
    $end            reduce using rule 38 (Operacion_binaria -> Term .)
    SEMICOLON       reduce using rule 38 (Operacion_binaria -> Term .)
    INST_END        reduce using rule 38 (Operacion_binaria -> Term .)
    INST_ELSE       reduce using rule 38 (Operacion_binaria -> Term .)
    VAR_IDENTIFIER  reduce using rule 38 (Operacion_binaria -> Term .)
    LPAREN          reduce using rule 38 (Operacion_binaria -> Term .)
    NUMBER          reduce using rule 38 (Operacion_binaria -> Term .)
    AND             reduce using rule 38 (Operacion_binaria -> Term .)
    OR              reduce using rule 38 (Operacion_binaria -> Term .)
    INST_DO         reduce using rule 38 (Operacion_binaria -> Term .)
    INST_THEN       reduce using rule 38 (Operacion_binaria -> Term .)
    RPAREN          reduce using rule 38 (Operacion_binaria -> Term .)
    INTERSECTION    reduce using rule 38 (Operacion_binaria -> Term .)
    -               reduce using rule 38 (Operacion_binaria -> Term .)
    TIMES           shift and go to state 57
    DIVIDE          shift and go to state 56

  ! TIMES           [ reduce using rule 38 (Operacion_binaria -> Term .) ]


state 32

    (55) Lista_Aux -> STRING .
    (57) Lista_Aux -> STRING . COMMA Lista_Aux

    $end            reduce using rule 55 (Lista_Aux -> STRING .)
    SEMICOLON       reduce using rule 55 (Lista_Aux -> STRING .)
    INST_END        reduce using rule 55 (Lista_Aux -> STRING .)
    INST_ELSE       reduce using rule 55 (Lista_Aux -> STRING .)
    VAR_IDENTIFIER  reduce using rule 55 (Lista_Aux -> STRING .)
    LPAREN          reduce using rule 55 (Lista_Aux -> STRING .)
    NUMBER          reduce using rule 55 (Lista_Aux -> STRING .)
    COMMA           shift and go to state 58


state 33

    (43) Factor -> VAR_IDENTIFIER .

    TIMES           reduce using rule 43 (Factor -> VAR_IDENTIFIER .)
    DIVIDE          reduce using rule 43 (Factor -> VAR_IDENTIFIER .)
    PLUS            reduce using rule 43 (Factor -> VAR_IDENTIFIER .)
    MINUS           reduce using rule 43 (Factor -> VAR_IDENTIFIER .)
    EQEQ            reduce using rule 43 (Factor -> VAR_IDENTIFIER .)
    NEQEQ           reduce using rule 43 (Factor -> VAR_IDENTIFIER .)
    GREAT           reduce using rule 43 (Factor -> VAR_IDENTIFIER .)
    LESS            reduce using rule 43 (Factor -> VAR_IDENTIFIER .)
    GREATEQ         reduce using rule 43 (Factor -> VAR_IDENTIFIER .)
    LESSEQ          reduce using rule 43 (Factor -> VAR_IDENTIFIER .)
    RANGE           reduce using rule 43 (Factor -> VAR_IDENTIFIER .)
    COMMA           reduce using rule 43 (Factor -> VAR_IDENTIFIER .)
    $end            reduce using rule 43 (Factor -> VAR_IDENTIFIER .)
    SEMICOLON       reduce using rule 43 (Factor -> VAR_IDENTIFIER .)
    INST_END        reduce using rule 43 (Factor -> VAR_IDENTIFIER .)
    INST_ELSE       reduce using rule 43 (Factor -> VAR_IDENTIFIER .)
    VAR_IDENTIFIER  reduce using rule 43 (Factor -> VAR_IDENTIFIER .)
    LPAREN          reduce using rule 43 (Factor -> VAR_IDENTIFIER .)
    NUMBER          reduce using rule 43 (Factor -> VAR_IDENTIFIER .)
    INTERSECTION    reduce using rule 43 (Factor -> VAR_IDENTIFIER .)
    RPAREN          reduce using rule 43 (Factor -> VAR_IDENTIFIER .)
    -               reduce using rule 43 (Factor -> VAR_IDENTIFIER .)
    INST_DO         reduce using rule 43 (Factor -> VAR_IDENTIFIER .)
    INST_OF         reduce using rule 43 (Factor -> VAR_IDENTIFIER .)
    AND             reduce using rule 43 (Factor -> VAR_IDENTIFIER .)
    OR              reduce using rule 43 (Factor -> VAR_IDENTIFIER .)
    INST_THEN       reduce using rule 43 (Factor -> VAR_IDENTIFIER .)


state 34

    (50) RangoF -> LPAREN . Rango RPAREN
    (44) Factor -> LPAREN . Operacion_binaria RPAREN
    (45) Rango -> . Operacion_binaria RANGE Operacion_binaria
    (46) Rango -> . Rango PLUS Rango
    (47) Rango -> . Rango TIMES Operacion_binaria
    (48) Rango -> . Rango INTERSECTION Rango
    (49) Rango -> . RangoF
    (36) Operacion_binaria -> . Operacion_binaria PLUS Term
    (37) Operacion_binaria -> . Operacion_binaria MINUS Term
    (38) Operacion_binaria -> . Term
    (50) RangoF -> . LPAREN Rango RPAREN
    (39) Term -> . Term TIMES Factor
    (40) Term -> . Term DIVIDE Factor
    (41) Term -> . Factor
    (42) Factor -> . NUMBER
    (43) Factor -> . VAR_IDENTIFIER
    (44) Factor -> . LPAREN Operacion_binaria RPAREN

    LPAREN          shift and go to state 34
    NUMBER          shift and go to state 27
    VAR_IDENTIFIER  shift and go to state 33

    Rango                          shift and go to state 60
    Operacion_binaria              shift and go to state 59
    Factor                         shift and go to state 26
    Term                           shift and go to state 31
    RangoF                         shift and go to state 28

state 35

    (24) Expresion -> Rango .
    (46) Rango -> Rango . PLUS Rango
    (47) Rango -> Rango . TIMES Operacion_binaria
    (48) Rango -> Rango . INTERSECTION Rango

    COMMA           reduce using rule 24 (Expresion -> Rango .)
    $end            reduce using rule 24 (Expresion -> Rango .)
    SEMICOLON       reduce using rule 24 (Expresion -> Rango .)
    INST_END        reduce using rule 24 (Expresion -> Rango .)
    INST_ELSE       reduce using rule 24 (Expresion -> Rango .)
    VAR_IDENTIFIER  reduce using rule 24 (Expresion -> Rango .)
    LPAREN          reduce using rule 24 (Expresion -> Rango .)
    NUMBER          reduce using rule 24 (Expresion -> Rango .)
    PLUS            shift and go to state 62
    TIMES           shift and go to state 63
    INTERSECTION    shift and go to state 61


state 36

    (22) Expresion -> Operacion_binaria .
    (36) Operacion_binaria -> Operacion_binaria . PLUS Term
    (37) Operacion_binaria -> Operacion_binaria . MINUS Term
    (25) Operacion_booleana -> Operacion_binaria . Opr_bool Operacion_binaria
    (45) Rango -> Operacion_binaria . RANGE Operacion_binaria
    (30) Opr_bool -> . EQEQ
    (31) Opr_bool -> . NEQEQ
    (32) Opr_bool -> . GREAT
    (33) Opr_bool -> . LESS
    (34) Opr_bool -> . GREATEQ
    (35) Opr_bool -> . LESSEQ

    COMMA           reduce using rule 22 (Expresion -> Operacion_binaria .)
    $end            reduce using rule 22 (Expresion -> Operacion_binaria .)
    SEMICOLON       reduce using rule 22 (Expresion -> Operacion_binaria .)
    INST_END        reduce using rule 22 (Expresion -> Operacion_binaria .)
    INST_ELSE       reduce using rule 22 (Expresion -> Operacion_binaria .)
    VAR_IDENTIFIER  reduce using rule 22 (Expresion -> Operacion_binaria .)
    LPAREN          reduce using rule 22 (Expresion -> Operacion_binaria .)
    NUMBER          reduce using rule 22 (Expresion -> Operacion_binaria .)
    PLUS            shift and go to state 72
    MINUS           shift and go to state 73
    RANGE           shift and go to state 70
    EQEQ            shift and go to state 69
    NEQEQ           shift and go to state 66
    GREAT           shift and go to state 65
    LESS            shift and go to state 68
    GREATEQ         shift and go to state 64
    LESSEQ          shift and go to state 71

    Opr_bool                       shift and go to state 67

state 37

    (29) Operacion_booleana -> f .

    AND             reduce using rule 29 (Operacion_booleana -> f .)
    OR              reduce using rule 29 (Operacion_booleana -> f .)
    COMMA           reduce using rule 29 (Operacion_booleana -> f .)
    $end            reduce using rule 29 (Operacion_booleana -> f .)
    SEMICOLON       reduce using rule 29 (Operacion_booleana -> f .)
    INST_END        reduce using rule 29 (Operacion_booleana -> f .)
    INST_ELSE       reduce using rule 29 (Operacion_booleana -> f .)
    VAR_IDENTIFIER  reduce using rule 29 (Operacion_booleana -> f .)
    LPAREN          reduce using rule 29 (Operacion_booleana -> f .)
    NUMBER          reduce using rule 29 (Operacion_booleana -> f .)
    INST_DO         reduce using rule 29 (Operacion_booleana -> f .)
    INST_THEN       reduce using rule 29 (Operacion_booleana -> f .)


state 38

    (28) Operacion_booleana -> t .

    AND             reduce using rule 28 (Operacion_booleana -> t .)
    OR              reduce using rule 28 (Operacion_booleana -> t .)
    COMMA           reduce using rule 28 (Operacion_booleana -> t .)
    $end            reduce using rule 28 (Operacion_booleana -> t .)
    SEMICOLON       reduce using rule 28 (Operacion_booleana -> t .)
    INST_END        reduce using rule 28 (Operacion_booleana -> t .)
    INST_ELSE       reduce using rule 28 (Operacion_booleana -> t .)
    VAR_IDENTIFIER  reduce using rule 28 (Operacion_booleana -> t .)
    LPAREN          reduce using rule 28 (Operacion_booleana -> t .)
    NUMBER          reduce using rule 28 (Operacion_booleana -> t .)
    INST_DO         reduce using rule 28 (Operacion_booleana -> t .)
    INST_THEN       reduce using rule 28 (Operacion_booleana -> t .)


state 39

    (52) Inst_Salida -> INST_WRITE Lista_Aux .

    $end            reduce using rule 52 (Inst_Salida -> INST_WRITE Lista_Aux .)
    SEMICOLON       reduce using rule 52 (Inst_Salida -> INST_WRITE Lista_Aux .)
    INST_END        reduce using rule 52 (Inst_Salida -> INST_WRITE Lista_Aux .)
    INST_ELSE       reduce using rule 52 (Inst_Salida -> INST_WRITE Lista_Aux .)
    VAR_IDENTIFIER  reduce using rule 52 (Inst_Salida -> INST_WRITE Lista_Aux .)
    LPAREN          reduce using rule 52 (Inst_Salida -> INST_WRITE Lista_Aux .)
    NUMBER          reduce using rule 52 (Inst_Salida -> INST_WRITE Lista_Aux .)


state 40

    (25) Operacion_booleana -> Operacion_binaria . Opr_bool Operacion_binaria
    (36) Operacion_binaria -> Operacion_binaria . PLUS Term
    (37) Operacion_binaria -> Operacion_binaria . MINUS Term
    (30) Opr_bool -> . EQEQ
    (31) Opr_bool -> . NEQEQ
    (32) Opr_bool -> . GREAT
    (33) Opr_bool -> . LESS
    (34) Opr_bool -> . GREATEQ
    (35) Opr_bool -> . LESSEQ

    PLUS            shift and go to state 72
    MINUS           shift and go to state 73
    EQEQ            shift and go to state 69
    NEQEQ           shift and go to state 66
    GREAT           shift and go to state 65
    LESS            shift and go to state 68
    GREATEQ         shift and go to state 64
    LESSEQ          shift and go to state 71

    Opr_bool                       shift and go to state 67

state 41

    (44) Factor -> LPAREN . Operacion_binaria RPAREN
    (36) Operacion_binaria -> . Operacion_binaria PLUS Term
    (37) Operacion_binaria -> . Operacion_binaria MINUS Term
    (38) Operacion_binaria -> . Term
    (39) Term -> . Term TIMES Factor
    (40) Term -> . Term DIVIDE Factor
    (41) Term -> . Factor
    (42) Factor -> . NUMBER
    (43) Factor -> . VAR_IDENTIFIER
    (44) Factor -> . LPAREN Operacion_binaria RPAREN

    NUMBER          shift and go to state 27
    VAR_IDENTIFIER  shift and go to state 33
    LPAREN          shift and go to state 41

    Operacion_binaria              shift and go to state 74
    Term                           shift and go to state 31
    Factor                         shift and go to state 26

state 42

    (65) Inst_While -> INST_WHILE Operacion_booleana . INST_DO Bloque_Inst
    (26) Operacion_booleana -> Operacion_booleana . AND Operacion_booleana
    (27) Operacion_booleana -> Operacion_booleana . OR Operacion_booleana

    INST_DO         shift and go to state 75
    AND             shift and go to state 53
    OR              shift and go to state 54


state 43

    (51) Inst_Lectura -> INST_READ VAR_IDENTIFIER .

    $end            reduce using rule 51 (Inst_Lectura -> INST_READ VAR_IDENTIFIER .)
    SEMICOLON       reduce using rule 51 (Inst_Lectura -> INST_READ VAR_IDENTIFIER .)
    INST_END        reduce using rule 51 (Inst_Lectura -> INST_READ VAR_IDENTIFIER .)
    INST_ELSE       reduce using rule 51 (Inst_Lectura -> INST_READ VAR_IDENTIFIER .)
    VAR_IDENTIFIER  reduce using rule 51 (Inst_Lectura -> INST_READ VAR_IDENTIFIER .)
    LPAREN          reduce using rule 51 (Inst_Lectura -> INST_READ VAR_IDENTIFIER .)
    NUMBER          reduce using rule 51 (Inst_Lectura -> INST_READ VAR_IDENTIFIER .)


state 44

    (4) Lista_Inst -> Inst .
    (5) Lista_Inst -> Inst . SEMICOLON Lista_Inst

    INST_END        reduce using rule 4 (Lista_Inst -> Inst .)
    SEMICOLON       shift and go to state 76


state 45

    (2) Bloque_Inst -> INST_BEGIN Lista_Inst . INST_END

    INST_END        shift and go to state 77


state 46

    (21) Inst_Asignacion -> VAR_IDENTIFIER EQUAL . Expresion
    (22) Expresion -> . Operacion_binaria
    (23) Expresion -> . Operacion_booleana
    (24) Expresion -> . Rango
    (36) Operacion_binaria -> . Operacion_binaria PLUS Term
    (37) Operacion_binaria -> . Operacion_binaria MINUS Term
    (38) Operacion_binaria -> . Term
    (25) Operacion_booleana -> . Operacion_binaria Opr_bool Operacion_binaria
    (26) Operacion_booleana -> . Operacion_booleana AND Operacion_booleana
    (27) Operacion_booleana -> . Operacion_booleana OR Operacion_booleana
    (28) Operacion_booleana -> . t
    (29) Operacion_booleana -> . f
    (45) Rango -> . Operacion_binaria RANGE Operacion_binaria
    (46) Rango -> . Rango PLUS Rango
    (47) Rango -> . Rango TIMES Operacion_binaria
    (48) Rango -> . Rango INTERSECTION Rango
    (49) Rango -> . RangoF
    (39) Term -> . Term TIMES Factor
    (40) Term -> . Term DIVIDE Factor
    (41) Term -> . Factor
    (50) RangoF -> . LPAREN Rango RPAREN
    (42) Factor -> . NUMBER
    (43) Factor -> . VAR_IDENTIFIER
    (44) Factor -> . LPAREN Operacion_binaria RPAREN

    t               shift and go to state 38
    f               shift and go to state 37
    LPAREN          shift and go to state 34
    NUMBER          shift and go to state 27
    VAR_IDENTIFIER  shift and go to state 33

    Expresion                      shift and go to state 78
    Operacion_binaria              shift and go to state 36
    Factor                         shift and go to state 26
    Term                           shift and go to state 31
    RangoF                         shift and go to state 28
    Rango                          shift and go to state 35
    Operacion_booleana             shift and go to state 29

state 47

    (60) Inst_Case -> INST_CASE Operacion_binaria . INST_OF Casos
    (36) Operacion_binaria -> Operacion_binaria . PLUS Term
    (37) Operacion_binaria -> Operacion_binaria . MINUS Term

    INST_OF         shift and go to state 79
    PLUS            shift and go to state 72
    MINUS           shift and go to state 73


state 48

    (64) Inst_For -> INST_FOR VAR_IDENTIFIER . INST_IN Rango INST_DO Bloque_Inst

    INST_IN         shift and go to state 80


state 49

    (58) Inst_If -> INST_IF Operacion_booleana . INST_THEN Bloque_Inst
    (59) Inst_If -> INST_IF Operacion_booleana . INST_THEN Bloque_Inst INST_ELSE Bloque_Inst
    (26) Operacion_booleana -> Operacion_booleana . AND Operacion_booleana
    (27) Operacion_booleana -> Operacion_booleana . OR Operacion_booleana

    INST_THEN       shift and go to state 81
    AND             shift and go to state 53
    OR              shift and go to state 54


state 50

    (53) Inst_Salida -> INST_WRITELN Lista_Aux .

    $end            reduce using rule 53 (Inst_Salida -> INST_WRITELN Lista_Aux .)
    SEMICOLON       reduce using rule 53 (Inst_Salida -> INST_WRITELN Lista_Aux .)
    INST_END        reduce using rule 53 (Inst_Salida -> INST_WRITELN Lista_Aux .)
    INST_ELSE       reduce using rule 53 (Inst_Salida -> INST_WRITELN Lista_Aux .)
    VAR_IDENTIFIER  reduce using rule 53 (Inst_Salida -> INST_WRITELN Lista_Aux .)
    LPAREN          reduce using rule 53 (Inst_Salida -> INST_WRITELN Lista_Aux .)
    NUMBER          reduce using rule 53 (Inst_Salida -> INST_WRITELN Lista_Aux .)


state 51

    (17) Lista_Variables -> VAR_IDENTIFIER COMMA . Lista_Variables
    (16) Lista_Variables -> . VAR_IDENTIFIER
    (17) Lista_Variables -> . VAR_IDENTIFIER COMMA Lista_Variables

    VAR_IDENTIFIER  shift and go to state 23

    Lista_Variables                shift and go to state 82

state 52

    (15) Lista_Declare -> Lista_Variables INST_AS . Tipo
    (18) Tipo -> . TYPEDEF_INT
    (19) Tipo -> . TYPEDEF_BOOL
    (20) Tipo -> . TYPEDEF_RANGE

    TYPEDEF_INT     shift and go to state 83
    TYPEDEF_BOOL    shift and go to state 86
    TYPEDEF_RANGE   shift and go to state 85

    Tipo                           shift and go to state 84

state 53

    (26) Operacion_booleana -> Operacion_booleana AND . Operacion_booleana
    (25) Operacion_booleana -> . Operacion_binaria Opr_bool Operacion_binaria
    (26) Operacion_booleana -> . Operacion_booleana AND Operacion_booleana
    (27) Operacion_booleana -> . Operacion_booleana OR Operacion_booleana
    (28) Operacion_booleana -> . t
    (29) Operacion_booleana -> . f
    (36) Operacion_binaria -> . Operacion_binaria PLUS Term
    (37) Operacion_binaria -> . Operacion_binaria MINUS Term
    (38) Operacion_binaria -> . Term
    (39) Term -> . Term TIMES Factor
    (40) Term -> . Term DIVIDE Factor
    (41) Term -> . Factor
    (42) Factor -> . NUMBER
    (43) Factor -> . VAR_IDENTIFIER
    (44) Factor -> . LPAREN Operacion_binaria RPAREN

    t               shift and go to state 38
    f               shift and go to state 37
    NUMBER          shift and go to state 27
    VAR_IDENTIFIER  shift and go to state 33
    LPAREN          shift and go to state 41

    Operacion_binaria              shift and go to state 40
    Term                           shift and go to state 31
    Operacion_booleana             shift and go to state 87
    Factor                         shift and go to state 26

state 54

    (27) Operacion_booleana -> Operacion_booleana OR . Operacion_booleana
    (25) Operacion_booleana -> . Operacion_binaria Opr_bool Operacion_binaria
    (26) Operacion_booleana -> . Operacion_booleana AND Operacion_booleana
    (27) Operacion_booleana -> . Operacion_booleana OR Operacion_booleana
    (28) Operacion_booleana -> . t
    (29) Operacion_booleana -> . f
    (36) Operacion_binaria -> . Operacion_binaria PLUS Term
    (37) Operacion_binaria -> . Operacion_binaria MINUS Term
    (38) Operacion_binaria -> . Term
    (39) Term -> . Term TIMES Factor
    (40) Term -> . Term DIVIDE Factor
    (41) Term -> . Factor
    (42) Factor -> . NUMBER
    (43) Factor -> . VAR_IDENTIFIER
    (44) Factor -> . LPAREN Operacion_binaria RPAREN

    t               shift and go to state 38
    f               shift and go to state 37
    NUMBER          shift and go to state 27
    VAR_IDENTIFIER  shift and go to state 33
    LPAREN          shift and go to state 41

    Operacion_binaria              shift and go to state 40
    Term                           shift and go to state 31
    Operacion_booleana             shift and go to state 88
    Factor                         shift and go to state 26

state 55

    (56) Lista_Aux -> Expresion COMMA . Lista_Aux
    (54) Lista_Aux -> . Expresion
    (55) Lista_Aux -> . STRING
    (56) Lista_Aux -> . Expresion COMMA Lista_Aux
    (57) Lista_Aux -> . STRING COMMA Lista_Aux
    (22) Expresion -> . Operacion_binaria
    (23) Expresion -> . Operacion_booleana
    (24) Expresion -> . Rango
    (36) Operacion_binaria -> . Operacion_binaria PLUS Term
    (37) Operacion_binaria -> . Operacion_binaria MINUS Term
    (38) Operacion_binaria -> . Term
    (25) Operacion_booleana -> . Operacion_binaria Opr_bool Operacion_binaria
    (26) Operacion_booleana -> . Operacion_booleana AND Operacion_booleana
    (27) Operacion_booleana -> . Operacion_booleana OR Operacion_booleana
    (28) Operacion_booleana -> . t
    (29) Operacion_booleana -> . f
    (45) Rango -> . Operacion_binaria RANGE Operacion_binaria
    (46) Rango -> . Rango PLUS Rango
    (47) Rango -> . Rango TIMES Operacion_binaria
    (48) Rango -> . Rango INTERSECTION Rango
    (49) Rango -> . RangoF
    (39) Term -> . Term TIMES Factor
    (40) Term -> . Term DIVIDE Factor
    (41) Term -> . Factor
    (50) RangoF -> . LPAREN Rango RPAREN
    (42) Factor -> . NUMBER
    (43) Factor -> . VAR_IDENTIFIER
    (44) Factor -> . LPAREN Operacion_binaria RPAREN

    STRING          shift and go to state 32
    t               shift and go to state 38
    f               shift and go to state 37
    LPAREN          shift and go to state 34
    NUMBER          shift and go to state 27
    VAR_IDENTIFIER  shift and go to state 33

    Expresion                      shift and go to state 30
    Operacion_binaria              shift and go to state 36
    RangoF                         shift and go to state 28
    Factor                         shift and go to state 26
    Term                           shift and go to state 31
    Lista_Aux                      shift and go to state 89
    Rango                          shift and go to state 35
    Operacion_booleana             shift and go to state 29

state 56

    (40) Term -> Term DIVIDE . Factor
    (42) Factor -> . NUMBER
    (43) Factor -> . VAR_IDENTIFIER
    (44) Factor -> . LPAREN Operacion_binaria RPAREN

    NUMBER          shift and go to state 27
    VAR_IDENTIFIER  shift and go to state 33
    LPAREN          shift and go to state 41

    Factor                         shift and go to state 90

state 57

    (39) Term -> Term TIMES . Factor
    (42) Factor -> . NUMBER
    (43) Factor -> . VAR_IDENTIFIER
    (44) Factor -> . LPAREN Operacion_binaria RPAREN

    NUMBER          shift and go to state 27
    VAR_IDENTIFIER  shift and go to state 33
    LPAREN          shift and go to state 41

    Factor                         shift and go to state 91

state 58

    (57) Lista_Aux -> STRING COMMA . Lista_Aux
    (54) Lista_Aux -> . Expresion
    (55) Lista_Aux -> . STRING
    (56) Lista_Aux -> . Expresion COMMA Lista_Aux
    (57) Lista_Aux -> . STRING COMMA Lista_Aux
    (22) Expresion -> . Operacion_binaria
    (23) Expresion -> . Operacion_booleana
    (24) Expresion -> . Rango
    (36) Operacion_binaria -> . Operacion_binaria PLUS Term
    (37) Operacion_binaria -> . Operacion_binaria MINUS Term
    (38) Operacion_binaria -> . Term
    (25) Operacion_booleana -> . Operacion_binaria Opr_bool Operacion_binaria
    (26) Operacion_booleana -> . Operacion_booleana AND Operacion_booleana
    (27) Operacion_booleana -> . Operacion_booleana OR Operacion_booleana
    (28) Operacion_booleana -> . t
    (29) Operacion_booleana -> . f
    (45) Rango -> . Operacion_binaria RANGE Operacion_binaria
    (46) Rango -> . Rango PLUS Rango
    (47) Rango -> . Rango TIMES Operacion_binaria
    (48) Rango -> . Rango INTERSECTION Rango
    (49) Rango -> . RangoF
    (39) Term -> . Term TIMES Factor
    (40) Term -> . Term DIVIDE Factor
    (41) Term -> . Factor
    (50) RangoF -> . LPAREN Rango RPAREN
    (42) Factor -> . NUMBER
    (43) Factor -> . VAR_IDENTIFIER
    (44) Factor -> . LPAREN Operacion_binaria RPAREN

    STRING          shift and go to state 32
    t               shift and go to state 38
    f               shift and go to state 37
    LPAREN          shift and go to state 34
    NUMBER          shift and go to state 27
    VAR_IDENTIFIER  shift and go to state 33

    Expresion                      shift and go to state 30
    Operacion_binaria              shift and go to state 36
    RangoF                         shift and go to state 28
    Factor                         shift and go to state 26
    Term                           shift and go to state 31
    Lista_Aux                      shift and go to state 92
    Rango                          shift and go to state 35
    Operacion_booleana             shift and go to state 29

state 59

    (44) Factor -> LPAREN Operacion_binaria . RPAREN
    (45) Rango -> Operacion_binaria . RANGE Operacion_binaria
    (36) Operacion_binaria -> Operacion_binaria . PLUS Term
    (37) Operacion_binaria -> Operacion_binaria . MINUS Term

    RPAREN          shift and go to state 93
    RANGE           shift and go to state 70
    PLUS            shift and go to state 72
    MINUS           shift and go to state 73


state 60

    (50) RangoF -> LPAREN Rango . RPAREN
    (46) Rango -> Rango . PLUS Rango
    (47) Rango -> Rango . TIMES Operacion_binaria
    (48) Rango -> Rango . INTERSECTION Rango

    RPAREN          shift and go to state 94
    PLUS            shift and go to state 62
    TIMES           shift and go to state 63
    INTERSECTION    shift and go to state 61


state 61

    (48) Rango -> Rango INTERSECTION . Rango
    (45) Rango -> . Operacion_binaria RANGE Operacion_binaria
    (46) Rango -> . Rango PLUS Rango
    (47) Rango -> . Rango TIMES Operacion_binaria
    (48) Rango -> . Rango INTERSECTION Rango
    (49) Rango -> . RangoF
    (36) Operacion_binaria -> . Operacion_binaria PLUS Term
    (37) Operacion_binaria -> . Operacion_binaria MINUS Term
    (38) Operacion_binaria -> . Term
    (50) RangoF -> . LPAREN Rango RPAREN
    (39) Term -> . Term TIMES Factor
    (40) Term -> . Term DIVIDE Factor
    (41) Term -> . Factor
    (42) Factor -> . NUMBER
    (43) Factor -> . VAR_IDENTIFIER
    (44) Factor -> . LPAREN Operacion_binaria RPAREN

    LPAREN          shift and go to state 34
    NUMBER          shift and go to state 27
    VAR_IDENTIFIER  shift and go to state 33

    Rango                          shift and go to state 96
    Operacion_binaria              shift and go to state 95
    Factor                         shift and go to state 26
    Term                           shift and go to state 31
    RangoF                         shift and go to state 28

state 62

    (46) Rango -> Rango PLUS . Rango
    (45) Rango -> . Operacion_binaria RANGE Operacion_binaria
    (46) Rango -> . Rango PLUS Rango
    (47) Rango -> . Rango TIMES Operacion_binaria
    (48) Rango -> . Rango INTERSECTION Rango
    (49) Rango -> . RangoF
    (36) Operacion_binaria -> . Operacion_binaria PLUS Term
    (37) Operacion_binaria -> . Operacion_binaria MINUS Term
    (38) Operacion_binaria -> . Term
    (50) RangoF -> . LPAREN Rango RPAREN
    (39) Term -> . Term TIMES Factor
    (40) Term -> . Term DIVIDE Factor
    (41) Term -> . Factor
    (42) Factor -> . NUMBER
    (43) Factor -> . VAR_IDENTIFIER
    (44) Factor -> . LPAREN Operacion_binaria RPAREN

    LPAREN          shift and go to state 34
    NUMBER          shift and go to state 27
    VAR_IDENTIFIER  shift and go to state 33

    Rango                          shift and go to state 97
    Operacion_binaria              shift and go to state 95
    Factor                         shift and go to state 26
    Term                           shift and go to state 31
    RangoF                         shift and go to state 28

state 63

    (47) Rango -> Rango TIMES . Operacion_binaria
    (36) Operacion_binaria -> . Operacion_binaria PLUS Term
    (37) Operacion_binaria -> . Operacion_binaria MINUS Term
    (38) Operacion_binaria -> . Term
    (39) Term -> . Term TIMES Factor
    (40) Term -> . Term DIVIDE Factor
    (41) Term -> . Factor
    (42) Factor -> . NUMBER
    (43) Factor -> . VAR_IDENTIFIER
    (44) Factor -> . LPAREN Operacion_binaria RPAREN

    NUMBER          shift and go to state 27
    VAR_IDENTIFIER  shift and go to state 33
    LPAREN          shift and go to state 41

    Operacion_binaria              shift and go to state 98
    Term                           shift and go to state 31
    Factor                         shift and go to state 26

state 64

    (34) Opr_bool -> GREATEQ .

    NUMBER          reduce using rule 34 (Opr_bool -> GREATEQ .)
    VAR_IDENTIFIER  reduce using rule 34 (Opr_bool -> GREATEQ .)
    LPAREN          reduce using rule 34 (Opr_bool -> GREATEQ .)


state 65

    (32) Opr_bool -> GREAT .

    NUMBER          reduce using rule 32 (Opr_bool -> GREAT .)
    VAR_IDENTIFIER  reduce using rule 32 (Opr_bool -> GREAT .)
    LPAREN          reduce using rule 32 (Opr_bool -> GREAT .)


state 66

    (31) Opr_bool -> NEQEQ .

    NUMBER          reduce using rule 31 (Opr_bool -> NEQEQ .)
    VAR_IDENTIFIER  reduce using rule 31 (Opr_bool -> NEQEQ .)
    LPAREN          reduce using rule 31 (Opr_bool -> NEQEQ .)


state 67

    (25) Operacion_booleana -> Operacion_binaria Opr_bool . Operacion_binaria
    (36) Operacion_binaria -> . Operacion_binaria PLUS Term
    (37) Operacion_binaria -> . Operacion_binaria MINUS Term
    (38) Operacion_binaria -> . Term
    (39) Term -> . Term TIMES Factor
    (40) Term -> . Term DIVIDE Factor
    (41) Term -> . Factor
    (42) Factor -> . NUMBER
    (43) Factor -> . VAR_IDENTIFIER
    (44) Factor -> . LPAREN Operacion_binaria RPAREN

    NUMBER          shift and go to state 27
    VAR_IDENTIFIER  shift and go to state 33
    LPAREN          shift and go to state 41

    Operacion_binaria              shift and go to state 99
    Term                           shift and go to state 31
    Factor                         shift and go to state 26

state 68

    (33) Opr_bool -> LESS .

    NUMBER          reduce using rule 33 (Opr_bool -> LESS .)
    VAR_IDENTIFIER  reduce using rule 33 (Opr_bool -> LESS .)
    LPAREN          reduce using rule 33 (Opr_bool -> LESS .)


state 69

    (30) Opr_bool -> EQEQ .

    NUMBER          reduce using rule 30 (Opr_bool -> EQEQ .)
    VAR_IDENTIFIER  reduce using rule 30 (Opr_bool -> EQEQ .)
    LPAREN          reduce using rule 30 (Opr_bool -> EQEQ .)


state 70

    (45) Rango -> Operacion_binaria RANGE . Operacion_binaria
    (36) Operacion_binaria -> . Operacion_binaria PLUS Term
    (37) Operacion_binaria -> . Operacion_binaria MINUS Term
    (38) Operacion_binaria -> . Term
    (39) Term -> . Term TIMES Factor
    (40) Term -> . Term DIVIDE Factor
    (41) Term -> . Factor
    (42) Factor -> . NUMBER
    (43) Factor -> . VAR_IDENTIFIER
    (44) Factor -> . LPAREN Operacion_binaria RPAREN

    NUMBER          shift and go to state 27
    VAR_IDENTIFIER  shift and go to state 33
    LPAREN          shift and go to state 41

    Operacion_binaria              shift and go to state 100
    Term                           shift and go to state 31
    Factor                         shift and go to state 26

state 71

    (35) Opr_bool -> LESSEQ .

    NUMBER          reduce using rule 35 (Opr_bool -> LESSEQ .)
    VAR_IDENTIFIER  reduce using rule 35 (Opr_bool -> LESSEQ .)
    LPAREN          reduce using rule 35 (Opr_bool -> LESSEQ .)


state 72

    (36) Operacion_binaria -> Operacion_binaria PLUS . Term
    (39) Term -> . Term TIMES Factor
    (40) Term -> . Term DIVIDE Factor
    (41) Term -> . Factor
    (42) Factor -> . NUMBER
    (43) Factor -> . VAR_IDENTIFIER
    (44) Factor -> . LPAREN Operacion_binaria RPAREN

    NUMBER          shift and go to state 27
    VAR_IDENTIFIER  shift and go to state 33
    LPAREN          shift and go to state 41

    Term                           shift and go to state 101
    Factor                         shift and go to state 26

state 73

    (37) Operacion_binaria -> Operacion_binaria MINUS . Term
    (39) Term -> . Term TIMES Factor
    (40) Term -> . Term DIVIDE Factor
    (41) Term -> . Factor
    (42) Factor -> . NUMBER
    (43) Factor -> . VAR_IDENTIFIER
    (44) Factor -> . LPAREN Operacion_binaria RPAREN

    NUMBER          shift and go to state 27
    VAR_IDENTIFIER  shift and go to state 33
    LPAREN          shift and go to state 41

    Term                           shift and go to state 102
    Factor                         shift and go to state 26

state 74

    (44) Factor -> LPAREN Operacion_binaria . RPAREN
    (36) Operacion_binaria -> Operacion_binaria . PLUS Term
    (37) Operacion_binaria -> Operacion_binaria . MINUS Term

    RPAREN          shift and go to state 93
    PLUS            shift and go to state 72
    MINUS           shift and go to state 73


state 75

    (65) Inst_While -> INST_WHILE Operacion_booleana INST_DO . Bloque_Inst
    (2) Bloque_Inst -> . INST_BEGIN Lista_Inst INST_END
    (3) Bloque_Inst -> . Inst
    (6) Inst -> . Inst_Declare
    (7) Inst -> . Inst_Asignacion
    (8) Inst -> . Inst_Lectura
    (9) Inst -> . Inst_For
    (10) Inst -> . Inst_While
    (11) Inst -> . Inst_If
    (12) Inst -> . Inst_Case
    (13) Inst -> . Inst_Salida
    (14) Inst_Declare -> . INST_DECLARE Lista_Declare
    (21) Inst_Asignacion -> . VAR_IDENTIFIER EQUAL Expresion
    (51) Inst_Lectura -> . INST_READ VAR_IDENTIFIER
    (64) Inst_For -> . INST_FOR VAR_IDENTIFIER INST_IN Rango INST_DO Bloque_Inst
    (65) Inst_While -> . INST_WHILE Operacion_booleana INST_DO Bloque_Inst
    (58) Inst_If -> . INST_IF Operacion_booleana INST_THEN Bloque_Inst
    (59) Inst_If -> . INST_IF Operacion_booleana INST_THEN Bloque_Inst INST_ELSE Bloque_Inst
    (60) Inst_Case -> . INST_CASE Operacion_binaria INST_OF Casos
    (52) Inst_Salida -> . INST_WRITE Lista_Aux
    (53) Inst_Salida -> . INST_WRITELN Lista_Aux

    INST_BEGIN      shift and go to state 9
    INST_DECLARE    shift and go to state 3
    VAR_IDENTIFIER  shift and go to state 15
    INST_READ       shift and go to state 8
    INST_FOR        shift and go to state 18
    INST_WHILE      shift and go to state 7
    INST_IF         shift and go to state 19
    INST_CASE       shift and go to state 17
    INST_WRITE      shift and go to state 4
    INST_WRITELN    shift and go to state 20

    Inst_Salida                    shift and go to state 6
    Inst_Declare                   shift and go to state 10
    Bloque_Inst                    shift and go to state 103
    Inst_If                        shift and go to state 16
    Inst_For                       shift and go to state 11
    Inst_While                     shift and go to state 13
    Inst                           shift and go to state 12
    Inst_Asignacion                shift and go to state 21
    Inst_Case                      shift and go to state 22
    Inst_Lectura                   shift and go to state 14

state 76

    (5) Lista_Inst -> Inst SEMICOLON . Lista_Inst
    (4) Lista_Inst -> . Inst
    (5) Lista_Inst -> . Inst SEMICOLON Lista_Inst
    (6) Inst -> . Inst_Declare
    (7) Inst -> . Inst_Asignacion
    (8) Inst -> . Inst_Lectura
    (9) Inst -> . Inst_For
    (10) Inst -> . Inst_While
    (11) Inst -> . Inst_If
    (12) Inst -> . Inst_Case
    (13) Inst -> . Inst_Salida
    (14) Inst_Declare -> . INST_DECLARE Lista_Declare
    (21) Inst_Asignacion -> . VAR_IDENTIFIER EQUAL Expresion
    (51) Inst_Lectura -> . INST_READ VAR_IDENTIFIER
    (64) Inst_For -> . INST_FOR VAR_IDENTIFIER INST_IN Rango INST_DO Bloque_Inst
    (65) Inst_While -> . INST_WHILE Operacion_booleana INST_DO Bloque_Inst
    (58) Inst_If -> . INST_IF Operacion_booleana INST_THEN Bloque_Inst
    (59) Inst_If -> . INST_IF Operacion_booleana INST_THEN Bloque_Inst INST_ELSE Bloque_Inst
    (60) Inst_Case -> . INST_CASE Operacion_binaria INST_OF Casos
    (52) Inst_Salida -> . INST_WRITE Lista_Aux
    (53) Inst_Salida -> . INST_WRITELN Lista_Aux

    INST_DECLARE    shift and go to state 3
    VAR_IDENTIFIER  shift and go to state 15
    INST_READ       shift and go to state 8
    INST_FOR        shift and go to state 18
    INST_WHILE      shift and go to state 7
    INST_IF         shift and go to state 19
    INST_CASE       shift and go to state 17
    INST_WRITE      shift and go to state 4
    INST_WRITELN    shift and go to state 20

    Inst_Salida                    shift and go to state 6
    Inst_Declare                   shift and go to state 10
    Inst_If                        shift and go to state 16
    Inst_For                       shift and go to state 11
    Inst_While                     shift and go to state 13
    Inst                           shift and go to state 44
    Inst_Asignacion                shift and go to state 21
    Inst_Case                      shift and go to state 22
    Inst_Lectura                   shift and go to state 14
    Lista_Inst                     shift and go to state 104

state 77

    (2) Bloque_Inst -> INST_BEGIN Lista_Inst INST_END .

    $end            reduce using rule 2 (Bloque_Inst -> INST_BEGIN Lista_Inst INST_END .)
    SEMICOLON       reduce using rule 2 (Bloque_Inst -> INST_BEGIN Lista_Inst INST_END .)
    INST_END        reduce using rule 2 (Bloque_Inst -> INST_BEGIN Lista_Inst INST_END .)
    INST_ELSE       reduce using rule 2 (Bloque_Inst -> INST_BEGIN Lista_Inst INST_END .)
    VAR_IDENTIFIER  reduce using rule 2 (Bloque_Inst -> INST_BEGIN Lista_Inst INST_END .)
    LPAREN          reduce using rule 2 (Bloque_Inst -> INST_BEGIN Lista_Inst INST_END .)
    NUMBER          reduce using rule 2 (Bloque_Inst -> INST_BEGIN Lista_Inst INST_END .)


state 78

    (21) Inst_Asignacion -> VAR_IDENTIFIER EQUAL Expresion .

    $end            reduce using rule 21 (Inst_Asignacion -> VAR_IDENTIFIER EQUAL Expresion .)
    SEMICOLON       reduce using rule 21 (Inst_Asignacion -> VAR_IDENTIFIER EQUAL Expresion .)
    INST_END        reduce using rule 21 (Inst_Asignacion -> VAR_IDENTIFIER EQUAL Expresion .)
    INST_ELSE       reduce using rule 21 (Inst_Asignacion -> VAR_IDENTIFIER EQUAL Expresion .)
    VAR_IDENTIFIER  reduce using rule 21 (Inst_Asignacion -> VAR_IDENTIFIER EQUAL Expresion .)
    LPAREN          reduce using rule 21 (Inst_Asignacion -> VAR_IDENTIFIER EQUAL Expresion .)
    NUMBER          reduce using rule 21 (Inst_Asignacion -> VAR_IDENTIFIER EQUAL Expresion .)


state 79

    (60) Inst_Case -> INST_CASE Operacion_binaria INST_OF . Casos
    (61) Casos -> . VAR_IDENTIFIER - > Bloque_Inst
    (62) Casos -> . Rango - > Bloque_Inst
    (63) Casos -> . Casos Casos
    (45) Rango -> . Operacion_binaria RANGE Operacion_binaria
    (46) Rango -> . Rango PLUS Rango
    (47) Rango -> . Rango TIMES Operacion_binaria
    (48) Rango -> . Rango INTERSECTION Rango
    (49) Rango -> . RangoF
    (36) Operacion_binaria -> . Operacion_binaria PLUS Term
    (37) Operacion_binaria -> . Operacion_binaria MINUS Term
    (38) Operacion_binaria -> . Term
    (50) RangoF -> . LPAREN Rango RPAREN
    (39) Term -> . Term TIMES Factor
    (40) Term -> . Term DIVIDE Factor
    (41) Term -> . Factor
    (42) Factor -> . NUMBER
    (43) Factor -> . VAR_IDENTIFIER
    (44) Factor -> . LPAREN Operacion_binaria RPAREN

    VAR_IDENTIFIER  shift and go to state 105
    LPAREN          shift and go to state 34
    NUMBER          shift and go to state 27

    Operacion_binaria              shift and go to state 95
    Factor                         shift and go to state 26
    Term                           shift and go to state 31
    RangoF                         shift and go to state 28
    Rango                          shift and go to state 106
    Casos                          shift and go to state 107

state 80

    (64) Inst_For -> INST_FOR VAR_IDENTIFIER INST_IN . Rango INST_DO Bloque_Inst
    (45) Rango -> . Operacion_binaria RANGE Operacion_binaria
    (46) Rango -> . Rango PLUS Rango
    (47) Rango -> . Rango TIMES Operacion_binaria
    (48) Rango -> . Rango INTERSECTION Rango
    (49) Rango -> . RangoF
    (36) Operacion_binaria -> . Operacion_binaria PLUS Term
    (37) Operacion_binaria -> . Operacion_binaria MINUS Term
    (38) Operacion_binaria -> . Term
    (50) RangoF -> . LPAREN Rango RPAREN
    (39) Term -> . Term TIMES Factor
    (40) Term -> . Term DIVIDE Factor
    (41) Term -> . Factor
    (42) Factor -> . NUMBER
    (43) Factor -> . VAR_IDENTIFIER
    (44) Factor -> . LPAREN Operacion_binaria RPAREN

    LPAREN          shift and go to state 34
    NUMBER          shift and go to state 27
    VAR_IDENTIFIER  shift and go to state 33

    Operacion_binaria              shift and go to state 95
    RangoF                         shift and go to state 28
    Term                           shift and go to state 31
    Factor                         shift and go to state 26
    Rango                          shift and go to state 108

state 81

    (58) Inst_If -> INST_IF Operacion_booleana INST_THEN . Bloque_Inst
    (59) Inst_If -> INST_IF Operacion_booleana INST_THEN . Bloque_Inst INST_ELSE Bloque_Inst
    (2) Bloque_Inst -> . INST_BEGIN Lista_Inst INST_END
    (3) Bloque_Inst -> . Inst
    (6) Inst -> . Inst_Declare
    (7) Inst -> . Inst_Asignacion
    (8) Inst -> . Inst_Lectura
    (9) Inst -> . Inst_For
    (10) Inst -> . Inst_While
    (11) Inst -> . Inst_If
    (12) Inst -> . Inst_Case
    (13) Inst -> . Inst_Salida
    (14) Inst_Declare -> . INST_DECLARE Lista_Declare
    (21) Inst_Asignacion -> . VAR_IDENTIFIER EQUAL Expresion
    (51) Inst_Lectura -> . INST_READ VAR_IDENTIFIER
    (64) Inst_For -> . INST_FOR VAR_IDENTIFIER INST_IN Rango INST_DO Bloque_Inst
    (65) Inst_While -> . INST_WHILE Operacion_booleana INST_DO Bloque_Inst
    (58) Inst_If -> . INST_IF Operacion_booleana INST_THEN Bloque_Inst
    (59) Inst_If -> . INST_IF Operacion_booleana INST_THEN Bloque_Inst INST_ELSE Bloque_Inst
    (60) Inst_Case -> . INST_CASE Operacion_binaria INST_OF Casos
    (52) Inst_Salida -> . INST_WRITE Lista_Aux
    (53) Inst_Salida -> . INST_WRITELN Lista_Aux

    INST_BEGIN      shift and go to state 9
    INST_DECLARE    shift and go to state 3
    VAR_IDENTIFIER  shift and go to state 15
    INST_READ       shift and go to state 8
    INST_FOR        shift and go to state 18
    INST_WHILE      shift and go to state 7
    INST_IF         shift and go to state 19
    INST_CASE       shift and go to state 17
    INST_WRITE      shift and go to state 4
    INST_WRITELN    shift and go to state 20

    Inst_Salida                    shift and go to state 6
    Inst_Declare                   shift and go to state 10
    Bloque_Inst                    shift and go to state 109
    Inst_If                        shift and go to state 16
    Inst_For                       shift and go to state 11
    Inst_While                     shift and go to state 13
    Inst                           shift and go to state 12
    Inst_Asignacion                shift and go to state 21
    Inst_Case                      shift and go to state 22
    Inst_Lectura                   shift and go to state 14

state 82

    (17) Lista_Variables -> VAR_IDENTIFIER COMMA Lista_Variables .

    INST_AS         reduce using rule 17 (Lista_Variables -> VAR_IDENTIFIER COMMA Lista_Variables .)


state 83

    (18) Tipo -> TYPEDEF_INT .

    $end            reduce using rule 18 (Tipo -> TYPEDEF_INT .)
    SEMICOLON       reduce using rule 18 (Tipo -> TYPEDEF_INT .)
    INST_END        reduce using rule 18 (Tipo -> TYPEDEF_INT .)
    INST_ELSE       reduce using rule 18 (Tipo -> TYPEDEF_INT .)
    VAR_IDENTIFIER  reduce using rule 18 (Tipo -> TYPEDEF_INT .)
    LPAREN          reduce using rule 18 (Tipo -> TYPEDEF_INT .)
    NUMBER          reduce using rule 18 (Tipo -> TYPEDEF_INT .)


state 84

    (15) Lista_Declare -> Lista_Variables INST_AS Tipo .

    $end            reduce using rule 15 (Lista_Declare -> Lista_Variables INST_AS Tipo .)
    SEMICOLON       reduce using rule 15 (Lista_Declare -> Lista_Variables INST_AS Tipo .)
    INST_END        reduce using rule 15 (Lista_Declare -> Lista_Variables INST_AS Tipo .)
    INST_ELSE       reduce using rule 15 (Lista_Declare -> Lista_Variables INST_AS Tipo .)
    VAR_IDENTIFIER  reduce using rule 15 (Lista_Declare -> Lista_Variables INST_AS Tipo .)
    LPAREN          reduce using rule 15 (Lista_Declare -> Lista_Variables INST_AS Tipo .)
    NUMBER          reduce using rule 15 (Lista_Declare -> Lista_Variables INST_AS Tipo .)


state 85

    (20) Tipo -> TYPEDEF_RANGE .

    $end            reduce using rule 20 (Tipo -> TYPEDEF_RANGE .)
    SEMICOLON       reduce using rule 20 (Tipo -> TYPEDEF_RANGE .)
    INST_END        reduce using rule 20 (Tipo -> TYPEDEF_RANGE .)
    INST_ELSE       reduce using rule 20 (Tipo -> TYPEDEF_RANGE .)
    VAR_IDENTIFIER  reduce using rule 20 (Tipo -> TYPEDEF_RANGE .)
    LPAREN          reduce using rule 20 (Tipo -> TYPEDEF_RANGE .)
    NUMBER          reduce using rule 20 (Tipo -> TYPEDEF_RANGE .)


state 86

    (19) Tipo -> TYPEDEF_BOOL .

    $end            reduce using rule 19 (Tipo -> TYPEDEF_BOOL .)
    SEMICOLON       reduce using rule 19 (Tipo -> TYPEDEF_BOOL .)
    INST_END        reduce using rule 19 (Tipo -> TYPEDEF_BOOL .)
    INST_ELSE       reduce using rule 19 (Tipo -> TYPEDEF_BOOL .)
    VAR_IDENTIFIER  reduce using rule 19 (Tipo -> TYPEDEF_BOOL .)
    LPAREN          reduce using rule 19 (Tipo -> TYPEDEF_BOOL .)
    NUMBER          reduce using rule 19 (Tipo -> TYPEDEF_BOOL .)


state 87

    (26) Operacion_booleana -> Operacion_booleana AND Operacion_booleana .
    (26) Operacion_booleana -> Operacion_booleana . AND Operacion_booleana
    (27) Operacion_booleana -> Operacion_booleana . OR Operacion_booleana

    AND             reduce using rule 26 (Operacion_booleana -> Operacion_booleana AND Operacion_booleana .)
    OR              reduce using rule 26 (Operacion_booleana -> Operacion_booleana AND Operacion_booleana .)
    COMMA           reduce using rule 26 (Operacion_booleana -> Operacion_booleana AND Operacion_booleana .)
    $end            reduce using rule 26 (Operacion_booleana -> Operacion_booleana AND Operacion_booleana .)
    SEMICOLON       reduce using rule 26 (Operacion_booleana -> Operacion_booleana AND Operacion_booleana .)
    INST_END        reduce using rule 26 (Operacion_booleana -> Operacion_booleana AND Operacion_booleana .)
    INST_ELSE       reduce using rule 26 (Operacion_booleana -> Operacion_booleana AND Operacion_booleana .)
    VAR_IDENTIFIER  reduce using rule 26 (Operacion_booleana -> Operacion_booleana AND Operacion_booleana .)
    LPAREN          reduce using rule 26 (Operacion_booleana -> Operacion_booleana AND Operacion_booleana .)
    NUMBER          reduce using rule 26 (Operacion_booleana -> Operacion_booleana AND Operacion_booleana .)
    INST_DO         reduce using rule 26 (Operacion_booleana -> Operacion_booleana AND Operacion_booleana .)
    INST_THEN       reduce using rule 26 (Operacion_booleana -> Operacion_booleana AND Operacion_booleana .)

  ! AND             [ shift and go to state 53 ]
  ! OR              [ shift and go to state 54 ]


state 88

    (27) Operacion_booleana -> Operacion_booleana OR Operacion_booleana .
    (26) Operacion_booleana -> Operacion_booleana . AND Operacion_booleana
    (27) Operacion_booleana -> Operacion_booleana . OR Operacion_booleana

    OR              reduce using rule 27 (Operacion_booleana -> Operacion_booleana OR Operacion_booleana .)
    COMMA           reduce using rule 27 (Operacion_booleana -> Operacion_booleana OR Operacion_booleana .)
    $end            reduce using rule 27 (Operacion_booleana -> Operacion_booleana OR Operacion_booleana .)
    SEMICOLON       reduce using rule 27 (Operacion_booleana -> Operacion_booleana OR Operacion_booleana .)
    INST_END        reduce using rule 27 (Operacion_booleana -> Operacion_booleana OR Operacion_booleana .)
    INST_ELSE       reduce using rule 27 (Operacion_booleana -> Operacion_booleana OR Operacion_booleana .)
    VAR_IDENTIFIER  reduce using rule 27 (Operacion_booleana -> Operacion_booleana OR Operacion_booleana .)
    LPAREN          reduce using rule 27 (Operacion_booleana -> Operacion_booleana OR Operacion_booleana .)
    NUMBER          reduce using rule 27 (Operacion_booleana -> Operacion_booleana OR Operacion_booleana .)
    INST_DO         reduce using rule 27 (Operacion_booleana -> Operacion_booleana OR Operacion_booleana .)
    INST_THEN       reduce using rule 27 (Operacion_booleana -> Operacion_booleana OR Operacion_booleana .)
    AND             shift and go to state 53

  ! AND             [ reduce using rule 27 (Operacion_booleana -> Operacion_booleana OR Operacion_booleana .) ]
  ! OR              [ shift and go to state 54 ]


state 89

    (56) Lista_Aux -> Expresion COMMA Lista_Aux .

    $end            reduce using rule 56 (Lista_Aux -> Expresion COMMA Lista_Aux .)
    SEMICOLON       reduce using rule 56 (Lista_Aux -> Expresion COMMA Lista_Aux .)
    INST_END        reduce using rule 56 (Lista_Aux -> Expresion COMMA Lista_Aux .)
    INST_ELSE       reduce using rule 56 (Lista_Aux -> Expresion COMMA Lista_Aux .)
    VAR_IDENTIFIER  reduce using rule 56 (Lista_Aux -> Expresion COMMA Lista_Aux .)
    LPAREN          reduce using rule 56 (Lista_Aux -> Expresion COMMA Lista_Aux .)
    NUMBER          reduce using rule 56 (Lista_Aux -> Expresion COMMA Lista_Aux .)


state 90

    (40) Term -> Term DIVIDE Factor .

    TIMES           reduce using rule 40 (Term -> Term DIVIDE Factor .)
    DIVIDE          reduce using rule 40 (Term -> Term DIVIDE Factor .)
    PLUS            reduce using rule 40 (Term -> Term DIVIDE Factor .)
    MINUS           reduce using rule 40 (Term -> Term DIVIDE Factor .)
    EQEQ            reduce using rule 40 (Term -> Term DIVIDE Factor .)
    NEQEQ           reduce using rule 40 (Term -> Term DIVIDE Factor .)
    GREAT           reduce using rule 40 (Term -> Term DIVIDE Factor .)
    LESS            reduce using rule 40 (Term -> Term DIVIDE Factor .)
    GREATEQ         reduce using rule 40 (Term -> Term DIVIDE Factor .)
    LESSEQ          reduce using rule 40 (Term -> Term DIVIDE Factor .)
    INTERSECTION    reduce using rule 40 (Term -> Term DIVIDE Factor .)
    COMMA           reduce using rule 40 (Term -> Term DIVIDE Factor .)
    $end            reduce using rule 40 (Term -> Term DIVIDE Factor .)
    SEMICOLON       reduce using rule 40 (Term -> Term DIVIDE Factor .)
    INST_END        reduce using rule 40 (Term -> Term DIVIDE Factor .)
    INST_ELSE       reduce using rule 40 (Term -> Term DIVIDE Factor .)
    VAR_IDENTIFIER  reduce using rule 40 (Term -> Term DIVIDE Factor .)
    LPAREN          reduce using rule 40 (Term -> Term DIVIDE Factor .)
    NUMBER          reduce using rule 40 (Term -> Term DIVIDE Factor .)
    RPAREN          reduce using rule 40 (Term -> Term DIVIDE Factor .)
    -               reduce using rule 40 (Term -> Term DIVIDE Factor .)
    INST_DO         reduce using rule 40 (Term -> Term DIVIDE Factor .)
    RANGE           reduce using rule 40 (Term -> Term DIVIDE Factor .)
    INST_OF         reduce using rule 40 (Term -> Term DIVIDE Factor .)
    AND             reduce using rule 40 (Term -> Term DIVIDE Factor .)
    OR              reduce using rule 40 (Term -> Term DIVIDE Factor .)
    INST_THEN       reduce using rule 40 (Term -> Term DIVIDE Factor .)


state 91

    (39) Term -> Term TIMES Factor .

    TIMES           reduce using rule 39 (Term -> Term TIMES Factor .)
    DIVIDE          reduce using rule 39 (Term -> Term TIMES Factor .)
    PLUS            reduce using rule 39 (Term -> Term TIMES Factor .)
    MINUS           reduce using rule 39 (Term -> Term TIMES Factor .)
    EQEQ            reduce using rule 39 (Term -> Term TIMES Factor .)
    NEQEQ           reduce using rule 39 (Term -> Term TIMES Factor .)
    GREAT           reduce using rule 39 (Term -> Term TIMES Factor .)
    LESS            reduce using rule 39 (Term -> Term TIMES Factor .)
    GREATEQ         reduce using rule 39 (Term -> Term TIMES Factor .)
    LESSEQ          reduce using rule 39 (Term -> Term TIMES Factor .)
    INTERSECTION    reduce using rule 39 (Term -> Term TIMES Factor .)
    COMMA           reduce using rule 39 (Term -> Term TIMES Factor .)
    $end            reduce using rule 39 (Term -> Term TIMES Factor .)
    SEMICOLON       reduce using rule 39 (Term -> Term TIMES Factor .)
    INST_END        reduce using rule 39 (Term -> Term TIMES Factor .)
    INST_ELSE       reduce using rule 39 (Term -> Term TIMES Factor .)
    VAR_IDENTIFIER  reduce using rule 39 (Term -> Term TIMES Factor .)
    LPAREN          reduce using rule 39 (Term -> Term TIMES Factor .)
    NUMBER          reduce using rule 39 (Term -> Term TIMES Factor .)
    RPAREN          reduce using rule 39 (Term -> Term TIMES Factor .)
    -               reduce using rule 39 (Term -> Term TIMES Factor .)
    INST_DO         reduce using rule 39 (Term -> Term TIMES Factor .)
    RANGE           reduce using rule 39 (Term -> Term TIMES Factor .)
    INST_OF         reduce using rule 39 (Term -> Term TIMES Factor .)
    AND             reduce using rule 39 (Term -> Term TIMES Factor .)
    OR              reduce using rule 39 (Term -> Term TIMES Factor .)
    INST_THEN       reduce using rule 39 (Term -> Term TIMES Factor .)


state 92

    (57) Lista_Aux -> STRING COMMA Lista_Aux .

    $end            reduce using rule 57 (Lista_Aux -> STRING COMMA Lista_Aux .)
    SEMICOLON       reduce using rule 57 (Lista_Aux -> STRING COMMA Lista_Aux .)
    INST_END        reduce using rule 57 (Lista_Aux -> STRING COMMA Lista_Aux .)
    INST_ELSE       reduce using rule 57 (Lista_Aux -> STRING COMMA Lista_Aux .)
    VAR_IDENTIFIER  reduce using rule 57 (Lista_Aux -> STRING COMMA Lista_Aux .)
    LPAREN          reduce using rule 57 (Lista_Aux -> STRING COMMA Lista_Aux .)
    NUMBER          reduce using rule 57 (Lista_Aux -> STRING COMMA Lista_Aux .)


state 93

    (44) Factor -> LPAREN Operacion_binaria RPAREN .

    TIMES           reduce using rule 44 (Factor -> LPAREN Operacion_binaria RPAREN .)
    DIVIDE          reduce using rule 44 (Factor -> LPAREN Operacion_binaria RPAREN .)
    PLUS            reduce using rule 44 (Factor -> LPAREN Operacion_binaria RPAREN .)
    MINUS           reduce using rule 44 (Factor -> LPAREN Operacion_binaria RPAREN .)
    EQEQ            reduce using rule 44 (Factor -> LPAREN Operacion_binaria RPAREN .)
    NEQEQ           reduce using rule 44 (Factor -> LPAREN Operacion_binaria RPAREN .)
    GREAT           reduce using rule 44 (Factor -> LPAREN Operacion_binaria RPAREN .)
    LESS            reduce using rule 44 (Factor -> LPAREN Operacion_binaria RPAREN .)
    GREATEQ         reduce using rule 44 (Factor -> LPAREN Operacion_binaria RPAREN .)
    LESSEQ          reduce using rule 44 (Factor -> LPAREN Operacion_binaria RPAREN .)
    RANGE           reduce using rule 44 (Factor -> LPAREN Operacion_binaria RPAREN .)
    COMMA           reduce using rule 44 (Factor -> LPAREN Operacion_binaria RPAREN .)
    $end            reduce using rule 44 (Factor -> LPAREN Operacion_binaria RPAREN .)
    SEMICOLON       reduce using rule 44 (Factor -> LPAREN Operacion_binaria RPAREN .)
    INST_END        reduce using rule 44 (Factor -> LPAREN Operacion_binaria RPAREN .)
    INST_ELSE       reduce using rule 44 (Factor -> LPAREN Operacion_binaria RPAREN .)
    VAR_IDENTIFIER  reduce using rule 44 (Factor -> LPAREN Operacion_binaria RPAREN .)
    LPAREN          reduce using rule 44 (Factor -> LPAREN Operacion_binaria RPAREN .)
    NUMBER          reduce using rule 44 (Factor -> LPAREN Operacion_binaria RPAREN .)
    INTERSECTION    reduce using rule 44 (Factor -> LPAREN Operacion_binaria RPAREN .)
    RPAREN          reduce using rule 44 (Factor -> LPAREN Operacion_binaria RPAREN .)
    -               reduce using rule 44 (Factor -> LPAREN Operacion_binaria RPAREN .)
    INST_DO         reduce using rule 44 (Factor -> LPAREN Operacion_binaria RPAREN .)
    INST_OF         reduce using rule 44 (Factor -> LPAREN Operacion_binaria RPAREN .)
    AND             reduce using rule 44 (Factor -> LPAREN Operacion_binaria RPAREN .)
    OR              reduce using rule 44 (Factor -> LPAREN Operacion_binaria RPAREN .)
    INST_THEN       reduce using rule 44 (Factor -> LPAREN Operacion_binaria RPAREN .)


state 94

    (50) RangoF -> LPAREN Rango RPAREN .

    -               reduce using rule 50 (RangoF -> LPAREN Rango RPAREN .)
    PLUS            reduce using rule 50 (RangoF -> LPAREN Rango RPAREN .)
    TIMES           reduce using rule 50 (RangoF -> LPAREN Rango RPAREN .)
    INTERSECTION    reduce using rule 50 (RangoF -> LPAREN Rango RPAREN .)
    INST_DO         reduce using rule 50 (RangoF -> LPAREN Rango RPAREN .)
    COMMA           reduce using rule 50 (RangoF -> LPAREN Rango RPAREN .)
    $end            reduce using rule 50 (RangoF -> LPAREN Rango RPAREN .)
    SEMICOLON       reduce using rule 50 (RangoF -> LPAREN Rango RPAREN .)
    INST_END        reduce using rule 50 (RangoF -> LPAREN Rango RPAREN .)
    INST_ELSE       reduce using rule 50 (RangoF -> LPAREN Rango RPAREN .)
    VAR_IDENTIFIER  reduce using rule 50 (RangoF -> LPAREN Rango RPAREN .)
    LPAREN          reduce using rule 50 (RangoF -> LPAREN Rango RPAREN .)
    NUMBER          reduce using rule 50 (RangoF -> LPAREN Rango RPAREN .)
    RPAREN          reduce using rule 50 (RangoF -> LPAREN Rango RPAREN .)


state 95

    (45) Rango -> Operacion_binaria . RANGE Operacion_binaria
    (36) Operacion_binaria -> Operacion_binaria . PLUS Term
    (37) Operacion_binaria -> Operacion_binaria . MINUS Term

    RANGE           shift and go to state 70
    PLUS            shift and go to state 72
    MINUS           shift and go to state 73


state 96

    (48) Rango -> Rango INTERSECTION Rango .
    (46) Rango -> Rango . PLUS Rango
    (47) Rango -> Rango . TIMES Operacion_binaria
    (48) Rango -> Rango . INTERSECTION Rango

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for INTERSECTION resolved as shift
    $end            reduce using rule 48 (Rango -> Rango INTERSECTION Rango .)
    SEMICOLON       reduce using rule 48 (Rango -> Rango INTERSECTION Rango .)
    INST_END        reduce using rule 48 (Rango -> Rango INTERSECTION Rango .)
    INST_ELSE       reduce using rule 48 (Rango -> Rango INTERSECTION Rango .)
    VAR_IDENTIFIER  reduce using rule 48 (Rango -> Rango INTERSECTION Rango .)
    LPAREN          reduce using rule 48 (Rango -> Rango INTERSECTION Rango .)
    NUMBER          reduce using rule 48 (Rango -> Rango INTERSECTION Rango .)
    COMMA           reduce using rule 48 (Rango -> Rango INTERSECTION Rango .)
    RPAREN          reduce using rule 48 (Rango -> Rango INTERSECTION Rango .)
    -               reduce using rule 48 (Rango -> Rango INTERSECTION Rango .)
    INST_DO         reduce using rule 48 (Rango -> Rango INTERSECTION Rango .)
    PLUS            shift and go to state 62
    TIMES           shift and go to state 63
    INTERSECTION    shift and go to state 61

  ! PLUS            [ reduce using rule 48 (Rango -> Rango INTERSECTION Rango .) ]
  ! TIMES           [ reduce using rule 48 (Rango -> Rango INTERSECTION Rango .) ]
  ! INTERSECTION    [ reduce using rule 48 (Rango -> Rango INTERSECTION Rango .) ]


state 97

    (46) Rango -> Rango PLUS Rango .
    (46) Rango -> Rango . PLUS Rango
    (47) Rango -> Rango . TIMES Operacion_binaria
    (48) Rango -> Rango . INTERSECTION Rango

    PLUS            reduce using rule 46 (Rango -> Rango PLUS Rango .)
    INTERSECTION    reduce using rule 46 (Rango -> Rango PLUS Rango .)
    $end            reduce using rule 46 (Rango -> Rango PLUS Rango .)
    SEMICOLON       reduce using rule 46 (Rango -> Rango PLUS Rango .)
    INST_END        reduce using rule 46 (Rango -> Rango PLUS Rango .)
    INST_ELSE       reduce using rule 46 (Rango -> Rango PLUS Rango .)
    VAR_IDENTIFIER  reduce using rule 46 (Rango -> Rango PLUS Rango .)
    LPAREN          reduce using rule 46 (Rango -> Rango PLUS Rango .)
    NUMBER          reduce using rule 46 (Rango -> Rango PLUS Rango .)
    COMMA           reduce using rule 46 (Rango -> Rango PLUS Rango .)
    RPAREN          reduce using rule 46 (Rango -> Rango PLUS Rango .)
    -               reduce using rule 46 (Rango -> Rango PLUS Rango .)
    INST_DO         reduce using rule 46 (Rango -> Rango PLUS Rango .)
    TIMES           shift and go to state 63

  ! TIMES           [ reduce using rule 46 (Rango -> Rango PLUS Rango .) ]
  ! PLUS            [ shift and go to state 62 ]
  ! INTERSECTION    [ shift and go to state 61 ]


state 98

    (47) Rango -> Rango TIMES Operacion_binaria .
    (36) Operacion_binaria -> Operacion_binaria . PLUS Term
    (37) Operacion_binaria -> Operacion_binaria . MINUS Term

    PLUS            reduce using rule 47 (Rango -> Rango TIMES Operacion_binaria .)
    TIMES           reduce using rule 47 (Rango -> Rango TIMES Operacion_binaria .)
    INTERSECTION    reduce using rule 47 (Rango -> Rango TIMES Operacion_binaria .)
    $end            reduce using rule 47 (Rango -> Rango TIMES Operacion_binaria .)
    SEMICOLON       reduce using rule 47 (Rango -> Rango TIMES Operacion_binaria .)
    INST_END        reduce using rule 47 (Rango -> Rango TIMES Operacion_binaria .)
    INST_ELSE       reduce using rule 47 (Rango -> Rango TIMES Operacion_binaria .)
    VAR_IDENTIFIER  reduce using rule 47 (Rango -> Rango TIMES Operacion_binaria .)
    LPAREN          reduce using rule 47 (Rango -> Rango TIMES Operacion_binaria .)
    NUMBER          reduce using rule 47 (Rango -> Rango TIMES Operacion_binaria .)
    COMMA           reduce using rule 47 (Rango -> Rango TIMES Operacion_binaria .)
    RPAREN          reduce using rule 47 (Rango -> Rango TIMES Operacion_binaria .)
    -               reduce using rule 47 (Rango -> Rango TIMES Operacion_binaria .)
    INST_DO         reduce using rule 47 (Rango -> Rango TIMES Operacion_binaria .)
    MINUS           shift and go to state 73

  ! PLUS            [ shift and go to state 72 ]


state 99

    (25) Operacion_booleana -> Operacion_binaria Opr_bool Operacion_binaria .
    (36) Operacion_binaria -> Operacion_binaria . PLUS Term
    (37) Operacion_binaria -> Operacion_binaria . MINUS Term

    AND             reduce using rule 25 (Operacion_booleana -> Operacion_binaria Opr_bool Operacion_binaria .)
    OR              reduce using rule 25 (Operacion_booleana -> Operacion_binaria Opr_bool Operacion_binaria .)
    COMMA           reduce using rule 25 (Operacion_booleana -> Operacion_binaria Opr_bool Operacion_binaria .)
    $end            reduce using rule 25 (Operacion_booleana -> Operacion_binaria Opr_bool Operacion_binaria .)
    SEMICOLON       reduce using rule 25 (Operacion_booleana -> Operacion_binaria Opr_bool Operacion_binaria .)
    INST_END        reduce using rule 25 (Operacion_booleana -> Operacion_binaria Opr_bool Operacion_binaria .)
    INST_ELSE       reduce using rule 25 (Operacion_booleana -> Operacion_binaria Opr_bool Operacion_binaria .)
    VAR_IDENTIFIER  reduce using rule 25 (Operacion_booleana -> Operacion_binaria Opr_bool Operacion_binaria .)
    LPAREN          reduce using rule 25 (Operacion_booleana -> Operacion_binaria Opr_bool Operacion_binaria .)
    NUMBER          reduce using rule 25 (Operacion_booleana -> Operacion_binaria Opr_bool Operacion_binaria .)
    INST_DO         reduce using rule 25 (Operacion_booleana -> Operacion_binaria Opr_bool Operacion_binaria .)
    INST_THEN       reduce using rule 25 (Operacion_booleana -> Operacion_binaria Opr_bool Operacion_binaria .)
    PLUS            shift and go to state 72
    MINUS           shift and go to state 73


state 100

    (45) Rango -> Operacion_binaria RANGE Operacion_binaria .
    (36) Operacion_binaria -> Operacion_binaria . PLUS Term
    (37) Operacion_binaria -> Operacion_binaria . MINUS Term

  ! shift/reduce conflict for PLUS resolved as shift
    TIMES           reduce using rule 45 (Rango -> Operacion_binaria RANGE Operacion_binaria .)
    INTERSECTION    reduce using rule 45 (Rango -> Operacion_binaria RANGE Operacion_binaria .)
    $end            reduce using rule 45 (Rango -> Operacion_binaria RANGE Operacion_binaria .)
    SEMICOLON       reduce using rule 45 (Rango -> Operacion_binaria RANGE Operacion_binaria .)
    INST_END        reduce using rule 45 (Rango -> Operacion_binaria RANGE Operacion_binaria .)
    INST_ELSE       reduce using rule 45 (Rango -> Operacion_binaria RANGE Operacion_binaria .)
    VAR_IDENTIFIER  reduce using rule 45 (Rango -> Operacion_binaria RANGE Operacion_binaria .)
    LPAREN          reduce using rule 45 (Rango -> Operacion_binaria RANGE Operacion_binaria .)
    NUMBER          reduce using rule 45 (Rango -> Operacion_binaria RANGE Operacion_binaria .)
    COMMA           reduce using rule 45 (Rango -> Operacion_binaria RANGE Operacion_binaria .)
    RPAREN          reduce using rule 45 (Rango -> Operacion_binaria RANGE Operacion_binaria .)
    -               reduce using rule 45 (Rango -> Operacion_binaria RANGE Operacion_binaria .)
    INST_DO         reduce using rule 45 (Rango -> Operacion_binaria RANGE Operacion_binaria .)
    PLUS            shift and go to state 72
    MINUS           shift and go to state 73

  ! PLUS            [ reduce using rule 45 (Rango -> Operacion_binaria RANGE Operacion_binaria .) ]


state 101

    (36) Operacion_binaria -> Operacion_binaria PLUS Term .
    (39) Term -> Term . TIMES Factor
    (40) Term -> Term . DIVIDE Factor

    RANGE           reduce using rule 36 (Operacion_binaria -> Operacion_binaria PLUS Term .)
    PLUS            reduce using rule 36 (Operacion_binaria -> Operacion_binaria PLUS Term .)
    MINUS           reduce using rule 36 (Operacion_binaria -> Operacion_binaria PLUS Term .)
    EQEQ            reduce using rule 36 (Operacion_binaria -> Operacion_binaria PLUS Term .)
    NEQEQ           reduce using rule 36 (Operacion_binaria -> Operacion_binaria PLUS Term .)
    GREAT           reduce using rule 36 (Operacion_binaria -> Operacion_binaria PLUS Term .)
    LESS            reduce using rule 36 (Operacion_binaria -> Operacion_binaria PLUS Term .)
    GREATEQ         reduce using rule 36 (Operacion_binaria -> Operacion_binaria PLUS Term .)
    LESSEQ          reduce using rule 36 (Operacion_binaria -> Operacion_binaria PLUS Term .)
    INST_OF         reduce using rule 36 (Operacion_binaria -> Operacion_binaria PLUS Term .)
    COMMA           reduce using rule 36 (Operacion_binaria -> Operacion_binaria PLUS Term .)
    $end            reduce using rule 36 (Operacion_binaria -> Operacion_binaria PLUS Term .)
    SEMICOLON       reduce using rule 36 (Operacion_binaria -> Operacion_binaria PLUS Term .)
    INST_END        reduce using rule 36 (Operacion_binaria -> Operacion_binaria PLUS Term .)
    INST_ELSE       reduce using rule 36 (Operacion_binaria -> Operacion_binaria PLUS Term .)
    VAR_IDENTIFIER  reduce using rule 36 (Operacion_binaria -> Operacion_binaria PLUS Term .)
    LPAREN          reduce using rule 36 (Operacion_binaria -> Operacion_binaria PLUS Term .)
    NUMBER          reduce using rule 36 (Operacion_binaria -> Operacion_binaria PLUS Term .)
    AND             reduce using rule 36 (Operacion_binaria -> Operacion_binaria PLUS Term .)
    OR              reduce using rule 36 (Operacion_binaria -> Operacion_binaria PLUS Term .)
    INST_DO         reduce using rule 36 (Operacion_binaria -> Operacion_binaria PLUS Term .)
    INST_THEN       reduce using rule 36 (Operacion_binaria -> Operacion_binaria PLUS Term .)
    RPAREN          reduce using rule 36 (Operacion_binaria -> Operacion_binaria PLUS Term .)
    INTERSECTION    reduce using rule 36 (Operacion_binaria -> Operacion_binaria PLUS Term .)
    -               reduce using rule 36 (Operacion_binaria -> Operacion_binaria PLUS Term .)
    TIMES           shift and go to state 57
    DIVIDE          shift and go to state 56

  ! TIMES           [ reduce using rule 36 (Operacion_binaria -> Operacion_binaria PLUS Term .) ]


state 102

    (37) Operacion_binaria -> Operacion_binaria MINUS Term .
    (39) Term -> Term . TIMES Factor
    (40) Term -> Term . DIVIDE Factor

    RANGE           reduce using rule 37 (Operacion_binaria -> Operacion_binaria MINUS Term .)
    PLUS            reduce using rule 37 (Operacion_binaria -> Operacion_binaria MINUS Term .)
    MINUS           reduce using rule 37 (Operacion_binaria -> Operacion_binaria MINUS Term .)
    EQEQ            reduce using rule 37 (Operacion_binaria -> Operacion_binaria MINUS Term .)
    NEQEQ           reduce using rule 37 (Operacion_binaria -> Operacion_binaria MINUS Term .)
    GREAT           reduce using rule 37 (Operacion_binaria -> Operacion_binaria MINUS Term .)
    LESS            reduce using rule 37 (Operacion_binaria -> Operacion_binaria MINUS Term .)
    GREATEQ         reduce using rule 37 (Operacion_binaria -> Operacion_binaria MINUS Term .)
    LESSEQ          reduce using rule 37 (Operacion_binaria -> Operacion_binaria MINUS Term .)
    INST_OF         reduce using rule 37 (Operacion_binaria -> Operacion_binaria MINUS Term .)
    COMMA           reduce using rule 37 (Operacion_binaria -> Operacion_binaria MINUS Term .)
    $end            reduce using rule 37 (Operacion_binaria -> Operacion_binaria MINUS Term .)
    SEMICOLON       reduce using rule 37 (Operacion_binaria -> Operacion_binaria MINUS Term .)
    INST_END        reduce using rule 37 (Operacion_binaria -> Operacion_binaria MINUS Term .)
    INST_ELSE       reduce using rule 37 (Operacion_binaria -> Operacion_binaria MINUS Term .)
    VAR_IDENTIFIER  reduce using rule 37 (Operacion_binaria -> Operacion_binaria MINUS Term .)
    LPAREN          reduce using rule 37 (Operacion_binaria -> Operacion_binaria MINUS Term .)
    NUMBER          reduce using rule 37 (Operacion_binaria -> Operacion_binaria MINUS Term .)
    AND             reduce using rule 37 (Operacion_binaria -> Operacion_binaria MINUS Term .)
    OR              reduce using rule 37 (Operacion_binaria -> Operacion_binaria MINUS Term .)
    INST_DO         reduce using rule 37 (Operacion_binaria -> Operacion_binaria MINUS Term .)
    INST_THEN       reduce using rule 37 (Operacion_binaria -> Operacion_binaria MINUS Term .)
    RPAREN          reduce using rule 37 (Operacion_binaria -> Operacion_binaria MINUS Term .)
    INTERSECTION    reduce using rule 37 (Operacion_binaria -> Operacion_binaria MINUS Term .)
    -               reduce using rule 37 (Operacion_binaria -> Operacion_binaria MINUS Term .)
    TIMES           shift and go to state 57
    DIVIDE          shift and go to state 56

  ! TIMES           [ reduce using rule 37 (Operacion_binaria -> Operacion_binaria MINUS Term .) ]


state 103

    (65) Inst_While -> INST_WHILE Operacion_booleana INST_DO Bloque_Inst .

    $end            reduce using rule 65 (Inst_While -> INST_WHILE Operacion_booleana INST_DO Bloque_Inst .)
    SEMICOLON       reduce using rule 65 (Inst_While -> INST_WHILE Operacion_booleana INST_DO Bloque_Inst .)
    INST_END        reduce using rule 65 (Inst_While -> INST_WHILE Operacion_booleana INST_DO Bloque_Inst .)
    INST_ELSE       reduce using rule 65 (Inst_While -> INST_WHILE Operacion_booleana INST_DO Bloque_Inst .)
    VAR_IDENTIFIER  reduce using rule 65 (Inst_While -> INST_WHILE Operacion_booleana INST_DO Bloque_Inst .)
    LPAREN          reduce using rule 65 (Inst_While -> INST_WHILE Operacion_booleana INST_DO Bloque_Inst .)
    NUMBER          reduce using rule 65 (Inst_While -> INST_WHILE Operacion_booleana INST_DO Bloque_Inst .)


state 104

    (5) Lista_Inst -> Inst SEMICOLON Lista_Inst .

    INST_END        reduce using rule 5 (Lista_Inst -> Inst SEMICOLON Lista_Inst .)


state 105

    (61) Casos -> VAR_IDENTIFIER . - > Bloque_Inst
    (43) Factor -> VAR_IDENTIFIER .

    -               shift and go to state 110
    TIMES           reduce using rule 43 (Factor -> VAR_IDENTIFIER .)
    DIVIDE          reduce using rule 43 (Factor -> VAR_IDENTIFIER .)
    RANGE           reduce using rule 43 (Factor -> VAR_IDENTIFIER .)
    PLUS            reduce using rule 43 (Factor -> VAR_IDENTIFIER .)
    MINUS           reduce using rule 43 (Factor -> VAR_IDENTIFIER .)


state 106

    (62) Casos -> Rango . - > Bloque_Inst
    (46) Rango -> Rango . PLUS Rango
    (47) Rango -> Rango . TIMES Operacion_binaria
    (48) Rango -> Rango . INTERSECTION Rango

    -               shift and go to state 111
    PLUS            shift and go to state 62
    TIMES           shift and go to state 63
    INTERSECTION    shift and go to state 61


state 107

    (60) Inst_Case -> INST_CASE Operacion_binaria INST_OF Casos .
    (63) Casos -> Casos . Casos
    (61) Casos -> . VAR_IDENTIFIER - > Bloque_Inst
    (62) Casos -> . Rango - > Bloque_Inst
    (63) Casos -> . Casos Casos
    (45) Rango -> . Operacion_binaria RANGE Operacion_binaria
    (46) Rango -> . Rango PLUS Rango
    (47) Rango -> . Rango TIMES Operacion_binaria
    (48) Rango -> . Rango INTERSECTION Rango
    (49) Rango -> . RangoF
    (36) Operacion_binaria -> . Operacion_binaria PLUS Term
    (37) Operacion_binaria -> . Operacion_binaria MINUS Term
    (38) Operacion_binaria -> . Term
    (50) RangoF -> . LPAREN Rango RPAREN
    (39) Term -> . Term TIMES Factor
    (40) Term -> . Term DIVIDE Factor
    (41) Term -> . Factor
    (42) Factor -> . NUMBER
    (43) Factor -> . VAR_IDENTIFIER
    (44) Factor -> . LPAREN Operacion_binaria RPAREN

  ! shift/reduce conflict for VAR_IDENTIFIER resolved as shift
  ! shift/reduce conflict for LPAREN resolved as shift
  ! shift/reduce conflict for NUMBER resolved as shift
    $end            reduce using rule 60 (Inst_Case -> INST_CASE Operacion_binaria INST_OF Casos .)
    SEMICOLON       reduce using rule 60 (Inst_Case -> INST_CASE Operacion_binaria INST_OF Casos .)
    INST_END        reduce using rule 60 (Inst_Case -> INST_CASE Operacion_binaria INST_OF Casos .)
    INST_ELSE       reduce using rule 60 (Inst_Case -> INST_CASE Operacion_binaria INST_OF Casos .)
    VAR_IDENTIFIER  shift and go to state 105
    LPAREN          shift and go to state 34
    NUMBER          shift and go to state 27

  ! VAR_IDENTIFIER  [ reduce using rule 60 (Inst_Case -> INST_CASE Operacion_binaria INST_OF Casos .) ]
  ! LPAREN          [ reduce using rule 60 (Inst_Case -> INST_CASE Operacion_binaria INST_OF Casos .) ]
  ! NUMBER          [ reduce using rule 60 (Inst_Case -> INST_CASE Operacion_binaria INST_OF Casos .) ]

    Operacion_binaria              shift and go to state 95
    Factor                         shift and go to state 26
    Term                           shift and go to state 31
    RangoF                         shift and go to state 28
    Rango                          shift and go to state 106
    Casos                          shift and go to state 112

state 108

    (64) Inst_For -> INST_FOR VAR_IDENTIFIER INST_IN Rango . INST_DO Bloque_Inst
    (46) Rango -> Rango . PLUS Rango
    (47) Rango -> Rango . TIMES Operacion_binaria
    (48) Rango -> Rango . INTERSECTION Rango

    INST_DO         shift and go to state 113
    PLUS            shift and go to state 62
    TIMES           shift and go to state 63
    INTERSECTION    shift and go to state 61


state 109

    (58) Inst_If -> INST_IF Operacion_booleana INST_THEN Bloque_Inst .
    (59) Inst_If -> INST_IF Operacion_booleana INST_THEN Bloque_Inst . INST_ELSE Bloque_Inst

  ! shift/reduce conflict for INST_ELSE resolved as shift
    $end            reduce using rule 58 (Inst_If -> INST_IF Operacion_booleana INST_THEN Bloque_Inst .)
    SEMICOLON       reduce using rule 58 (Inst_If -> INST_IF Operacion_booleana INST_THEN Bloque_Inst .)
    INST_END        reduce using rule 58 (Inst_If -> INST_IF Operacion_booleana INST_THEN Bloque_Inst .)
    VAR_IDENTIFIER  reduce using rule 58 (Inst_If -> INST_IF Operacion_booleana INST_THEN Bloque_Inst .)
    LPAREN          reduce using rule 58 (Inst_If -> INST_IF Operacion_booleana INST_THEN Bloque_Inst .)
    NUMBER          reduce using rule 58 (Inst_If -> INST_IF Operacion_booleana INST_THEN Bloque_Inst .)
    INST_ELSE       shift and go to state 114

  ! INST_ELSE       [ reduce using rule 58 (Inst_If -> INST_IF Operacion_booleana INST_THEN Bloque_Inst .) ]


state 110

    (61) Casos -> VAR_IDENTIFIER - . > Bloque_Inst

    >               shift and go to state 115


state 111

    (62) Casos -> Rango - . > Bloque_Inst

    >               shift and go to state 116


state 112

    (63) Casos -> Casos Casos .
    (63) Casos -> Casos . Casos
    (61) Casos -> . VAR_IDENTIFIER - > Bloque_Inst
    (62) Casos -> . Rango - > Bloque_Inst
    (63) Casos -> . Casos Casos
    (45) Rango -> . Operacion_binaria RANGE Operacion_binaria
    (46) Rango -> . Rango PLUS Rango
    (47) Rango -> . Rango TIMES Operacion_binaria
    (48) Rango -> . Rango INTERSECTION Rango
    (49) Rango -> . RangoF
    (36) Operacion_binaria -> . Operacion_binaria PLUS Term
    (37) Operacion_binaria -> . Operacion_binaria MINUS Term
    (38) Operacion_binaria -> . Term
    (50) RangoF -> . LPAREN Rango RPAREN
    (39) Term -> . Term TIMES Factor
    (40) Term -> . Term DIVIDE Factor
    (41) Term -> . Factor
    (42) Factor -> . NUMBER
    (43) Factor -> . VAR_IDENTIFIER
    (44) Factor -> . LPAREN Operacion_binaria RPAREN

  ! shift/reduce conflict for VAR_IDENTIFIER resolved as shift
  ! shift/reduce conflict for LPAREN resolved as shift
  ! shift/reduce conflict for NUMBER resolved as shift
    $end            reduce using rule 63 (Casos -> Casos Casos .)
    SEMICOLON       reduce using rule 63 (Casos -> Casos Casos .)
    INST_END        reduce using rule 63 (Casos -> Casos Casos .)
    INST_ELSE       reduce using rule 63 (Casos -> Casos Casos .)
    VAR_IDENTIFIER  shift and go to state 105
    LPAREN          shift and go to state 34
    NUMBER          shift and go to state 27

  ! VAR_IDENTIFIER  [ reduce using rule 63 (Casos -> Casos Casos .) ]
  ! LPAREN          [ reduce using rule 63 (Casos -> Casos Casos .) ]
  ! NUMBER          [ reduce using rule 63 (Casos -> Casos Casos .) ]

    Operacion_binaria              shift and go to state 95
    Factor                         shift and go to state 26
    Term                           shift and go to state 31
    RangoF                         shift and go to state 28
    Rango                          shift and go to state 106
    Casos                          shift and go to state 112

state 113

    (64) Inst_For -> INST_FOR VAR_IDENTIFIER INST_IN Rango INST_DO . Bloque_Inst
    (2) Bloque_Inst -> . INST_BEGIN Lista_Inst INST_END
    (3) Bloque_Inst -> . Inst
    (6) Inst -> . Inst_Declare
    (7) Inst -> . Inst_Asignacion
    (8) Inst -> . Inst_Lectura
    (9) Inst -> . Inst_For
    (10) Inst -> . Inst_While
    (11) Inst -> . Inst_If
    (12) Inst -> . Inst_Case
    (13) Inst -> . Inst_Salida
    (14) Inst_Declare -> . INST_DECLARE Lista_Declare
    (21) Inst_Asignacion -> . VAR_IDENTIFIER EQUAL Expresion
    (51) Inst_Lectura -> . INST_READ VAR_IDENTIFIER
    (64) Inst_For -> . INST_FOR VAR_IDENTIFIER INST_IN Rango INST_DO Bloque_Inst
    (65) Inst_While -> . INST_WHILE Operacion_booleana INST_DO Bloque_Inst
    (58) Inst_If -> . INST_IF Operacion_booleana INST_THEN Bloque_Inst
    (59) Inst_If -> . INST_IF Operacion_booleana INST_THEN Bloque_Inst INST_ELSE Bloque_Inst
    (60) Inst_Case -> . INST_CASE Operacion_binaria INST_OF Casos
    (52) Inst_Salida -> . INST_WRITE Lista_Aux
    (53) Inst_Salida -> . INST_WRITELN Lista_Aux

    INST_BEGIN      shift and go to state 9
    INST_DECLARE    shift and go to state 3
    VAR_IDENTIFIER  shift and go to state 15
    INST_READ       shift and go to state 8
    INST_FOR        shift and go to state 18
    INST_WHILE      shift and go to state 7
    INST_IF         shift and go to state 19
    INST_CASE       shift and go to state 17
    INST_WRITE      shift and go to state 4
    INST_WRITELN    shift and go to state 20

    Inst_Salida                    shift and go to state 6
    Inst_Declare                   shift and go to state 10
    Bloque_Inst                    shift and go to state 117
    Inst_If                        shift and go to state 16
    Inst_While                     shift and go to state 13
    Inst_For                       shift and go to state 11
    Inst_Asignacion                shift and go to state 21
    Inst                           shift and go to state 12
    Inst_Case                      shift and go to state 22
    Inst_Lectura                   shift and go to state 14

state 114

    (59) Inst_If -> INST_IF Operacion_booleana INST_THEN Bloque_Inst INST_ELSE . Bloque_Inst
    (2) Bloque_Inst -> . INST_BEGIN Lista_Inst INST_END
    (3) Bloque_Inst -> . Inst
    (6) Inst -> . Inst_Declare
    (7) Inst -> . Inst_Asignacion
    (8) Inst -> . Inst_Lectura
    (9) Inst -> . Inst_For
    (10) Inst -> . Inst_While
    (11) Inst -> . Inst_If
    (12) Inst -> . Inst_Case
    (13) Inst -> . Inst_Salida
    (14) Inst_Declare -> . INST_DECLARE Lista_Declare
    (21) Inst_Asignacion -> . VAR_IDENTIFIER EQUAL Expresion
    (51) Inst_Lectura -> . INST_READ VAR_IDENTIFIER
    (64) Inst_For -> . INST_FOR VAR_IDENTIFIER INST_IN Rango INST_DO Bloque_Inst
    (65) Inst_While -> . INST_WHILE Operacion_booleana INST_DO Bloque_Inst
    (58) Inst_If -> . INST_IF Operacion_booleana INST_THEN Bloque_Inst
    (59) Inst_If -> . INST_IF Operacion_booleana INST_THEN Bloque_Inst INST_ELSE Bloque_Inst
    (60) Inst_Case -> . INST_CASE Operacion_binaria INST_OF Casos
    (52) Inst_Salida -> . INST_WRITE Lista_Aux
    (53) Inst_Salida -> . INST_WRITELN Lista_Aux

    INST_BEGIN      shift and go to state 9
    INST_DECLARE    shift and go to state 3
    VAR_IDENTIFIER  shift and go to state 15
    INST_READ       shift and go to state 8
    INST_FOR        shift and go to state 18
    INST_WHILE      shift and go to state 7
    INST_IF         shift and go to state 19
    INST_CASE       shift and go to state 17
    INST_WRITE      shift and go to state 4
    INST_WRITELN    shift and go to state 20

    Inst_Salida                    shift and go to state 6
    Inst_Declare                   shift and go to state 10
    Bloque_Inst                    shift and go to state 118
    Inst_If                        shift and go to state 16
    Inst_For                       shift and go to state 11
    Inst_While                     shift and go to state 13
    Inst                           shift and go to state 12
    Inst_Asignacion                shift and go to state 21
    Inst_Case                      shift and go to state 22
    Inst_Lectura                   shift and go to state 14

state 115

    (61) Casos -> VAR_IDENTIFIER - > . Bloque_Inst
    (2) Bloque_Inst -> . INST_BEGIN Lista_Inst INST_END
    (3) Bloque_Inst -> . Inst
    (6) Inst -> . Inst_Declare
    (7) Inst -> . Inst_Asignacion
    (8) Inst -> . Inst_Lectura
    (9) Inst -> . Inst_For
    (10) Inst -> . Inst_While
    (11) Inst -> . Inst_If
    (12) Inst -> . Inst_Case
    (13) Inst -> . Inst_Salida
    (14) Inst_Declare -> . INST_DECLARE Lista_Declare
    (21) Inst_Asignacion -> . VAR_IDENTIFIER EQUAL Expresion
    (51) Inst_Lectura -> . INST_READ VAR_IDENTIFIER
    (64) Inst_For -> . INST_FOR VAR_IDENTIFIER INST_IN Rango INST_DO Bloque_Inst
    (65) Inst_While -> . INST_WHILE Operacion_booleana INST_DO Bloque_Inst
    (58) Inst_If -> . INST_IF Operacion_booleana INST_THEN Bloque_Inst
    (59) Inst_If -> . INST_IF Operacion_booleana INST_THEN Bloque_Inst INST_ELSE Bloque_Inst
    (60) Inst_Case -> . INST_CASE Operacion_binaria INST_OF Casos
    (52) Inst_Salida -> . INST_WRITE Lista_Aux
    (53) Inst_Salida -> . INST_WRITELN Lista_Aux

    INST_BEGIN      shift and go to state 9
    INST_DECLARE    shift and go to state 3
    VAR_IDENTIFIER  shift and go to state 15
    INST_READ       shift and go to state 8
    INST_FOR        shift and go to state 18
    INST_WHILE      shift and go to state 7
    INST_IF         shift and go to state 19
    INST_CASE       shift and go to state 17
    INST_WRITE      shift and go to state 4
    INST_WRITELN    shift and go to state 20

    Inst_Salida                    shift and go to state 6
    Inst_Declare                   shift and go to state 10
    Bloque_Inst                    shift and go to state 119
    Inst_If                        shift and go to state 16
    Inst_For                       shift and go to state 11
    Inst_While                     shift and go to state 13
    Inst                           shift and go to state 12
    Inst_Asignacion                shift and go to state 21
    Inst_Case                      shift and go to state 22
    Inst_Lectura                   shift and go to state 14

state 116

    (62) Casos -> Rango - > . Bloque_Inst
    (2) Bloque_Inst -> . INST_BEGIN Lista_Inst INST_END
    (3) Bloque_Inst -> . Inst
    (6) Inst -> . Inst_Declare
    (7) Inst -> . Inst_Asignacion
    (8) Inst -> . Inst_Lectura
    (9) Inst -> . Inst_For
    (10) Inst -> . Inst_While
    (11) Inst -> . Inst_If
    (12) Inst -> . Inst_Case
    (13) Inst -> . Inst_Salida
    (14) Inst_Declare -> . INST_DECLARE Lista_Declare
    (21) Inst_Asignacion -> . VAR_IDENTIFIER EQUAL Expresion
    (51) Inst_Lectura -> . INST_READ VAR_IDENTIFIER
    (64) Inst_For -> . INST_FOR VAR_IDENTIFIER INST_IN Rango INST_DO Bloque_Inst
    (65) Inst_While -> . INST_WHILE Operacion_booleana INST_DO Bloque_Inst
    (58) Inst_If -> . INST_IF Operacion_booleana INST_THEN Bloque_Inst
    (59) Inst_If -> . INST_IF Operacion_booleana INST_THEN Bloque_Inst INST_ELSE Bloque_Inst
    (60) Inst_Case -> . INST_CASE Operacion_binaria INST_OF Casos
    (52) Inst_Salida -> . INST_WRITE Lista_Aux
    (53) Inst_Salida -> . INST_WRITELN Lista_Aux

    INST_BEGIN      shift and go to state 9
    INST_DECLARE    shift and go to state 3
    VAR_IDENTIFIER  shift and go to state 15
    INST_READ       shift and go to state 8
    INST_FOR        shift and go to state 18
    INST_WHILE      shift and go to state 7
    INST_IF         shift and go to state 19
    INST_CASE       shift and go to state 17
    INST_WRITE      shift and go to state 4
    INST_WRITELN    shift and go to state 20

    Inst_Salida                    shift and go to state 6
    Inst_Declare                   shift and go to state 10
    Bloque_Inst                    shift and go to state 120
    Inst_If                        shift and go to state 16
    Inst_While                     shift and go to state 13
    Inst_For                       shift and go to state 11
    Inst_Asignacion                shift and go to state 21
    Inst                           shift and go to state 12
    Inst_Case                      shift and go to state 22
    Inst_Lectura                   shift and go to state 14

state 117

    (64) Inst_For -> INST_FOR VAR_IDENTIFIER INST_IN Rango INST_DO Bloque_Inst .

    $end            reduce using rule 64 (Inst_For -> INST_FOR VAR_IDENTIFIER INST_IN Rango INST_DO Bloque_Inst .)
    SEMICOLON       reduce using rule 64 (Inst_For -> INST_FOR VAR_IDENTIFIER INST_IN Rango INST_DO Bloque_Inst .)
    INST_END        reduce using rule 64 (Inst_For -> INST_FOR VAR_IDENTIFIER INST_IN Rango INST_DO Bloque_Inst .)
    INST_ELSE       reduce using rule 64 (Inst_For -> INST_FOR VAR_IDENTIFIER INST_IN Rango INST_DO Bloque_Inst .)
    VAR_IDENTIFIER  reduce using rule 64 (Inst_For -> INST_FOR VAR_IDENTIFIER INST_IN Rango INST_DO Bloque_Inst .)
    LPAREN          reduce using rule 64 (Inst_For -> INST_FOR VAR_IDENTIFIER INST_IN Rango INST_DO Bloque_Inst .)
    NUMBER          reduce using rule 64 (Inst_For -> INST_FOR VAR_IDENTIFIER INST_IN Rango INST_DO Bloque_Inst .)


state 118

    (59) Inst_If -> INST_IF Operacion_booleana INST_THEN Bloque_Inst INST_ELSE Bloque_Inst .

    $end            reduce using rule 59 (Inst_If -> INST_IF Operacion_booleana INST_THEN Bloque_Inst INST_ELSE Bloque_Inst .)
    SEMICOLON       reduce using rule 59 (Inst_If -> INST_IF Operacion_booleana INST_THEN Bloque_Inst INST_ELSE Bloque_Inst .)
    INST_END        reduce using rule 59 (Inst_If -> INST_IF Operacion_booleana INST_THEN Bloque_Inst INST_ELSE Bloque_Inst .)
    INST_ELSE       reduce using rule 59 (Inst_If -> INST_IF Operacion_booleana INST_THEN Bloque_Inst INST_ELSE Bloque_Inst .)
    VAR_IDENTIFIER  reduce using rule 59 (Inst_If -> INST_IF Operacion_booleana INST_THEN Bloque_Inst INST_ELSE Bloque_Inst .)
    LPAREN          reduce using rule 59 (Inst_If -> INST_IF Operacion_booleana INST_THEN Bloque_Inst INST_ELSE Bloque_Inst .)
    NUMBER          reduce using rule 59 (Inst_If -> INST_IF Operacion_booleana INST_THEN Bloque_Inst INST_ELSE Bloque_Inst .)


state 119

    (61) Casos -> VAR_IDENTIFIER - > Bloque_Inst .

    $end            reduce using rule 61 (Casos -> VAR_IDENTIFIER - > Bloque_Inst .)
    SEMICOLON       reduce using rule 61 (Casos -> VAR_IDENTIFIER - > Bloque_Inst .)
    INST_END        reduce using rule 61 (Casos -> VAR_IDENTIFIER - > Bloque_Inst .)
    INST_ELSE       reduce using rule 61 (Casos -> VAR_IDENTIFIER - > Bloque_Inst .)
    VAR_IDENTIFIER  reduce using rule 61 (Casos -> VAR_IDENTIFIER - > Bloque_Inst .)
    LPAREN          reduce using rule 61 (Casos -> VAR_IDENTIFIER - > Bloque_Inst .)
    NUMBER          reduce using rule 61 (Casos -> VAR_IDENTIFIER - > Bloque_Inst .)


state 120

    (62) Casos -> Rango - > Bloque_Inst .

    $end            reduce using rule 62 (Casos -> Rango - > Bloque_Inst .)
    SEMICOLON       reduce using rule 62 (Casos -> Rango - > Bloque_Inst .)
    INST_END        reduce using rule 62 (Casos -> Rango - > Bloque_Inst .)
    INST_ELSE       reduce using rule 62 (Casos -> Rango - > Bloque_Inst .)
    VAR_IDENTIFIER  reduce using rule 62 (Casos -> Rango - > Bloque_Inst .)
    LPAREN          reduce using rule 62 (Casos -> Rango - > Bloque_Inst .)
    NUMBER          reduce using rule 62 (Casos -> Rango - > Bloque_Inst .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for TIMES in state 31 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 96 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 96 resolved as shift
WARNING: shift/reduce conflict for INTERSECTION in state 96 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 100 resolved as shift
WARNING: shift/reduce conflict for VAR_IDENTIFIER in state 107 resolved as shift
WARNING: shift/reduce conflict for LPAREN in state 107 resolved as shift
WARNING: shift/reduce conflict for NUMBER in state 107 resolved as shift
WARNING: shift/reduce conflict for INST_ELSE in state 109 resolved as shift
WARNING: shift/reduce conflict for VAR_IDENTIFIER in state 112 resolved as shift
WARNING: shift/reduce conflict for LPAREN in state 112 resolved as shift
WARNING: shift/reduce conflict for NUMBER in state 112 resolved as shift
