Created by PLY version 3.4 (http://www.dabeaz.com/ply)

Unused terminals:

    COMMENT
    CASE_ASSIGN
    RESERVED
    IN
    NOT
    MOD

Grammar

Rule 0     S' -> program
Rule 1     program -> INST_PROGRAM Bloque_Inst
Rule 2     Bloque_Inst -> INST_BEGIN Lista_Inst INST_END
Rule 3     Bloque_Inst -> Inst
Rule 4     Lista_Inst -> Inst
Rule 5     Lista_Inst -> Inst SEMICOLON Lista_Inst
Rule 6     Inst -> Inst_Declare
Rule 7     Inst -> Inst_Asignacion
Rule 8     Inst -> Inst_Lectura
Rule 9     Inst -> Inst_For
Rule 10    Inst -> Inst_While
Rule 11    Inst -> Inst_If
Rule 12    Inst -> Inst_Case
Rule 13    Inst -> Inst_Salida
Rule 14    Inst -> Inst_Funcion
Rule 15    Inst_Funcion -> RTOI LPAREN VAR_IDENTIFIER RPAREN
Rule 16    Inst_Funcion -> LENGTH LPAREN VAR_IDENTIFIER RPAREN
Rule 17    Inst_Funcion -> TOP LPAREN VAR_IDENTIFIER RPAREN
Rule 18    Inst_Funcion -> BOTTOM LPAREN VAR_IDENTIFIER RPAREN
Rule 19    Inst_Declare -> INST_DECLARE Lista_Declare
Rule 20    Lista_Declare -> Lista_Variables INST_AS Tipo
Rule 21    Lista_Variables -> VAR_IDENTIFIER
Rule 22    Lista_Variables -> VAR_IDENTIFIER COMMA Lista_Variables
Rule 23    Tipo -> TYPEDEF_INT
Rule 24    Tipo -> TYPEDEF_BOOL
Rule 25    Tipo -> TYPEDEF_RANGE
Rule 26    Inst_Asignacion -> VAR_IDENTIFIER EQUAL Expresion
Rule 27    Expresion -> Operacion_binaria
Rule 28    Expresion -> Operacion_booleana
Rule 29    Expresion -> Rango
Rule 30    Operacion_booleana -> Operacion_binaria Opr_bool Operacion_binaria
Rule 31    Operacion_booleana -> Operacion_booleana AND Operacion_booleana
Rule 32    Operacion_booleana -> Operacion_booleana OR Operacion_booleana
Rule 33    Operacion_booleana -> LPAREN Operacion_booleana RPAREN
Rule 34    Operacion_booleana -> TRUE
Rule 35    Operacion_booleana -> FALSE
Rule 36    Opr_bool -> EQEQ
Rule 37    Opr_bool -> NEQEQ
Rule 38    Opr_bool -> GREAT
Rule 39    Opr_bool -> LESS
Rule 40    Opr_bool -> GREATEQ
Rule 41    Opr_bool -> LESSEQ
Rule 42    Operacion_binaria -> Operacion_binaria PLUS Term
Rule 43    Operacion_binaria -> Operacion_binaria MINUS Term
Rule 44    Operacion_binaria -> Term
Rule 45    Term -> Term TIMES Factor
Rule 46    Term -> Term DIVIDE Factor
Rule 47    Term -> Factor
Rule 48    Factor -> NUMBER
Rule 49    Factor -> VAR_IDENTIFIER
Rule 50    Factor -> LPAREN Operacion_binaria RPAREN
Rule 51    Rango -> Operacion_binaria RANGE Operacion_binaria
Rule 52    Rango -> Rango PLUS Rango
Rule 53    Rango -> Rango TIMES Operacion_binaria
Rule 54    Rango -> Rango INTERSECTION Rango
Rule 55    Rango -> RangoF
Rule 56    RangoF -> LPAREN Rango RPAREN
Rule 57    Inst_Lectura -> INST_READ VAR_IDENTIFIER
Rule 58    Inst_Salida -> INST_WRITE Lista_Aux
Rule 59    Inst_Salida -> INST_WRITELN Lista_Aux
Rule 60    Lista_Aux -> Expresion
Rule 61    Lista_Aux -> STRING
Rule 62    Lista_Aux -> Expresion COMMA Lista_Aux
Rule 63    Lista_Aux -> STRING COMMA Lista_Aux
Rule 64    Inst_If -> INST_IF Operacion_booleana INST_THEN Bloque_Inst
Rule 65    Inst_If -> INST_IF Operacion_booleana INST_THEN Bloque_Inst INST_ELSE Bloque_Inst
Rule 66    Inst_Case -> INST_CASE Operacion_binaria INST_OF Casos
Rule 67    Casos -> VAR_IDENTIFIER - > Bloque_Inst
Rule 68    Casos -> Rango - > Bloque_Inst
Rule 69    Casos -> Casos Casos
Rule 70    Inst_For -> INST_FOR VAR_IDENTIFIER INST_IN Rango INST_DO Bloque_Inst
Rule 71    Inst_While -> INST_WHILE Operacion_booleana INST_DO Bloque_Inst

Terminals, with rules where they appear

-                    : 67 68
>                    : 67 68
AND                  : 31
BOTTOM               : 18
CASE_ASSIGN          : 
COMMA                : 22 62 63
COMMENT              : 
DIVIDE               : 46
EQEQ                 : 36
EQUAL                : 26
FALSE                : 35
GREAT                : 38
GREATEQ              : 40
IN                   : 
INST_AS              : 20
INST_BEGIN           : 2
INST_CASE            : 66
INST_DECLARE         : 19
INST_DO              : 70 71
INST_ELSE            : 65
INST_END             : 2
INST_FOR             : 70
INST_IF              : 64 65
INST_IN              : 70
INST_OF              : 66
INST_PROGRAM         : 1
INST_READ            : 57
INST_THEN            : 64 65
INST_WHILE           : 71
INST_WRITE           : 58
INST_WRITELN         : 59
INTERSECTION         : 54
LENGTH               : 16
LESS                 : 39
LESSEQ               : 41
LPAREN               : 15 16 17 18 33 50 56
MINUS                : 43
MOD                  : 
NEQEQ                : 37
NOT                  : 
NUMBER               : 48
OR                   : 32
PLUS                 : 42 52
RANGE                : 51
RESERVED             : 
RPAREN               : 15 16 17 18 33 50 56
RTOI                 : 15
SEMICOLON            : 5
STRING               : 61 63
TIMES                : 45 53
TOP                  : 17
TRUE                 : 34
TYPEDEF_BOOL         : 24
TYPEDEF_INT          : 23
TYPEDEF_RANGE        : 25
VAR_IDENTIFIER       : 15 16 17 18 21 22 26 49 57 67 70
error                : 

Nonterminals, with rules where they appear

Bloque_Inst          : 1 64 65 65 67 68 70 71
Casos                : 66 69 69
Expresion            : 26 60 62
Factor               : 45 46 47
Inst                 : 3 4 5
Inst_Asignacion      : 7
Inst_Case            : 12
Inst_Declare         : 6
Inst_For             : 9
Inst_Funcion         : 14
Inst_If              : 11
Inst_Lectura         : 8
Inst_Salida          : 13
Inst_While           : 10
Lista_Aux            : 58 59 62 63
Lista_Declare        : 19
Lista_Inst           : 2 5
Lista_Variables      : 20 22
Operacion_binaria    : 27 30 30 42 43 50 51 51 53 66
Operacion_booleana   : 28 31 31 32 32 33 64 65 71
Opr_bool             : 30
Rango                : 29 52 52 53 54 54 56 68 70
RangoF               : 55
Term                 : 42 43 44 45 46
Tipo                 : 20
program              : 0

Parsing method: LALR

state 0

    (0) S' -> . program
    (1) program -> . INST_PROGRAM Bloque_Inst

    INST_PROGRAM    shift and go to state 2

    program                        shift and go to state 1

state 1

    (0) S' -> program .



state 2

    (1) program -> INST_PROGRAM . Bloque_Inst
    (2) Bloque_Inst -> . INST_BEGIN Lista_Inst INST_END
    (3) Bloque_Inst -> . Inst
    (6) Inst -> . Inst_Declare
    (7) Inst -> . Inst_Asignacion
    (8) Inst -> . Inst_Lectura
    (9) Inst -> . Inst_For
    (10) Inst -> . Inst_While
    (11) Inst -> . Inst_If
    (12) Inst -> . Inst_Case
    (13) Inst -> . Inst_Salida
    (14) Inst -> . Inst_Funcion
    (19) Inst_Declare -> . INST_DECLARE Lista_Declare
    (26) Inst_Asignacion -> . VAR_IDENTIFIER EQUAL Expresion
    (57) Inst_Lectura -> . INST_READ VAR_IDENTIFIER
    (70) Inst_For -> . INST_FOR VAR_IDENTIFIER INST_IN Rango INST_DO Bloque_Inst
    (71) Inst_While -> . INST_WHILE Operacion_booleana INST_DO Bloque_Inst
    (64) Inst_If -> . INST_IF Operacion_booleana INST_THEN Bloque_Inst
    (65) Inst_If -> . INST_IF Operacion_booleana INST_THEN Bloque_Inst INST_ELSE Bloque_Inst
    (66) Inst_Case -> . INST_CASE Operacion_binaria INST_OF Casos
    (58) Inst_Salida -> . INST_WRITE Lista_Aux
    (59) Inst_Salida -> . INST_WRITELN Lista_Aux
    (15) Inst_Funcion -> . RTOI LPAREN VAR_IDENTIFIER RPAREN
    (16) Inst_Funcion -> . LENGTH LPAREN VAR_IDENTIFIER RPAREN
    (17) Inst_Funcion -> . TOP LPAREN VAR_IDENTIFIER RPAREN
    (18) Inst_Funcion -> . BOTTOM LPAREN VAR_IDENTIFIER RPAREN

    INST_BEGIN      shift and go to state 11
    INST_DECLARE    shift and go to state 3
    VAR_IDENTIFIER  shift and go to state 18
    INST_READ       shift and go to state 10
    INST_FOR        shift and go to state 21
    INST_WHILE      shift and go to state 9
    INST_IF         shift and go to state 22
    INST_CASE       shift and go to state 20
    INST_WRITE      shift and go to state 5
    INST_WRITELN    shift and go to state 23
    RTOI            shift and go to state 25
    LENGTH          shift and go to state 24
    TOP             shift and go to state 6
    BOTTOM          shift and go to state 13

    Inst_Salida                    shift and go to state 8
    Inst_Declare                   shift and go to state 12
    Inst_Funcion                   shift and go to state 4
    Bloque_Inst                    shift and go to state 7
    Inst_If                        shift and go to state 19
    Inst_For                       shift and go to state 14
    Inst_While                     shift and go to state 16
    Inst                           shift and go to state 15
    Inst_Asignacion                shift and go to state 26
    Inst_Case                      shift and go to state 27
    Inst_Lectura                   shift and go to state 17

state 3

    (19) Inst_Declare -> INST_DECLARE . Lista_Declare
    (20) Lista_Declare -> . Lista_Variables INST_AS Tipo
    (21) Lista_Variables -> . VAR_IDENTIFIER
    (22) Lista_Variables -> . VAR_IDENTIFIER COMMA Lista_Variables

    VAR_IDENTIFIER  shift and go to state 28

    Lista_Variables                shift and go to state 29
    Lista_Declare                  shift and go to state 30

state 4

    (14) Inst -> Inst_Funcion .

    $end            reduce using rule 14 (Inst -> Inst_Funcion .)
    SEMICOLON       reduce using rule 14 (Inst -> Inst_Funcion .)
    INST_END        reduce using rule 14 (Inst -> Inst_Funcion .)
    INST_ELSE       reduce using rule 14 (Inst -> Inst_Funcion .)
    VAR_IDENTIFIER  reduce using rule 14 (Inst -> Inst_Funcion .)
    LPAREN          reduce using rule 14 (Inst -> Inst_Funcion .)
    NUMBER          reduce using rule 14 (Inst -> Inst_Funcion .)


state 5

    (58) Inst_Salida -> INST_WRITE . Lista_Aux
    (60) Lista_Aux -> . Expresion
    (61) Lista_Aux -> . STRING
    (62) Lista_Aux -> . Expresion COMMA Lista_Aux
    (63) Lista_Aux -> . STRING COMMA Lista_Aux
    (27) Expresion -> . Operacion_binaria
    (28) Expresion -> . Operacion_booleana
    (29) Expresion -> . Rango
    (42) Operacion_binaria -> . Operacion_binaria PLUS Term
    (43) Operacion_binaria -> . Operacion_binaria MINUS Term
    (44) Operacion_binaria -> . Term
    (30) Operacion_booleana -> . Operacion_binaria Opr_bool Operacion_binaria
    (31) Operacion_booleana -> . Operacion_booleana AND Operacion_booleana
    (32) Operacion_booleana -> . Operacion_booleana OR Operacion_booleana
    (33) Operacion_booleana -> . LPAREN Operacion_booleana RPAREN
    (34) Operacion_booleana -> . TRUE
    (35) Operacion_booleana -> . FALSE
    (51) Rango -> . Operacion_binaria RANGE Operacion_binaria
    (52) Rango -> . Rango PLUS Rango
    (53) Rango -> . Rango TIMES Operacion_binaria
    (54) Rango -> . Rango INTERSECTION Rango
    (55) Rango -> . RangoF
    (45) Term -> . Term TIMES Factor
    (46) Term -> . Term DIVIDE Factor
    (47) Term -> . Factor
    (56) RangoF -> . LPAREN Rango RPAREN
    (48) Factor -> . NUMBER
    (49) Factor -> . VAR_IDENTIFIER
    (50) Factor -> . LPAREN Operacion_binaria RPAREN

    STRING          shift and go to state 38
    LPAREN          shift and go to state 41
    TRUE            shift and go to state 34
    FALSE           shift and go to state 44
    NUMBER          shift and go to state 32
    VAR_IDENTIFIER  shift and go to state 40

    Expresion                      shift and go to state 36
    Operacion_binaria              shift and go to state 43
    RangoF                         shift and go to state 33
    Factor                         shift and go to state 39
    Term                           shift and go to state 37
    Lista_Aux                      shift and go to state 31
    Rango                          shift and go to state 42
    Operacion_booleana             shift and go to state 35

state 6

    (17) Inst_Funcion -> TOP . LPAREN VAR_IDENTIFIER RPAREN

    LPAREN          shift and go to state 45


state 7

    (1) program -> INST_PROGRAM Bloque_Inst .

    $end            reduce using rule 1 (program -> INST_PROGRAM Bloque_Inst .)


state 8

    (13) Inst -> Inst_Salida .

    $end            reduce using rule 13 (Inst -> Inst_Salida .)
    SEMICOLON       reduce using rule 13 (Inst -> Inst_Salida .)
    INST_END        reduce using rule 13 (Inst -> Inst_Salida .)
    INST_ELSE       reduce using rule 13 (Inst -> Inst_Salida .)
    VAR_IDENTIFIER  reduce using rule 13 (Inst -> Inst_Salida .)
    LPAREN          reduce using rule 13 (Inst -> Inst_Salida .)
    NUMBER          reduce using rule 13 (Inst -> Inst_Salida .)


state 9

    (71) Inst_While -> INST_WHILE . Operacion_booleana INST_DO Bloque_Inst
    (30) Operacion_booleana -> . Operacion_binaria Opr_bool Operacion_binaria
    (31) Operacion_booleana -> . Operacion_booleana AND Operacion_booleana
    (32) Operacion_booleana -> . Operacion_booleana OR Operacion_booleana
    (33) Operacion_booleana -> . LPAREN Operacion_booleana RPAREN
    (34) Operacion_booleana -> . TRUE
    (35) Operacion_booleana -> . FALSE
    (42) Operacion_binaria -> . Operacion_binaria PLUS Term
    (43) Operacion_binaria -> . Operacion_binaria MINUS Term
    (44) Operacion_binaria -> . Term
    (45) Term -> . Term TIMES Factor
    (46) Term -> . Term DIVIDE Factor
    (47) Term -> . Factor
    (48) Factor -> . NUMBER
    (49) Factor -> . VAR_IDENTIFIER
    (50) Factor -> . LPAREN Operacion_binaria RPAREN

    LPAREN          shift and go to state 47
    TRUE            shift and go to state 34
    FALSE           shift and go to state 44
    NUMBER          shift and go to state 32
    VAR_IDENTIFIER  shift and go to state 40

    Operacion_binaria              shift and go to state 46
    Term                           shift and go to state 37
    Factor                         shift and go to state 39
    Operacion_booleana             shift and go to state 48

state 10

    (57) Inst_Lectura -> INST_READ . VAR_IDENTIFIER

    VAR_IDENTIFIER  shift and go to state 49


state 11

    (2) Bloque_Inst -> INST_BEGIN . Lista_Inst INST_END
    (4) Lista_Inst -> . Inst
    (5) Lista_Inst -> . Inst SEMICOLON Lista_Inst
    (6) Inst -> . Inst_Declare
    (7) Inst -> . Inst_Asignacion
    (8) Inst -> . Inst_Lectura
    (9) Inst -> . Inst_For
    (10) Inst -> . Inst_While
    (11) Inst -> . Inst_If
    (12) Inst -> . Inst_Case
    (13) Inst -> . Inst_Salida
    (14) Inst -> . Inst_Funcion
    (19) Inst_Declare -> . INST_DECLARE Lista_Declare
    (26) Inst_Asignacion -> . VAR_IDENTIFIER EQUAL Expresion
    (57) Inst_Lectura -> . INST_READ VAR_IDENTIFIER
    (70) Inst_For -> . INST_FOR VAR_IDENTIFIER INST_IN Rango INST_DO Bloque_Inst
    (71) Inst_While -> . INST_WHILE Operacion_booleana INST_DO Bloque_Inst
    (64) Inst_If -> . INST_IF Operacion_booleana INST_THEN Bloque_Inst
    (65) Inst_If -> . INST_IF Operacion_booleana INST_THEN Bloque_Inst INST_ELSE Bloque_Inst
    (66) Inst_Case -> . INST_CASE Operacion_binaria INST_OF Casos
    (58) Inst_Salida -> . INST_WRITE Lista_Aux
    (59) Inst_Salida -> . INST_WRITELN Lista_Aux
    (15) Inst_Funcion -> . RTOI LPAREN VAR_IDENTIFIER RPAREN
    (16) Inst_Funcion -> . LENGTH LPAREN VAR_IDENTIFIER RPAREN
    (17) Inst_Funcion -> . TOP LPAREN VAR_IDENTIFIER RPAREN
    (18) Inst_Funcion -> . BOTTOM LPAREN VAR_IDENTIFIER RPAREN

    INST_DECLARE    shift and go to state 3
    VAR_IDENTIFIER  shift and go to state 18
    INST_READ       shift and go to state 10
    INST_FOR        shift and go to state 21
    INST_WHILE      shift and go to state 9
    INST_IF         shift and go to state 22
    INST_CASE       shift and go to state 20
    INST_WRITE      shift and go to state 5
    INST_WRITELN    shift and go to state 23
    RTOI            shift and go to state 25
    LENGTH          shift and go to state 24
    TOP             shift and go to state 6
    BOTTOM          shift and go to state 13

    Inst_Salida                    shift and go to state 8
    Inst_Declare                   shift and go to state 12
    Inst_Funcion                   shift and go to state 4
    Inst_If                        shift and go to state 19
    Inst_For                       shift and go to state 14
    Inst_While                     shift and go to state 16
    Inst                           shift and go to state 50
    Inst_Asignacion                shift and go to state 26
    Inst_Case                      shift and go to state 27
    Inst_Lectura                   shift and go to state 17
    Lista_Inst                     shift and go to state 51

state 12

    (6) Inst -> Inst_Declare .

    $end            reduce using rule 6 (Inst -> Inst_Declare .)
    SEMICOLON       reduce using rule 6 (Inst -> Inst_Declare .)
    INST_END        reduce using rule 6 (Inst -> Inst_Declare .)
    INST_ELSE       reduce using rule 6 (Inst -> Inst_Declare .)
    VAR_IDENTIFIER  reduce using rule 6 (Inst -> Inst_Declare .)
    LPAREN          reduce using rule 6 (Inst -> Inst_Declare .)
    NUMBER          reduce using rule 6 (Inst -> Inst_Declare .)


state 13

    (18) Inst_Funcion -> BOTTOM . LPAREN VAR_IDENTIFIER RPAREN

    LPAREN          shift and go to state 52


state 14

    (9) Inst -> Inst_For .

    $end            reduce using rule 9 (Inst -> Inst_For .)
    SEMICOLON       reduce using rule 9 (Inst -> Inst_For .)
    INST_END        reduce using rule 9 (Inst -> Inst_For .)
    INST_ELSE       reduce using rule 9 (Inst -> Inst_For .)
    VAR_IDENTIFIER  reduce using rule 9 (Inst -> Inst_For .)
    LPAREN          reduce using rule 9 (Inst -> Inst_For .)
    NUMBER          reduce using rule 9 (Inst -> Inst_For .)


state 15

    (3) Bloque_Inst -> Inst .

    $end            reduce using rule 3 (Bloque_Inst -> Inst .)
    SEMICOLON       reduce using rule 3 (Bloque_Inst -> Inst .)
    INST_END        reduce using rule 3 (Bloque_Inst -> Inst .)
    INST_ELSE       reduce using rule 3 (Bloque_Inst -> Inst .)
    VAR_IDENTIFIER  reduce using rule 3 (Bloque_Inst -> Inst .)
    LPAREN          reduce using rule 3 (Bloque_Inst -> Inst .)
    NUMBER          reduce using rule 3 (Bloque_Inst -> Inst .)


state 16

    (10) Inst -> Inst_While .

    $end            reduce using rule 10 (Inst -> Inst_While .)
    SEMICOLON       reduce using rule 10 (Inst -> Inst_While .)
    INST_END        reduce using rule 10 (Inst -> Inst_While .)
    INST_ELSE       reduce using rule 10 (Inst -> Inst_While .)
    VAR_IDENTIFIER  reduce using rule 10 (Inst -> Inst_While .)
    LPAREN          reduce using rule 10 (Inst -> Inst_While .)
    NUMBER          reduce using rule 10 (Inst -> Inst_While .)


state 17

    (8) Inst -> Inst_Lectura .

    $end            reduce using rule 8 (Inst -> Inst_Lectura .)
    SEMICOLON       reduce using rule 8 (Inst -> Inst_Lectura .)
    INST_END        reduce using rule 8 (Inst -> Inst_Lectura .)
    INST_ELSE       reduce using rule 8 (Inst -> Inst_Lectura .)
    VAR_IDENTIFIER  reduce using rule 8 (Inst -> Inst_Lectura .)
    LPAREN          reduce using rule 8 (Inst -> Inst_Lectura .)
    NUMBER          reduce using rule 8 (Inst -> Inst_Lectura .)


state 18

    (26) Inst_Asignacion -> VAR_IDENTIFIER . EQUAL Expresion

    EQUAL           shift and go to state 53


state 19

    (11) Inst -> Inst_If .

    $end            reduce using rule 11 (Inst -> Inst_If .)
    SEMICOLON       reduce using rule 11 (Inst -> Inst_If .)
    INST_END        reduce using rule 11 (Inst -> Inst_If .)
    INST_ELSE       reduce using rule 11 (Inst -> Inst_If .)
    VAR_IDENTIFIER  reduce using rule 11 (Inst -> Inst_If .)
    LPAREN          reduce using rule 11 (Inst -> Inst_If .)
    NUMBER          reduce using rule 11 (Inst -> Inst_If .)


state 20

    (66) Inst_Case -> INST_CASE . Operacion_binaria INST_OF Casos
    (42) Operacion_binaria -> . Operacion_binaria PLUS Term
    (43) Operacion_binaria -> . Operacion_binaria MINUS Term
    (44) Operacion_binaria -> . Term
    (45) Term -> . Term TIMES Factor
    (46) Term -> . Term DIVIDE Factor
    (47) Term -> . Factor
    (48) Factor -> . NUMBER
    (49) Factor -> . VAR_IDENTIFIER
    (50) Factor -> . LPAREN Operacion_binaria RPAREN

    NUMBER          shift and go to state 32
    VAR_IDENTIFIER  shift and go to state 40
    LPAREN          shift and go to state 55

    Operacion_binaria              shift and go to state 54
    Term                           shift and go to state 37
    Factor                         shift and go to state 39

state 21

    (70) Inst_For -> INST_FOR . VAR_IDENTIFIER INST_IN Rango INST_DO Bloque_Inst

    VAR_IDENTIFIER  shift and go to state 56


state 22

    (64) Inst_If -> INST_IF . Operacion_booleana INST_THEN Bloque_Inst
    (65) Inst_If -> INST_IF . Operacion_booleana INST_THEN Bloque_Inst INST_ELSE Bloque_Inst
    (30) Operacion_booleana -> . Operacion_binaria Opr_bool Operacion_binaria
    (31) Operacion_booleana -> . Operacion_booleana AND Operacion_booleana
    (32) Operacion_booleana -> . Operacion_booleana OR Operacion_booleana
    (33) Operacion_booleana -> . LPAREN Operacion_booleana RPAREN
    (34) Operacion_booleana -> . TRUE
    (35) Operacion_booleana -> . FALSE
    (42) Operacion_binaria -> . Operacion_binaria PLUS Term
    (43) Operacion_binaria -> . Operacion_binaria MINUS Term
    (44) Operacion_binaria -> . Term
    (45) Term -> . Term TIMES Factor
    (46) Term -> . Term DIVIDE Factor
    (47) Term -> . Factor
    (48) Factor -> . NUMBER
    (49) Factor -> . VAR_IDENTIFIER
    (50) Factor -> . LPAREN Operacion_binaria RPAREN

    LPAREN          shift and go to state 47
    TRUE            shift and go to state 34
    FALSE           shift and go to state 44
    NUMBER          shift and go to state 32
    VAR_IDENTIFIER  shift and go to state 40

    Operacion_binaria              shift and go to state 46
    Term                           shift and go to state 37
    Factor                         shift and go to state 39
    Operacion_booleana             shift and go to state 57

state 23

    (59) Inst_Salida -> INST_WRITELN . Lista_Aux
    (60) Lista_Aux -> . Expresion
    (61) Lista_Aux -> . STRING
    (62) Lista_Aux -> . Expresion COMMA Lista_Aux
    (63) Lista_Aux -> . STRING COMMA Lista_Aux
    (27) Expresion -> . Operacion_binaria
    (28) Expresion -> . Operacion_booleana
    (29) Expresion -> . Rango
    (42) Operacion_binaria -> . Operacion_binaria PLUS Term
    (43) Operacion_binaria -> . Operacion_binaria MINUS Term
    (44) Operacion_binaria -> . Term
    (30) Operacion_booleana -> . Operacion_binaria Opr_bool Operacion_binaria
    (31) Operacion_booleana -> . Operacion_booleana AND Operacion_booleana
    (32) Operacion_booleana -> . Operacion_booleana OR Operacion_booleana
    (33) Operacion_booleana -> . LPAREN Operacion_booleana RPAREN
    (34) Operacion_booleana -> . TRUE
    (35) Operacion_booleana -> . FALSE
    (51) Rango -> . Operacion_binaria RANGE Operacion_binaria
    (52) Rango -> . Rango PLUS Rango
    (53) Rango -> . Rango TIMES Operacion_binaria
    (54) Rango -> . Rango INTERSECTION Rango
    (55) Rango -> . RangoF
    (45) Term -> . Term TIMES Factor
    (46) Term -> . Term DIVIDE Factor
    (47) Term -> . Factor
    (56) RangoF -> . LPAREN Rango RPAREN
    (48) Factor -> . NUMBER
    (49) Factor -> . VAR_IDENTIFIER
    (50) Factor -> . LPAREN Operacion_binaria RPAREN

    STRING          shift and go to state 38
    LPAREN          shift and go to state 41
    TRUE            shift and go to state 34
    FALSE           shift and go to state 44
    NUMBER          shift and go to state 32
    VAR_IDENTIFIER  shift and go to state 40

    Expresion                      shift and go to state 36
    Operacion_binaria              shift and go to state 43
    RangoF                         shift and go to state 33
    Factor                         shift and go to state 39
    Term                           shift and go to state 37
    Lista_Aux                      shift and go to state 58
    Rango                          shift and go to state 42
    Operacion_booleana             shift and go to state 35

state 24

    (16) Inst_Funcion -> LENGTH . LPAREN VAR_IDENTIFIER RPAREN

    LPAREN          shift and go to state 59


state 25

    (15) Inst_Funcion -> RTOI . LPAREN VAR_IDENTIFIER RPAREN

    LPAREN          shift and go to state 60


state 26

    (7) Inst -> Inst_Asignacion .

    $end            reduce using rule 7 (Inst -> Inst_Asignacion .)
    SEMICOLON       reduce using rule 7 (Inst -> Inst_Asignacion .)
    INST_END        reduce using rule 7 (Inst -> Inst_Asignacion .)
    INST_ELSE       reduce using rule 7 (Inst -> Inst_Asignacion .)
    VAR_IDENTIFIER  reduce using rule 7 (Inst -> Inst_Asignacion .)
    LPAREN          reduce using rule 7 (Inst -> Inst_Asignacion .)
    NUMBER          reduce using rule 7 (Inst -> Inst_Asignacion .)


state 27

    (12) Inst -> Inst_Case .

    $end            reduce using rule 12 (Inst -> Inst_Case .)
    SEMICOLON       reduce using rule 12 (Inst -> Inst_Case .)
    INST_END        reduce using rule 12 (Inst -> Inst_Case .)
    INST_ELSE       reduce using rule 12 (Inst -> Inst_Case .)
    VAR_IDENTIFIER  reduce using rule 12 (Inst -> Inst_Case .)
    LPAREN          reduce using rule 12 (Inst -> Inst_Case .)
    NUMBER          reduce using rule 12 (Inst -> Inst_Case .)


state 28

    (21) Lista_Variables -> VAR_IDENTIFIER .
    (22) Lista_Variables -> VAR_IDENTIFIER . COMMA Lista_Variables

    INST_AS         reduce using rule 21 (Lista_Variables -> VAR_IDENTIFIER .)
    COMMA           shift and go to state 61


state 29

    (20) Lista_Declare -> Lista_Variables . INST_AS Tipo

    INST_AS         shift and go to state 62


state 30

    (19) Inst_Declare -> INST_DECLARE Lista_Declare .

    SEMICOLON       reduce using rule 19 (Inst_Declare -> INST_DECLARE Lista_Declare .)
    INST_END        reduce using rule 19 (Inst_Declare -> INST_DECLARE Lista_Declare .)
    $end            reduce using rule 19 (Inst_Declare -> INST_DECLARE Lista_Declare .)
    INST_ELSE       reduce using rule 19 (Inst_Declare -> INST_DECLARE Lista_Declare .)
    VAR_IDENTIFIER  reduce using rule 19 (Inst_Declare -> INST_DECLARE Lista_Declare .)
    LPAREN          reduce using rule 19 (Inst_Declare -> INST_DECLARE Lista_Declare .)
    NUMBER          reduce using rule 19 (Inst_Declare -> INST_DECLARE Lista_Declare .)


state 31

    (58) Inst_Salida -> INST_WRITE Lista_Aux .

    SEMICOLON       reduce using rule 58 (Inst_Salida -> INST_WRITE Lista_Aux .)
    INST_END        reduce using rule 58 (Inst_Salida -> INST_WRITE Lista_Aux .)
    $end            reduce using rule 58 (Inst_Salida -> INST_WRITE Lista_Aux .)
    INST_ELSE       reduce using rule 58 (Inst_Salida -> INST_WRITE Lista_Aux .)
    VAR_IDENTIFIER  reduce using rule 58 (Inst_Salida -> INST_WRITE Lista_Aux .)
    LPAREN          reduce using rule 58 (Inst_Salida -> INST_WRITE Lista_Aux .)
    NUMBER          reduce using rule 58 (Inst_Salida -> INST_WRITE Lista_Aux .)


state 32

    (48) Factor -> NUMBER .

    TIMES           reduce using rule 48 (Factor -> NUMBER .)
    DIVIDE          reduce using rule 48 (Factor -> NUMBER .)
    PLUS            reduce using rule 48 (Factor -> NUMBER .)
    MINUS           reduce using rule 48 (Factor -> NUMBER .)
    EQEQ            reduce using rule 48 (Factor -> NUMBER .)
    NEQEQ           reduce using rule 48 (Factor -> NUMBER .)
    GREAT           reduce using rule 48 (Factor -> NUMBER .)
    LESS            reduce using rule 48 (Factor -> NUMBER .)
    GREATEQ         reduce using rule 48 (Factor -> NUMBER .)
    LESSEQ          reduce using rule 48 (Factor -> NUMBER .)
    RPAREN          reduce using rule 48 (Factor -> NUMBER .)
    RANGE           reduce using rule 48 (Factor -> NUMBER .)
    COMMA           reduce using rule 48 (Factor -> NUMBER .)
    $end            reduce using rule 48 (Factor -> NUMBER .)
    SEMICOLON       reduce using rule 48 (Factor -> NUMBER .)
    INST_END        reduce using rule 48 (Factor -> NUMBER .)
    INST_ELSE       reduce using rule 48 (Factor -> NUMBER .)
    VAR_IDENTIFIER  reduce using rule 48 (Factor -> NUMBER .)
    LPAREN          reduce using rule 48 (Factor -> NUMBER .)
    NUMBER          reduce using rule 48 (Factor -> NUMBER .)
    INST_OF         reduce using rule 48 (Factor -> NUMBER .)
    INTERSECTION    reduce using rule 48 (Factor -> NUMBER .)
    -               reduce using rule 48 (Factor -> NUMBER .)
    INST_DO         reduce using rule 48 (Factor -> NUMBER .)
    AND             reduce using rule 48 (Factor -> NUMBER .)
    OR              reduce using rule 48 (Factor -> NUMBER .)
    INST_THEN       reduce using rule 48 (Factor -> NUMBER .)


state 33

    (55) Rango -> RangoF .

    RPAREN          reduce using rule 55 (Rango -> RangoF .)
    PLUS            reduce using rule 55 (Rango -> RangoF .)
    TIMES           reduce using rule 55 (Rango -> RangoF .)
    INTERSECTION    reduce using rule 55 (Rango -> RangoF .)
    COMMA           reduce using rule 55 (Rango -> RangoF .)
    $end            reduce using rule 55 (Rango -> RangoF .)
    SEMICOLON       reduce using rule 55 (Rango -> RangoF .)
    INST_END        reduce using rule 55 (Rango -> RangoF .)
    INST_ELSE       reduce using rule 55 (Rango -> RangoF .)
    VAR_IDENTIFIER  reduce using rule 55 (Rango -> RangoF .)
    LPAREN          reduce using rule 55 (Rango -> RangoF .)
    NUMBER          reduce using rule 55 (Rango -> RangoF .)
    -               reduce using rule 55 (Rango -> RangoF .)
    INST_DO         reduce using rule 55 (Rango -> RangoF .)


state 34

    (34) Operacion_booleana -> TRUE .

    AND             reduce using rule 34 (Operacion_booleana -> TRUE .)
    OR              reduce using rule 34 (Operacion_booleana -> TRUE .)
    COMMA           reduce using rule 34 (Operacion_booleana -> TRUE .)
    $end            reduce using rule 34 (Operacion_booleana -> TRUE .)
    SEMICOLON       reduce using rule 34 (Operacion_booleana -> TRUE .)
    INST_END        reduce using rule 34 (Operacion_booleana -> TRUE .)
    INST_ELSE       reduce using rule 34 (Operacion_booleana -> TRUE .)
    VAR_IDENTIFIER  reduce using rule 34 (Operacion_booleana -> TRUE .)
    LPAREN          reduce using rule 34 (Operacion_booleana -> TRUE .)
    NUMBER          reduce using rule 34 (Operacion_booleana -> TRUE .)
    INST_DO         reduce using rule 34 (Operacion_booleana -> TRUE .)
    INST_THEN       reduce using rule 34 (Operacion_booleana -> TRUE .)
    RPAREN          reduce using rule 34 (Operacion_booleana -> TRUE .)


state 35

    (28) Expresion -> Operacion_booleana .
    (31) Operacion_booleana -> Operacion_booleana . AND Operacion_booleana
    (32) Operacion_booleana -> Operacion_booleana . OR Operacion_booleana

    COMMA           reduce using rule 28 (Expresion -> Operacion_booleana .)
    $end            reduce using rule 28 (Expresion -> Operacion_booleana .)
    SEMICOLON       reduce using rule 28 (Expresion -> Operacion_booleana .)
    INST_END        reduce using rule 28 (Expresion -> Operacion_booleana .)
    INST_ELSE       reduce using rule 28 (Expresion -> Operacion_booleana .)
    VAR_IDENTIFIER  reduce using rule 28 (Expresion -> Operacion_booleana .)
    LPAREN          reduce using rule 28 (Expresion -> Operacion_booleana .)
    NUMBER          reduce using rule 28 (Expresion -> Operacion_booleana .)
    AND             shift and go to state 63
    OR              shift and go to state 64


state 36

    (60) Lista_Aux -> Expresion .
    (62) Lista_Aux -> Expresion . COMMA Lista_Aux

    $end            reduce using rule 60 (Lista_Aux -> Expresion .)
    SEMICOLON       reduce using rule 60 (Lista_Aux -> Expresion .)
    INST_END        reduce using rule 60 (Lista_Aux -> Expresion .)
    INST_ELSE       reduce using rule 60 (Lista_Aux -> Expresion .)
    VAR_IDENTIFIER  reduce using rule 60 (Lista_Aux -> Expresion .)
    LPAREN          reduce using rule 60 (Lista_Aux -> Expresion .)
    NUMBER          reduce using rule 60 (Lista_Aux -> Expresion .)
    COMMA           shift and go to state 65


state 37

    (44) Operacion_binaria -> Term .
    (45) Term -> Term . TIMES Factor
    (46) Term -> Term . DIVIDE Factor

  ! shift/reduce conflict for TIMES resolved as shift
    PLUS            reduce using rule 44 (Operacion_binaria -> Term .)
    MINUS           reduce using rule 44 (Operacion_binaria -> Term .)
    RANGE           reduce using rule 44 (Operacion_binaria -> Term .)
    EQEQ            reduce using rule 44 (Operacion_binaria -> Term .)
    NEQEQ           reduce using rule 44 (Operacion_binaria -> Term .)
    GREAT           reduce using rule 44 (Operacion_binaria -> Term .)
    LESS            reduce using rule 44 (Operacion_binaria -> Term .)
    GREATEQ         reduce using rule 44 (Operacion_binaria -> Term .)
    LESSEQ          reduce using rule 44 (Operacion_binaria -> Term .)
    COMMA           reduce using rule 44 (Operacion_binaria -> Term .)
    $end            reduce using rule 44 (Operacion_binaria -> Term .)
    SEMICOLON       reduce using rule 44 (Operacion_binaria -> Term .)
    INST_END        reduce using rule 44 (Operacion_binaria -> Term .)
    INST_ELSE       reduce using rule 44 (Operacion_binaria -> Term .)
    VAR_IDENTIFIER  reduce using rule 44 (Operacion_binaria -> Term .)
    LPAREN          reduce using rule 44 (Operacion_binaria -> Term .)
    NUMBER          reduce using rule 44 (Operacion_binaria -> Term .)
    INTERSECTION    reduce using rule 44 (Operacion_binaria -> Term .)
    RPAREN          reduce using rule 44 (Operacion_binaria -> Term .)
    -               reduce using rule 44 (Operacion_binaria -> Term .)
    INST_DO         reduce using rule 44 (Operacion_binaria -> Term .)
    AND             reduce using rule 44 (Operacion_binaria -> Term .)
    OR              reduce using rule 44 (Operacion_binaria -> Term .)
    INST_THEN       reduce using rule 44 (Operacion_binaria -> Term .)
    INST_OF         reduce using rule 44 (Operacion_binaria -> Term .)
    TIMES           shift and go to state 67
    DIVIDE          shift and go to state 66

  ! TIMES           [ reduce using rule 44 (Operacion_binaria -> Term .) ]


state 38

    (61) Lista_Aux -> STRING .
    (63) Lista_Aux -> STRING . COMMA Lista_Aux

    $end            reduce using rule 61 (Lista_Aux -> STRING .)
    SEMICOLON       reduce using rule 61 (Lista_Aux -> STRING .)
    INST_END        reduce using rule 61 (Lista_Aux -> STRING .)
    INST_ELSE       reduce using rule 61 (Lista_Aux -> STRING .)
    VAR_IDENTIFIER  reduce using rule 61 (Lista_Aux -> STRING .)
    LPAREN          reduce using rule 61 (Lista_Aux -> STRING .)
    NUMBER          reduce using rule 61 (Lista_Aux -> STRING .)
    COMMA           shift and go to state 68


state 39

    (47) Term -> Factor .

    TIMES           reduce using rule 47 (Term -> Factor .)
    DIVIDE          reduce using rule 47 (Term -> Factor .)
    RANGE           reduce using rule 47 (Term -> Factor .)
    PLUS            reduce using rule 47 (Term -> Factor .)
    MINUS           reduce using rule 47 (Term -> Factor .)
    EQEQ            reduce using rule 47 (Term -> Factor .)
    NEQEQ           reduce using rule 47 (Term -> Factor .)
    GREAT           reduce using rule 47 (Term -> Factor .)
    LESS            reduce using rule 47 (Term -> Factor .)
    GREATEQ         reduce using rule 47 (Term -> Factor .)
    LESSEQ          reduce using rule 47 (Term -> Factor .)
    COMMA           reduce using rule 47 (Term -> Factor .)
    $end            reduce using rule 47 (Term -> Factor .)
    SEMICOLON       reduce using rule 47 (Term -> Factor .)
    INST_END        reduce using rule 47 (Term -> Factor .)
    INST_ELSE       reduce using rule 47 (Term -> Factor .)
    VAR_IDENTIFIER  reduce using rule 47 (Term -> Factor .)
    LPAREN          reduce using rule 47 (Term -> Factor .)
    NUMBER          reduce using rule 47 (Term -> Factor .)
    RPAREN          reduce using rule 47 (Term -> Factor .)
    INST_OF         reduce using rule 47 (Term -> Factor .)
    INTERSECTION    reduce using rule 47 (Term -> Factor .)
    -               reduce using rule 47 (Term -> Factor .)
    INST_DO         reduce using rule 47 (Term -> Factor .)
    AND             reduce using rule 47 (Term -> Factor .)
    OR              reduce using rule 47 (Term -> Factor .)
    INST_THEN       reduce using rule 47 (Term -> Factor .)


state 40

    (49) Factor -> VAR_IDENTIFIER .

    TIMES           reduce using rule 49 (Factor -> VAR_IDENTIFIER .)
    DIVIDE          reduce using rule 49 (Factor -> VAR_IDENTIFIER .)
    PLUS            reduce using rule 49 (Factor -> VAR_IDENTIFIER .)
    MINUS           reduce using rule 49 (Factor -> VAR_IDENTIFIER .)
    EQEQ            reduce using rule 49 (Factor -> VAR_IDENTIFIER .)
    NEQEQ           reduce using rule 49 (Factor -> VAR_IDENTIFIER .)
    GREAT           reduce using rule 49 (Factor -> VAR_IDENTIFIER .)
    LESS            reduce using rule 49 (Factor -> VAR_IDENTIFIER .)
    GREATEQ         reduce using rule 49 (Factor -> VAR_IDENTIFIER .)
    LESSEQ          reduce using rule 49 (Factor -> VAR_IDENTIFIER .)
    RPAREN          reduce using rule 49 (Factor -> VAR_IDENTIFIER .)
    RANGE           reduce using rule 49 (Factor -> VAR_IDENTIFIER .)
    COMMA           reduce using rule 49 (Factor -> VAR_IDENTIFIER .)
    $end            reduce using rule 49 (Factor -> VAR_IDENTIFIER .)
    SEMICOLON       reduce using rule 49 (Factor -> VAR_IDENTIFIER .)
    INST_END        reduce using rule 49 (Factor -> VAR_IDENTIFIER .)
    INST_ELSE       reduce using rule 49 (Factor -> VAR_IDENTIFIER .)
    VAR_IDENTIFIER  reduce using rule 49 (Factor -> VAR_IDENTIFIER .)
    LPAREN          reduce using rule 49 (Factor -> VAR_IDENTIFIER .)
    NUMBER          reduce using rule 49 (Factor -> VAR_IDENTIFIER .)
    INST_OF         reduce using rule 49 (Factor -> VAR_IDENTIFIER .)
    INTERSECTION    reduce using rule 49 (Factor -> VAR_IDENTIFIER .)
    -               reduce using rule 49 (Factor -> VAR_IDENTIFIER .)
    INST_DO         reduce using rule 49 (Factor -> VAR_IDENTIFIER .)
    AND             reduce using rule 49 (Factor -> VAR_IDENTIFIER .)
    OR              reduce using rule 49 (Factor -> VAR_IDENTIFIER .)
    INST_THEN       reduce using rule 49 (Factor -> VAR_IDENTIFIER .)


state 41

    (33) Operacion_booleana -> LPAREN . Operacion_booleana RPAREN
    (56) RangoF -> LPAREN . Rango RPAREN
    (50) Factor -> LPAREN . Operacion_binaria RPAREN
    (30) Operacion_booleana -> . Operacion_binaria Opr_bool Operacion_binaria
    (31) Operacion_booleana -> . Operacion_booleana AND Operacion_booleana
    (32) Operacion_booleana -> . Operacion_booleana OR Operacion_booleana
    (33) Operacion_booleana -> . LPAREN Operacion_booleana RPAREN
    (34) Operacion_booleana -> . TRUE
    (35) Operacion_booleana -> . FALSE
    (51) Rango -> . Operacion_binaria RANGE Operacion_binaria
    (52) Rango -> . Rango PLUS Rango
    (53) Rango -> . Rango TIMES Operacion_binaria
    (54) Rango -> . Rango INTERSECTION Rango
    (55) Rango -> . RangoF
    (42) Operacion_binaria -> . Operacion_binaria PLUS Term
    (43) Operacion_binaria -> . Operacion_binaria MINUS Term
    (44) Operacion_binaria -> . Term
    (56) RangoF -> . LPAREN Rango RPAREN
    (45) Term -> . Term TIMES Factor
    (46) Term -> . Term DIVIDE Factor
    (47) Term -> . Factor
    (48) Factor -> . NUMBER
    (49) Factor -> . VAR_IDENTIFIER
    (50) Factor -> . LPAREN Operacion_binaria RPAREN

    LPAREN          shift and go to state 41
    TRUE            shift and go to state 34
    FALSE           shift and go to state 44
    NUMBER          shift and go to state 32
    VAR_IDENTIFIER  shift and go to state 40

    Operacion_binaria              shift and go to state 69
    Factor                         shift and go to state 39
    Term                           shift and go to state 37
    RangoF                         shift and go to state 33
    Rango                          shift and go to state 70
    Operacion_booleana             shift and go to state 71

state 42

    (29) Expresion -> Rango .
    (52) Rango -> Rango . PLUS Rango
    (53) Rango -> Rango . TIMES Operacion_binaria
    (54) Rango -> Rango . INTERSECTION Rango

    COMMA           reduce using rule 29 (Expresion -> Rango .)
    $end            reduce using rule 29 (Expresion -> Rango .)
    SEMICOLON       reduce using rule 29 (Expresion -> Rango .)
    INST_END        reduce using rule 29 (Expresion -> Rango .)
    INST_ELSE       reduce using rule 29 (Expresion -> Rango .)
    VAR_IDENTIFIER  reduce using rule 29 (Expresion -> Rango .)
    LPAREN          reduce using rule 29 (Expresion -> Rango .)
    NUMBER          reduce using rule 29 (Expresion -> Rango .)
    PLUS            shift and go to state 73
    TIMES           shift and go to state 74
    INTERSECTION    shift and go to state 72


state 43

    (27) Expresion -> Operacion_binaria .
    (42) Operacion_binaria -> Operacion_binaria . PLUS Term
    (43) Operacion_binaria -> Operacion_binaria . MINUS Term
    (30) Operacion_booleana -> Operacion_binaria . Opr_bool Operacion_binaria
    (51) Rango -> Operacion_binaria . RANGE Operacion_binaria
    (36) Opr_bool -> . EQEQ
    (37) Opr_bool -> . NEQEQ
    (38) Opr_bool -> . GREAT
    (39) Opr_bool -> . LESS
    (40) Opr_bool -> . GREATEQ
    (41) Opr_bool -> . LESSEQ

    COMMA           reduce using rule 27 (Expresion -> Operacion_binaria .)
    $end            reduce using rule 27 (Expresion -> Operacion_binaria .)
    SEMICOLON       reduce using rule 27 (Expresion -> Operacion_binaria .)
    INST_END        reduce using rule 27 (Expresion -> Operacion_binaria .)
    INST_ELSE       reduce using rule 27 (Expresion -> Operacion_binaria .)
    VAR_IDENTIFIER  reduce using rule 27 (Expresion -> Operacion_binaria .)
    LPAREN          reduce using rule 27 (Expresion -> Operacion_binaria .)
    NUMBER          reduce using rule 27 (Expresion -> Operacion_binaria .)
    PLUS            shift and go to state 83
    MINUS           shift and go to state 84
    RANGE           shift and go to state 81
    EQEQ            shift and go to state 80
    NEQEQ           shift and go to state 77
    GREAT           shift and go to state 76
    LESS            shift and go to state 79
    GREATEQ         shift and go to state 75
    LESSEQ          shift and go to state 82

    Opr_bool                       shift and go to state 78

state 44

    (35) Operacion_booleana -> FALSE .

    AND             reduce using rule 35 (Operacion_booleana -> FALSE .)
    OR              reduce using rule 35 (Operacion_booleana -> FALSE .)
    COMMA           reduce using rule 35 (Operacion_booleana -> FALSE .)
    $end            reduce using rule 35 (Operacion_booleana -> FALSE .)
    SEMICOLON       reduce using rule 35 (Operacion_booleana -> FALSE .)
    INST_END        reduce using rule 35 (Operacion_booleana -> FALSE .)
    INST_ELSE       reduce using rule 35 (Operacion_booleana -> FALSE .)
    VAR_IDENTIFIER  reduce using rule 35 (Operacion_booleana -> FALSE .)
    LPAREN          reduce using rule 35 (Operacion_booleana -> FALSE .)
    NUMBER          reduce using rule 35 (Operacion_booleana -> FALSE .)
    INST_DO         reduce using rule 35 (Operacion_booleana -> FALSE .)
    INST_THEN       reduce using rule 35 (Operacion_booleana -> FALSE .)
    RPAREN          reduce using rule 35 (Operacion_booleana -> FALSE .)


state 45

    (17) Inst_Funcion -> TOP LPAREN . VAR_IDENTIFIER RPAREN

    VAR_IDENTIFIER  shift and go to state 85


state 46

    (30) Operacion_booleana -> Operacion_binaria . Opr_bool Operacion_binaria
    (42) Operacion_binaria -> Operacion_binaria . PLUS Term
    (43) Operacion_binaria -> Operacion_binaria . MINUS Term
    (36) Opr_bool -> . EQEQ
    (37) Opr_bool -> . NEQEQ
    (38) Opr_bool -> . GREAT
    (39) Opr_bool -> . LESS
    (40) Opr_bool -> . GREATEQ
    (41) Opr_bool -> . LESSEQ

    PLUS            shift and go to state 83
    MINUS           shift and go to state 84
    EQEQ            shift and go to state 80
    NEQEQ           shift and go to state 77
    GREAT           shift and go to state 76
    LESS            shift and go to state 79
    GREATEQ         shift and go to state 75
    LESSEQ          shift and go to state 82

    Opr_bool                       shift and go to state 78

state 47

    (33) Operacion_booleana -> LPAREN . Operacion_booleana RPAREN
    (50) Factor -> LPAREN . Operacion_binaria RPAREN
    (30) Operacion_booleana -> . Operacion_binaria Opr_bool Operacion_binaria
    (31) Operacion_booleana -> . Operacion_booleana AND Operacion_booleana
    (32) Operacion_booleana -> . Operacion_booleana OR Operacion_booleana
    (33) Operacion_booleana -> . LPAREN Operacion_booleana RPAREN
    (34) Operacion_booleana -> . TRUE
    (35) Operacion_booleana -> . FALSE
    (42) Operacion_binaria -> . Operacion_binaria PLUS Term
    (43) Operacion_binaria -> . Operacion_binaria MINUS Term
    (44) Operacion_binaria -> . Term
    (45) Term -> . Term TIMES Factor
    (46) Term -> . Term DIVIDE Factor
    (47) Term -> . Factor
    (48) Factor -> . NUMBER
    (49) Factor -> . VAR_IDENTIFIER
    (50) Factor -> . LPAREN Operacion_binaria RPAREN

    LPAREN          shift and go to state 47
    TRUE            shift and go to state 34
    FALSE           shift and go to state 44
    NUMBER          shift and go to state 32
    VAR_IDENTIFIER  shift and go to state 40

    Operacion_binaria              shift and go to state 86
    Term                           shift and go to state 37
    Operacion_booleana             shift and go to state 71
    Factor                         shift and go to state 39

state 48

    (71) Inst_While -> INST_WHILE Operacion_booleana . INST_DO Bloque_Inst
    (31) Operacion_booleana -> Operacion_booleana . AND Operacion_booleana
    (32) Operacion_booleana -> Operacion_booleana . OR Operacion_booleana

    INST_DO         shift and go to state 87
    AND             shift and go to state 63
    OR              shift and go to state 64


state 49

    (57) Inst_Lectura -> INST_READ VAR_IDENTIFIER .

    $end            reduce using rule 57 (Inst_Lectura -> INST_READ VAR_IDENTIFIER .)
    SEMICOLON       reduce using rule 57 (Inst_Lectura -> INST_READ VAR_IDENTIFIER .)
    INST_END        reduce using rule 57 (Inst_Lectura -> INST_READ VAR_IDENTIFIER .)
    INST_ELSE       reduce using rule 57 (Inst_Lectura -> INST_READ VAR_IDENTIFIER .)
    VAR_IDENTIFIER  reduce using rule 57 (Inst_Lectura -> INST_READ VAR_IDENTIFIER .)
    LPAREN          reduce using rule 57 (Inst_Lectura -> INST_READ VAR_IDENTIFIER .)
    NUMBER          reduce using rule 57 (Inst_Lectura -> INST_READ VAR_IDENTIFIER .)


state 50

    (4) Lista_Inst -> Inst .
    (5) Lista_Inst -> Inst . SEMICOLON Lista_Inst

    INST_END        reduce using rule 4 (Lista_Inst -> Inst .)
    SEMICOLON       shift and go to state 88


state 51

    (2) Bloque_Inst -> INST_BEGIN Lista_Inst . INST_END

    INST_END        shift and go to state 89


state 52

    (18) Inst_Funcion -> BOTTOM LPAREN . VAR_IDENTIFIER RPAREN

    VAR_IDENTIFIER  shift and go to state 90


state 53

    (26) Inst_Asignacion -> VAR_IDENTIFIER EQUAL . Expresion
    (27) Expresion -> . Operacion_binaria
    (28) Expresion -> . Operacion_booleana
    (29) Expresion -> . Rango
    (42) Operacion_binaria -> . Operacion_binaria PLUS Term
    (43) Operacion_binaria -> . Operacion_binaria MINUS Term
    (44) Operacion_binaria -> . Term
    (30) Operacion_booleana -> . Operacion_binaria Opr_bool Operacion_binaria
    (31) Operacion_booleana -> . Operacion_booleana AND Operacion_booleana
    (32) Operacion_booleana -> . Operacion_booleana OR Operacion_booleana
    (33) Operacion_booleana -> . LPAREN Operacion_booleana RPAREN
    (34) Operacion_booleana -> . TRUE
    (35) Operacion_booleana -> . FALSE
    (51) Rango -> . Operacion_binaria RANGE Operacion_binaria
    (52) Rango -> . Rango PLUS Rango
    (53) Rango -> . Rango TIMES Operacion_binaria
    (54) Rango -> . Rango INTERSECTION Rango
    (55) Rango -> . RangoF
    (45) Term -> . Term TIMES Factor
    (46) Term -> . Term DIVIDE Factor
    (47) Term -> . Factor
    (56) RangoF -> . LPAREN Rango RPAREN
    (48) Factor -> . NUMBER
    (49) Factor -> . VAR_IDENTIFIER
    (50) Factor -> . LPAREN Operacion_binaria RPAREN

    LPAREN          shift and go to state 41
    TRUE            shift and go to state 34
    FALSE           shift and go to state 44
    NUMBER          shift and go to state 32
    VAR_IDENTIFIER  shift and go to state 40

    Expresion                      shift and go to state 91
    Operacion_binaria              shift and go to state 43
    Factor                         shift and go to state 39
    Term                           shift and go to state 37
    RangoF                         shift and go to state 33
    Rango                          shift and go to state 42
    Operacion_booleana             shift and go to state 35

state 54

    (66) Inst_Case -> INST_CASE Operacion_binaria . INST_OF Casos
    (42) Operacion_binaria -> Operacion_binaria . PLUS Term
    (43) Operacion_binaria -> Operacion_binaria . MINUS Term

    INST_OF         shift and go to state 92
    PLUS            shift and go to state 83
    MINUS           shift and go to state 84


state 55

    (50) Factor -> LPAREN . Operacion_binaria RPAREN
    (42) Operacion_binaria -> . Operacion_binaria PLUS Term
    (43) Operacion_binaria -> . Operacion_binaria MINUS Term
    (44) Operacion_binaria -> . Term
    (45) Term -> . Term TIMES Factor
    (46) Term -> . Term DIVIDE Factor
    (47) Term -> . Factor
    (48) Factor -> . NUMBER
    (49) Factor -> . VAR_IDENTIFIER
    (50) Factor -> . LPAREN Operacion_binaria RPAREN

    NUMBER          shift and go to state 32
    VAR_IDENTIFIER  shift and go to state 40
    LPAREN          shift and go to state 55

    Operacion_binaria              shift and go to state 93
    Term                           shift and go to state 37
    Factor                         shift and go to state 39

state 56

    (70) Inst_For -> INST_FOR VAR_IDENTIFIER . INST_IN Rango INST_DO Bloque_Inst

    INST_IN         shift and go to state 94


state 57

    (64) Inst_If -> INST_IF Operacion_booleana . INST_THEN Bloque_Inst
    (65) Inst_If -> INST_IF Operacion_booleana . INST_THEN Bloque_Inst INST_ELSE Bloque_Inst
    (31) Operacion_booleana -> Operacion_booleana . AND Operacion_booleana
    (32) Operacion_booleana -> Operacion_booleana . OR Operacion_booleana

    INST_THEN       shift and go to state 95
    AND             shift and go to state 63
    OR              shift and go to state 64


state 58

    (59) Inst_Salida -> INST_WRITELN Lista_Aux .

    SEMICOLON       reduce using rule 59 (Inst_Salida -> INST_WRITELN Lista_Aux .)
    INST_END        reduce using rule 59 (Inst_Salida -> INST_WRITELN Lista_Aux .)
    $end            reduce using rule 59 (Inst_Salida -> INST_WRITELN Lista_Aux .)
    INST_ELSE       reduce using rule 59 (Inst_Salida -> INST_WRITELN Lista_Aux .)
    VAR_IDENTIFIER  reduce using rule 59 (Inst_Salida -> INST_WRITELN Lista_Aux .)
    LPAREN          reduce using rule 59 (Inst_Salida -> INST_WRITELN Lista_Aux .)
    NUMBER          reduce using rule 59 (Inst_Salida -> INST_WRITELN Lista_Aux .)


state 59

    (16) Inst_Funcion -> LENGTH LPAREN . VAR_IDENTIFIER RPAREN

    VAR_IDENTIFIER  shift and go to state 96


state 60

    (15) Inst_Funcion -> RTOI LPAREN . VAR_IDENTIFIER RPAREN

    VAR_IDENTIFIER  shift and go to state 97


state 61

    (22) Lista_Variables -> VAR_IDENTIFIER COMMA . Lista_Variables
    (21) Lista_Variables -> . VAR_IDENTIFIER
    (22) Lista_Variables -> . VAR_IDENTIFIER COMMA Lista_Variables

    VAR_IDENTIFIER  shift and go to state 28

    Lista_Variables                shift and go to state 98

state 62

    (20) Lista_Declare -> Lista_Variables INST_AS . Tipo
    (23) Tipo -> . TYPEDEF_INT
    (24) Tipo -> . TYPEDEF_BOOL
    (25) Tipo -> . TYPEDEF_RANGE

    TYPEDEF_INT     shift and go to state 99
    TYPEDEF_BOOL    shift and go to state 102
    TYPEDEF_RANGE   shift and go to state 101

    Tipo                           shift and go to state 100

state 63

    (31) Operacion_booleana -> Operacion_booleana AND . Operacion_booleana
    (30) Operacion_booleana -> . Operacion_binaria Opr_bool Operacion_binaria
    (31) Operacion_booleana -> . Operacion_booleana AND Operacion_booleana
    (32) Operacion_booleana -> . Operacion_booleana OR Operacion_booleana
    (33) Operacion_booleana -> . LPAREN Operacion_booleana RPAREN
    (34) Operacion_booleana -> . TRUE
    (35) Operacion_booleana -> . FALSE
    (42) Operacion_binaria -> . Operacion_binaria PLUS Term
    (43) Operacion_binaria -> . Operacion_binaria MINUS Term
    (44) Operacion_binaria -> . Term
    (45) Term -> . Term TIMES Factor
    (46) Term -> . Term DIVIDE Factor
    (47) Term -> . Factor
    (48) Factor -> . NUMBER
    (49) Factor -> . VAR_IDENTIFIER
    (50) Factor -> . LPAREN Operacion_binaria RPAREN

    LPAREN          shift and go to state 47
    TRUE            shift and go to state 34
    FALSE           shift and go to state 44
    NUMBER          shift and go to state 32
    VAR_IDENTIFIER  shift and go to state 40

    Operacion_binaria              shift and go to state 46
    Term                           shift and go to state 37
    Operacion_booleana             shift and go to state 103
    Factor                         shift and go to state 39

state 64

    (32) Operacion_booleana -> Operacion_booleana OR . Operacion_booleana
    (30) Operacion_booleana -> . Operacion_binaria Opr_bool Operacion_binaria
    (31) Operacion_booleana -> . Operacion_booleana AND Operacion_booleana
    (32) Operacion_booleana -> . Operacion_booleana OR Operacion_booleana
    (33) Operacion_booleana -> . LPAREN Operacion_booleana RPAREN
    (34) Operacion_booleana -> . TRUE
    (35) Operacion_booleana -> . FALSE
    (42) Operacion_binaria -> . Operacion_binaria PLUS Term
    (43) Operacion_binaria -> . Operacion_binaria MINUS Term
    (44) Operacion_binaria -> . Term
    (45) Term -> . Term TIMES Factor
    (46) Term -> . Term DIVIDE Factor
    (47) Term -> . Factor
    (48) Factor -> . NUMBER
    (49) Factor -> . VAR_IDENTIFIER
    (50) Factor -> . LPAREN Operacion_binaria RPAREN

    LPAREN          shift and go to state 47
    TRUE            shift and go to state 34
    FALSE           shift and go to state 44
    NUMBER          shift and go to state 32
    VAR_IDENTIFIER  shift and go to state 40

    Operacion_binaria              shift and go to state 46
    Term                           shift and go to state 37
    Operacion_booleana             shift and go to state 104
    Factor                         shift and go to state 39

state 65

    (62) Lista_Aux -> Expresion COMMA . Lista_Aux
    (60) Lista_Aux -> . Expresion
    (61) Lista_Aux -> . STRING
    (62) Lista_Aux -> . Expresion COMMA Lista_Aux
    (63) Lista_Aux -> . STRING COMMA Lista_Aux
    (27) Expresion -> . Operacion_binaria
    (28) Expresion -> . Operacion_booleana
    (29) Expresion -> . Rango
    (42) Operacion_binaria -> . Operacion_binaria PLUS Term
    (43) Operacion_binaria -> . Operacion_binaria MINUS Term
    (44) Operacion_binaria -> . Term
    (30) Operacion_booleana -> . Operacion_binaria Opr_bool Operacion_binaria
    (31) Operacion_booleana -> . Operacion_booleana AND Operacion_booleana
    (32) Operacion_booleana -> . Operacion_booleana OR Operacion_booleana
    (33) Operacion_booleana -> . LPAREN Operacion_booleana RPAREN
    (34) Operacion_booleana -> . TRUE
    (35) Operacion_booleana -> . FALSE
    (51) Rango -> . Operacion_binaria RANGE Operacion_binaria
    (52) Rango -> . Rango PLUS Rango
    (53) Rango -> . Rango TIMES Operacion_binaria
    (54) Rango -> . Rango INTERSECTION Rango
    (55) Rango -> . RangoF
    (45) Term -> . Term TIMES Factor
    (46) Term -> . Term DIVIDE Factor
    (47) Term -> . Factor
    (56) RangoF -> . LPAREN Rango RPAREN
    (48) Factor -> . NUMBER
    (49) Factor -> . VAR_IDENTIFIER
    (50) Factor -> . LPAREN Operacion_binaria RPAREN

    STRING          shift and go to state 38
    LPAREN          shift and go to state 41
    TRUE            shift and go to state 34
    FALSE           shift and go to state 44
    NUMBER          shift and go to state 32
    VAR_IDENTIFIER  shift and go to state 40

    Expresion                      shift and go to state 36
    Operacion_binaria              shift and go to state 43
    RangoF                         shift and go to state 33
    Factor                         shift and go to state 39
    Term                           shift and go to state 37
    Lista_Aux                      shift and go to state 105
    Rango                          shift and go to state 42
    Operacion_booleana             shift and go to state 35

state 66

    (46) Term -> Term DIVIDE . Factor
    (48) Factor -> . NUMBER
    (49) Factor -> . VAR_IDENTIFIER
    (50) Factor -> . LPAREN Operacion_binaria RPAREN

    NUMBER          shift and go to state 32
    VAR_IDENTIFIER  shift and go to state 40
    LPAREN          shift and go to state 55

    Factor                         shift and go to state 106

state 67

    (45) Term -> Term TIMES . Factor
    (48) Factor -> . NUMBER
    (49) Factor -> . VAR_IDENTIFIER
    (50) Factor -> . LPAREN Operacion_binaria RPAREN

    NUMBER          shift and go to state 32
    VAR_IDENTIFIER  shift and go to state 40
    LPAREN          shift and go to state 55

    Factor                         shift and go to state 107

state 68

    (63) Lista_Aux -> STRING COMMA . Lista_Aux
    (60) Lista_Aux -> . Expresion
    (61) Lista_Aux -> . STRING
    (62) Lista_Aux -> . Expresion COMMA Lista_Aux
    (63) Lista_Aux -> . STRING COMMA Lista_Aux
    (27) Expresion -> . Operacion_binaria
    (28) Expresion -> . Operacion_booleana
    (29) Expresion -> . Rango
    (42) Operacion_binaria -> . Operacion_binaria PLUS Term
    (43) Operacion_binaria -> . Operacion_binaria MINUS Term
    (44) Operacion_binaria -> . Term
    (30) Operacion_booleana -> . Operacion_binaria Opr_bool Operacion_binaria
    (31) Operacion_booleana -> . Operacion_booleana AND Operacion_booleana
    (32) Operacion_booleana -> . Operacion_booleana OR Operacion_booleana
    (33) Operacion_booleana -> . LPAREN Operacion_booleana RPAREN
    (34) Operacion_booleana -> . TRUE
    (35) Operacion_booleana -> . FALSE
    (51) Rango -> . Operacion_binaria RANGE Operacion_binaria
    (52) Rango -> . Rango PLUS Rango
    (53) Rango -> . Rango TIMES Operacion_binaria
    (54) Rango -> . Rango INTERSECTION Rango
    (55) Rango -> . RangoF
    (45) Term -> . Term TIMES Factor
    (46) Term -> . Term DIVIDE Factor
    (47) Term -> . Factor
    (56) RangoF -> . LPAREN Rango RPAREN
    (48) Factor -> . NUMBER
    (49) Factor -> . VAR_IDENTIFIER
    (50) Factor -> . LPAREN Operacion_binaria RPAREN

    STRING          shift and go to state 38
    LPAREN          shift and go to state 41
    TRUE            shift and go to state 34
    FALSE           shift and go to state 44
    NUMBER          shift and go to state 32
    VAR_IDENTIFIER  shift and go to state 40

    Expresion                      shift and go to state 36
    Operacion_binaria              shift and go to state 43
    RangoF                         shift and go to state 33
    Factor                         shift and go to state 39
    Term                           shift and go to state 37
    Lista_Aux                      shift and go to state 108
    Rango                          shift and go to state 42
    Operacion_booleana             shift and go to state 35

state 69

    (50) Factor -> LPAREN Operacion_binaria . RPAREN
    (30) Operacion_booleana -> Operacion_binaria . Opr_bool Operacion_binaria
    (51) Rango -> Operacion_binaria . RANGE Operacion_binaria
    (42) Operacion_binaria -> Operacion_binaria . PLUS Term
    (43) Operacion_binaria -> Operacion_binaria . MINUS Term
    (36) Opr_bool -> . EQEQ
    (37) Opr_bool -> . NEQEQ
    (38) Opr_bool -> . GREAT
    (39) Opr_bool -> . LESS
    (40) Opr_bool -> . GREATEQ
    (41) Opr_bool -> . LESSEQ

    RPAREN          shift and go to state 109
    RANGE           shift and go to state 81
    PLUS            shift and go to state 83
    MINUS           shift and go to state 84
    EQEQ            shift and go to state 80
    NEQEQ           shift and go to state 77
    GREAT           shift and go to state 76
    LESS            shift and go to state 79
    GREATEQ         shift and go to state 75
    LESSEQ          shift and go to state 82

    Opr_bool                       shift and go to state 78

state 70

    (56) RangoF -> LPAREN Rango . RPAREN
    (52) Rango -> Rango . PLUS Rango
    (53) Rango -> Rango . TIMES Operacion_binaria
    (54) Rango -> Rango . INTERSECTION Rango

    RPAREN          shift and go to state 110
    PLUS            shift and go to state 73
    TIMES           shift and go to state 74
    INTERSECTION    shift and go to state 72


state 71

    (33) Operacion_booleana -> LPAREN Operacion_booleana . RPAREN
    (31) Operacion_booleana -> Operacion_booleana . AND Operacion_booleana
    (32) Operacion_booleana -> Operacion_booleana . OR Operacion_booleana

    RPAREN          shift and go to state 111
    AND             shift and go to state 63
    OR              shift and go to state 64


state 72

    (54) Rango -> Rango INTERSECTION . Rango
    (51) Rango -> . Operacion_binaria RANGE Operacion_binaria
    (52) Rango -> . Rango PLUS Rango
    (53) Rango -> . Rango TIMES Operacion_binaria
    (54) Rango -> . Rango INTERSECTION Rango
    (55) Rango -> . RangoF
    (42) Operacion_binaria -> . Operacion_binaria PLUS Term
    (43) Operacion_binaria -> . Operacion_binaria MINUS Term
    (44) Operacion_binaria -> . Term
    (56) RangoF -> . LPAREN Rango RPAREN
    (45) Term -> . Term TIMES Factor
    (46) Term -> . Term DIVIDE Factor
    (47) Term -> . Factor
    (48) Factor -> . NUMBER
    (49) Factor -> . VAR_IDENTIFIER
    (50) Factor -> . LPAREN Operacion_binaria RPAREN

    LPAREN          shift and go to state 113
    NUMBER          shift and go to state 32
    VAR_IDENTIFIER  shift and go to state 40

    Rango                          shift and go to state 114
    Operacion_binaria              shift and go to state 112
    Factor                         shift and go to state 39
    Term                           shift and go to state 37
    RangoF                         shift and go to state 33

state 73

    (52) Rango -> Rango PLUS . Rango
    (51) Rango -> . Operacion_binaria RANGE Operacion_binaria
    (52) Rango -> . Rango PLUS Rango
    (53) Rango -> . Rango TIMES Operacion_binaria
    (54) Rango -> . Rango INTERSECTION Rango
    (55) Rango -> . RangoF
    (42) Operacion_binaria -> . Operacion_binaria PLUS Term
    (43) Operacion_binaria -> . Operacion_binaria MINUS Term
    (44) Operacion_binaria -> . Term
    (56) RangoF -> . LPAREN Rango RPAREN
    (45) Term -> . Term TIMES Factor
    (46) Term -> . Term DIVIDE Factor
    (47) Term -> . Factor
    (48) Factor -> . NUMBER
    (49) Factor -> . VAR_IDENTIFIER
    (50) Factor -> . LPAREN Operacion_binaria RPAREN

    LPAREN          shift and go to state 113
    NUMBER          shift and go to state 32
    VAR_IDENTIFIER  shift and go to state 40

    Rango                          shift and go to state 115
    Operacion_binaria              shift and go to state 112
    Factor                         shift and go to state 39
    Term                           shift and go to state 37
    RangoF                         shift and go to state 33

state 74

    (53) Rango -> Rango TIMES . Operacion_binaria
    (42) Operacion_binaria -> . Operacion_binaria PLUS Term
    (43) Operacion_binaria -> . Operacion_binaria MINUS Term
    (44) Operacion_binaria -> . Term
    (45) Term -> . Term TIMES Factor
    (46) Term -> . Term DIVIDE Factor
    (47) Term -> . Factor
    (48) Factor -> . NUMBER
    (49) Factor -> . VAR_IDENTIFIER
    (50) Factor -> . LPAREN Operacion_binaria RPAREN

    NUMBER          shift and go to state 32
    VAR_IDENTIFIER  shift and go to state 40
    LPAREN          shift and go to state 55

    Operacion_binaria              shift and go to state 116
    Term                           shift and go to state 37
    Factor                         shift and go to state 39

state 75

    (40) Opr_bool -> GREATEQ .

    NUMBER          reduce using rule 40 (Opr_bool -> GREATEQ .)
    VAR_IDENTIFIER  reduce using rule 40 (Opr_bool -> GREATEQ .)
    LPAREN          reduce using rule 40 (Opr_bool -> GREATEQ .)


state 76

    (38) Opr_bool -> GREAT .

    NUMBER          reduce using rule 38 (Opr_bool -> GREAT .)
    VAR_IDENTIFIER  reduce using rule 38 (Opr_bool -> GREAT .)
    LPAREN          reduce using rule 38 (Opr_bool -> GREAT .)


state 77

    (37) Opr_bool -> NEQEQ .

    NUMBER          reduce using rule 37 (Opr_bool -> NEQEQ .)
    VAR_IDENTIFIER  reduce using rule 37 (Opr_bool -> NEQEQ .)
    LPAREN          reduce using rule 37 (Opr_bool -> NEQEQ .)


state 78

    (30) Operacion_booleana -> Operacion_binaria Opr_bool . Operacion_binaria
    (42) Operacion_binaria -> . Operacion_binaria PLUS Term
    (43) Operacion_binaria -> . Operacion_binaria MINUS Term
    (44) Operacion_binaria -> . Term
    (45) Term -> . Term TIMES Factor
    (46) Term -> . Term DIVIDE Factor
    (47) Term -> . Factor
    (48) Factor -> . NUMBER
    (49) Factor -> . VAR_IDENTIFIER
    (50) Factor -> . LPAREN Operacion_binaria RPAREN

    NUMBER          shift and go to state 32
    VAR_IDENTIFIER  shift and go to state 40
    LPAREN          shift and go to state 55

    Operacion_binaria              shift and go to state 117
    Term                           shift and go to state 37
    Factor                         shift and go to state 39

state 79

    (39) Opr_bool -> LESS .

    NUMBER          reduce using rule 39 (Opr_bool -> LESS .)
    VAR_IDENTIFIER  reduce using rule 39 (Opr_bool -> LESS .)
    LPAREN          reduce using rule 39 (Opr_bool -> LESS .)


state 80

    (36) Opr_bool -> EQEQ .

    NUMBER          reduce using rule 36 (Opr_bool -> EQEQ .)
    VAR_IDENTIFIER  reduce using rule 36 (Opr_bool -> EQEQ .)
    LPAREN          reduce using rule 36 (Opr_bool -> EQEQ .)


state 81

    (51) Rango -> Operacion_binaria RANGE . Operacion_binaria
    (42) Operacion_binaria -> . Operacion_binaria PLUS Term
    (43) Operacion_binaria -> . Operacion_binaria MINUS Term
    (44) Operacion_binaria -> . Term
    (45) Term -> . Term TIMES Factor
    (46) Term -> . Term DIVIDE Factor
    (47) Term -> . Factor
    (48) Factor -> . NUMBER
    (49) Factor -> . VAR_IDENTIFIER
    (50) Factor -> . LPAREN Operacion_binaria RPAREN

    NUMBER          shift and go to state 32
    VAR_IDENTIFIER  shift and go to state 40
    LPAREN          shift and go to state 55

    Operacion_binaria              shift and go to state 118
    Term                           shift and go to state 37
    Factor                         shift and go to state 39

state 82

    (41) Opr_bool -> LESSEQ .

    NUMBER          reduce using rule 41 (Opr_bool -> LESSEQ .)
    VAR_IDENTIFIER  reduce using rule 41 (Opr_bool -> LESSEQ .)
    LPAREN          reduce using rule 41 (Opr_bool -> LESSEQ .)


state 83

    (42) Operacion_binaria -> Operacion_binaria PLUS . Term
    (45) Term -> . Term TIMES Factor
    (46) Term -> . Term DIVIDE Factor
    (47) Term -> . Factor
    (48) Factor -> . NUMBER
    (49) Factor -> . VAR_IDENTIFIER
    (50) Factor -> . LPAREN Operacion_binaria RPAREN

    NUMBER          shift and go to state 32
    VAR_IDENTIFIER  shift and go to state 40
    LPAREN          shift and go to state 55

    Term                           shift and go to state 119
    Factor                         shift and go to state 39

state 84

    (43) Operacion_binaria -> Operacion_binaria MINUS . Term
    (45) Term -> . Term TIMES Factor
    (46) Term -> . Term DIVIDE Factor
    (47) Term -> . Factor
    (48) Factor -> . NUMBER
    (49) Factor -> . VAR_IDENTIFIER
    (50) Factor -> . LPAREN Operacion_binaria RPAREN

    NUMBER          shift and go to state 32
    VAR_IDENTIFIER  shift and go to state 40
    LPAREN          shift and go to state 55

    Term                           shift and go to state 120
    Factor                         shift and go to state 39

state 85

    (17) Inst_Funcion -> TOP LPAREN VAR_IDENTIFIER . RPAREN

    RPAREN          shift and go to state 121


state 86

    (50) Factor -> LPAREN Operacion_binaria . RPAREN
    (30) Operacion_booleana -> Operacion_binaria . Opr_bool Operacion_binaria
    (42) Operacion_binaria -> Operacion_binaria . PLUS Term
    (43) Operacion_binaria -> Operacion_binaria . MINUS Term
    (36) Opr_bool -> . EQEQ
    (37) Opr_bool -> . NEQEQ
    (38) Opr_bool -> . GREAT
    (39) Opr_bool -> . LESS
    (40) Opr_bool -> . GREATEQ
    (41) Opr_bool -> . LESSEQ

    RPAREN          shift and go to state 109
    PLUS            shift and go to state 83
    MINUS           shift and go to state 84
    EQEQ            shift and go to state 80
    NEQEQ           shift and go to state 77
    GREAT           shift and go to state 76
    LESS            shift and go to state 79
    GREATEQ         shift and go to state 75
    LESSEQ          shift and go to state 82

    Opr_bool                       shift and go to state 78

state 87

    (71) Inst_While -> INST_WHILE Operacion_booleana INST_DO . Bloque_Inst
    (2) Bloque_Inst -> . INST_BEGIN Lista_Inst INST_END
    (3) Bloque_Inst -> . Inst
    (6) Inst -> . Inst_Declare
    (7) Inst -> . Inst_Asignacion
    (8) Inst -> . Inst_Lectura
    (9) Inst -> . Inst_For
    (10) Inst -> . Inst_While
    (11) Inst -> . Inst_If
    (12) Inst -> . Inst_Case
    (13) Inst -> . Inst_Salida
    (14) Inst -> . Inst_Funcion
    (19) Inst_Declare -> . INST_DECLARE Lista_Declare
    (26) Inst_Asignacion -> . VAR_IDENTIFIER EQUAL Expresion
    (57) Inst_Lectura -> . INST_READ VAR_IDENTIFIER
    (70) Inst_For -> . INST_FOR VAR_IDENTIFIER INST_IN Rango INST_DO Bloque_Inst
    (71) Inst_While -> . INST_WHILE Operacion_booleana INST_DO Bloque_Inst
    (64) Inst_If -> . INST_IF Operacion_booleana INST_THEN Bloque_Inst
    (65) Inst_If -> . INST_IF Operacion_booleana INST_THEN Bloque_Inst INST_ELSE Bloque_Inst
    (66) Inst_Case -> . INST_CASE Operacion_binaria INST_OF Casos
    (58) Inst_Salida -> . INST_WRITE Lista_Aux
    (59) Inst_Salida -> . INST_WRITELN Lista_Aux
    (15) Inst_Funcion -> . RTOI LPAREN VAR_IDENTIFIER RPAREN
    (16) Inst_Funcion -> . LENGTH LPAREN VAR_IDENTIFIER RPAREN
    (17) Inst_Funcion -> . TOP LPAREN VAR_IDENTIFIER RPAREN
    (18) Inst_Funcion -> . BOTTOM LPAREN VAR_IDENTIFIER RPAREN

    INST_BEGIN      shift and go to state 11
    INST_DECLARE    shift and go to state 3
    VAR_IDENTIFIER  shift and go to state 18
    INST_READ       shift and go to state 10
    INST_FOR        shift and go to state 21
    INST_WHILE      shift and go to state 9
    INST_IF         shift and go to state 22
    INST_CASE       shift and go to state 20
    INST_WRITE      shift and go to state 5
    INST_WRITELN    shift and go to state 23
    RTOI            shift and go to state 25
    LENGTH          shift and go to state 24
    TOP             shift and go to state 6
    BOTTOM          shift and go to state 13

    Inst_Salida                    shift and go to state 8
    Inst_Declare                   shift and go to state 12
    Inst_Funcion                   shift and go to state 4
    Bloque_Inst                    shift and go to state 122
    Inst_If                        shift and go to state 19
    Inst_For                       shift and go to state 14
    Inst_While                     shift and go to state 16
    Inst                           shift and go to state 15
    Inst_Asignacion                shift and go to state 26
    Inst_Case                      shift and go to state 27
    Inst_Lectura                   shift and go to state 17

state 88

    (5) Lista_Inst -> Inst SEMICOLON . Lista_Inst
    (4) Lista_Inst -> . Inst
    (5) Lista_Inst -> . Inst SEMICOLON Lista_Inst
    (6) Inst -> . Inst_Declare
    (7) Inst -> . Inst_Asignacion
    (8) Inst -> . Inst_Lectura
    (9) Inst -> . Inst_For
    (10) Inst -> . Inst_While
    (11) Inst -> . Inst_If
    (12) Inst -> . Inst_Case
    (13) Inst -> . Inst_Salida
    (14) Inst -> . Inst_Funcion
    (19) Inst_Declare -> . INST_DECLARE Lista_Declare
    (26) Inst_Asignacion -> . VAR_IDENTIFIER EQUAL Expresion
    (57) Inst_Lectura -> . INST_READ VAR_IDENTIFIER
    (70) Inst_For -> . INST_FOR VAR_IDENTIFIER INST_IN Rango INST_DO Bloque_Inst
    (71) Inst_While -> . INST_WHILE Operacion_booleana INST_DO Bloque_Inst
    (64) Inst_If -> . INST_IF Operacion_booleana INST_THEN Bloque_Inst
    (65) Inst_If -> . INST_IF Operacion_booleana INST_THEN Bloque_Inst INST_ELSE Bloque_Inst
    (66) Inst_Case -> . INST_CASE Operacion_binaria INST_OF Casos
    (58) Inst_Salida -> . INST_WRITE Lista_Aux
    (59) Inst_Salida -> . INST_WRITELN Lista_Aux
    (15) Inst_Funcion -> . RTOI LPAREN VAR_IDENTIFIER RPAREN
    (16) Inst_Funcion -> . LENGTH LPAREN VAR_IDENTIFIER RPAREN
    (17) Inst_Funcion -> . TOP LPAREN VAR_IDENTIFIER RPAREN
    (18) Inst_Funcion -> . BOTTOM LPAREN VAR_IDENTIFIER RPAREN

    INST_DECLARE    shift and go to state 3
    VAR_IDENTIFIER  shift and go to state 18
    INST_READ       shift and go to state 10
    INST_FOR        shift and go to state 21
    INST_WHILE      shift and go to state 9
    INST_IF         shift and go to state 22
    INST_CASE       shift and go to state 20
    INST_WRITE      shift and go to state 5
    INST_WRITELN    shift and go to state 23
    RTOI            shift and go to state 25
    LENGTH          shift and go to state 24
    TOP             shift and go to state 6
    BOTTOM          shift and go to state 13

    Inst_Salida                    shift and go to state 8
    Inst_Declare                   shift and go to state 12
    Inst_Funcion                   shift and go to state 4
    Inst_If                        shift and go to state 19
    Inst_For                       shift and go to state 14
    Inst_While                     shift and go to state 16
    Inst                           shift and go to state 50
    Inst_Asignacion                shift and go to state 26
    Inst_Case                      shift and go to state 27
    Inst_Lectura                   shift and go to state 17
    Lista_Inst                     shift and go to state 123

state 89

    (2) Bloque_Inst -> INST_BEGIN Lista_Inst INST_END .

    $end            reduce using rule 2 (Bloque_Inst -> INST_BEGIN Lista_Inst INST_END .)
    SEMICOLON       reduce using rule 2 (Bloque_Inst -> INST_BEGIN Lista_Inst INST_END .)
    INST_END        reduce using rule 2 (Bloque_Inst -> INST_BEGIN Lista_Inst INST_END .)
    INST_ELSE       reduce using rule 2 (Bloque_Inst -> INST_BEGIN Lista_Inst INST_END .)
    VAR_IDENTIFIER  reduce using rule 2 (Bloque_Inst -> INST_BEGIN Lista_Inst INST_END .)
    LPAREN          reduce using rule 2 (Bloque_Inst -> INST_BEGIN Lista_Inst INST_END .)
    NUMBER          reduce using rule 2 (Bloque_Inst -> INST_BEGIN Lista_Inst INST_END .)


state 90

    (18) Inst_Funcion -> BOTTOM LPAREN VAR_IDENTIFIER . RPAREN

    RPAREN          shift and go to state 124


state 91

    (26) Inst_Asignacion -> VAR_IDENTIFIER EQUAL Expresion .

    $end            reduce using rule 26 (Inst_Asignacion -> VAR_IDENTIFIER EQUAL Expresion .)
    SEMICOLON       reduce using rule 26 (Inst_Asignacion -> VAR_IDENTIFIER EQUAL Expresion .)
    INST_END        reduce using rule 26 (Inst_Asignacion -> VAR_IDENTIFIER EQUAL Expresion .)
    INST_ELSE       reduce using rule 26 (Inst_Asignacion -> VAR_IDENTIFIER EQUAL Expresion .)
    VAR_IDENTIFIER  reduce using rule 26 (Inst_Asignacion -> VAR_IDENTIFIER EQUAL Expresion .)
    LPAREN          reduce using rule 26 (Inst_Asignacion -> VAR_IDENTIFIER EQUAL Expresion .)
    NUMBER          reduce using rule 26 (Inst_Asignacion -> VAR_IDENTIFIER EQUAL Expresion .)


state 92

    (66) Inst_Case -> INST_CASE Operacion_binaria INST_OF . Casos
    (67) Casos -> . VAR_IDENTIFIER - > Bloque_Inst
    (68) Casos -> . Rango - > Bloque_Inst
    (69) Casos -> . Casos Casos
    (51) Rango -> . Operacion_binaria RANGE Operacion_binaria
    (52) Rango -> . Rango PLUS Rango
    (53) Rango -> . Rango TIMES Operacion_binaria
    (54) Rango -> . Rango INTERSECTION Rango
    (55) Rango -> . RangoF
    (42) Operacion_binaria -> . Operacion_binaria PLUS Term
    (43) Operacion_binaria -> . Operacion_binaria MINUS Term
    (44) Operacion_binaria -> . Term
    (56) RangoF -> . LPAREN Rango RPAREN
    (45) Term -> . Term TIMES Factor
    (46) Term -> . Term DIVIDE Factor
    (47) Term -> . Factor
    (48) Factor -> . NUMBER
    (49) Factor -> . VAR_IDENTIFIER
    (50) Factor -> . LPAREN Operacion_binaria RPAREN

    VAR_IDENTIFIER  shift and go to state 125
    LPAREN          shift and go to state 113
    NUMBER          shift and go to state 32

    Operacion_binaria              shift and go to state 112
    Factor                         shift and go to state 39
    Term                           shift and go to state 37
    RangoF                         shift and go to state 33
    Rango                          shift and go to state 126
    Casos                          shift and go to state 127

state 93

    (50) Factor -> LPAREN Operacion_binaria . RPAREN
    (42) Operacion_binaria -> Operacion_binaria . PLUS Term
    (43) Operacion_binaria -> Operacion_binaria . MINUS Term

    RPAREN          shift and go to state 109
    PLUS            shift and go to state 83
    MINUS           shift and go to state 84


state 94

    (70) Inst_For -> INST_FOR VAR_IDENTIFIER INST_IN . Rango INST_DO Bloque_Inst
    (51) Rango -> . Operacion_binaria RANGE Operacion_binaria
    (52) Rango -> . Rango PLUS Rango
    (53) Rango -> . Rango TIMES Operacion_binaria
    (54) Rango -> . Rango INTERSECTION Rango
    (55) Rango -> . RangoF
    (42) Operacion_binaria -> . Operacion_binaria PLUS Term
    (43) Operacion_binaria -> . Operacion_binaria MINUS Term
    (44) Operacion_binaria -> . Term
    (56) RangoF -> . LPAREN Rango RPAREN
    (45) Term -> . Term TIMES Factor
    (46) Term -> . Term DIVIDE Factor
    (47) Term -> . Factor
    (48) Factor -> . NUMBER
    (49) Factor -> . VAR_IDENTIFIER
    (50) Factor -> . LPAREN Operacion_binaria RPAREN

    LPAREN          shift and go to state 113
    NUMBER          shift and go to state 32
    VAR_IDENTIFIER  shift and go to state 40

    Operacion_binaria              shift and go to state 112
    RangoF                         shift and go to state 33
    Term                           shift and go to state 37
    Factor                         shift and go to state 39
    Rango                          shift and go to state 128

state 95

    (64) Inst_If -> INST_IF Operacion_booleana INST_THEN . Bloque_Inst
    (65) Inst_If -> INST_IF Operacion_booleana INST_THEN . Bloque_Inst INST_ELSE Bloque_Inst
    (2) Bloque_Inst -> . INST_BEGIN Lista_Inst INST_END
    (3) Bloque_Inst -> . Inst
    (6) Inst -> . Inst_Declare
    (7) Inst -> . Inst_Asignacion
    (8) Inst -> . Inst_Lectura
    (9) Inst -> . Inst_For
    (10) Inst -> . Inst_While
    (11) Inst -> . Inst_If
    (12) Inst -> . Inst_Case
    (13) Inst -> . Inst_Salida
    (14) Inst -> . Inst_Funcion
    (19) Inst_Declare -> . INST_DECLARE Lista_Declare
    (26) Inst_Asignacion -> . VAR_IDENTIFIER EQUAL Expresion
    (57) Inst_Lectura -> . INST_READ VAR_IDENTIFIER
    (70) Inst_For -> . INST_FOR VAR_IDENTIFIER INST_IN Rango INST_DO Bloque_Inst
    (71) Inst_While -> . INST_WHILE Operacion_booleana INST_DO Bloque_Inst
    (64) Inst_If -> . INST_IF Operacion_booleana INST_THEN Bloque_Inst
    (65) Inst_If -> . INST_IF Operacion_booleana INST_THEN Bloque_Inst INST_ELSE Bloque_Inst
    (66) Inst_Case -> . INST_CASE Operacion_binaria INST_OF Casos
    (58) Inst_Salida -> . INST_WRITE Lista_Aux
    (59) Inst_Salida -> . INST_WRITELN Lista_Aux
    (15) Inst_Funcion -> . RTOI LPAREN VAR_IDENTIFIER RPAREN
    (16) Inst_Funcion -> . LENGTH LPAREN VAR_IDENTIFIER RPAREN
    (17) Inst_Funcion -> . TOP LPAREN VAR_IDENTIFIER RPAREN
    (18) Inst_Funcion -> . BOTTOM LPAREN VAR_IDENTIFIER RPAREN

    INST_BEGIN      shift and go to state 11
    INST_DECLARE    shift and go to state 3
    VAR_IDENTIFIER  shift and go to state 18
    INST_READ       shift and go to state 10
    INST_FOR        shift and go to state 21
    INST_WHILE      shift and go to state 9
    INST_IF         shift and go to state 22
    INST_CASE       shift and go to state 20
    INST_WRITE      shift and go to state 5
    INST_WRITELN    shift and go to state 23
    RTOI            shift and go to state 25
    LENGTH          shift and go to state 24
    TOP             shift and go to state 6
    BOTTOM          shift and go to state 13

    Inst_Salida                    shift and go to state 8
    Inst_Declare                   shift and go to state 12
    Inst_Funcion                   shift and go to state 4
    Bloque_Inst                    shift and go to state 129
    Inst_If                        shift and go to state 19
    Inst_For                       shift and go to state 14
    Inst_While                     shift and go to state 16
    Inst                           shift and go to state 15
    Inst_Asignacion                shift and go to state 26
    Inst_Case                      shift and go to state 27
    Inst_Lectura                   shift and go to state 17

state 96

    (16) Inst_Funcion -> LENGTH LPAREN VAR_IDENTIFIER . RPAREN

    RPAREN          shift and go to state 130


state 97

    (15) Inst_Funcion -> RTOI LPAREN VAR_IDENTIFIER . RPAREN

    RPAREN          shift and go to state 131


state 98

    (22) Lista_Variables -> VAR_IDENTIFIER COMMA Lista_Variables .

    INST_AS         reduce using rule 22 (Lista_Variables -> VAR_IDENTIFIER COMMA Lista_Variables .)


state 99

    (23) Tipo -> TYPEDEF_INT .

    $end            reduce using rule 23 (Tipo -> TYPEDEF_INT .)
    SEMICOLON       reduce using rule 23 (Tipo -> TYPEDEF_INT .)
    INST_END        reduce using rule 23 (Tipo -> TYPEDEF_INT .)
    INST_ELSE       reduce using rule 23 (Tipo -> TYPEDEF_INT .)
    VAR_IDENTIFIER  reduce using rule 23 (Tipo -> TYPEDEF_INT .)
    LPAREN          reduce using rule 23 (Tipo -> TYPEDEF_INT .)
    NUMBER          reduce using rule 23 (Tipo -> TYPEDEF_INT .)


state 100

    (20) Lista_Declare -> Lista_Variables INST_AS Tipo .

    $end            reduce using rule 20 (Lista_Declare -> Lista_Variables INST_AS Tipo .)
    SEMICOLON       reduce using rule 20 (Lista_Declare -> Lista_Variables INST_AS Tipo .)
    INST_END        reduce using rule 20 (Lista_Declare -> Lista_Variables INST_AS Tipo .)
    INST_ELSE       reduce using rule 20 (Lista_Declare -> Lista_Variables INST_AS Tipo .)
    VAR_IDENTIFIER  reduce using rule 20 (Lista_Declare -> Lista_Variables INST_AS Tipo .)
    LPAREN          reduce using rule 20 (Lista_Declare -> Lista_Variables INST_AS Tipo .)
    NUMBER          reduce using rule 20 (Lista_Declare -> Lista_Variables INST_AS Tipo .)


state 101

    (25) Tipo -> TYPEDEF_RANGE .

    $end            reduce using rule 25 (Tipo -> TYPEDEF_RANGE .)
    SEMICOLON       reduce using rule 25 (Tipo -> TYPEDEF_RANGE .)
    INST_END        reduce using rule 25 (Tipo -> TYPEDEF_RANGE .)
    INST_ELSE       reduce using rule 25 (Tipo -> TYPEDEF_RANGE .)
    VAR_IDENTIFIER  reduce using rule 25 (Tipo -> TYPEDEF_RANGE .)
    LPAREN          reduce using rule 25 (Tipo -> TYPEDEF_RANGE .)
    NUMBER          reduce using rule 25 (Tipo -> TYPEDEF_RANGE .)


state 102

    (24) Tipo -> TYPEDEF_BOOL .

    $end            reduce using rule 24 (Tipo -> TYPEDEF_BOOL .)
    SEMICOLON       reduce using rule 24 (Tipo -> TYPEDEF_BOOL .)
    INST_END        reduce using rule 24 (Tipo -> TYPEDEF_BOOL .)
    INST_ELSE       reduce using rule 24 (Tipo -> TYPEDEF_BOOL .)
    VAR_IDENTIFIER  reduce using rule 24 (Tipo -> TYPEDEF_BOOL .)
    LPAREN          reduce using rule 24 (Tipo -> TYPEDEF_BOOL .)
    NUMBER          reduce using rule 24 (Tipo -> TYPEDEF_BOOL .)


state 103

    (31) Operacion_booleana -> Operacion_booleana AND Operacion_booleana .
    (31) Operacion_booleana -> Operacion_booleana . AND Operacion_booleana
    (32) Operacion_booleana -> Operacion_booleana . OR Operacion_booleana

    AND             reduce using rule 31 (Operacion_booleana -> Operacion_booleana AND Operacion_booleana .)
    OR              reduce using rule 31 (Operacion_booleana -> Operacion_booleana AND Operacion_booleana .)
    COMMA           reduce using rule 31 (Operacion_booleana -> Operacion_booleana AND Operacion_booleana .)
    $end            reduce using rule 31 (Operacion_booleana -> Operacion_booleana AND Operacion_booleana .)
    SEMICOLON       reduce using rule 31 (Operacion_booleana -> Operacion_booleana AND Operacion_booleana .)
    INST_END        reduce using rule 31 (Operacion_booleana -> Operacion_booleana AND Operacion_booleana .)
    INST_ELSE       reduce using rule 31 (Operacion_booleana -> Operacion_booleana AND Operacion_booleana .)
    VAR_IDENTIFIER  reduce using rule 31 (Operacion_booleana -> Operacion_booleana AND Operacion_booleana .)
    LPAREN          reduce using rule 31 (Operacion_booleana -> Operacion_booleana AND Operacion_booleana .)
    NUMBER          reduce using rule 31 (Operacion_booleana -> Operacion_booleana AND Operacion_booleana .)
    INST_DO         reduce using rule 31 (Operacion_booleana -> Operacion_booleana AND Operacion_booleana .)
    INST_THEN       reduce using rule 31 (Operacion_booleana -> Operacion_booleana AND Operacion_booleana .)
    RPAREN          reduce using rule 31 (Operacion_booleana -> Operacion_booleana AND Operacion_booleana .)

  ! AND             [ shift and go to state 63 ]
  ! OR              [ shift and go to state 64 ]


state 104

    (32) Operacion_booleana -> Operacion_booleana OR Operacion_booleana .
    (31) Operacion_booleana -> Operacion_booleana . AND Operacion_booleana
    (32) Operacion_booleana -> Operacion_booleana . OR Operacion_booleana

    OR              reduce using rule 32 (Operacion_booleana -> Operacion_booleana OR Operacion_booleana .)
    COMMA           reduce using rule 32 (Operacion_booleana -> Operacion_booleana OR Operacion_booleana .)
    $end            reduce using rule 32 (Operacion_booleana -> Operacion_booleana OR Operacion_booleana .)
    SEMICOLON       reduce using rule 32 (Operacion_booleana -> Operacion_booleana OR Operacion_booleana .)
    INST_END        reduce using rule 32 (Operacion_booleana -> Operacion_booleana OR Operacion_booleana .)
    INST_ELSE       reduce using rule 32 (Operacion_booleana -> Operacion_booleana OR Operacion_booleana .)
    VAR_IDENTIFIER  reduce using rule 32 (Operacion_booleana -> Operacion_booleana OR Operacion_booleana .)
    LPAREN          reduce using rule 32 (Operacion_booleana -> Operacion_booleana OR Operacion_booleana .)
    NUMBER          reduce using rule 32 (Operacion_booleana -> Operacion_booleana OR Operacion_booleana .)
    INST_DO         reduce using rule 32 (Operacion_booleana -> Operacion_booleana OR Operacion_booleana .)
    INST_THEN       reduce using rule 32 (Operacion_booleana -> Operacion_booleana OR Operacion_booleana .)
    RPAREN          reduce using rule 32 (Operacion_booleana -> Operacion_booleana OR Operacion_booleana .)
    AND             shift and go to state 63

  ! AND             [ reduce using rule 32 (Operacion_booleana -> Operacion_booleana OR Operacion_booleana .) ]
  ! OR              [ shift and go to state 64 ]


state 105

    (62) Lista_Aux -> Expresion COMMA Lista_Aux .

    $end            reduce using rule 62 (Lista_Aux -> Expresion COMMA Lista_Aux .)
    SEMICOLON       reduce using rule 62 (Lista_Aux -> Expresion COMMA Lista_Aux .)
    INST_END        reduce using rule 62 (Lista_Aux -> Expresion COMMA Lista_Aux .)
    INST_ELSE       reduce using rule 62 (Lista_Aux -> Expresion COMMA Lista_Aux .)
    VAR_IDENTIFIER  reduce using rule 62 (Lista_Aux -> Expresion COMMA Lista_Aux .)
    LPAREN          reduce using rule 62 (Lista_Aux -> Expresion COMMA Lista_Aux .)
    NUMBER          reduce using rule 62 (Lista_Aux -> Expresion COMMA Lista_Aux .)


state 106

    (46) Term -> Term DIVIDE Factor .

    TIMES           reduce using rule 46 (Term -> Term DIVIDE Factor .)
    DIVIDE          reduce using rule 46 (Term -> Term DIVIDE Factor .)
    RANGE           reduce using rule 46 (Term -> Term DIVIDE Factor .)
    PLUS            reduce using rule 46 (Term -> Term DIVIDE Factor .)
    MINUS           reduce using rule 46 (Term -> Term DIVIDE Factor .)
    EQEQ            reduce using rule 46 (Term -> Term DIVIDE Factor .)
    NEQEQ           reduce using rule 46 (Term -> Term DIVIDE Factor .)
    GREAT           reduce using rule 46 (Term -> Term DIVIDE Factor .)
    LESS            reduce using rule 46 (Term -> Term DIVIDE Factor .)
    GREATEQ         reduce using rule 46 (Term -> Term DIVIDE Factor .)
    LESSEQ          reduce using rule 46 (Term -> Term DIVIDE Factor .)
    COMMA           reduce using rule 46 (Term -> Term DIVIDE Factor .)
    $end            reduce using rule 46 (Term -> Term DIVIDE Factor .)
    SEMICOLON       reduce using rule 46 (Term -> Term DIVIDE Factor .)
    INST_END        reduce using rule 46 (Term -> Term DIVIDE Factor .)
    INST_ELSE       reduce using rule 46 (Term -> Term DIVIDE Factor .)
    VAR_IDENTIFIER  reduce using rule 46 (Term -> Term DIVIDE Factor .)
    LPAREN          reduce using rule 46 (Term -> Term DIVIDE Factor .)
    NUMBER          reduce using rule 46 (Term -> Term DIVIDE Factor .)
    RPAREN          reduce using rule 46 (Term -> Term DIVIDE Factor .)
    INST_OF         reduce using rule 46 (Term -> Term DIVIDE Factor .)
    INTERSECTION    reduce using rule 46 (Term -> Term DIVIDE Factor .)
    -               reduce using rule 46 (Term -> Term DIVIDE Factor .)
    INST_DO         reduce using rule 46 (Term -> Term DIVIDE Factor .)
    AND             reduce using rule 46 (Term -> Term DIVIDE Factor .)
    OR              reduce using rule 46 (Term -> Term DIVIDE Factor .)
    INST_THEN       reduce using rule 46 (Term -> Term DIVIDE Factor .)


state 107

    (45) Term -> Term TIMES Factor .

    TIMES           reduce using rule 45 (Term -> Term TIMES Factor .)
    DIVIDE          reduce using rule 45 (Term -> Term TIMES Factor .)
    RANGE           reduce using rule 45 (Term -> Term TIMES Factor .)
    PLUS            reduce using rule 45 (Term -> Term TIMES Factor .)
    MINUS           reduce using rule 45 (Term -> Term TIMES Factor .)
    EQEQ            reduce using rule 45 (Term -> Term TIMES Factor .)
    NEQEQ           reduce using rule 45 (Term -> Term TIMES Factor .)
    GREAT           reduce using rule 45 (Term -> Term TIMES Factor .)
    LESS            reduce using rule 45 (Term -> Term TIMES Factor .)
    GREATEQ         reduce using rule 45 (Term -> Term TIMES Factor .)
    LESSEQ          reduce using rule 45 (Term -> Term TIMES Factor .)
    COMMA           reduce using rule 45 (Term -> Term TIMES Factor .)
    $end            reduce using rule 45 (Term -> Term TIMES Factor .)
    SEMICOLON       reduce using rule 45 (Term -> Term TIMES Factor .)
    INST_END        reduce using rule 45 (Term -> Term TIMES Factor .)
    INST_ELSE       reduce using rule 45 (Term -> Term TIMES Factor .)
    VAR_IDENTIFIER  reduce using rule 45 (Term -> Term TIMES Factor .)
    LPAREN          reduce using rule 45 (Term -> Term TIMES Factor .)
    NUMBER          reduce using rule 45 (Term -> Term TIMES Factor .)
    RPAREN          reduce using rule 45 (Term -> Term TIMES Factor .)
    INST_OF         reduce using rule 45 (Term -> Term TIMES Factor .)
    INTERSECTION    reduce using rule 45 (Term -> Term TIMES Factor .)
    -               reduce using rule 45 (Term -> Term TIMES Factor .)
    INST_DO         reduce using rule 45 (Term -> Term TIMES Factor .)
    AND             reduce using rule 45 (Term -> Term TIMES Factor .)
    OR              reduce using rule 45 (Term -> Term TIMES Factor .)
    INST_THEN       reduce using rule 45 (Term -> Term TIMES Factor .)


state 108

    (63) Lista_Aux -> STRING COMMA Lista_Aux .

    $end            reduce using rule 63 (Lista_Aux -> STRING COMMA Lista_Aux .)
    SEMICOLON       reduce using rule 63 (Lista_Aux -> STRING COMMA Lista_Aux .)
    INST_END        reduce using rule 63 (Lista_Aux -> STRING COMMA Lista_Aux .)
    INST_ELSE       reduce using rule 63 (Lista_Aux -> STRING COMMA Lista_Aux .)
    VAR_IDENTIFIER  reduce using rule 63 (Lista_Aux -> STRING COMMA Lista_Aux .)
    LPAREN          reduce using rule 63 (Lista_Aux -> STRING COMMA Lista_Aux .)
    NUMBER          reduce using rule 63 (Lista_Aux -> STRING COMMA Lista_Aux .)


state 109

    (50) Factor -> LPAREN Operacion_binaria RPAREN .

    TIMES           reduce using rule 50 (Factor -> LPAREN Operacion_binaria RPAREN .)
    DIVIDE          reduce using rule 50 (Factor -> LPAREN Operacion_binaria RPAREN .)
    PLUS            reduce using rule 50 (Factor -> LPAREN Operacion_binaria RPAREN .)
    MINUS           reduce using rule 50 (Factor -> LPAREN Operacion_binaria RPAREN .)
    EQEQ            reduce using rule 50 (Factor -> LPAREN Operacion_binaria RPAREN .)
    NEQEQ           reduce using rule 50 (Factor -> LPAREN Operacion_binaria RPAREN .)
    GREAT           reduce using rule 50 (Factor -> LPAREN Operacion_binaria RPAREN .)
    LESS            reduce using rule 50 (Factor -> LPAREN Operacion_binaria RPAREN .)
    GREATEQ         reduce using rule 50 (Factor -> LPAREN Operacion_binaria RPAREN .)
    LESSEQ          reduce using rule 50 (Factor -> LPAREN Operacion_binaria RPAREN .)
    RPAREN          reduce using rule 50 (Factor -> LPAREN Operacion_binaria RPAREN .)
    RANGE           reduce using rule 50 (Factor -> LPAREN Operacion_binaria RPAREN .)
    COMMA           reduce using rule 50 (Factor -> LPAREN Operacion_binaria RPAREN .)
    $end            reduce using rule 50 (Factor -> LPAREN Operacion_binaria RPAREN .)
    SEMICOLON       reduce using rule 50 (Factor -> LPAREN Operacion_binaria RPAREN .)
    INST_END        reduce using rule 50 (Factor -> LPAREN Operacion_binaria RPAREN .)
    INST_ELSE       reduce using rule 50 (Factor -> LPAREN Operacion_binaria RPAREN .)
    VAR_IDENTIFIER  reduce using rule 50 (Factor -> LPAREN Operacion_binaria RPAREN .)
    LPAREN          reduce using rule 50 (Factor -> LPAREN Operacion_binaria RPAREN .)
    NUMBER          reduce using rule 50 (Factor -> LPAREN Operacion_binaria RPAREN .)
    INST_OF         reduce using rule 50 (Factor -> LPAREN Operacion_binaria RPAREN .)
    INTERSECTION    reduce using rule 50 (Factor -> LPAREN Operacion_binaria RPAREN .)
    -               reduce using rule 50 (Factor -> LPAREN Operacion_binaria RPAREN .)
    INST_DO         reduce using rule 50 (Factor -> LPAREN Operacion_binaria RPAREN .)
    AND             reduce using rule 50 (Factor -> LPAREN Operacion_binaria RPAREN .)
    OR              reduce using rule 50 (Factor -> LPAREN Operacion_binaria RPAREN .)
    INST_THEN       reduce using rule 50 (Factor -> LPAREN Operacion_binaria RPAREN .)


state 110

    (56) RangoF -> LPAREN Rango RPAREN .

    PLUS            reduce using rule 56 (RangoF -> LPAREN Rango RPAREN .)
    TIMES           reduce using rule 56 (RangoF -> LPAREN Rango RPAREN .)
    INTERSECTION    reduce using rule 56 (RangoF -> LPAREN Rango RPAREN .)
    COMMA           reduce using rule 56 (RangoF -> LPAREN Rango RPAREN .)
    $end            reduce using rule 56 (RangoF -> LPAREN Rango RPAREN .)
    SEMICOLON       reduce using rule 56 (RangoF -> LPAREN Rango RPAREN .)
    INST_END        reduce using rule 56 (RangoF -> LPAREN Rango RPAREN .)
    INST_ELSE       reduce using rule 56 (RangoF -> LPAREN Rango RPAREN .)
    VAR_IDENTIFIER  reduce using rule 56 (RangoF -> LPAREN Rango RPAREN .)
    LPAREN          reduce using rule 56 (RangoF -> LPAREN Rango RPAREN .)
    NUMBER          reduce using rule 56 (RangoF -> LPAREN Rango RPAREN .)
    RPAREN          reduce using rule 56 (RangoF -> LPAREN Rango RPAREN .)
    -               reduce using rule 56 (RangoF -> LPAREN Rango RPAREN .)
    INST_DO         reduce using rule 56 (RangoF -> LPAREN Rango RPAREN .)


state 111

    (33) Operacion_booleana -> LPAREN Operacion_booleana RPAREN .

    AND             reduce using rule 33 (Operacion_booleana -> LPAREN Operacion_booleana RPAREN .)
    OR              reduce using rule 33 (Operacion_booleana -> LPAREN Operacion_booleana RPAREN .)
    COMMA           reduce using rule 33 (Operacion_booleana -> LPAREN Operacion_booleana RPAREN .)
    $end            reduce using rule 33 (Operacion_booleana -> LPAREN Operacion_booleana RPAREN .)
    SEMICOLON       reduce using rule 33 (Operacion_booleana -> LPAREN Operacion_booleana RPAREN .)
    INST_END        reduce using rule 33 (Operacion_booleana -> LPAREN Operacion_booleana RPAREN .)
    INST_ELSE       reduce using rule 33 (Operacion_booleana -> LPAREN Operacion_booleana RPAREN .)
    VAR_IDENTIFIER  reduce using rule 33 (Operacion_booleana -> LPAREN Operacion_booleana RPAREN .)
    LPAREN          reduce using rule 33 (Operacion_booleana -> LPAREN Operacion_booleana RPAREN .)
    NUMBER          reduce using rule 33 (Operacion_booleana -> LPAREN Operacion_booleana RPAREN .)
    INST_DO         reduce using rule 33 (Operacion_booleana -> LPAREN Operacion_booleana RPAREN .)
    INST_THEN       reduce using rule 33 (Operacion_booleana -> LPAREN Operacion_booleana RPAREN .)
    RPAREN          reduce using rule 33 (Operacion_booleana -> LPAREN Operacion_booleana RPAREN .)


state 112

    (51) Rango -> Operacion_binaria . RANGE Operacion_binaria
    (42) Operacion_binaria -> Operacion_binaria . PLUS Term
    (43) Operacion_binaria -> Operacion_binaria . MINUS Term

    RANGE           shift and go to state 81
    PLUS            shift and go to state 83
    MINUS           shift and go to state 84


state 113

    (56) RangoF -> LPAREN . Rango RPAREN
    (50) Factor -> LPAREN . Operacion_binaria RPAREN
    (51) Rango -> . Operacion_binaria RANGE Operacion_binaria
    (52) Rango -> . Rango PLUS Rango
    (53) Rango -> . Rango TIMES Operacion_binaria
    (54) Rango -> . Rango INTERSECTION Rango
    (55) Rango -> . RangoF
    (42) Operacion_binaria -> . Operacion_binaria PLUS Term
    (43) Operacion_binaria -> . Operacion_binaria MINUS Term
    (44) Operacion_binaria -> . Term
    (56) RangoF -> . LPAREN Rango RPAREN
    (45) Term -> . Term TIMES Factor
    (46) Term -> . Term DIVIDE Factor
    (47) Term -> . Factor
    (48) Factor -> . NUMBER
    (49) Factor -> . VAR_IDENTIFIER
    (50) Factor -> . LPAREN Operacion_binaria RPAREN

    LPAREN          shift and go to state 113
    NUMBER          shift and go to state 32
    VAR_IDENTIFIER  shift and go to state 40

    Rango                          shift and go to state 70
    Operacion_binaria              shift and go to state 132
    Factor                         shift and go to state 39
    Term                           shift and go to state 37
    RangoF                         shift and go to state 33

state 114

    (54) Rango -> Rango INTERSECTION Rango .
    (52) Rango -> Rango . PLUS Rango
    (53) Rango -> Rango . TIMES Operacion_binaria
    (54) Rango -> Rango . INTERSECTION Rango

    RPAREN          reduce using rule 54 (Rango -> Rango INTERSECTION Rango .)
    INTERSECTION    reduce using rule 54 (Rango -> Rango INTERSECTION Rango .)
    COMMA           reduce using rule 54 (Rango -> Rango INTERSECTION Rango .)
    $end            reduce using rule 54 (Rango -> Rango INTERSECTION Rango .)
    SEMICOLON       reduce using rule 54 (Rango -> Rango INTERSECTION Rango .)
    INST_END        reduce using rule 54 (Rango -> Rango INTERSECTION Rango .)
    INST_ELSE       reduce using rule 54 (Rango -> Rango INTERSECTION Rango .)
    VAR_IDENTIFIER  reduce using rule 54 (Rango -> Rango INTERSECTION Rango .)
    LPAREN          reduce using rule 54 (Rango -> Rango INTERSECTION Rango .)
    NUMBER          reduce using rule 54 (Rango -> Rango INTERSECTION Rango .)
    -               reduce using rule 54 (Rango -> Rango INTERSECTION Rango .)
    INST_DO         reduce using rule 54 (Rango -> Rango INTERSECTION Rango .)
    PLUS            shift and go to state 73
    TIMES           shift and go to state 74

  ! PLUS            [ reduce using rule 54 (Rango -> Rango INTERSECTION Rango .) ]
  ! TIMES           [ reduce using rule 54 (Rango -> Rango INTERSECTION Rango .) ]
  ! INTERSECTION    [ shift and go to state 72 ]


state 115

    (52) Rango -> Rango PLUS Rango .
    (52) Rango -> Rango . PLUS Rango
    (53) Rango -> Rango . TIMES Operacion_binaria
    (54) Rango -> Rango . INTERSECTION Rango

    RPAREN          reduce using rule 52 (Rango -> Rango PLUS Rango .)
    PLUS            reduce using rule 52 (Rango -> Rango PLUS Rango .)
    INTERSECTION    reduce using rule 52 (Rango -> Rango PLUS Rango .)
    COMMA           reduce using rule 52 (Rango -> Rango PLUS Rango .)
    $end            reduce using rule 52 (Rango -> Rango PLUS Rango .)
    SEMICOLON       reduce using rule 52 (Rango -> Rango PLUS Rango .)
    INST_END        reduce using rule 52 (Rango -> Rango PLUS Rango .)
    INST_ELSE       reduce using rule 52 (Rango -> Rango PLUS Rango .)
    VAR_IDENTIFIER  reduce using rule 52 (Rango -> Rango PLUS Rango .)
    LPAREN          reduce using rule 52 (Rango -> Rango PLUS Rango .)
    NUMBER          reduce using rule 52 (Rango -> Rango PLUS Rango .)
    -               reduce using rule 52 (Rango -> Rango PLUS Rango .)
    INST_DO         reduce using rule 52 (Rango -> Rango PLUS Rango .)
    TIMES           shift and go to state 74

  ! TIMES           [ reduce using rule 52 (Rango -> Rango PLUS Rango .) ]
  ! PLUS            [ shift and go to state 73 ]
  ! INTERSECTION    [ shift and go to state 72 ]


state 116

    (53) Rango -> Rango TIMES Operacion_binaria .
    (42) Operacion_binaria -> Operacion_binaria . PLUS Term
    (43) Operacion_binaria -> Operacion_binaria . MINUS Term

    RPAREN          reduce using rule 53 (Rango -> Rango TIMES Operacion_binaria .)
    PLUS            reduce using rule 53 (Rango -> Rango TIMES Operacion_binaria .)
    TIMES           reduce using rule 53 (Rango -> Rango TIMES Operacion_binaria .)
    INTERSECTION    reduce using rule 53 (Rango -> Rango TIMES Operacion_binaria .)
    COMMA           reduce using rule 53 (Rango -> Rango TIMES Operacion_binaria .)
    $end            reduce using rule 53 (Rango -> Rango TIMES Operacion_binaria .)
    SEMICOLON       reduce using rule 53 (Rango -> Rango TIMES Operacion_binaria .)
    INST_END        reduce using rule 53 (Rango -> Rango TIMES Operacion_binaria .)
    INST_ELSE       reduce using rule 53 (Rango -> Rango TIMES Operacion_binaria .)
    VAR_IDENTIFIER  reduce using rule 53 (Rango -> Rango TIMES Operacion_binaria .)
    LPAREN          reduce using rule 53 (Rango -> Rango TIMES Operacion_binaria .)
    NUMBER          reduce using rule 53 (Rango -> Rango TIMES Operacion_binaria .)
    -               reduce using rule 53 (Rango -> Rango TIMES Operacion_binaria .)
    INST_DO         reduce using rule 53 (Rango -> Rango TIMES Operacion_binaria .)
    MINUS           shift and go to state 84

  ! PLUS            [ shift and go to state 83 ]


state 117

    (30) Operacion_booleana -> Operacion_binaria Opr_bool Operacion_binaria .
    (42) Operacion_binaria -> Operacion_binaria . PLUS Term
    (43) Operacion_binaria -> Operacion_binaria . MINUS Term

    AND             reduce using rule 30 (Operacion_booleana -> Operacion_binaria Opr_bool Operacion_binaria .)
    OR              reduce using rule 30 (Operacion_booleana -> Operacion_binaria Opr_bool Operacion_binaria .)
    COMMA           reduce using rule 30 (Operacion_booleana -> Operacion_binaria Opr_bool Operacion_binaria .)
    $end            reduce using rule 30 (Operacion_booleana -> Operacion_binaria Opr_bool Operacion_binaria .)
    SEMICOLON       reduce using rule 30 (Operacion_booleana -> Operacion_binaria Opr_bool Operacion_binaria .)
    INST_END        reduce using rule 30 (Operacion_booleana -> Operacion_binaria Opr_bool Operacion_binaria .)
    INST_ELSE       reduce using rule 30 (Operacion_booleana -> Operacion_binaria Opr_bool Operacion_binaria .)
    VAR_IDENTIFIER  reduce using rule 30 (Operacion_booleana -> Operacion_binaria Opr_bool Operacion_binaria .)
    LPAREN          reduce using rule 30 (Operacion_booleana -> Operacion_binaria Opr_bool Operacion_binaria .)
    NUMBER          reduce using rule 30 (Operacion_booleana -> Operacion_binaria Opr_bool Operacion_binaria .)
    INST_DO         reduce using rule 30 (Operacion_booleana -> Operacion_binaria Opr_bool Operacion_binaria .)
    INST_THEN       reduce using rule 30 (Operacion_booleana -> Operacion_binaria Opr_bool Operacion_binaria .)
    RPAREN          reduce using rule 30 (Operacion_booleana -> Operacion_binaria Opr_bool Operacion_binaria .)
    PLUS            shift and go to state 83
    MINUS           shift and go to state 84


state 118

    (51) Rango -> Operacion_binaria RANGE Operacion_binaria .
    (42) Operacion_binaria -> Operacion_binaria . PLUS Term
    (43) Operacion_binaria -> Operacion_binaria . MINUS Term

    RPAREN          reduce using rule 51 (Rango -> Operacion_binaria RANGE Operacion_binaria .)
    PLUS            reduce using rule 51 (Rango -> Operacion_binaria RANGE Operacion_binaria .)
    TIMES           reduce using rule 51 (Rango -> Operacion_binaria RANGE Operacion_binaria .)
    INTERSECTION    reduce using rule 51 (Rango -> Operacion_binaria RANGE Operacion_binaria .)
    COMMA           reduce using rule 51 (Rango -> Operacion_binaria RANGE Operacion_binaria .)
    $end            reduce using rule 51 (Rango -> Operacion_binaria RANGE Operacion_binaria .)
    SEMICOLON       reduce using rule 51 (Rango -> Operacion_binaria RANGE Operacion_binaria .)
    INST_END        reduce using rule 51 (Rango -> Operacion_binaria RANGE Operacion_binaria .)
    INST_ELSE       reduce using rule 51 (Rango -> Operacion_binaria RANGE Operacion_binaria .)
    VAR_IDENTIFIER  reduce using rule 51 (Rango -> Operacion_binaria RANGE Operacion_binaria .)
    LPAREN          reduce using rule 51 (Rango -> Operacion_binaria RANGE Operacion_binaria .)
    NUMBER          reduce using rule 51 (Rango -> Operacion_binaria RANGE Operacion_binaria .)
    -               reduce using rule 51 (Rango -> Operacion_binaria RANGE Operacion_binaria .)
    INST_DO         reduce using rule 51 (Rango -> Operacion_binaria RANGE Operacion_binaria .)
    MINUS           shift and go to state 84

  ! PLUS            [ shift and go to state 83 ]


state 119

    (42) Operacion_binaria -> Operacion_binaria PLUS Term .
    (45) Term -> Term . TIMES Factor
    (46) Term -> Term . DIVIDE Factor

    PLUS            reduce using rule 42 (Operacion_binaria -> Operacion_binaria PLUS Term .)
    MINUS           reduce using rule 42 (Operacion_binaria -> Operacion_binaria PLUS Term .)
    RANGE           reduce using rule 42 (Operacion_binaria -> Operacion_binaria PLUS Term .)
    EQEQ            reduce using rule 42 (Operacion_binaria -> Operacion_binaria PLUS Term .)
    NEQEQ           reduce using rule 42 (Operacion_binaria -> Operacion_binaria PLUS Term .)
    GREAT           reduce using rule 42 (Operacion_binaria -> Operacion_binaria PLUS Term .)
    LESS            reduce using rule 42 (Operacion_binaria -> Operacion_binaria PLUS Term .)
    GREATEQ         reduce using rule 42 (Operacion_binaria -> Operacion_binaria PLUS Term .)
    LESSEQ          reduce using rule 42 (Operacion_binaria -> Operacion_binaria PLUS Term .)
    COMMA           reduce using rule 42 (Operacion_binaria -> Operacion_binaria PLUS Term .)
    $end            reduce using rule 42 (Operacion_binaria -> Operacion_binaria PLUS Term .)
    SEMICOLON       reduce using rule 42 (Operacion_binaria -> Operacion_binaria PLUS Term .)
    INST_END        reduce using rule 42 (Operacion_binaria -> Operacion_binaria PLUS Term .)
    INST_ELSE       reduce using rule 42 (Operacion_binaria -> Operacion_binaria PLUS Term .)
    VAR_IDENTIFIER  reduce using rule 42 (Operacion_binaria -> Operacion_binaria PLUS Term .)
    LPAREN          reduce using rule 42 (Operacion_binaria -> Operacion_binaria PLUS Term .)
    NUMBER          reduce using rule 42 (Operacion_binaria -> Operacion_binaria PLUS Term .)
    INTERSECTION    reduce using rule 42 (Operacion_binaria -> Operacion_binaria PLUS Term .)
    RPAREN          reduce using rule 42 (Operacion_binaria -> Operacion_binaria PLUS Term .)
    -               reduce using rule 42 (Operacion_binaria -> Operacion_binaria PLUS Term .)
    INST_DO         reduce using rule 42 (Operacion_binaria -> Operacion_binaria PLUS Term .)
    AND             reduce using rule 42 (Operacion_binaria -> Operacion_binaria PLUS Term .)
    OR              reduce using rule 42 (Operacion_binaria -> Operacion_binaria PLUS Term .)
    INST_THEN       reduce using rule 42 (Operacion_binaria -> Operacion_binaria PLUS Term .)
    INST_OF         reduce using rule 42 (Operacion_binaria -> Operacion_binaria PLUS Term .)
    TIMES           shift and go to state 67
    DIVIDE          shift and go to state 66

  ! TIMES           [ reduce using rule 42 (Operacion_binaria -> Operacion_binaria PLUS Term .) ]


state 120

    (43) Operacion_binaria -> Operacion_binaria MINUS Term .
    (45) Term -> Term . TIMES Factor
    (46) Term -> Term . DIVIDE Factor

    PLUS            reduce using rule 43 (Operacion_binaria -> Operacion_binaria MINUS Term .)
    MINUS           reduce using rule 43 (Operacion_binaria -> Operacion_binaria MINUS Term .)
    RANGE           reduce using rule 43 (Operacion_binaria -> Operacion_binaria MINUS Term .)
    EQEQ            reduce using rule 43 (Operacion_binaria -> Operacion_binaria MINUS Term .)
    NEQEQ           reduce using rule 43 (Operacion_binaria -> Operacion_binaria MINUS Term .)
    GREAT           reduce using rule 43 (Operacion_binaria -> Operacion_binaria MINUS Term .)
    LESS            reduce using rule 43 (Operacion_binaria -> Operacion_binaria MINUS Term .)
    GREATEQ         reduce using rule 43 (Operacion_binaria -> Operacion_binaria MINUS Term .)
    LESSEQ          reduce using rule 43 (Operacion_binaria -> Operacion_binaria MINUS Term .)
    COMMA           reduce using rule 43 (Operacion_binaria -> Operacion_binaria MINUS Term .)
    $end            reduce using rule 43 (Operacion_binaria -> Operacion_binaria MINUS Term .)
    SEMICOLON       reduce using rule 43 (Operacion_binaria -> Operacion_binaria MINUS Term .)
    INST_END        reduce using rule 43 (Operacion_binaria -> Operacion_binaria MINUS Term .)
    INST_ELSE       reduce using rule 43 (Operacion_binaria -> Operacion_binaria MINUS Term .)
    VAR_IDENTIFIER  reduce using rule 43 (Operacion_binaria -> Operacion_binaria MINUS Term .)
    LPAREN          reduce using rule 43 (Operacion_binaria -> Operacion_binaria MINUS Term .)
    NUMBER          reduce using rule 43 (Operacion_binaria -> Operacion_binaria MINUS Term .)
    INTERSECTION    reduce using rule 43 (Operacion_binaria -> Operacion_binaria MINUS Term .)
    RPAREN          reduce using rule 43 (Operacion_binaria -> Operacion_binaria MINUS Term .)
    -               reduce using rule 43 (Operacion_binaria -> Operacion_binaria MINUS Term .)
    INST_DO         reduce using rule 43 (Operacion_binaria -> Operacion_binaria MINUS Term .)
    AND             reduce using rule 43 (Operacion_binaria -> Operacion_binaria MINUS Term .)
    OR              reduce using rule 43 (Operacion_binaria -> Operacion_binaria MINUS Term .)
    INST_THEN       reduce using rule 43 (Operacion_binaria -> Operacion_binaria MINUS Term .)
    INST_OF         reduce using rule 43 (Operacion_binaria -> Operacion_binaria MINUS Term .)
    TIMES           shift and go to state 67
    DIVIDE          shift and go to state 66

  ! TIMES           [ reduce using rule 43 (Operacion_binaria -> Operacion_binaria MINUS Term .) ]


state 121

    (17) Inst_Funcion -> TOP LPAREN VAR_IDENTIFIER RPAREN .

    $end            reduce using rule 17 (Inst_Funcion -> TOP LPAREN VAR_IDENTIFIER RPAREN .)
    SEMICOLON       reduce using rule 17 (Inst_Funcion -> TOP LPAREN VAR_IDENTIFIER RPAREN .)
    INST_END        reduce using rule 17 (Inst_Funcion -> TOP LPAREN VAR_IDENTIFIER RPAREN .)
    INST_ELSE       reduce using rule 17 (Inst_Funcion -> TOP LPAREN VAR_IDENTIFIER RPAREN .)
    VAR_IDENTIFIER  reduce using rule 17 (Inst_Funcion -> TOP LPAREN VAR_IDENTIFIER RPAREN .)
    LPAREN          reduce using rule 17 (Inst_Funcion -> TOP LPAREN VAR_IDENTIFIER RPAREN .)
    NUMBER          reduce using rule 17 (Inst_Funcion -> TOP LPAREN VAR_IDENTIFIER RPAREN .)


state 122

    (71) Inst_While -> INST_WHILE Operacion_booleana INST_DO Bloque_Inst .

    SEMICOLON       reduce using rule 71 (Inst_While -> INST_WHILE Operacion_booleana INST_DO Bloque_Inst .)
    INST_END        reduce using rule 71 (Inst_While -> INST_WHILE Operacion_booleana INST_DO Bloque_Inst .)
    $end            reduce using rule 71 (Inst_While -> INST_WHILE Operacion_booleana INST_DO Bloque_Inst .)
    INST_ELSE       reduce using rule 71 (Inst_While -> INST_WHILE Operacion_booleana INST_DO Bloque_Inst .)
    VAR_IDENTIFIER  reduce using rule 71 (Inst_While -> INST_WHILE Operacion_booleana INST_DO Bloque_Inst .)
    LPAREN          reduce using rule 71 (Inst_While -> INST_WHILE Operacion_booleana INST_DO Bloque_Inst .)
    NUMBER          reduce using rule 71 (Inst_While -> INST_WHILE Operacion_booleana INST_DO Bloque_Inst .)


state 123

    (5) Lista_Inst -> Inst SEMICOLON Lista_Inst .

    INST_END        reduce using rule 5 (Lista_Inst -> Inst SEMICOLON Lista_Inst .)


state 124

    (18) Inst_Funcion -> BOTTOM LPAREN VAR_IDENTIFIER RPAREN .

    $end            reduce using rule 18 (Inst_Funcion -> BOTTOM LPAREN VAR_IDENTIFIER RPAREN .)
    SEMICOLON       reduce using rule 18 (Inst_Funcion -> BOTTOM LPAREN VAR_IDENTIFIER RPAREN .)
    INST_END        reduce using rule 18 (Inst_Funcion -> BOTTOM LPAREN VAR_IDENTIFIER RPAREN .)
    INST_ELSE       reduce using rule 18 (Inst_Funcion -> BOTTOM LPAREN VAR_IDENTIFIER RPAREN .)
    VAR_IDENTIFIER  reduce using rule 18 (Inst_Funcion -> BOTTOM LPAREN VAR_IDENTIFIER RPAREN .)
    LPAREN          reduce using rule 18 (Inst_Funcion -> BOTTOM LPAREN VAR_IDENTIFIER RPAREN .)
    NUMBER          reduce using rule 18 (Inst_Funcion -> BOTTOM LPAREN VAR_IDENTIFIER RPAREN .)


state 125

    (67) Casos -> VAR_IDENTIFIER . - > Bloque_Inst
    (49) Factor -> VAR_IDENTIFIER .

    -               shift and go to state 133
    TIMES           reduce using rule 49 (Factor -> VAR_IDENTIFIER .)
    DIVIDE          reduce using rule 49 (Factor -> VAR_IDENTIFIER .)
    RANGE           reduce using rule 49 (Factor -> VAR_IDENTIFIER .)
    PLUS            reduce using rule 49 (Factor -> VAR_IDENTIFIER .)
    MINUS           reduce using rule 49 (Factor -> VAR_IDENTIFIER .)


state 126

    (68) Casos -> Rango . - > Bloque_Inst
    (52) Rango -> Rango . PLUS Rango
    (53) Rango -> Rango . TIMES Operacion_binaria
    (54) Rango -> Rango . INTERSECTION Rango

    -               shift and go to state 134
    PLUS            shift and go to state 73
    TIMES           shift and go to state 74
    INTERSECTION    shift and go to state 72


state 127

    (66) Inst_Case -> INST_CASE Operacion_binaria INST_OF Casos .
    (69) Casos -> Casos . Casos
    (67) Casos -> . VAR_IDENTIFIER - > Bloque_Inst
    (68) Casos -> . Rango - > Bloque_Inst
    (69) Casos -> . Casos Casos
    (51) Rango -> . Operacion_binaria RANGE Operacion_binaria
    (52) Rango -> . Rango PLUS Rango
    (53) Rango -> . Rango TIMES Operacion_binaria
    (54) Rango -> . Rango INTERSECTION Rango
    (55) Rango -> . RangoF
    (42) Operacion_binaria -> . Operacion_binaria PLUS Term
    (43) Operacion_binaria -> . Operacion_binaria MINUS Term
    (44) Operacion_binaria -> . Term
    (56) RangoF -> . LPAREN Rango RPAREN
    (45) Term -> . Term TIMES Factor
    (46) Term -> . Term DIVIDE Factor
    (47) Term -> . Factor
    (48) Factor -> . NUMBER
    (49) Factor -> . VAR_IDENTIFIER
    (50) Factor -> . LPAREN Operacion_binaria RPAREN

  ! shift/reduce conflict for VAR_IDENTIFIER resolved as shift
  ! shift/reduce conflict for LPAREN resolved as shift
  ! shift/reduce conflict for NUMBER resolved as shift
    $end            reduce using rule 66 (Inst_Case -> INST_CASE Operacion_binaria INST_OF Casos .)
    SEMICOLON       reduce using rule 66 (Inst_Case -> INST_CASE Operacion_binaria INST_OF Casos .)
    INST_END        reduce using rule 66 (Inst_Case -> INST_CASE Operacion_binaria INST_OF Casos .)
    INST_ELSE       reduce using rule 66 (Inst_Case -> INST_CASE Operacion_binaria INST_OF Casos .)
    VAR_IDENTIFIER  shift and go to state 125
    LPAREN          shift and go to state 113
    NUMBER          shift and go to state 32

  ! VAR_IDENTIFIER  [ reduce using rule 66 (Inst_Case -> INST_CASE Operacion_binaria INST_OF Casos .) ]
  ! LPAREN          [ reduce using rule 66 (Inst_Case -> INST_CASE Operacion_binaria INST_OF Casos .) ]
  ! NUMBER          [ reduce using rule 66 (Inst_Case -> INST_CASE Operacion_binaria INST_OF Casos .) ]

    Operacion_binaria              shift and go to state 112
    Factor                         shift and go to state 39
    Term                           shift and go to state 37
    RangoF                         shift and go to state 33
    Rango                          shift and go to state 126
    Casos                          shift and go to state 135

state 128

    (70) Inst_For -> INST_FOR VAR_IDENTIFIER INST_IN Rango . INST_DO Bloque_Inst
    (52) Rango -> Rango . PLUS Rango
    (53) Rango -> Rango . TIMES Operacion_binaria
    (54) Rango -> Rango . INTERSECTION Rango

    INST_DO         shift and go to state 136
    PLUS            shift and go to state 73
    TIMES           shift and go to state 74
    INTERSECTION    shift and go to state 72


state 129

    (64) Inst_If -> INST_IF Operacion_booleana INST_THEN Bloque_Inst .
    (65) Inst_If -> INST_IF Operacion_booleana INST_THEN Bloque_Inst . INST_ELSE Bloque_Inst

  ! shift/reduce conflict for INST_ELSE resolved as shift
    $end            reduce using rule 64 (Inst_If -> INST_IF Operacion_booleana INST_THEN Bloque_Inst .)
    SEMICOLON       reduce using rule 64 (Inst_If -> INST_IF Operacion_booleana INST_THEN Bloque_Inst .)
    INST_END        reduce using rule 64 (Inst_If -> INST_IF Operacion_booleana INST_THEN Bloque_Inst .)
    VAR_IDENTIFIER  reduce using rule 64 (Inst_If -> INST_IF Operacion_booleana INST_THEN Bloque_Inst .)
    LPAREN          reduce using rule 64 (Inst_If -> INST_IF Operacion_booleana INST_THEN Bloque_Inst .)
    NUMBER          reduce using rule 64 (Inst_If -> INST_IF Operacion_booleana INST_THEN Bloque_Inst .)
    INST_ELSE       shift and go to state 137

  ! INST_ELSE       [ reduce using rule 64 (Inst_If -> INST_IF Operacion_booleana INST_THEN Bloque_Inst .) ]


state 130

    (16) Inst_Funcion -> LENGTH LPAREN VAR_IDENTIFIER RPAREN .

    $end            reduce using rule 16 (Inst_Funcion -> LENGTH LPAREN VAR_IDENTIFIER RPAREN .)
    SEMICOLON       reduce using rule 16 (Inst_Funcion -> LENGTH LPAREN VAR_IDENTIFIER RPAREN .)
    INST_END        reduce using rule 16 (Inst_Funcion -> LENGTH LPAREN VAR_IDENTIFIER RPAREN .)
    INST_ELSE       reduce using rule 16 (Inst_Funcion -> LENGTH LPAREN VAR_IDENTIFIER RPAREN .)
    VAR_IDENTIFIER  reduce using rule 16 (Inst_Funcion -> LENGTH LPAREN VAR_IDENTIFIER RPAREN .)
    LPAREN          reduce using rule 16 (Inst_Funcion -> LENGTH LPAREN VAR_IDENTIFIER RPAREN .)
    NUMBER          reduce using rule 16 (Inst_Funcion -> LENGTH LPAREN VAR_IDENTIFIER RPAREN .)


state 131

    (15) Inst_Funcion -> RTOI LPAREN VAR_IDENTIFIER RPAREN .

    $end            reduce using rule 15 (Inst_Funcion -> RTOI LPAREN VAR_IDENTIFIER RPAREN .)
    SEMICOLON       reduce using rule 15 (Inst_Funcion -> RTOI LPAREN VAR_IDENTIFIER RPAREN .)
    INST_END        reduce using rule 15 (Inst_Funcion -> RTOI LPAREN VAR_IDENTIFIER RPAREN .)
    INST_ELSE       reduce using rule 15 (Inst_Funcion -> RTOI LPAREN VAR_IDENTIFIER RPAREN .)
    VAR_IDENTIFIER  reduce using rule 15 (Inst_Funcion -> RTOI LPAREN VAR_IDENTIFIER RPAREN .)
    LPAREN          reduce using rule 15 (Inst_Funcion -> RTOI LPAREN VAR_IDENTIFIER RPAREN .)
    NUMBER          reduce using rule 15 (Inst_Funcion -> RTOI LPAREN VAR_IDENTIFIER RPAREN .)


state 132

    (50) Factor -> LPAREN Operacion_binaria . RPAREN
    (51) Rango -> Operacion_binaria . RANGE Operacion_binaria
    (42) Operacion_binaria -> Operacion_binaria . PLUS Term
    (43) Operacion_binaria -> Operacion_binaria . MINUS Term

    RPAREN          shift and go to state 109
    RANGE           shift and go to state 81
    PLUS            shift and go to state 83
    MINUS           shift and go to state 84


state 133

    (67) Casos -> VAR_IDENTIFIER - . > Bloque_Inst

    >               shift and go to state 138


state 134

    (68) Casos -> Rango - . > Bloque_Inst

    >               shift and go to state 139


state 135

    (69) Casos -> Casos Casos .
    (69) Casos -> Casos . Casos
    (67) Casos -> . VAR_IDENTIFIER - > Bloque_Inst
    (68) Casos -> . Rango - > Bloque_Inst
    (69) Casos -> . Casos Casos
    (51) Rango -> . Operacion_binaria RANGE Operacion_binaria
    (52) Rango -> . Rango PLUS Rango
    (53) Rango -> . Rango TIMES Operacion_binaria
    (54) Rango -> . Rango INTERSECTION Rango
    (55) Rango -> . RangoF
    (42) Operacion_binaria -> . Operacion_binaria PLUS Term
    (43) Operacion_binaria -> . Operacion_binaria MINUS Term
    (44) Operacion_binaria -> . Term
    (56) RangoF -> . LPAREN Rango RPAREN
    (45) Term -> . Term TIMES Factor
    (46) Term -> . Term DIVIDE Factor
    (47) Term -> . Factor
    (48) Factor -> . NUMBER
    (49) Factor -> . VAR_IDENTIFIER
    (50) Factor -> . LPAREN Operacion_binaria RPAREN

  ! shift/reduce conflict for VAR_IDENTIFIER resolved as shift
  ! shift/reduce conflict for LPAREN resolved as shift
  ! shift/reduce conflict for NUMBER resolved as shift
    $end            reduce using rule 69 (Casos -> Casos Casos .)
    SEMICOLON       reduce using rule 69 (Casos -> Casos Casos .)
    INST_END        reduce using rule 69 (Casos -> Casos Casos .)
    INST_ELSE       reduce using rule 69 (Casos -> Casos Casos .)
    VAR_IDENTIFIER  shift and go to state 125
    LPAREN          shift and go to state 113
    NUMBER          shift and go to state 32

  ! VAR_IDENTIFIER  [ reduce using rule 69 (Casos -> Casos Casos .) ]
  ! LPAREN          [ reduce using rule 69 (Casos -> Casos Casos .) ]
  ! NUMBER          [ reduce using rule 69 (Casos -> Casos Casos .) ]

    Operacion_binaria              shift and go to state 112
    Factor                         shift and go to state 39
    Term                           shift and go to state 37
    RangoF                         shift and go to state 33
    Rango                          shift and go to state 126
    Casos                          shift and go to state 135

state 136

    (70) Inst_For -> INST_FOR VAR_IDENTIFIER INST_IN Rango INST_DO . Bloque_Inst
    (2) Bloque_Inst -> . INST_BEGIN Lista_Inst INST_END
    (3) Bloque_Inst -> . Inst
    (6) Inst -> . Inst_Declare
    (7) Inst -> . Inst_Asignacion
    (8) Inst -> . Inst_Lectura
    (9) Inst -> . Inst_For
    (10) Inst -> . Inst_While
    (11) Inst -> . Inst_If
    (12) Inst -> . Inst_Case
    (13) Inst -> . Inst_Salida
    (14) Inst -> . Inst_Funcion
    (19) Inst_Declare -> . INST_DECLARE Lista_Declare
    (26) Inst_Asignacion -> . VAR_IDENTIFIER EQUAL Expresion
    (57) Inst_Lectura -> . INST_READ VAR_IDENTIFIER
    (70) Inst_For -> . INST_FOR VAR_IDENTIFIER INST_IN Rango INST_DO Bloque_Inst
    (71) Inst_While -> . INST_WHILE Operacion_booleana INST_DO Bloque_Inst
    (64) Inst_If -> . INST_IF Operacion_booleana INST_THEN Bloque_Inst
    (65) Inst_If -> . INST_IF Operacion_booleana INST_THEN Bloque_Inst INST_ELSE Bloque_Inst
    (66) Inst_Case -> . INST_CASE Operacion_binaria INST_OF Casos
    (58) Inst_Salida -> . INST_WRITE Lista_Aux
    (59) Inst_Salida -> . INST_WRITELN Lista_Aux
    (15) Inst_Funcion -> . RTOI LPAREN VAR_IDENTIFIER RPAREN
    (16) Inst_Funcion -> . LENGTH LPAREN VAR_IDENTIFIER RPAREN
    (17) Inst_Funcion -> . TOP LPAREN VAR_IDENTIFIER RPAREN
    (18) Inst_Funcion -> . BOTTOM LPAREN VAR_IDENTIFIER RPAREN

    INST_BEGIN      shift and go to state 11
    INST_DECLARE    shift and go to state 3
    VAR_IDENTIFIER  shift and go to state 18
    INST_READ       shift and go to state 10
    INST_FOR        shift and go to state 21
    INST_WHILE      shift and go to state 9
    INST_IF         shift and go to state 22
    INST_CASE       shift and go to state 20
    INST_WRITE      shift and go to state 5
    INST_WRITELN    shift and go to state 23
    RTOI            shift and go to state 25
    LENGTH          shift and go to state 24
    TOP             shift and go to state 6
    BOTTOM          shift and go to state 13

    Inst_Salida                    shift and go to state 8
    Inst_Declare                   shift and go to state 12
    Inst_Funcion                   shift and go to state 4
    Bloque_Inst                    shift and go to state 140
    Inst_If                        shift and go to state 19
    Inst_While                     shift and go to state 16
    Inst_For                       shift and go to state 14
    Inst_Asignacion                shift and go to state 26
    Inst                           shift and go to state 15
    Inst_Case                      shift and go to state 27
    Inst_Lectura                   shift and go to state 17

state 137

    (65) Inst_If -> INST_IF Operacion_booleana INST_THEN Bloque_Inst INST_ELSE . Bloque_Inst
    (2) Bloque_Inst -> . INST_BEGIN Lista_Inst INST_END
    (3) Bloque_Inst -> . Inst
    (6) Inst -> . Inst_Declare
    (7) Inst -> . Inst_Asignacion
    (8) Inst -> . Inst_Lectura
    (9) Inst -> . Inst_For
    (10) Inst -> . Inst_While
    (11) Inst -> . Inst_If
    (12) Inst -> . Inst_Case
    (13) Inst -> . Inst_Salida
    (14) Inst -> . Inst_Funcion
    (19) Inst_Declare -> . INST_DECLARE Lista_Declare
    (26) Inst_Asignacion -> . VAR_IDENTIFIER EQUAL Expresion
    (57) Inst_Lectura -> . INST_READ VAR_IDENTIFIER
    (70) Inst_For -> . INST_FOR VAR_IDENTIFIER INST_IN Rango INST_DO Bloque_Inst
    (71) Inst_While -> . INST_WHILE Operacion_booleana INST_DO Bloque_Inst
    (64) Inst_If -> . INST_IF Operacion_booleana INST_THEN Bloque_Inst
    (65) Inst_If -> . INST_IF Operacion_booleana INST_THEN Bloque_Inst INST_ELSE Bloque_Inst
    (66) Inst_Case -> . INST_CASE Operacion_binaria INST_OF Casos
    (58) Inst_Salida -> . INST_WRITE Lista_Aux
    (59) Inst_Salida -> . INST_WRITELN Lista_Aux
    (15) Inst_Funcion -> . RTOI LPAREN VAR_IDENTIFIER RPAREN
    (16) Inst_Funcion -> . LENGTH LPAREN VAR_IDENTIFIER RPAREN
    (17) Inst_Funcion -> . TOP LPAREN VAR_IDENTIFIER RPAREN
    (18) Inst_Funcion -> . BOTTOM LPAREN VAR_IDENTIFIER RPAREN

    INST_BEGIN      shift and go to state 11
    INST_DECLARE    shift and go to state 3
    VAR_IDENTIFIER  shift and go to state 18
    INST_READ       shift and go to state 10
    INST_FOR        shift and go to state 21
    INST_WHILE      shift and go to state 9
    INST_IF         shift and go to state 22
    INST_CASE       shift and go to state 20
    INST_WRITE      shift and go to state 5
    INST_WRITELN    shift and go to state 23
    RTOI            shift and go to state 25
    LENGTH          shift and go to state 24
    TOP             shift and go to state 6
    BOTTOM          shift and go to state 13

    Inst_Salida                    shift and go to state 8
    Inst_Declare                   shift and go to state 12
    Inst_Funcion                   shift and go to state 4
    Bloque_Inst                    shift and go to state 141
    Inst_If                        shift and go to state 19
    Inst_For                       shift and go to state 14
    Inst_While                     shift and go to state 16
    Inst                           shift and go to state 15
    Inst_Asignacion                shift and go to state 26
    Inst_Case                      shift and go to state 27
    Inst_Lectura                   shift and go to state 17

state 138

    (67) Casos -> VAR_IDENTIFIER - > . Bloque_Inst
    (2) Bloque_Inst -> . INST_BEGIN Lista_Inst INST_END
    (3) Bloque_Inst -> . Inst
    (6) Inst -> . Inst_Declare
    (7) Inst -> . Inst_Asignacion
    (8) Inst -> . Inst_Lectura
    (9) Inst -> . Inst_For
    (10) Inst -> . Inst_While
    (11) Inst -> . Inst_If
    (12) Inst -> . Inst_Case
    (13) Inst -> . Inst_Salida
    (14) Inst -> . Inst_Funcion
    (19) Inst_Declare -> . INST_DECLARE Lista_Declare
    (26) Inst_Asignacion -> . VAR_IDENTIFIER EQUAL Expresion
    (57) Inst_Lectura -> . INST_READ VAR_IDENTIFIER
    (70) Inst_For -> . INST_FOR VAR_IDENTIFIER INST_IN Rango INST_DO Bloque_Inst
    (71) Inst_While -> . INST_WHILE Operacion_booleana INST_DO Bloque_Inst
    (64) Inst_If -> . INST_IF Operacion_booleana INST_THEN Bloque_Inst
    (65) Inst_If -> . INST_IF Operacion_booleana INST_THEN Bloque_Inst INST_ELSE Bloque_Inst
    (66) Inst_Case -> . INST_CASE Operacion_binaria INST_OF Casos
    (58) Inst_Salida -> . INST_WRITE Lista_Aux
    (59) Inst_Salida -> . INST_WRITELN Lista_Aux
    (15) Inst_Funcion -> . RTOI LPAREN VAR_IDENTIFIER RPAREN
    (16) Inst_Funcion -> . LENGTH LPAREN VAR_IDENTIFIER RPAREN
    (17) Inst_Funcion -> . TOP LPAREN VAR_IDENTIFIER RPAREN
    (18) Inst_Funcion -> . BOTTOM LPAREN VAR_IDENTIFIER RPAREN

    INST_BEGIN      shift and go to state 11
    INST_DECLARE    shift and go to state 3
    VAR_IDENTIFIER  shift and go to state 18
    INST_READ       shift and go to state 10
    INST_FOR        shift and go to state 21
    INST_WHILE      shift and go to state 9
    INST_IF         shift and go to state 22
    INST_CASE       shift and go to state 20
    INST_WRITE      shift and go to state 5
    INST_WRITELN    shift and go to state 23
    RTOI            shift and go to state 25
    LENGTH          shift and go to state 24
    TOP             shift and go to state 6
    BOTTOM          shift and go to state 13

    Inst_Salida                    shift and go to state 8
    Inst_Declare                   shift and go to state 12
    Inst_Funcion                   shift and go to state 4
    Bloque_Inst                    shift and go to state 142
    Inst_If                        shift and go to state 19
    Inst_For                       shift and go to state 14
    Inst_While                     shift and go to state 16
    Inst                           shift and go to state 15
    Inst_Asignacion                shift and go to state 26
    Inst_Case                      shift and go to state 27
    Inst_Lectura                   shift and go to state 17

state 139

    (68) Casos -> Rango - > . Bloque_Inst
    (2) Bloque_Inst -> . INST_BEGIN Lista_Inst INST_END
    (3) Bloque_Inst -> . Inst
    (6) Inst -> . Inst_Declare
    (7) Inst -> . Inst_Asignacion
    (8) Inst -> . Inst_Lectura
    (9) Inst -> . Inst_For
    (10) Inst -> . Inst_While
    (11) Inst -> . Inst_If
    (12) Inst -> . Inst_Case
    (13) Inst -> . Inst_Salida
    (14) Inst -> . Inst_Funcion
    (19) Inst_Declare -> . INST_DECLARE Lista_Declare
    (26) Inst_Asignacion -> . VAR_IDENTIFIER EQUAL Expresion
    (57) Inst_Lectura -> . INST_READ VAR_IDENTIFIER
    (70) Inst_For -> . INST_FOR VAR_IDENTIFIER INST_IN Rango INST_DO Bloque_Inst
    (71) Inst_While -> . INST_WHILE Operacion_booleana INST_DO Bloque_Inst
    (64) Inst_If -> . INST_IF Operacion_booleana INST_THEN Bloque_Inst
    (65) Inst_If -> . INST_IF Operacion_booleana INST_THEN Bloque_Inst INST_ELSE Bloque_Inst
    (66) Inst_Case -> . INST_CASE Operacion_binaria INST_OF Casos
    (58) Inst_Salida -> . INST_WRITE Lista_Aux
    (59) Inst_Salida -> . INST_WRITELN Lista_Aux
    (15) Inst_Funcion -> . RTOI LPAREN VAR_IDENTIFIER RPAREN
    (16) Inst_Funcion -> . LENGTH LPAREN VAR_IDENTIFIER RPAREN
    (17) Inst_Funcion -> . TOP LPAREN VAR_IDENTIFIER RPAREN
    (18) Inst_Funcion -> . BOTTOM LPAREN VAR_IDENTIFIER RPAREN

    INST_BEGIN      shift and go to state 11
    INST_DECLARE    shift and go to state 3
    VAR_IDENTIFIER  shift and go to state 18
    INST_READ       shift and go to state 10
    INST_FOR        shift and go to state 21
    INST_WHILE      shift and go to state 9
    INST_IF         shift and go to state 22
    INST_CASE       shift and go to state 20
    INST_WRITE      shift and go to state 5
    INST_WRITELN    shift and go to state 23
    RTOI            shift and go to state 25
    LENGTH          shift and go to state 24
    TOP             shift and go to state 6
    BOTTOM          shift and go to state 13

    Inst_Salida                    shift and go to state 8
    Inst_Declare                   shift and go to state 12
    Inst_Funcion                   shift and go to state 4
    Bloque_Inst                    shift and go to state 143
    Inst_If                        shift and go to state 19
    Inst_While                     shift and go to state 16
    Inst_For                       shift and go to state 14
    Inst_Asignacion                shift and go to state 26
    Inst                           shift and go to state 15
    Inst_Case                      shift and go to state 27
    Inst_Lectura                   shift and go to state 17

state 140

    (70) Inst_For -> INST_FOR VAR_IDENTIFIER INST_IN Rango INST_DO Bloque_Inst .

    $end            reduce using rule 70 (Inst_For -> INST_FOR VAR_IDENTIFIER INST_IN Rango INST_DO Bloque_Inst .)
    SEMICOLON       reduce using rule 70 (Inst_For -> INST_FOR VAR_IDENTIFIER INST_IN Rango INST_DO Bloque_Inst .)
    INST_END        reduce using rule 70 (Inst_For -> INST_FOR VAR_IDENTIFIER INST_IN Rango INST_DO Bloque_Inst .)
    INST_ELSE       reduce using rule 70 (Inst_For -> INST_FOR VAR_IDENTIFIER INST_IN Rango INST_DO Bloque_Inst .)
    VAR_IDENTIFIER  reduce using rule 70 (Inst_For -> INST_FOR VAR_IDENTIFIER INST_IN Rango INST_DO Bloque_Inst .)
    LPAREN          reduce using rule 70 (Inst_For -> INST_FOR VAR_IDENTIFIER INST_IN Rango INST_DO Bloque_Inst .)
    NUMBER          reduce using rule 70 (Inst_For -> INST_FOR VAR_IDENTIFIER INST_IN Rango INST_DO Bloque_Inst .)


state 141

    (65) Inst_If -> INST_IF Operacion_booleana INST_THEN Bloque_Inst INST_ELSE Bloque_Inst .

    $end            reduce using rule 65 (Inst_If -> INST_IF Operacion_booleana INST_THEN Bloque_Inst INST_ELSE Bloque_Inst .)
    SEMICOLON       reduce using rule 65 (Inst_If -> INST_IF Operacion_booleana INST_THEN Bloque_Inst INST_ELSE Bloque_Inst .)
    INST_END        reduce using rule 65 (Inst_If -> INST_IF Operacion_booleana INST_THEN Bloque_Inst INST_ELSE Bloque_Inst .)
    INST_ELSE       reduce using rule 65 (Inst_If -> INST_IF Operacion_booleana INST_THEN Bloque_Inst INST_ELSE Bloque_Inst .)
    VAR_IDENTIFIER  reduce using rule 65 (Inst_If -> INST_IF Operacion_booleana INST_THEN Bloque_Inst INST_ELSE Bloque_Inst .)
    LPAREN          reduce using rule 65 (Inst_If -> INST_IF Operacion_booleana INST_THEN Bloque_Inst INST_ELSE Bloque_Inst .)
    NUMBER          reduce using rule 65 (Inst_If -> INST_IF Operacion_booleana INST_THEN Bloque_Inst INST_ELSE Bloque_Inst .)


state 142

    (67) Casos -> VAR_IDENTIFIER - > Bloque_Inst .

    $end            reduce using rule 67 (Casos -> VAR_IDENTIFIER - > Bloque_Inst .)
    SEMICOLON       reduce using rule 67 (Casos -> VAR_IDENTIFIER - > Bloque_Inst .)
    INST_END        reduce using rule 67 (Casos -> VAR_IDENTIFIER - > Bloque_Inst .)
    INST_ELSE       reduce using rule 67 (Casos -> VAR_IDENTIFIER - > Bloque_Inst .)
    VAR_IDENTIFIER  reduce using rule 67 (Casos -> VAR_IDENTIFIER - > Bloque_Inst .)
    LPAREN          reduce using rule 67 (Casos -> VAR_IDENTIFIER - > Bloque_Inst .)
    NUMBER          reduce using rule 67 (Casos -> VAR_IDENTIFIER - > Bloque_Inst .)


state 143

    (68) Casos -> Rango - > Bloque_Inst .

    $end            reduce using rule 68 (Casos -> Rango - > Bloque_Inst .)
    SEMICOLON       reduce using rule 68 (Casos -> Rango - > Bloque_Inst .)
    INST_END        reduce using rule 68 (Casos -> Rango - > Bloque_Inst .)
    INST_ELSE       reduce using rule 68 (Casos -> Rango - > Bloque_Inst .)
    VAR_IDENTIFIER  reduce using rule 68 (Casos -> Rango - > Bloque_Inst .)
    LPAREN          reduce using rule 68 (Casos -> Rango - > Bloque_Inst .)
    NUMBER          reduce using rule 68 (Casos -> Rango - > Bloque_Inst .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for TIMES in state 37 resolved as shift
WARNING: shift/reduce conflict for VAR_IDENTIFIER in state 127 resolved as shift
WARNING: shift/reduce conflict for LPAREN in state 127 resolved as shift
WARNING: shift/reduce conflict for NUMBER in state 127 resolved as shift
WARNING: shift/reduce conflict for INST_ELSE in state 129 resolved as shift
WARNING: shift/reduce conflict for VAR_IDENTIFIER in state 135 resolved as shift
WARNING: shift/reduce conflict for LPAREN in state 135 resolved as shift
WARNING: shift/reduce conflict for NUMBER in state 135 resolved as shift
