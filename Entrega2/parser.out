Created by PLY version 3.4 (http://www.dabeaz.com/ply)

Unused terminals:

    COMMENT
    CASE_ASSIGN
    RESERVED
    IN
    MOD

Grammar

Rule 0     S' -> program
Rule 1     program -> INST_PROGRAM Bloque_Inst
Rule 2     Bloque_Inst -> INST_BEGIN Lista_Inst INST_END
Rule 3     Bloque_Inst -> INST_BEGIN Inst_Declare Lista_Inst INST_END
Rule 4     Bloque_Inst -> INST_BEGIN Inst_Declare INST_END
Rule 5     Bloque_Inst -> Inst_Declare Inst
Rule 6     Bloque_Inst -> Inst
Rule 7     Lista_Inst -> Inst
Rule 8     Lista_Inst -> Inst SEMICOLON Lista_Inst
Rule 9     Inst -> Inst_Asignacion
Rule 10    Inst -> Inst_Lectura
Rule 11    Inst -> Inst_For
Rule 12    Inst -> Inst_While
Rule 13    Inst -> Inst_If
Rule 14    Inst -> Inst_Case
Rule 15    Inst -> Inst_Salida
Rule 16    Inst -> Inst_Funcion
Rule 17    Inst_Funcion -> RTOI LPAREN VAR_IDENTIFIER RPAREN
Rule 18    Inst_Funcion -> LENGTH LPAREN VAR_IDENTIFIER RPAREN
Rule 19    Inst_Funcion -> TOP LPAREN VAR_IDENTIFIER RPAREN
Rule 20    Inst_Funcion -> BOTTOM LPAREN VAR_IDENTIFIER RPAREN
Rule 21    Inst_Declare -> Inst_Declareau
Rule 22    Inst_Declare -> Inst_Declareau SEMICOLON Inst_Declare
Rule 23    Inst_Declareau -> INST_DECLARE Lista_Declare
Rule 24    Lista_Declare -> Lista_Variables INST_AS Tipo
Rule 25    Lista_Variables -> VAR_IDENTIFIER
Rule 26    Lista_Variables -> VAR_IDENTIFIER COMMA Lista_Variables
Rule 27    Tipo -> TYPEDEF_INT
Rule 28    Tipo -> TYPEDEF_BOOL
Rule 29    Tipo -> TYPEDEF_RANGE
Rule 30    Inst_Asignacion -> VAR_IDENTIFIER EQUAL Expresion
Rule 31    Expresion -> Operacion_binaria
Rule 32    Expresion -> Operacion_booleana
Rule 33    Expresion -> Rango
Rule 34    Operacion_booleana -> Operacion_binaria Opr_bool Operacion_binaria
Rule 35    Operacion_booleana -> Operacion_booleana AND Operacion_booleana
Rule 36    Operacion_booleana -> Operacion_booleana OR Operacion_booleana
Rule 37    Operacion_booleana -> LPAREN Operacion_booleana RPAREN
Rule 38    Operacion_booleana -> TRUE
Rule 39    Operacion_booleana -> FALSE
Rule 40    Operacion_booleana -> VAR_IDENTIFIER
Rule 41    Operacion_booleana -> NOT Operacion_booleana
Rule 42    Opr_bool -> EQEQ
Rule 43    Opr_bool -> NEQEQ
Rule 44    Opr_bool -> GREAT
Rule 45    Opr_bool -> LESS
Rule 46    Opr_bool -> GREATEQ
Rule 47    Opr_bool -> LESSEQ
Rule 48    Operacion_binaria -> Operacion_binaria PLUS Term
Rule 49    Operacion_binaria -> Operacion_binaria MINUS Term
Rule 50    Operacion_binaria -> Term
Rule 51    Term -> Term TIMES Factor
Rule 52    Term -> Term DIVIDE Factor
Rule 53    Term -> Factor
Rule 54    Factor -> NUMBER
Rule 55    Factor -> VAR_IDENTIFIER
Rule 56    Factor -> LPAREN Operacion_binaria RPAREN
Rule 57    Factor -> MINUS Operacion_binaria
Rule 58    Rango -> Operacion_binaria RANGE Operacion_binaria
Rule 59    Rango -> Rango PLUS Rango
Rule 60    Rango -> Rango TIMES Operacion_binaria
Rule 61    Rango -> Rango INTERSECTION Rango
Rule 62    Rango -> LPAREN Rango RPAREN
Rule 63    Rango -> VAR_IDENTIFIER
Rule 64    Inst_Lectura -> INST_READ VAR_IDENTIFIER
Rule 65    Inst_Salida -> INST_WRITE Lista_Aux
Rule 66    Inst_Salida -> INST_WRITELN Lista_Aux
Rule 67    Lista_Aux -> Expresion
Rule 68    Lista_Aux -> STRING
Rule 69    Lista_Aux -> Expresion COMMA Lista_Aux
Rule 70    Lista_Aux -> STRING COMMA Lista_Aux
Rule 71    Inst_If -> INST_IF Operacion_booleana INST_THEN Bloque_Inst
Rule 72    Inst_If -> INST_IF Operacion_booleana INST_THEN Bloque_Inst INST_ELSE Bloque_Inst
Rule 73    Inst_Case -> INST_CASE Operacion_binaria INST_OF Casos INST_END
Rule 74    Casos -> VAR_IDENTIFIER - > Bloque_Inst
Rule 75    Casos -> Rango - > Bloque_Inst
Rule 76    Casos -> VAR_IDENTIFIER - > Bloque_Inst Casos
Rule 77    Casos -> Rango - > Bloque_Inst Casos
Rule 78    Inst_For -> INST_FOR VAR_IDENTIFIER INST_IN Rango INST_DO Bloque_Inst
Rule 79    Inst_While -> INST_WHILE Operacion_booleana INST_DO Bloque_Inst

Terminals, with rules where they appear

-                    : 74 75 76 77
>                    : 74 75 76 77
AND                  : 35
BOTTOM               : 20
CASE_ASSIGN          : 
COMMA                : 26 69 70
COMMENT              : 
DIVIDE               : 52
EQEQ                 : 42
EQUAL                : 30
FALSE                : 39
GREAT                : 44
GREATEQ              : 46
IN                   : 
INST_AS              : 24
INST_BEGIN           : 2 3 4
INST_CASE            : 73
INST_DECLARE         : 23
INST_DO              : 78 79
INST_ELSE            : 72
INST_END             : 2 3 4 73
INST_FOR             : 78
INST_IF              : 71 72
INST_IN              : 78
INST_OF              : 73
INST_PROGRAM         : 1
INST_READ            : 64
INST_THEN            : 71 72
INST_WHILE           : 79
INST_WRITE           : 65
INST_WRITELN         : 66
INTERSECTION         : 61
LENGTH               : 18
LESS                 : 45
LESSEQ               : 47
LPAREN               : 17 18 19 20 37 56 62
MINUS                : 49 57
MOD                  : 
NEQEQ                : 43
NOT                  : 41
NUMBER               : 54
OR                   : 36
PLUS                 : 48 59
RANGE                : 58
RESERVED             : 
RPAREN               : 17 18 19 20 37 56 62
RTOI                 : 17
SEMICOLON            : 8 22
STRING               : 68 70
TIMES                : 51 60
TOP                  : 19
TRUE                 : 38
TYPEDEF_BOOL         : 28
TYPEDEF_INT          : 27
TYPEDEF_RANGE        : 29
VAR_IDENTIFIER       : 17 18 19 20 25 26 30 40 55 63 64 74 76 78
error                : 

Nonterminals, with rules where they appear

Bloque_Inst          : 1 71 72 72 74 75 76 77 78 79
Casos                : 73 76 77
Expresion            : 30 67 69
Factor               : 51 52 53
Inst                 : 5 6 7 8
Inst_Asignacion      : 9
Inst_Case            : 14
Inst_Declare         : 3 4 5 22
Inst_Declareau       : 21 22
Inst_For             : 11
Inst_Funcion         : 16
Inst_If              : 13
Inst_Lectura         : 10
Inst_Salida          : 15
Inst_While           : 12
Lista_Aux            : 65 66 69 70
Lista_Declare        : 23
Lista_Inst           : 2 3 8
Lista_Variables      : 24 26
Operacion_binaria    : 31 34 34 48 49 56 57 58 58 60 73
Operacion_booleana   : 32 35 35 36 36 37 41 71 72 79
Opr_bool             : 34
Rango                : 33 59 59 60 61 61 62 75 77 78
Term                 : 48 49 50 51 52
Tipo                 : 24
program              : 0

Parsing method: LALR

state 0

    (0) S' -> . program
    (1) program -> . INST_PROGRAM Bloque_Inst

    INST_PROGRAM    shift and go to state 2

    program                        shift and go to state 1

state 1

    (0) S' -> program .



state 2

    (1) program -> INST_PROGRAM . Bloque_Inst
    (2) Bloque_Inst -> . INST_BEGIN Lista_Inst INST_END
    (3) Bloque_Inst -> . INST_BEGIN Inst_Declare Lista_Inst INST_END
    (4) Bloque_Inst -> . INST_BEGIN Inst_Declare INST_END
    (5) Bloque_Inst -> . Inst_Declare Inst
    (6) Bloque_Inst -> . Inst
    (21) Inst_Declare -> . Inst_Declareau
    (22) Inst_Declare -> . Inst_Declareau SEMICOLON Inst_Declare
    (9) Inst -> . Inst_Asignacion
    (10) Inst -> . Inst_Lectura
    (11) Inst -> . Inst_For
    (12) Inst -> . Inst_While
    (13) Inst -> . Inst_If
    (14) Inst -> . Inst_Case
    (15) Inst -> . Inst_Salida
    (16) Inst -> . Inst_Funcion
    (23) Inst_Declareau -> . INST_DECLARE Lista_Declare
    (30) Inst_Asignacion -> . VAR_IDENTIFIER EQUAL Expresion
    (64) Inst_Lectura -> . INST_READ VAR_IDENTIFIER
    (78) Inst_For -> . INST_FOR VAR_IDENTIFIER INST_IN Rango INST_DO Bloque_Inst
    (79) Inst_While -> . INST_WHILE Operacion_booleana INST_DO Bloque_Inst
    (71) Inst_If -> . INST_IF Operacion_booleana INST_THEN Bloque_Inst
    (72) Inst_If -> . INST_IF Operacion_booleana INST_THEN Bloque_Inst INST_ELSE Bloque_Inst
    (73) Inst_Case -> . INST_CASE Operacion_binaria INST_OF Casos INST_END
    (65) Inst_Salida -> . INST_WRITE Lista_Aux
    (66) Inst_Salida -> . INST_WRITELN Lista_Aux
    (17) Inst_Funcion -> . RTOI LPAREN VAR_IDENTIFIER RPAREN
    (18) Inst_Funcion -> . LENGTH LPAREN VAR_IDENTIFIER RPAREN
    (19) Inst_Funcion -> . TOP LPAREN VAR_IDENTIFIER RPAREN
    (20) Inst_Funcion -> . BOTTOM LPAREN VAR_IDENTIFIER RPAREN

    INST_BEGIN      shift and go to state 11
    INST_DECLARE    shift and go to state 3
    VAR_IDENTIFIER  shift and go to state 18
    INST_READ       shift and go to state 10
    INST_FOR        shift and go to state 21
    INST_WHILE      shift and go to state 9
    INST_IF         shift and go to state 22
    INST_CASE       shift and go to state 20
    INST_WRITE      shift and go to state 5
    INST_WRITELN    shift and go to state 23
    RTOI            shift and go to state 25
    LENGTH          shift and go to state 24
    TOP             shift and go to state 6
    BOTTOM          shift and go to state 13

    Inst_Salida                    shift and go to state 8
    Inst_Declare                   shift and go to state 12
    Inst_Funcion                   shift and go to state 4
    Bloque_Inst                    shift and go to state 7
    Inst_If                        shift and go to state 19
    Inst_For                       shift and go to state 14
    Inst_While                     shift and go to state 16
    Inst                           shift and go to state 15
    Inst_Asignacion                shift and go to state 26
    Inst_Case                      shift and go to state 27
    Inst_Lectura                   shift and go to state 17
    Inst_Declareau                 shift and go to state 28

state 3

    (23) Inst_Declareau -> INST_DECLARE . Lista_Declare
    (24) Lista_Declare -> . Lista_Variables INST_AS Tipo
    (25) Lista_Variables -> . VAR_IDENTIFIER
    (26) Lista_Variables -> . VAR_IDENTIFIER COMMA Lista_Variables

    VAR_IDENTIFIER  shift and go to state 29

    Lista_Variables                shift and go to state 30
    Lista_Declare                  shift and go to state 31

state 4

    (16) Inst -> Inst_Funcion .

    $end            reduce using rule 16 (Inst -> Inst_Funcion .)
    SEMICOLON       reduce using rule 16 (Inst -> Inst_Funcion .)
    INST_END        reduce using rule 16 (Inst -> Inst_Funcion .)
    INST_ELSE       reduce using rule 16 (Inst -> Inst_Funcion .)
    VAR_IDENTIFIER  reduce using rule 16 (Inst -> Inst_Funcion .)
    LPAREN          reduce using rule 16 (Inst -> Inst_Funcion .)
    NUMBER          reduce using rule 16 (Inst -> Inst_Funcion .)
    MINUS           reduce using rule 16 (Inst -> Inst_Funcion .)


state 5

    (65) Inst_Salida -> INST_WRITE . Lista_Aux
    (67) Lista_Aux -> . Expresion
    (68) Lista_Aux -> . STRING
    (69) Lista_Aux -> . Expresion COMMA Lista_Aux
    (70) Lista_Aux -> . STRING COMMA Lista_Aux
    (31) Expresion -> . Operacion_binaria
    (32) Expresion -> . Operacion_booleana
    (33) Expresion -> . Rango
    (48) Operacion_binaria -> . Operacion_binaria PLUS Term
    (49) Operacion_binaria -> . Operacion_binaria MINUS Term
    (50) Operacion_binaria -> . Term
    (34) Operacion_booleana -> . Operacion_binaria Opr_bool Operacion_binaria
    (35) Operacion_booleana -> . Operacion_booleana AND Operacion_booleana
    (36) Operacion_booleana -> . Operacion_booleana OR Operacion_booleana
    (37) Operacion_booleana -> . LPAREN Operacion_booleana RPAREN
    (38) Operacion_booleana -> . TRUE
    (39) Operacion_booleana -> . FALSE
    (40) Operacion_booleana -> . VAR_IDENTIFIER
    (41) Operacion_booleana -> . NOT Operacion_booleana
    (58) Rango -> . Operacion_binaria RANGE Operacion_binaria
    (59) Rango -> . Rango PLUS Rango
    (60) Rango -> . Rango TIMES Operacion_binaria
    (61) Rango -> . Rango INTERSECTION Rango
    (62) Rango -> . LPAREN Rango RPAREN
    (63) Rango -> . VAR_IDENTIFIER
    (51) Term -> . Term TIMES Factor
    (52) Term -> . Term DIVIDE Factor
    (53) Term -> . Factor
    (54) Factor -> . NUMBER
    (55) Factor -> . VAR_IDENTIFIER
    (56) Factor -> . LPAREN Operacion_binaria RPAREN
    (57) Factor -> . MINUS Operacion_binaria

    STRING          shift and go to state 40
    LPAREN          shift and go to state 42
    TRUE            shift and go to state 35
    FALSE           shift and go to state 45
    VAR_IDENTIFIER  shift and go to state 41
    NOT             shift and go to state 46
    NUMBER          shift and go to state 33
    MINUS           shift and go to state 36

    Expresion                      shift and go to state 38
    Operacion_binaria              shift and go to state 44
    Factor                         shift and go to state 32
    Term                           shift and go to state 39
    Lista_Aux                      shift and go to state 34
    Rango                          shift and go to state 43
    Operacion_booleana             shift and go to state 37

state 6

    (19) Inst_Funcion -> TOP . LPAREN VAR_IDENTIFIER RPAREN

    LPAREN          shift and go to state 47


state 7

    (1) program -> INST_PROGRAM Bloque_Inst .

    $end            reduce using rule 1 (program -> INST_PROGRAM Bloque_Inst .)


state 8

    (15) Inst -> Inst_Salida .

    $end            reduce using rule 15 (Inst -> Inst_Salida .)
    SEMICOLON       reduce using rule 15 (Inst -> Inst_Salida .)
    INST_END        reduce using rule 15 (Inst -> Inst_Salida .)
    INST_ELSE       reduce using rule 15 (Inst -> Inst_Salida .)
    VAR_IDENTIFIER  reduce using rule 15 (Inst -> Inst_Salida .)
    LPAREN          reduce using rule 15 (Inst -> Inst_Salida .)
    NUMBER          reduce using rule 15 (Inst -> Inst_Salida .)
    MINUS           reduce using rule 15 (Inst -> Inst_Salida .)


state 9

    (79) Inst_While -> INST_WHILE . Operacion_booleana INST_DO Bloque_Inst
    (34) Operacion_booleana -> . Operacion_binaria Opr_bool Operacion_binaria
    (35) Operacion_booleana -> . Operacion_booleana AND Operacion_booleana
    (36) Operacion_booleana -> . Operacion_booleana OR Operacion_booleana
    (37) Operacion_booleana -> . LPAREN Operacion_booleana RPAREN
    (38) Operacion_booleana -> . TRUE
    (39) Operacion_booleana -> . FALSE
    (40) Operacion_booleana -> . VAR_IDENTIFIER
    (41) Operacion_booleana -> . NOT Operacion_booleana
    (48) Operacion_binaria -> . Operacion_binaria PLUS Term
    (49) Operacion_binaria -> . Operacion_binaria MINUS Term
    (50) Operacion_binaria -> . Term
    (51) Term -> . Term TIMES Factor
    (52) Term -> . Term DIVIDE Factor
    (53) Term -> . Factor
    (54) Factor -> . NUMBER
    (55) Factor -> . VAR_IDENTIFIER
    (56) Factor -> . LPAREN Operacion_binaria RPAREN
    (57) Factor -> . MINUS Operacion_binaria

    LPAREN          shift and go to state 50
    TRUE            shift and go to state 35
    FALSE           shift and go to state 45
    VAR_IDENTIFIER  shift and go to state 49
    NOT             shift and go to state 46
    NUMBER          shift and go to state 33
    MINUS           shift and go to state 36

    Operacion_binaria              shift and go to state 48
    Term                           shift and go to state 39
    Factor                         shift and go to state 32
    Operacion_booleana             shift and go to state 51

state 10

    (64) Inst_Lectura -> INST_READ . VAR_IDENTIFIER

    VAR_IDENTIFIER  shift and go to state 52


state 11

    (2) Bloque_Inst -> INST_BEGIN . Lista_Inst INST_END
    (3) Bloque_Inst -> INST_BEGIN . Inst_Declare Lista_Inst INST_END
    (4) Bloque_Inst -> INST_BEGIN . Inst_Declare INST_END
    (7) Lista_Inst -> . Inst
    (8) Lista_Inst -> . Inst SEMICOLON Lista_Inst
    (21) Inst_Declare -> . Inst_Declareau
    (22) Inst_Declare -> . Inst_Declareau SEMICOLON Inst_Declare
    (9) Inst -> . Inst_Asignacion
    (10) Inst -> . Inst_Lectura
    (11) Inst -> . Inst_For
    (12) Inst -> . Inst_While
    (13) Inst -> . Inst_If
    (14) Inst -> . Inst_Case
    (15) Inst -> . Inst_Salida
    (16) Inst -> . Inst_Funcion
    (23) Inst_Declareau -> . INST_DECLARE Lista_Declare
    (30) Inst_Asignacion -> . VAR_IDENTIFIER EQUAL Expresion
    (64) Inst_Lectura -> . INST_READ VAR_IDENTIFIER
    (78) Inst_For -> . INST_FOR VAR_IDENTIFIER INST_IN Rango INST_DO Bloque_Inst
    (79) Inst_While -> . INST_WHILE Operacion_booleana INST_DO Bloque_Inst
    (71) Inst_If -> . INST_IF Operacion_booleana INST_THEN Bloque_Inst
    (72) Inst_If -> . INST_IF Operacion_booleana INST_THEN Bloque_Inst INST_ELSE Bloque_Inst
    (73) Inst_Case -> . INST_CASE Operacion_binaria INST_OF Casos INST_END
    (65) Inst_Salida -> . INST_WRITE Lista_Aux
    (66) Inst_Salida -> . INST_WRITELN Lista_Aux
    (17) Inst_Funcion -> . RTOI LPAREN VAR_IDENTIFIER RPAREN
    (18) Inst_Funcion -> . LENGTH LPAREN VAR_IDENTIFIER RPAREN
    (19) Inst_Funcion -> . TOP LPAREN VAR_IDENTIFIER RPAREN
    (20) Inst_Funcion -> . BOTTOM LPAREN VAR_IDENTIFIER RPAREN

    INST_DECLARE    shift and go to state 3
    VAR_IDENTIFIER  shift and go to state 18
    INST_READ       shift and go to state 10
    INST_FOR        shift and go to state 21
    INST_WHILE      shift and go to state 9
    INST_IF         shift and go to state 22
    INST_CASE       shift and go to state 20
    INST_WRITE      shift and go to state 5
    INST_WRITELN    shift and go to state 23
    RTOI            shift and go to state 25
    LENGTH          shift and go to state 24
    TOP             shift and go to state 6
    BOTTOM          shift and go to state 13

    Inst_Salida                    shift and go to state 8
    Inst_Declare                   shift and go to state 53
    Inst_Funcion                   shift and go to state 4
    Inst_If                        shift and go to state 19
    Inst_For                       shift and go to state 14
    Inst_While                     shift and go to state 16
    Inst                           shift and go to state 54
    Inst_Asignacion                shift and go to state 26
    Inst_Case                      shift and go to state 27
    Inst_Lectura                   shift and go to state 17
    Lista_Inst                     shift and go to state 55
    Inst_Declareau                 shift and go to state 28

state 12

    (5) Bloque_Inst -> Inst_Declare . Inst
    (9) Inst -> . Inst_Asignacion
    (10) Inst -> . Inst_Lectura
    (11) Inst -> . Inst_For
    (12) Inst -> . Inst_While
    (13) Inst -> . Inst_If
    (14) Inst -> . Inst_Case
    (15) Inst -> . Inst_Salida
    (16) Inst -> . Inst_Funcion
    (30) Inst_Asignacion -> . VAR_IDENTIFIER EQUAL Expresion
    (64) Inst_Lectura -> . INST_READ VAR_IDENTIFIER
    (78) Inst_For -> . INST_FOR VAR_IDENTIFIER INST_IN Rango INST_DO Bloque_Inst
    (79) Inst_While -> . INST_WHILE Operacion_booleana INST_DO Bloque_Inst
    (71) Inst_If -> . INST_IF Operacion_booleana INST_THEN Bloque_Inst
    (72) Inst_If -> . INST_IF Operacion_booleana INST_THEN Bloque_Inst INST_ELSE Bloque_Inst
    (73) Inst_Case -> . INST_CASE Operacion_binaria INST_OF Casos INST_END
    (65) Inst_Salida -> . INST_WRITE Lista_Aux
    (66) Inst_Salida -> . INST_WRITELN Lista_Aux
    (17) Inst_Funcion -> . RTOI LPAREN VAR_IDENTIFIER RPAREN
    (18) Inst_Funcion -> . LENGTH LPAREN VAR_IDENTIFIER RPAREN
    (19) Inst_Funcion -> . TOP LPAREN VAR_IDENTIFIER RPAREN
    (20) Inst_Funcion -> . BOTTOM LPAREN VAR_IDENTIFIER RPAREN

    VAR_IDENTIFIER  shift and go to state 18
    INST_READ       shift and go to state 10
    INST_FOR        shift and go to state 21
    INST_WHILE      shift and go to state 9
    INST_IF         shift and go to state 22
    INST_CASE       shift and go to state 20
    INST_WRITE      shift and go to state 5
    INST_WRITELN    shift and go to state 23
    RTOI            shift and go to state 25
    LENGTH          shift and go to state 24
    TOP             shift and go to state 6
    BOTTOM          shift and go to state 13

    Inst_Salida                    shift and go to state 8
    Inst_Funcion                   shift and go to state 4
    Inst_If                        shift and go to state 19
    Inst_For                       shift and go to state 14
    Inst_While                     shift and go to state 16
    Inst                           shift and go to state 56
    Inst_Asignacion                shift and go to state 26
    Inst_Case                      shift and go to state 27
    Inst_Lectura                   shift and go to state 17

state 13

    (20) Inst_Funcion -> BOTTOM . LPAREN VAR_IDENTIFIER RPAREN

    LPAREN          shift and go to state 57


state 14

    (11) Inst -> Inst_For .

    $end            reduce using rule 11 (Inst -> Inst_For .)
    SEMICOLON       reduce using rule 11 (Inst -> Inst_For .)
    INST_END        reduce using rule 11 (Inst -> Inst_For .)
    INST_ELSE       reduce using rule 11 (Inst -> Inst_For .)
    VAR_IDENTIFIER  reduce using rule 11 (Inst -> Inst_For .)
    LPAREN          reduce using rule 11 (Inst -> Inst_For .)
    NUMBER          reduce using rule 11 (Inst -> Inst_For .)
    MINUS           reduce using rule 11 (Inst -> Inst_For .)


state 15

    (6) Bloque_Inst -> Inst .

    VAR_IDENTIFIER  reduce using rule 6 (Bloque_Inst -> Inst .)
    LPAREN          reduce using rule 6 (Bloque_Inst -> Inst .)
    NUMBER          reduce using rule 6 (Bloque_Inst -> Inst .)
    MINUS           reduce using rule 6 (Bloque_Inst -> Inst .)
    INST_END        reduce using rule 6 (Bloque_Inst -> Inst .)
    $end            reduce using rule 6 (Bloque_Inst -> Inst .)
    SEMICOLON       reduce using rule 6 (Bloque_Inst -> Inst .)
    INST_ELSE       reduce using rule 6 (Bloque_Inst -> Inst .)


state 16

    (12) Inst -> Inst_While .

    $end            reduce using rule 12 (Inst -> Inst_While .)
    SEMICOLON       reduce using rule 12 (Inst -> Inst_While .)
    INST_END        reduce using rule 12 (Inst -> Inst_While .)
    INST_ELSE       reduce using rule 12 (Inst -> Inst_While .)
    VAR_IDENTIFIER  reduce using rule 12 (Inst -> Inst_While .)
    LPAREN          reduce using rule 12 (Inst -> Inst_While .)
    NUMBER          reduce using rule 12 (Inst -> Inst_While .)
    MINUS           reduce using rule 12 (Inst -> Inst_While .)


state 17

    (10) Inst -> Inst_Lectura .

    $end            reduce using rule 10 (Inst -> Inst_Lectura .)
    SEMICOLON       reduce using rule 10 (Inst -> Inst_Lectura .)
    INST_END        reduce using rule 10 (Inst -> Inst_Lectura .)
    INST_ELSE       reduce using rule 10 (Inst -> Inst_Lectura .)
    VAR_IDENTIFIER  reduce using rule 10 (Inst -> Inst_Lectura .)
    LPAREN          reduce using rule 10 (Inst -> Inst_Lectura .)
    NUMBER          reduce using rule 10 (Inst -> Inst_Lectura .)
    MINUS           reduce using rule 10 (Inst -> Inst_Lectura .)


state 18

    (30) Inst_Asignacion -> VAR_IDENTIFIER . EQUAL Expresion

    EQUAL           shift and go to state 58


state 19

    (13) Inst -> Inst_If .

    $end            reduce using rule 13 (Inst -> Inst_If .)
    SEMICOLON       reduce using rule 13 (Inst -> Inst_If .)
    INST_END        reduce using rule 13 (Inst -> Inst_If .)
    INST_ELSE       reduce using rule 13 (Inst -> Inst_If .)
    VAR_IDENTIFIER  reduce using rule 13 (Inst -> Inst_If .)
    LPAREN          reduce using rule 13 (Inst -> Inst_If .)
    NUMBER          reduce using rule 13 (Inst -> Inst_If .)
    MINUS           reduce using rule 13 (Inst -> Inst_If .)


state 20

    (73) Inst_Case -> INST_CASE . Operacion_binaria INST_OF Casos INST_END
    (48) Operacion_binaria -> . Operacion_binaria PLUS Term
    (49) Operacion_binaria -> . Operacion_binaria MINUS Term
    (50) Operacion_binaria -> . Term
    (51) Term -> . Term TIMES Factor
    (52) Term -> . Term DIVIDE Factor
    (53) Term -> . Factor
    (54) Factor -> . NUMBER
    (55) Factor -> . VAR_IDENTIFIER
    (56) Factor -> . LPAREN Operacion_binaria RPAREN
    (57) Factor -> . MINUS Operacion_binaria

    NUMBER          shift and go to state 33
    VAR_IDENTIFIER  shift and go to state 60
    LPAREN          shift and go to state 61
    MINUS           shift and go to state 36

    Operacion_binaria              shift and go to state 59
    Term                           shift and go to state 39
    Factor                         shift and go to state 32

state 21

    (78) Inst_For -> INST_FOR . VAR_IDENTIFIER INST_IN Rango INST_DO Bloque_Inst

    VAR_IDENTIFIER  shift and go to state 62


state 22

    (71) Inst_If -> INST_IF . Operacion_booleana INST_THEN Bloque_Inst
    (72) Inst_If -> INST_IF . Operacion_booleana INST_THEN Bloque_Inst INST_ELSE Bloque_Inst
    (34) Operacion_booleana -> . Operacion_binaria Opr_bool Operacion_binaria
    (35) Operacion_booleana -> . Operacion_booleana AND Operacion_booleana
    (36) Operacion_booleana -> . Operacion_booleana OR Operacion_booleana
    (37) Operacion_booleana -> . LPAREN Operacion_booleana RPAREN
    (38) Operacion_booleana -> . TRUE
    (39) Operacion_booleana -> . FALSE
    (40) Operacion_booleana -> . VAR_IDENTIFIER
    (41) Operacion_booleana -> . NOT Operacion_booleana
    (48) Operacion_binaria -> . Operacion_binaria PLUS Term
    (49) Operacion_binaria -> . Operacion_binaria MINUS Term
    (50) Operacion_binaria -> . Term
    (51) Term -> . Term TIMES Factor
    (52) Term -> . Term DIVIDE Factor
    (53) Term -> . Factor
    (54) Factor -> . NUMBER
    (55) Factor -> . VAR_IDENTIFIER
    (56) Factor -> . LPAREN Operacion_binaria RPAREN
    (57) Factor -> . MINUS Operacion_binaria

    LPAREN          shift and go to state 50
    TRUE            shift and go to state 35
    FALSE           shift and go to state 45
    VAR_IDENTIFIER  shift and go to state 49
    NOT             shift and go to state 46
    NUMBER          shift and go to state 33
    MINUS           shift and go to state 36

    Operacion_binaria              shift and go to state 48
    Term                           shift and go to state 39
    Factor                         shift and go to state 32
    Operacion_booleana             shift and go to state 63

state 23

    (66) Inst_Salida -> INST_WRITELN . Lista_Aux
    (67) Lista_Aux -> . Expresion
    (68) Lista_Aux -> . STRING
    (69) Lista_Aux -> . Expresion COMMA Lista_Aux
    (70) Lista_Aux -> . STRING COMMA Lista_Aux
    (31) Expresion -> . Operacion_binaria
    (32) Expresion -> . Operacion_booleana
    (33) Expresion -> . Rango
    (48) Operacion_binaria -> . Operacion_binaria PLUS Term
    (49) Operacion_binaria -> . Operacion_binaria MINUS Term
    (50) Operacion_binaria -> . Term
    (34) Operacion_booleana -> . Operacion_binaria Opr_bool Operacion_binaria
    (35) Operacion_booleana -> . Operacion_booleana AND Operacion_booleana
    (36) Operacion_booleana -> . Operacion_booleana OR Operacion_booleana
    (37) Operacion_booleana -> . LPAREN Operacion_booleana RPAREN
    (38) Operacion_booleana -> . TRUE
    (39) Operacion_booleana -> . FALSE
    (40) Operacion_booleana -> . VAR_IDENTIFIER
    (41) Operacion_booleana -> . NOT Operacion_booleana
    (58) Rango -> . Operacion_binaria RANGE Operacion_binaria
    (59) Rango -> . Rango PLUS Rango
    (60) Rango -> . Rango TIMES Operacion_binaria
    (61) Rango -> . Rango INTERSECTION Rango
    (62) Rango -> . LPAREN Rango RPAREN
    (63) Rango -> . VAR_IDENTIFIER
    (51) Term -> . Term TIMES Factor
    (52) Term -> . Term DIVIDE Factor
    (53) Term -> . Factor
    (54) Factor -> . NUMBER
    (55) Factor -> . VAR_IDENTIFIER
    (56) Factor -> . LPAREN Operacion_binaria RPAREN
    (57) Factor -> . MINUS Operacion_binaria

    STRING          shift and go to state 40
    LPAREN          shift and go to state 42
    TRUE            shift and go to state 35
    FALSE           shift and go to state 45
    VAR_IDENTIFIER  shift and go to state 41
    NOT             shift and go to state 46
    NUMBER          shift and go to state 33
    MINUS           shift and go to state 36

    Expresion                      shift and go to state 38
    Operacion_binaria              shift and go to state 44
    Factor                         shift and go to state 32
    Term                           shift and go to state 39
    Lista_Aux                      shift and go to state 64
    Rango                          shift and go to state 43
    Operacion_booleana             shift and go to state 37

state 24

    (18) Inst_Funcion -> LENGTH . LPAREN VAR_IDENTIFIER RPAREN

    LPAREN          shift and go to state 65


state 25

    (17) Inst_Funcion -> RTOI . LPAREN VAR_IDENTIFIER RPAREN

    LPAREN          shift and go to state 66


state 26

    (9) Inst -> Inst_Asignacion .

    $end            reduce using rule 9 (Inst -> Inst_Asignacion .)
    SEMICOLON       reduce using rule 9 (Inst -> Inst_Asignacion .)
    INST_END        reduce using rule 9 (Inst -> Inst_Asignacion .)
    INST_ELSE       reduce using rule 9 (Inst -> Inst_Asignacion .)
    VAR_IDENTIFIER  reduce using rule 9 (Inst -> Inst_Asignacion .)
    LPAREN          reduce using rule 9 (Inst -> Inst_Asignacion .)
    NUMBER          reduce using rule 9 (Inst -> Inst_Asignacion .)
    MINUS           reduce using rule 9 (Inst -> Inst_Asignacion .)


state 27

    (14) Inst -> Inst_Case .

    $end            reduce using rule 14 (Inst -> Inst_Case .)
    SEMICOLON       reduce using rule 14 (Inst -> Inst_Case .)
    INST_END        reduce using rule 14 (Inst -> Inst_Case .)
    INST_ELSE       reduce using rule 14 (Inst -> Inst_Case .)
    VAR_IDENTIFIER  reduce using rule 14 (Inst -> Inst_Case .)
    LPAREN          reduce using rule 14 (Inst -> Inst_Case .)
    NUMBER          reduce using rule 14 (Inst -> Inst_Case .)
    MINUS           reduce using rule 14 (Inst -> Inst_Case .)


state 28

    (21) Inst_Declare -> Inst_Declareau .
    (22) Inst_Declare -> Inst_Declareau . SEMICOLON Inst_Declare

    INST_END        reduce using rule 21 (Inst_Declare -> Inst_Declareau .)
    VAR_IDENTIFIER  reduce using rule 21 (Inst_Declare -> Inst_Declareau .)
    INST_READ       reduce using rule 21 (Inst_Declare -> Inst_Declareau .)
    INST_FOR        reduce using rule 21 (Inst_Declare -> Inst_Declareau .)
    INST_WHILE      reduce using rule 21 (Inst_Declare -> Inst_Declareau .)
    INST_IF         reduce using rule 21 (Inst_Declare -> Inst_Declareau .)
    INST_CASE       reduce using rule 21 (Inst_Declare -> Inst_Declareau .)
    INST_WRITE      reduce using rule 21 (Inst_Declare -> Inst_Declareau .)
    INST_WRITELN    reduce using rule 21 (Inst_Declare -> Inst_Declareau .)
    RTOI            reduce using rule 21 (Inst_Declare -> Inst_Declareau .)
    LENGTH          reduce using rule 21 (Inst_Declare -> Inst_Declareau .)
    TOP             reduce using rule 21 (Inst_Declare -> Inst_Declareau .)
    BOTTOM          reduce using rule 21 (Inst_Declare -> Inst_Declareau .)
    SEMICOLON       shift and go to state 67


state 29

    (25) Lista_Variables -> VAR_IDENTIFIER .
    (26) Lista_Variables -> VAR_IDENTIFIER . COMMA Lista_Variables

    INST_AS         reduce using rule 25 (Lista_Variables -> VAR_IDENTIFIER .)
    COMMA           shift and go to state 68


state 30

    (24) Lista_Declare -> Lista_Variables . INST_AS Tipo

    INST_AS         shift and go to state 69


state 31

    (23) Inst_Declareau -> INST_DECLARE Lista_Declare .

    SEMICOLON       reduce using rule 23 (Inst_Declareau -> INST_DECLARE Lista_Declare .)
    VAR_IDENTIFIER  reduce using rule 23 (Inst_Declareau -> INST_DECLARE Lista_Declare .)
    INST_READ       reduce using rule 23 (Inst_Declareau -> INST_DECLARE Lista_Declare .)
    INST_FOR        reduce using rule 23 (Inst_Declareau -> INST_DECLARE Lista_Declare .)
    INST_WHILE      reduce using rule 23 (Inst_Declareau -> INST_DECLARE Lista_Declare .)
    INST_IF         reduce using rule 23 (Inst_Declareau -> INST_DECLARE Lista_Declare .)
    INST_CASE       reduce using rule 23 (Inst_Declareau -> INST_DECLARE Lista_Declare .)
    INST_WRITE      reduce using rule 23 (Inst_Declareau -> INST_DECLARE Lista_Declare .)
    INST_WRITELN    reduce using rule 23 (Inst_Declareau -> INST_DECLARE Lista_Declare .)
    RTOI            reduce using rule 23 (Inst_Declareau -> INST_DECLARE Lista_Declare .)
    LENGTH          reduce using rule 23 (Inst_Declareau -> INST_DECLARE Lista_Declare .)
    TOP             reduce using rule 23 (Inst_Declareau -> INST_DECLARE Lista_Declare .)
    BOTTOM          reduce using rule 23 (Inst_Declareau -> INST_DECLARE Lista_Declare .)
    INST_END        reduce using rule 23 (Inst_Declareau -> INST_DECLARE Lista_Declare .)


state 32

    (53) Term -> Factor .

    PLUS            reduce using rule 53 (Term -> Factor .)
    MINUS           reduce using rule 53 (Term -> Factor .)
    TIMES           reduce using rule 53 (Term -> Factor .)
    DIVIDE          reduce using rule 53 (Term -> Factor .)
    RANGE           reduce using rule 53 (Term -> Factor .)
    EQEQ            reduce using rule 53 (Term -> Factor .)
    NEQEQ           reduce using rule 53 (Term -> Factor .)
    GREAT           reduce using rule 53 (Term -> Factor .)
    LESS            reduce using rule 53 (Term -> Factor .)
    GREATEQ         reduce using rule 53 (Term -> Factor .)
    LESSEQ          reduce using rule 53 (Term -> Factor .)
    COMMA           reduce using rule 53 (Term -> Factor .)
    $end            reduce using rule 53 (Term -> Factor .)
    SEMICOLON       reduce using rule 53 (Term -> Factor .)
    INST_END        reduce using rule 53 (Term -> Factor .)
    INST_ELSE       reduce using rule 53 (Term -> Factor .)
    VAR_IDENTIFIER  reduce using rule 53 (Term -> Factor .)
    LPAREN          reduce using rule 53 (Term -> Factor .)
    NUMBER          reduce using rule 53 (Term -> Factor .)
    INST_OF         reduce using rule 53 (Term -> Factor .)
    RPAREN          reduce using rule 53 (Term -> Factor .)
    INTERSECTION    reduce using rule 53 (Term -> Factor .)
    -               reduce using rule 53 (Term -> Factor .)
    INST_DO         reduce using rule 53 (Term -> Factor .)
    AND             reduce using rule 53 (Term -> Factor .)
    OR              reduce using rule 53 (Term -> Factor .)
    INST_THEN       reduce using rule 53 (Term -> Factor .)


state 33

    (54) Factor -> NUMBER .

    TIMES           reduce using rule 54 (Factor -> NUMBER .)
    DIVIDE          reduce using rule 54 (Factor -> NUMBER .)
    PLUS            reduce using rule 54 (Factor -> NUMBER .)
    MINUS           reduce using rule 54 (Factor -> NUMBER .)
    EQEQ            reduce using rule 54 (Factor -> NUMBER .)
    NEQEQ           reduce using rule 54 (Factor -> NUMBER .)
    GREAT           reduce using rule 54 (Factor -> NUMBER .)
    LESS            reduce using rule 54 (Factor -> NUMBER .)
    GREATEQ         reduce using rule 54 (Factor -> NUMBER .)
    LESSEQ          reduce using rule 54 (Factor -> NUMBER .)
    RANGE           reduce using rule 54 (Factor -> NUMBER .)
    COMMA           reduce using rule 54 (Factor -> NUMBER .)
    $end            reduce using rule 54 (Factor -> NUMBER .)
    SEMICOLON       reduce using rule 54 (Factor -> NUMBER .)
    INST_END        reduce using rule 54 (Factor -> NUMBER .)
    INST_ELSE       reduce using rule 54 (Factor -> NUMBER .)
    VAR_IDENTIFIER  reduce using rule 54 (Factor -> NUMBER .)
    LPAREN          reduce using rule 54 (Factor -> NUMBER .)
    NUMBER          reduce using rule 54 (Factor -> NUMBER .)
    RPAREN          reduce using rule 54 (Factor -> NUMBER .)
    INST_OF         reduce using rule 54 (Factor -> NUMBER .)
    INTERSECTION    reduce using rule 54 (Factor -> NUMBER .)
    -               reduce using rule 54 (Factor -> NUMBER .)
    INST_DO         reduce using rule 54 (Factor -> NUMBER .)
    AND             reduce using rule 54 (Factor -> NUMBER .)
    OR              reduce using rule 54 (Factor -> NUMBER .)
    INST_THEN       reduce using rule 54 (Factor -> NUMBER .)


state 34

    (65) Inst_Salida -> INST_WRITE Lista_Aux .

    $end            reduce using rule 65 (Inst_Salida -> INST_WRITE Lista_Aux .)
    SEMICOLON       reduce using rule 65 (Inst_Salida -> INST_WRITE Lista_Aux .)
    INST_END        reduce using rule 65 (Inst_Salida -> INST_WRITE Lista_Aux .)
    INST_ELSE       reduce using rule 65 (Inst_Salida -> INST_WRITE Lista_Aux .)
    VAR_IDENTIFIER  reduce using rule 65 (Inst_Salida -> INST_WRITE Lista_Aux .)
    LPAREN          reduce using rule 65 (Inst_Salida -> INST_WRITE Lista_Aux .)
    NUMBER          reduce using rule 65 (Inst_Salida -> INST_WRITE Lista_Aux .)
    MINUS           reduce using rule 65 (Inst_Salida -> INST_WRITE Lista_Aux .)


state 35

    (38) Operacion_booleana -> TRUE .

    AND             reduce using rule 38 (Operacion_booleana -> TRUE .)
    OR              reduce using rule 38 (Operacion_booleana -> TRUE .)
    COMMA           reduce using rule 38 (Operacion_booleana -> TRUE .)
    $end            reduce using rule 38 (Operacion_booleana -> TRUE .)
    SEMICOLON       reduce using rule 38 (Operacion_booleana -> TRUE .)
    INST_END        reduce using rule 38 (Operacion_booleana -> TRUE .)
    INST_ELSE       reduce using rule 38 (Operacion_booleana -> TRUE .)
    VAR_IDENTIFIER  reduce using rule 38 (Operacion_booleana -> TRUE .)
    LPAREN          reduce using rule 38 (Operacion_booleana -> TRUE .)
    NUMBER          reduce using rule 38 (Operacion_booleana -> TRUE .)
    MINUS           reduce using rule 38 (Operacion_booleana -> TRUE .)
    INST_DO         reduce using rule 38 (Operacion_booleana -> TRUE .)
    INST_THEN       reduce using rule 38 (Operacion_booleana -> TRUE .)
    RPAREN          reduce using rule 38 (Operacion_booleana -> TRUE .)


state 36

    (57) Factor -> MINUS . Operacion_binaria
    (48) Operacion_binaria -> . Operacion_binaria PLUS Term
    (49) Operacion_binaria -> . Operacion_binaria MINUS Term
    (50) Operacion_binaria -> . Term
    (51) Term -> . Term TIMES Factor
    (52) Term -> . Term DIVIDE Factor
    (53) Term -> . Factor
    (54) Factor -> . NUMBER
    (55) Factor -> . VAR_IDENTIFIER
    (56) Factor -> . LPAREN Operacion_binaria RPAREN
    (57) Factor -> . MINUS Operacion_binaria

    NUMBER          shift and go to state 33
    VAR_IDENTIFIER  shift and go to state 60
    LPAREN          shift and go to state 61
    MINUS           shift and go to state 36

    Operacion_binaria              shift and go to state 70
    Term                           shift and go to state 39
    Factor                         shift and go to state 32

state 37

    (32) Expresion -> Operacion_booleana .
    (35) Operacion_booleana -> Operacion_booleana . AND Operacion_booleana
    (36) Operacion_booleana -> Operacion_booleana . OR Operacion_booleana

    COMMA           reduce using rule 32 (Expresion -> Operacion_booleana .)
    $end            reduce using rule 32 (Expresion -> Operacion_booleana .)
    SEMICOLON       reduce using rule 32 (Expresion -> Operacion_booleana .)
    INST_END        reduce using rule 32 (Expresion -> Operacion_booleana .)
    INST_ELSE       reduce using rule 32 (Expresion -> Operacion_booleana .)
    VAR_IDENTIFIER  reduce using rule 32 (Expresion -> Operacion_booleana .)
    LPAREN          reduce using rule 32 (Expresion -> Operacion_booleana .)
    NUMBER          reduce using rule 32 (Expresion -> Operacion_booleana .)
    MINUS           reduce using rule 32 (Expresion -> Operacion_booleana .)
    AND             shift and go to state 71
    OR              shift and go to state 72


state 38

    (67) Lista_Aux -> Expresion .
    (69) Lista_Aux -> Expresion . COMMA Lista_Aux

    $end            reduce using rule 67 (Lista_Aux -> Expresion .)
    SEMICOLON       reduce using rule 67 (Lista_Aux -> Expresion .)
    INST_END        reduce using rule 67 (Lista_Aux -> Expresion .)
    INST_ELSE       reduce using rule 67 (Lista_Aux -> Expresion .)
    VAR_IDENTIFIER  reduce using rule 67 (Lista_Aux -> Expresion .)
    LPAREN          reduce using rule 67 (Lista_Aux -> Expresion .)
    NUMBER          reduce using rule 67 (Lista_Aux -> Expresion .)
    MINUS           reduce using rule 67 (Lista_Aux -> Expresion .)
    COMMA           shift and go to state 73


state 39

    (50) Operacion_binaria -> Term .
    (51) Term -> Term . TIMES Factor
    (52) Term -> Term . DIVIDE Factor

  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
    RPAREN          reduce using rule 50 (Operacion_binaria -> Term .)
    RANGE           reduce using rule 50 (Operacion_binaria -> Term .)
    PLUS            reduce using rule 50 (Operacion_binaria -> Term .)
    MINUS           reduce using rule 50 (Operacion_binaria -> Term .)
    EQEQ            reduce using rule 50 (Operacion_binaria -> Term .)
    NEQEQ           reduce using rule 50 (Operacion_binaria -> Term .)
    GREAT           reduce using rule 50 (Operacion_binaria -> Term .)
    LESS            reduce using rule 50 (Operacion_binaria -> Term .)
    GREATEQ         reduce using rule 50 (Operacion_binaria -> Term .)
    LESSEQ          reduce using rule 50 (Operacion_binaria -> Term .)
    COMMA           reduce using rule 50 (Operacion_binaria -> Term .)
    $end            reduce using rule 50 (Operacion_binaria -> Term .)
    SEMICOLON       reduce using rule 50 (Operacion_binaria -> Term .)
    INST_END        reduce using rule 50 (Operacion_binaria -> Term .)
    INST_ELSE       reduce using rule 50 (Operacion_binaria -> Term .)
    VAR_IDENTIFIER  reduce using rule 50 (Operacion_binaria -> Term .)
    LPAREN          reduce using rule 50 (Operacion_binaria -> Term .)
    NUMBER          reduce using rule 50 (Operacion_binaria -> Term .)
    INTERSECTION    reduce using rule 50 (Operacion_binaria -> Term .)
    -               reduce using rule 50 (Operacion_binaria -> Term .)
    INST_DO         reduce using rule 50 (Operacion_binaria -> Term .)
    INST_OF         reduce using rule 50 (Operacion_binaria -> Term .)
    AND             reduce using rule 50 (Operacion_binaria -> Term .)
    OR              reduce using rule 50 (Operacion_binaria -> Term .)
    INST_THEN       reduce using rule 50 (Operacion_binaria -> Term .)
    TIMES           shift and go to state 75
    DIVIDE          shift and go to state 74

  ! TIMES           [ reduce using rule 50 (Operacion_binaria -> Term .) ]
  ! DIVIDE          [ reduce using rule 50 (Operacion_binaria -> Term .) ]


state 40

    (68) Lista_Aux -> STRING .
    (70) Lista_Aux -> STRING . COMMA Lista_Aux

    $end            reduce using rule 68 (Lista_Aux -> STRING .)
    SEMICOLON       reduce using rule 68 (Lista_Aux -> STRING .)
    INST_END        reduce using rule 68 (Lista_Aux -> STRING .)
    INST_ELSE       reduce using rule 68 (Lista_Aux -> STRING .)
    VAR_IDENTIFIER  reduce using rule 68 (Lista_Aux -> STRING .)
    LPAREN          reduce using rule 68 (Lista_Aux -> STRING .)
    NUMBER          reduce using rule 68 (Lista_Aux -> STRING .)
    MINUS           reduce using rule 68 (Lista_Aux -> STRING .)
    COMMA           shift and go to state 76


state 41

    (40) Operacion_booleana -> VAR_IDENTIFIER .
    (63) Rango -> VAR_IDENTIFIER .
    (55) Factor -> VAR_IDENTIFIER .

  ! reduce/reduce conflict for RPAREN resolved using rule 40 (Operacion_booleana -> VAR_IDENTIFIER .)
  ! reduce/reduce conflict for $end resolved using rule 40 (Operacion_booleana -> VAR_IDENTIFIER .)
  ! reduce/reduce conflict for SEMICOLON resolved using rule 40 (Operacion_booleana -> VAR_IDENTIFIER .)
  ! reduce/reduce conflict for INST_END resolved using rule 40 (Operacion_booleana -> VAR_IDENTIFIER .)
  ! reduce/reduce conflict for INST_ELSE resolved using rule 40 (Operacion_booleana -> VAR_IDENTIFIER .)
  ! reduce/reduce conflict for VAR_IDENTIFIER resolved using rule 40 (Operacion_booleana -> VAR_IDENTIFIER .)
  ! reduce/reduce conflict for LPAREN resolved using rule 40 (Operacion_booleana -> VAR_IDENTIFIER .)
  ! reduce/reduce conflict for NUMBER resolved using rule 40 (Operacion_booleana -> VAR_IDENTIFIER .)
  ! reduce/reduce conflict for MINUS resolved using rule 40 (Operacion_booleana -> VAR_IDENTIFIER .)
  ! reduce/reduce conflict for COMMA resolved using rule 40 (Operacion_booleana -> VAR_IDENTIFIER .)
  ! reduce/reduce conflict for TIMES resolved using rule 55 (Factor -> VAR_IDENTIFIER .)
  ! reduce/reduce conflict for PLUS resolved using rule 55 (Factor -> VAR_IDENTIFIER .)
  ! reduce/reduce conflict for MINUS resolved using rule 40 (Operacion_booleana -> VAR_IDENTIFIER .)
  ! reduce/reduce conflict for COMMA resolved using rule 40 (Operacion_booleana -> VAR_IDENTIFIER .)
  ! reduce/reduce conflict for $end resolved using rule 40 (Operacion_booleana -> VAR_IDENTIFIER .)
  ! reduce/reduce conflict for SEMICOLON resolved using rule 40 (Operacion_booleana -> VAR_IDENTIFIER .)
  ! reduce/reduce conflict for INST_END resolved using rule 40 (Operacion_booleana -> VAR_IDENTIFIER .)
  ! reduce/reduce conflict for INST_ELSE resolved using rule 40 (Operacion_booleana -> VAR_IDENTIFIER .)
  ! reduce/reduce conflict for VAR_IDENTIFIER resolved using rule 40 (Operacion_booleana -> VAR_IDENTIFIER .)
  ! reduce/reduce conflict for LPAREN resolved using rule 40 (Operacion_booleana -> VAR_IDENTIFIER .)
  ! reduce/reduce conflict for NUMBER resolved using rule 40 (Operacion_booleana -> VAR_IDENTIFIER .)
  ! reduce/reduce conflict for RPAREN resolved using rule 40 (Operacion_booleana -> VAR_IDENTIFIER .)
    RPAREN          reduce using rule 40 (Operacion_booleana -> VAR_IDENTIFIER .)
    AND             reduce using rule 40 (Operacion_booleana -> VAR_IDENTIFIER .)
    OR              reduce using rule 40 (Operacion_booleana -> VAR_IDENTIFIER .)
    COMMA           reduce using rule 40 (Operacion_booleana -> VAR_IDENTIFIER .)
    $end            reduce using rule 40 (Operacion_booleana -> VAR_IDENTIFIER .)
    SEMICOLON       reduce using rule 40 (Operacion_booleana -> VAR_IDENTIFIER .)
    INST_END        reduce using rule 40 (Operacion_booleana -> VAR_IDENTIFIER .)
    INST_ELSE       reduce using rule 40 (Operacion_booleana -> VAR_IDENTIFIER .)
    VAR_IDENTIFIER  reduce using rule 40 (Operacion_booleana -> VAR_IDENTIFIER .)
    LPAREN          reduce using rule 40 (Operacion_booleana -> VAR_IDENTIFIER .)
    NUMBER          reduce using rule 40 (Operacion_booleana -> VAR_IDENTIFIER .)
    MINUS           reduce using rule 40 (Operacion_booleana -> VAR_IDENTIFIER .)
    INTERSECTION    reduce using rule 63 (Rango -> VAR_IDENTIFIER .)
    TIMES           reduce using rule 55 (Factor -> VAR_IDENTIFIER .)
    DIVIDE          reduce using rule 55 (Factor -> VAR_IDENTIFIER .)
    PLUS            reduce using rule 55 (Factor -> VAR_IDENTIFIER .)
    RANGE           reduce using rule 55 (Factor -> VAR_IDENTIFIER .)
    EQEQ            reduce using rule 55 (Factor -> VAR_IDENTIFIER .)
    NEQEQ           reduce using rule 55 (Factor -> VAR_IDENTIFIER .)
    GREAT           reduce using rule 55 (Factor -> VAR_IDENTIFIER .)
    LESS            reduce using rule 55 (Factor -> VAR_IDENTIFIER .)
    GREATEQ         reduce using rule 55 (Factor -> VAR_IDENTIFIER .)
    LESSEQ          reduce using rule 55 (Factor -> VAR_IDENTIFIER .)

  ! RPAREN          [ reduce using rule 63 (Rango -> VAR_IDENTIFIER .) ]
  ! PLUS            [ reduce using rule 63 (Rango -> VAR_IDENTIFIER .) ]
  ! TIMES           [ reduce using rule 63 (Rango -> VAR_IDENTIFIER .) ]
  ! $end            [ reduce using rule 63 (Rango -> VAR_IDENTIFIER .) ]
  ! SEMICOLON       [ reduce using rule 63 (Rango -> VAR_IDENTIFIER .) ]
  ! INST_END        [ reduce using rule 63 (Rango -> VAR_IDENTIFIER .) ]
  ! INST_ELSE       [ reduce using rule 63 (Rango -> VAR_IDENTIFIER .) ]
  ! VAR_IDENTIFIER  [ reduce using rule 63 (Rango -> VAR_IDENTIFIER .) ]
  ! LPAREN          [ reduce using rule 63 (Rango -> VAR_IDENTIFIER .) ]
  ! NUMBER          [ reduce using rule 63 (Rango -> VAR_IDENTIFIER .) ]
  ! MINUS           [ reduce using rule 63 (Rango -> VAR_IDENTIFIER .) ]
  ! COMMA           [ reduce using rule 63 (Rango -> VAR_IDENTIFIER .) ]
  ! MINUS           [ reduce using rule 55 (Factor -> VAR_IDENTIFIER .) ]
  ! COMMA           [ reduce using rule 55 (Factor -> VAR_IDENTIFIER .) ]
  ! $end            [ reduce using rule 55 (Factor -> VAR_IDENTIFIER .) ]
  ! SEMICOLON       [ reduce using rule 55 (Factor -> VAR_IDENTIFIER .) ]
  ! INST_END        [ reduce using rule 55 (Factor -> VAR_IDENTIFIER .) ]
  ! INST_ELSE       [ reduce using rule 55 (Factor -> VAR_IDENTIFIER .) ]
  ! VAR_IDENTIFIER  [ reduce using rule 55 (Factor -> VAR_IDENTIFIER .) ]
  ! LPAREN          [ reduce using rule 55 (Factor -> VAR_IDENTIFIER .) ]
  ! NUMBER          [ reduce using rule 55 (Factor -> VAR_IDENTIFIER .) ]
  ! RPAREN          [ reduce using rule 55 (Factor -> VAR_IDENTIFIER .) ]


state 42

    (37) Operacion_booleana -> LPAREN . Operacion_booleana RPAREN
    (62) Rango -> LPAREN . Rango RPAREN
    (56) Factor -> LPAREN . Operacion_binaria RPAREN
    (34) Operacion_booleana -> . Operacion_binaria Opr_bool Operacion_binaria
    (35) Operacion_booleana -> . Operacion_booleana AND Operacion_booleana
    (36) Operacion_booleana -> . Operacion_booleana OR Operacion_booleana
    (37) Operacion_booleana -> . LPAREN Operacion_booleana RPAREN
    (38) Operacion_booleana -> . TRUE
    (39) Operacion_booleana -> . FALSE
    (40) Operacion_booleana -> . VAR_IDENTIFIER
    (41) Operacion_booleana -> . NOT Operacion_booleana
    (58) Rango -> . Operacion_binaria RANGE Operacion_binaria
    (59) Rango -> . Rango PLUS Rango
    (60) Rango -> . Rango TIMES Operacion_binaria
    (61) Rango -> . Rango INTERSECTION Rango
    (62) Rango -> . LPAREN Rango RPAREN
    (63) Rango -> . VAR_IDENTIFIER
    (48) Operacion_binaria -> . Operacion_binaria PLUS Term
    (49) Operacion_binaria -> . Operacion_binaria MINUS Term
    (50) Operacion_binaria -> . Term
    (51) Term -> . Term TIMES Factor
    (52) Term -> . Term DIVIDE Factor
    (53) Term -> . Factor
    (54) Factor -> . NUMBER
    (55) Factor -> . VAR_IDENTIFIER
    (56) Factor -> . LPAREN Operacion_binaria RPAREN
    (57) Factor -> . MINUS Operacion_binaria

    LPAREN          shift and go to state 42
    TRUE            shift and go to state 35
    FALSE           shift and go to state 45
    VAR_IDENTIFIER  shift and go to state 41
    NOT             shift and go to state 46
    NUMBER          shift and go to state 33
    MINUS           shift and go to state 36

    Operacion_binaria              shift and go to state 77
    Term                           shift and go to state 39
    Factor                         shift and go to state 32
    Rango                          shift and go to state 78
    Operacion_booleana             shift and go to state 79

state 43

    (33) Expresion -> Rango .
    (59) Rango -> Rango . PLUS Rango
    (60) Rango -> Rango . TIMES Operacion_binaria
    (61) Rango -> Rango . INTERSECTION Rango

    COMMA           reduce using rule 33 (Expresion -> Rango .)
    $end            reduce using rule 33 (Expresion -> Rango .)
    SEMICOLON       reduce using rule 33 (Expresion -> Rango .)
    INST_END        reduce using rule 33 (Expresion -> Rango .)
    INST_ELSE       reduce using rule 33 (Expresion -> Rango .)
    VAR_IDENTIFIER  reduce using rule 33 (Expresion -> Rango .)
    LPAREN          reduce using rule 33 (Expresion -> Rango .)
    NUMBER          reduce using rule 33 (Expresion -> Rango .)
    MINUS           reduce using rule 33 (Expresion -> Rango .)
    PLUS            shift and go to state 81
    TIMES           shift and go to state 82
    INTERSECTION    shift and go to state 80


state 44

    (31) Expresion -> Operacion_binaria .
    (48) Operacion_binaria -> Operacion_binaria . PLUS Term
    (49) Operacion_binaria -> Operacion_binaria . MINUS Term
    (34) Operacion_booleana -> Operacion_binaria . Opr_bool Operacion_binaria
    (58) Rango -> Operacion_binaria . RANGE Operacion_binaria
    (42) Opr_bool -> . EQEQ
    (43) Opr_bool -> . NEQEQ
    (44) Opr_bool -> . GREAT
    (45) Opr_bool -> . LESS
    (46) Opr_bool -> . GREATEQ
    (47) Opr_bool -> . LESSEQ

  ! shift/reduce conflict for MINUS resolved as shift
    COMMA           reduce using rule 31 (Expresion -> Operacion_binaria .)
    $end            reduce using rule 31 (Expresion -> Operacion_binaria .)
    SEMICOLON       reduce using rule 31 (Expresion -> Operacion_binaria .)
    INST_END        reduce using rule 31 (Expresion -> Operacion_binaria .)
    INST_ELSE       reduce using rule 31 (Expresion -> Operacion_binaria .)
    VAR_IDENTIFIER  reduce using rule 31 (Expresion -> Operacion_binaria .)
    LPAREN          reduce using rule 31 (Expresion -> Operacion_binaria .)
    NUMBER          reduce using rule 31 (Expresion -> Operacion_binaria .)
    PLUS            shift and go to state 91
    MINUS           shift and go to state 92
    RANGE           shift and go to state 89
    EQEQ            shift and go to state 88
    NEQEQ           shift and go to state 85
    GREAT           shift and go to state 84
    LESS            shift and go to state 87
    GREATEQ         shift and go to state 83
    LESSEQ          shift and go to state 90

  ! MINUS           [ reduce using rule 31 (Expresion -> Operacion_binaria .) ]

    Opr_bool                       shift and go to state 86

state 45

    (39) Operacion_booleana -> FALSE .

    AND             reduce using rule 39 (Operacion_booleana -> FALSE .)
    OR              reduce using rule 39 (Operacion_booleana -> FALSE .)
    COMMA           reduce using rule 39 (Operacion_booleana -> FALSE .)
    $end            reduce using rule 39 (Operacion_booleana -> FALSE .)
    SEMICOLON       reduce using rule 39 (Operacion_booleana -> FALSE .)
    INST_END        reduce using rule 39 (Operacion_booleana -> FALSE .)
    INST_ELSE       reduce using rule 39 (Operacion_booleana -> FALSE .)
    VAR_IDENTIFIER  reduce using rule 39 (Operacion_booleana -> FALSE .)
    LPAREN          reduce using rule 39 (Operacion_booleana -> FALSE .)
    NUMBER          reduce using rule 39 (Operacion_booleana -> FALSE .)
    MINUS           reduce using rule 39 (Operacion_booleana -> FALSE .)
    INST_DO         reduce using rule 39 (Operacion_booleana -> FALSE .)
    INST_THEN       reduce using rule 39 (Operacion_booleana -> FALSE .)
    RPAREN          reduce using rule 39 (Operacion_booleana -> FALSE .)


state 46

    (41) Operacion_booleana -> NOT . Operacion_booleana
    (34) Operacion_booleana -> . Operacion_binaria Opr_bool Operacion_binaria
    (35) Operacion_booleana -> . Operacion_booleana AND Operacion_booleana
    (36) Operacion_booleana -> . Operacion_booleana OR Operacion_booleana
    (37) Operacion_booleana -> . LPAREN Operacion_booleana RPAREN
    (38) Operacion_booleana -> . TRUE
    (39) Operacion_booleana -> . FALSE
    (40) Operacion_booleana -> . VAR_IDENTIFIER
    (41) Operacion_booleana -> . NOT Operacion_booleana
    (48) Operacion_binaria -> . Operacion_binaria PLUS Term
    (49) Operacion_binaria -> . Operacion_binaria MINUS Term
    (50) Operacion_binaria -> . Term
    (51) Term -> . Term TIMES Factor
    (52) Term -> . Term DIVIDE Factor
    (53) Term -> . Factor
    (54) Factor -> . NUMBER
    (55) Factor -> . VAR_IDENTIFIER
    (56) Factor -> . LPAREN Operacion_binaria RPAREN
    (57) Factor -> . MINUS Operacion_binaria

    LPAREN          shift and go to state 50
    TRUE            shift and go to state 35
    FALSE           shift and go to state 45
    VAR_IDENTIFIER  shift and go to state 49
    NOT             shift and go to state 46
    NUMBER          shift and go to state 33
    MINUS           shift and go to state 36

    Operacion_binaria              shift and go to state 48
    Term                           shift and go to state 39
    Operacion_booleana             shift and go to state 93
    Factor                         shift and go to state 32

state 47

    (19) Inst_Funcion -> TOP LPAREN . VAR_IDENTIFIER RPAREN

    VAR_IDENTIFIER  shift and go to state 94


state 48

    (34) Operacion_booleana -> Operacion_binaria . Opr_bool Operacion_binaria
    (48) Operacion_binaria -> Operacion_binaria . PLUS Term
    (49) Operacion_binaria -> Operacion_binaria . MINUS Term
    (42) Opr_bool -> . EQEQ
    (43) Opr_bool -> . NEQEQ
    (44) Opr_bool -> . GREAT
    (45) Opr_bool -> . LESS
    (46) Opr_bool -> . GREATEQ
    (47) Opr_bool -> . LESSEQ

    PLUS            shift and go to state 91
    MINUS           shift and go to state 92
    EQEQ            shift and go to state 88
    NEQEQ           shift and go to state 85
    GREAT           shift and go to state 84
    LESS            shift and go to state 87
    GREATEQ         shift and go to state 83
    LESSEQ          shift and go to state 90

    Opr_bool                       shift and go to state 86

state 49

    (40) Operacion_booleana -> VAR_IDENTIFIER .
    (55) Factor -> VAR_IDENTIFIER .

  ! reduce/reduce conflict for MINUS resolved using rule 40 (Operacion_booleana -> VAR_IDENTIFIER .)
  ! reduce/reduce conflict for RPAREN resolved using rule 40 (Operacion_booleana -> VAR_IDENTIFIER .)
    AND             reduce using rule 40 (Operacion_booleana -> VAR_IDENTIFIER .)
    OR              reduce using rule 40 (Operacion_booleana -> VAR_IDENTIFIER .)
    COMMA           reduce using rule 40 (Operacion_booleana -> VAR_IDENTIFIER .)
    $end            reduce using rule 40 (Operacion_booleana -> VAR_IDENTIFIER .)
    SEMICOLON       reduce using rule 40 (Operacion_booleana -> VAR_IDENTIFIER .)
    INST_END        reduce using rule 40 (Operacion_booleana -> VAR_IDENTIFIER .)
    INST_ELSE       reduce using rule 40 (Operacion_booleana -> VAR_IDENTIFIER .)
    VAR_IDENTIFIER  reduce using rule 40 (Operacion_booleana -> VAR_IDENTIFIER .)
    LPAREN          reduce using rule 40 (Operacion_booleana -> VAR_IDENTIFIER .)
    NUMBER          reduce using rule 40 (Operacion_booleana -> VAR_IDENTIFIER .)
    MINUS           reduce using rule 40 (Operacion_booleana -> VAR_IDENTIFIER .)
    INST_DO         reduce using rule 40 (Operacion_booleana -> VAR_IDENTIFIER .)
    INST_THEN       reduce using rule 40 (Operacion_booleana -> VAR_IDENTIFIER .)
    RPAREN          reduce using rule 40 (Operacion_booleana -> VAR_IDENTIFIER .)
    TIMES           reduce using rule 55 (Factor -> VAR_IDENTIFIER .)
    DIVIDE          reduce using rule 55 (Factor -> VAR_IDENTIFIER .)
    PLUS            reduce using rule 55 (Factor -> VAR_IDENTIFIER .)
    EQEQ            reduce using rule 55 (Factor -> VAR_IDENTIFIER .)
    NEQEQ           reduce using rule 55 (Factor -> VAR_IDENTIFIER .)
    GREAT           reduce using rule 55 (Factor -> VAR_IDENTIFIER .)
    LESS            reduce using rule 55 (Factor -> VAR_IDENTIFIER .)
    GREATEQ         reduce using rule 55 (Factor -> VAR_IDENTIFIER .)
    LESSEQ          reduce using rule 55 (Factor -> VAR_IDENTIFIER .)

  ! MINUS           [ reduce using rule 55 (Factor -> VAR_IDENTIFIER .) ]
  ! RPAREN          [ reduce using rule 55 (Factor -> VAR_IDENTIFIER .) ]


state 50

    (37) Operacion_booleana -> LPAREN . Operacion_booleana RPAREN
    (56) Factor -> LPAREN . Operacion_binaria RPAREN
    (34) Operacion_booleana -> . Operacion_binaria Opr_bool Operacion_binaria
    (35) Operacion_booleana -> . Operacion_booleana AND Operacion_booleana
    (36) Operacion_booleana -> . Operacion_booleana OR Operacion_booleana
    (37) Operacion_booleana -> . LPAREN Operacion_booleana RPAREN
    (38) Operacion_booleana -> . TRUE
    (39) Operacion_booleana -> . FALSE
    (40) Operacion_booleana -> . VAR_IDENTIFIER
    (41) Operacion_booleana -> . NOT Operacion_booleana
    (48) Operacion_binaria -> . Operacion_binaria PLUS Term
    (49) Operacion_binaria -> . Operacion_binaria MINUS Term
    (50) Operacion_binaria -> . Term
    (51) Term -> . Term TIMES Factor
    (52) Term -> . Term DIVIDE Factor
    (53) Term -> . Factor
    (54) Factor -> . NUMBER
    (55) Factor -> . VAR_IDENTIFIER
    (56) Factor -> . LPAREN Operacion_binaria RPAREN
    (57) Factor -> . MINUS Operacion_binaria

    LPAREN          shift and go to state 50
    TRUE            shift and go to state 35
    FALSE           shift and go to state 45
    VAR_IDENTIFIER  shift and go to state 49
    NOT             shift and go to state 46
    NUMBER          shift and go to state 33
    MINUS           shift and go to state 36

    Operacion_binaria              shift and go to state 95
    Term                           shift and go to state 39
    Operacion_booleana             shift and go to state 79
    Factor                         shift and go to state 32

state 51

    (79) Inst_While -> INST_WHILE Operacion_booleana . INST_DO Bloque_Inst
    (35) Operacion_booleana -> Operacion_booleana . AND Operacion_booleana
    (36) Operacion_booleana -> Operacion_booleana . OR Operacion_booleana

    INST_DO         shift and go to state 96
    AND             shift and go to state 71
    OR              shift and go to state 72


state 52

    (64) Inst_Lectura -> INST_READ VAR_IDENTIFIER .

    VAR_IDENTIFIER  reduce using rule 64 (Inst_Lectura -> INST_READ VAR_IDENTIFIER .)
    LPAREN          reduce using rule 64 (Inst_Lectura -> INST_READ VAR_IDENTIFIER .)
    NUMBER          reduce using rule 64 (Inst_Lectura -> INST_READ VAR_IDENTIFIER .)
    MINUS           reduce using rule 64 (Inst_Lectura -> INST_READ VAR_IDENTIFIER .)
    INST_END        reduce using rule 64 (Inst_Lectura -> INST_READ VAR_IDENTIFIER .)
    $end            reduce using rule 64 (Inst_Lectura -> INST_READ VAR_IDENTIFIER .)
    SEMICOLON       reduce using rule 64 (Inst_Lectura -> INST_READ VAR_IDENTIFIER .)
    INST_ELSE       reduce using rule 64 (Inst_Lectura -> INST_READ VAR_IDENTIFIER .)


state 53

    (3) Bloque_Inst -> INST_BEGIN Inst_Declare . Lista_Inst INST_END
    (4) Bloque_Inst -> INST_BEGIN Inst_Declare . INST_END
    (7) Lista_Inst -> . Inst
    (8) Lista_Inst -> . Inst SEMICOLON Lista_Inst
    (9) Inst -> . Inst_Asignacion
    (10) Inst -> . Inst_Lectura
    (11) Inst -> . Inst_For
    (12) Inst -> . Inst_While
    (13) Inst -> . Inst_If
    (14) Inst -> . Inst_Case
    (15) Inst -> . Inst_Salida
    (16) Inst -> . Inst_Funcion
    (30) Inst_Asignacion -> . VAR_IDENTIFIER EQUAL Expresion
    (64) Inst_Lectura -> . INST_READ VAR_IDENTIFIER
    (78) Inst_For -> . INST_FOR VAR_IDENTIFIER INST_IN Rango INST_DO Bloque_Inst
    (79) Inst_While -> . INST_WHILE Operacion_booleana INST_DO Bloque_Inst
    (71) Inst_If -> . INST_IF Operacion_booleana INST_THEN Bloque_Inst
    (72) Inst_If -> . INST_IF Operacion_booleana INST_THEN Bloque_Inst INST_ELSE Bloque_Inst
    (73) Inst_Case -> . INST_CASE Operacion_binaria INST_OF Casos INST_END
    (65) Inst_Salida -> . INST_WRITE Lista_Aux
    (66) Inst_Salida -> . INST_WRITELN Lista_Aux
    (17) Inst_Funcion -> . RTOI LPAREN VAR_IDENTIFIER RPAREN
    (18) Inst_Funcion -> . LENGTH LPAREN VAR_IDENTIFIER RPAREN
    (19) Inst_Funcion -> . TOP LPAREN VAR_IDENTIFIER RPAREN
    (20) Inst_Funcion -> . BOTTOM LPAREN VAR_IDENTIFIER RPAREN

    INST_END        shift and go to state 97
    VAR_IDENTIFIER  shift and go to state 18
    INST_READ       shift and go to state 10
    INST_FOR        shift and go to state 21
    INST_WHILE      shift and go to state 9
    INST_IF         shift and go to state 22
    INST_CASE       shift and go to state 20
    INST_WRITE      shift and go to state 5
    INST_WRITELN    shift and go to state 23
    RTOI            shift and go to state 25
    LENGTH          shift and go to state 24
    TOP             shift and go to state 6
    BOTTOM          shift and go to state 13

    Inst_Salida                    shift and go to state 8
    Inst_Funcion                   shift and go to state 4
    Inst_If                        shift and go to state 19
    Inst_For                       shift and go to state 14
    Inst_While                     shift and go to state 16
    Inst                           shift and go to state 54
    Inst_Asignacion                shift and go to state 26
    Inst_Case                      shift and go to state 27
    Inst_Lectura                   shift and go to state 17
    Lista_Inst                     shift and go to state 98

state 54

    (7) Lista_Inst -> Inst .
    (8) Lista_Inst -> Inst . SEMICOLON Lista_Inst

    INST_END        reduce using rule 7 (Lista_Inst -> Inst .)
    SEMICOLON       shift and go to state 99


state 55

    (2) Bloque_Inst -> INST_BEGIN Lista_Inst . INST_END

    INST_END        shift and go to state 100


state 56

    (5) Bloque_Inst -> Inst_Declare Inst .

    VAR_IDENTIFIER  reduce using rule 5 (Bloque_Inst -> Inst_Declare Inst .)
    LPAREN          reduce using rule 5 (Bloque_Inst -> Inst_Declare Inst .)
    NUMBER          reduce using rule 5 (Bloque_Inst -> Inst_Declare Inst .)
    MINUS           reduce using rule 5 (Bloque_Inst -> Inst_Declare Inst .)
    INST_END        reduce using rule 5 (Bloque_Inst -> Inst_Declare Inst .)
    $end            reduce using rule 5 (Bloque_Inst -> Inst_Declare Inst .)
    SEMICOLON       reduce using rule 5 (Bloque_Inst -> Inst_Declare Inst .)
    INST_ELSE       reduce using rule 5 (Bloque_Inst -> Inst_Declare Inst .)


state 57

    (20) Inst_Funcion -> BOTTOM LPAREN . VAR_IDENTIFIER RPAREN

    VAR_IDENTIFIER  shift and go to state 101


state 58

    (30) Inst_Asignacion -> VAR_IDENTIFIER EQUAL . Expresion
    (31) Expresion -> . Operacion_binaria
    (32) Expresion -> . Operacion_booleana
    (33) Expresion -> . Rango
    (48) Operacion_binaria -> . Operacion_binaria PLUS Term
    (49) Operacion_binaria -> . Operacion_binaria MINUS Term
    (50) Operacion_binaria -> . Term
    (34) Operacion_booleana -> . Operacion_binaria Opr_bool Operacion_binaria
    (35) Operacion_booleana -> . Operacion_booleana AND Operacion_booleana
    (36) Operacion_booleana -> . Operacion_booleana OR Operacion_booleana
    (37) Operacion_booleana -> . LPAREN Operacion_booleana RPAREN
    (38) Operacion_booleana -> . TRUE
    (39) Operacion_booleana -> . FALSE
    (40) Operacion_booleana -> . VAR_IDENTIFIER
    (41) Operacion_booleana -> . NOT Operacion_booleana
    (58) Rango -> . Operacion_binaria RANGE Operacion_binaria
    (59) Rango -> . Rango PLUS Rango
    (60) Rango -> . Rango TIMES Operacion_binaria
    (61) Rango -> . Rango INTERSECTION Rango
    (62) Rango -> . LPAREN Rango RPAREN
    (63) Rango -> . VAR_IDENTIFIER
    (51) Term -> . Term TIMES Factor
    (52) Term -> . Term DIVIDE Factor
    (53) Term -> . Factor
    (54) Factor -> . NUMBER
    (55) Factor -> . VAR_IDENTIFIER
    (56) Factor -> . LPAREN Operacion_binaria RPAREN
    (57) Factor -> . MINUS Operacion_binaria

    LPAREN          shift and go to state 42
    TRUE            shift and go to state 35
    FALSE           shift and go to state 45
    VAR_IDENTIFIER  shift and go to state 41
    NOT             shift and go to state 46
    NUMBER          shift and go to state 33
    MINUS           shift and go to state 36

    Expresion                      shift and go to state 102
    Operacion_binaria              shift and go to state 44
    Term                           shift and go to state 39
    Factor                         shift and go to state 32
    Rango                          shift and go to state 43
    Operacion_booleana             shift and go to state 37

state 59

    (73) Inst_Case -> INST_CASE Operacion_binaria . INST_OF Casos INST_END
    (48) Operacion_binaria -> Operacion_binaria . PLUS Term
    (49) Operacion_binaria -> Operacion_binaria . MINUS Term

    INST_OF         shift and go to state 103
    PLUS            shift and go to state 91
    MINUS           shift and go to state 92


state 60

    (55) Factor -> VAR_IDENTIFIER .

    TIMES           reduce using rule 55 (Factor -> VAR_IDENTIFIER .)
    DIVIDE          reduce using rule 55 (Factor -> VAR_IDENTIFIER .)
    RPAREN          reduce using rule 55 (Factor -> VAR_IDENTIFIER .)
    PLUS            reduce using rule 55 (Factor -> VAR_IDENTIFIER .)
    MINUS           reduce using rule 55 (Factor -> VAR_IDENTIFIER .)
    RANGE           reduce using rule 55 (Factor -> VAR_IDENTIFIER .)
    EQEQ            reduce using rule 55 (Factor -> VAR_IDENTIFIER .)
    NEQEQ           reduce using rule 55 (Factor -> VAR_IDENTIFIER .)
    GREAT           reduce using rule 55 (Factor -> VAR_IDENTIFIER .)
    LESS            reduce using rule 55 (Factor -> VAR_IDENTIFIER .)
    GREATEQ         reduce using rule 55 (Factor -> VAR_IDENTIFIER .)
    LESSEQ          reduce using rule 55 (Factor -> VAR_IDENTIFIER .)
    COMMA           reduce using rule 55 (Factor -> VAR_IDENTIFIER .)
    $end            reduce using rule 55 (Factor -> VAR_IDENTIFIER .)
    SEMICOLON       reduce using rule 55 (Factor -> VAR_IDENTIFIER .)
    INST_END        reduce using rule 55 (Factor -> VAR_IDENTIFIER .)
    INST_ELSE       reduce using rule 55 (Factor -> VAR_IDENTIFIER .)
    VAR_IDENTIFIER  reduce using rule 55 (Factor -> VAR_IDENTIFIER .)
    LPAREN          reduce using rule 55 (Factor -> VAR_IDENTIFIER .)
    NUMBER          reduce using rule 55 (Factor -> VAR_IDENTIFIER .)
    INST_OF         reduce using rule 55 (Factor -> VAR_IDENTIFIER .)
    INTERSECTION    reduce using rule 55 (Factor -> VAR_IDENTIFIER .)
    -               reduce using rule 55 (Factor -> VAR_IDENTIFIER .)
    INST_DO         reduce using rule 55 (Factor -> VAR_IDENTIFIER .)
    AND             reduce using rule 55 (Factor -> VAR_IDENTIFIER .)
    OR              reduce using rule 55 (Factor -> VAR_IDENTIFIER .)
    INST_THEN       reduce using rule 55 (Factor -> VAR_IDENTIFIER .)


state 61

    (56) Factor -> LPAREN . Operacion_binaria RPAREN
    (48) Operacion_binaria -> . Operacion_binaria PLUS Term
    (49) Operacion_binaria -> . Operacion_binaria MINUS Term
    (50) Operacion_binaria -> . Term
    (51) Term -> . Term TIMES Factor
    (52) Term -> . Term DIVIDE Factor
    (53) Term -> . Factor
    (54) Factor -> . NUMBER
    (55) Factor -> . VAR_IDENTIFIER
    (56) Factor -> . LPAREN Operacion_binaria RPAREN
    (57) Factor -> . MINUS Operacion_binaria

    NUMBER          shift and go to state 33
    VAR_IDENTIFIER  shift and go to state 60
    LPAREN          shift and go to state 61
    MINUS           shift and go to state 36

    Operacion_binaria              shift and go to state 104
    Term                           shift and go to state 39
    Factor                         shift and go to state 32

state 62

    (78) Inst_For -> INST_FOR VAR_IDENTIFIER . INST_IN Rango INST_DO Bloque_Inst

    INST_IN         shift and go to state 105


state 63

    (71) Inst_If -> INST_IF Operacion_booleana . INST_THEN Bloque_Inst
    (72) Inst_If -> INST_IF Operacion_booleana . INST_THEN Bloque_Inst INST_ELSE Bloque_Inst
    (35) Operacion_booleana -> Operacion_booleana . AND Operacion_booleana
    (36) Operacion_booleana -> Operacion_booleana . OR Operacion_booleana

    INST_THEN       shift and go to state 106
    AND             shift and go to state 71
    OR              shift and go to state 72


state 64

    (66) Inst_Salida -> INST_WRITELN Lista_Aux .

    $end            reduce using rule 66 (Inst_Salida -> INST_WRITELN Lista_Aux .)
    SEMICOLON       reduce using rule 66 (Inst_Salida -> INST_WRITELN Lista_Aux .)
    INST_END        reduce using rule 66 (Inst_Salida -> INST_WRITELN Lista_Aux .)
    INST_ELSE       reduce using rule 66 (Inst_Salida -> INST_WRITELN Lista_Aux .)
    VAR_IDENTIFIER  reduce using rule 66 (Inst_Salida -> INST_WRITELN Lista_Aux .)
    LPAREN          reduce using rule 66 (Inst_Salida -> INST_WRITELN Lista_Aux .)
    NUMBER          reduce using rule 66 (Inst_Salida -> INST_WRITELN Lista_Aux .)
    MINUS           reduce using rule 66 (Inst_Salida -> INST_WRITELN Lista_Aux .)


state 65

    (18) Inst_Funcion -> LENGTH LPAREN . VAR_IDENTIFIER RPAREN

    VAR_IDENTIFIER  shift and go to state 107


state 66

    (17) Inst_Funcion -> RTOI LPAREN . VAR_IDENTIFIER RPAREN

    VAR_IDENTIFIER  shift and go to state 108


state 67

    (22) Inst_Declare -> Inst_Declareau SEMICOLON . Inst_Declare
    (21) Inst_Declare -> . Inst_Declareau
    (22) Inst_Declare -> . Inst_Declareau SEMICOLON Inst_Declare
    (23) Inst_Declareau -> . INST_DECLARE Lista_Declare

    INST_DECLARE    shift and go to state 3

    Inst_Declare                   shift and go to state 109
    Inst_Declareau                 shift and go to state 28

state 68

    (26) Lista_Variables -> VAR_IDENTIFIER COMMA . Lista_Variables
    (25) Lista_Variables -> . VAR_IDENTIFIER
    (26) Lista_Variables -> . VAR_IDENTIFIER COMMA Lista_Variables

    VAR_IDENTIFIER  shift and go to state 29

    Lista_Variables                shift and go to state 110

state 69

    (24) Lista_Declare -> Lista_Variables INST_AS . Tipo
    (27) Tipo -> . TYPEDEF_INT
    (28) Tipo -> . TYPEDEF_BOOL
    (29) Tipo -> . TYPEDEF_RANGE

    TYPEDEF_INT     shift and go to state 111
    TYPEDEF_BOOL    shift and go to state 114
    TYPEDEF_RANGE   shift and go to state 113

    Tipo                           shift and go to state 112

state 70

    (57) Factor -> MINUS Operacion_binaria .
    (48) Operacion_binaria -> Operacion_binaria . PLUS Term
    (49) Operacion_binaria -> Operacion_binaria . MINUS Term

    TIMES           reduce using rule 57 (Factor -> MINUS Operacion_binaria .)
    DIVIDE          reduce using rule 57 (Factor -> MINUS Operacion_binaria .)
    PLUS            reduce using rule 57 (Factor -> MINUS Operacion_binaria .)
    MINUS           reduce using rule 57 (Factor -> MINUS Operacion_binaria .)
    EQEQ            reduce using rule 57 (Factor -> MINUS Operacion_binaria .)
    NEQEQ           reduce using rule 57 (Factor -> MINUS Operacion_binaria .)
    GREAT           reduce using rule 57 (Factor -> MINUS Operacion_binaria .)
    LESS            reduce using rule 57 (Factor -> MINUS Operacion_binaria .)
    GREATEQ         reduce using rule 57 (Factor -> MINUS Operacion_binaria .)
    LESSEQ          reduce using rule 57 (Factor -> MINUS Operacion_binaria .)
    RANGE           reduce using rule 57 (Factor -> MINUS Operacion_binaria .)
    COMMA           reduce using rule 57 (Factor -> MINUS Operacion_binaria .)
    $end            reduce using rule 57 (Factor -> MINUS Operacion_binaria .)
    SEMICOLON       reduce using rule 57 (Factor -> MINUS Operacion_binaria .)
    INST_END        reduce using rule 57 (Factor -> MINUS Operacion_binaria .)
    INST_ELSE       reduce using rule 57 (Factor -> MINUS Operacion_binaria .)
    VAR_IDENTIFIER  reduce using rule 57 (Factor -> MINUS Operacion_binaria .)
    LPAREN          reduce using rule 57 (Factor -> MINUS Operacion_binaria .)
    NUMBER          reduce using rule 57 (Factor -> MINUS Operacion_binaria .)
    RPAREN          reduce using rule 57 (Factor -> MINUS Operacion_binaria .)
    INST_OF         reduce using rule 57 (Factor -> MINUS Operacion_binaria .)
    INTERSECTION    reduce using rule 57 (Factor -> MINUS Operacion_binaria .)
    -               reduce using rule 57 (Factor -> MINUS Operacion_binaria .)
    INST_DO         reduce using rule 57 (Factor -> MINUS Operacion_binaria .)
    AND             reduce using rule 57 (Factor -> MINUS Operacion_binaria .)
    OR              reduce using rule 57 (Factor -> MINUS Operacion_binaria .)
    INST_THEN       reduce using rule 57 (Factor -> MINUS Operacion_binaria .)

  ! PLUS            [ shift and go to state 91 ]
  ! MINUS           [ shift and go to state 92 ]


state 71

    (35) Operacion_booleana -> Operacion_booleana AND . Operacion_booleana
    (34) Operacion_booleana -> . Operacion_binaria Opr_bool Operacion_binaria
    (35) Operacion_booleana -> . Operacion_booleana AND Operacion_booleana
    (36) Operacion_booleana -> . Operacion_booleana OR Operacion_booleana
    (37) Operacion_booleana -> . LPAREN Operacion_booleana RPAREN
    (38) Operacion_booleana -> . TRUE
    (39) Operacion_booleana -> . FALSE
    (40) Operacion_booleana -> . VAR_IDENTIFIER
    (41) Operacion_booleana -> . NOT Operacion_booleana
    (48) Operacion_binaria -> . Operacion_binaria PLUS Term
    (49) Operacion_binaria -> . Operacion_binaria MINUS Term
    (50) Operacion_binaria -> . Term
    (51) Term -> . Term TIMES Factor
    (52) Term -> . Term DIVIDE Factor
    (53) Term -> . Factor
    (54) Factor -> . NUMBER
    (55) Factor -> . VAR_IDENTIFIER
    (56) Factor -> . LPAREN Operacion_binaria RPAREN
    (57) Factor -> . MINUS Operacion_binaria

    LPAREN          shift and go to state 50
    TRUE            shift and go to state 35
    FALSE           shift and go to state 45
    VAR_IDENTIFIER  shift and go to state 49
    NOT             shift and go to state 46
    NUMBER          shift and go to state 33
    MINUS           shift and go to state 36

    Operacion_binaria              shift and go to state 48
    Term                           shift and go to state 39
    Operacion_booleana             shift and go to state 115
    Factor                         shift and go to state 32

state 72

    (36) Operacion_booleana -> Operacion_booleana OR . Operacion_booleana
    (34) Operacion_booleana -> . Operacion_binaria Opr_bool Operacion_binaria
    (35) Operacion_booleana -> . Operacion_booleana AND Operacion_booleana
    (36) Operacion_booleana -> . Operacion_booleana OR Operacion_booleana
    (37) Operacion_booleana -> . LPAREN Operacion_booleana RPAREN
    (38) Operacion_booleana -> . TRUE
    (39) Operacion_booleana -> . FALSE
    (40) Operacion_booleana -> . VAR_IDENTIFIER
    (41) Operacion_booleana -> . NOT Operacion_booleana
    (48) Operacion_binaria -> . Operacion_binaria PLUS Term
    (49) Operacion_binaria -> . Operacion_binaria MINUS Term
    (50) Operacion_binaria -> . Term
    (51) Term -> . Term TIMES Factor
    (52) Term -> . Term DIVIDE Factor
    (53) Term -> . Factor
    (54) Factor -> . NUMBER
    (55) Factor -> . VAR_IDENTIFIER
    (56) Factor -> . LPAREN Operacion_binaria RPAREN
    (57) Factor -> . MINUS Operacion_binaria

    LPAREN          shift and go to state 50
    TRUE            shift and go to state 35
    FALSE           shift and go to state 45
    VAR_IDENTIFIER  shift and go to state 49
    NOT             shift and go to state 46
    NUMBER          shift and go to state 33
    MINUS           shift and go to state 36

    Operacion_binaria              shift and go to state 48
    Term                           shift and go to state 39
    Operacion_booleana             shift and go to state 116
    Factor                         shift and go to state 32

state 73

    (69) Lista_Aux -> Expresion COMMA . Lista_Aux
    (67) Lista_Aux -> . Expresion
    (68) Lista_Aux -> . STRING
    (69) Lista_Aux -> . Expresion COMMA Lista_Aux
    (70) Lista_Aux -> . STRING COMMA Lista_Aux
    (31) Expresion -> . Operacion_binaria
    (32) Expresion -> . Operacion_booleana
    (33) Expresion -> . Rango
    (48) Operacion_binaria -> . Operacion_binaria PLUS Term
    (49) Operacion_binaria -> . Operacion_binaria MINUS Term
    (50) Operacion_binaria -> . Term
    (34) Operacion_booleana -> . Operacion_binaria Opr_bool Operacion_binaria
    (35) Operacion_booleana -> . Operacion_booleana AND Operacion_booleana
    (36) Operacion_booleana -> . Operacion_booleana OR Operacion_booleana
    (37) Operacion_booleana -> . LPAREN Operacion_booleana RPAREN
    (38) Operacion_booleana -> . TRUE
    (39) Operacion_booleana -> . FALSE
    (40) Operacion_booleana -> . VAR_IDENTIFIER
    (41) Operacion_booleana -> . NOT Operacion_booleana
    (58) Rango -> . Operacion_binaria RANGE Operacion_binaria
    (59) Rango -> . Rango PLUS Rango
    (60) Rango -> . Rango TIMES Operacion_binaria
    (61) Rango -> . Rango INTERSECTION Rango
    (62) Rango -> . LPAREN Rango RPAREN
    (63) Rango -> . VAR_IDENTIFIER
    (51) Term -> . Term TIMES Factor
    (52) Term -> . Term DIVIDE Factor
    (53) Term -> . Factor
    (54) Factor -> . NUMBER
    (55) Factor -> . VAR_IDENTIFIER
    (56) Factor -> . LPAREN Operacion_binaria RPAREN
    (57) Factor -> . MINUS Operacion_binaria

    STRING          shift and go to state 40
    LPAREN          shift and go to state 42
    TRUE            shift and go to state 35
    FALSE           shift and go to state 45
    VAR_IDENTIFIER  shift and go to state 41
    NOT             shift and go to state 46
    NUMBER          shift and go to state 33
    MINUS           shift and go to state 36

    Expresion                      shift and go to state 38
    Operacion_binaria              shift and go to state 44
    Factor                         shift and go to state 32
    Term                           shift and go to state 39
    Lista_Aux                      shift and go to state 117
    Rango                          shift and go to state 43
    Operacion_booleana             shift and go to state 37

state 74

    (52) Term -> Term DIVIDE . Factor
    (54) Factor -> . NUMBER
    (55) Factor -> . VAR_IDENTIFIER
    (56) Factor -> . LPAREN Operacion_binaria RPAREN
    (57) Factor -> . MINUS Operacion_binaria

    NUMBER          shift and go to state 33
    VAR_IDENTIFIER  shift and go to state 60
    LPAREN          shift and go to state 61
    MINUS           shift and go to state 36

    Factor                         shift and go to state 118

state 75

    (51) Term -> Term TIMES . Factor
    (54) Factor -> . NUMBER
    (55) Factor -> . VAR_IDENTIFIER
    (56) Factor -> . LPAREN Operacion_binaria RPAREN
    (57) Factor -> . MINUS Operacion_binaria

    NUMBER          shift and go to state 33
    VAR_IDENTIFIER  shift and go to state 60
    LPAREN          shift and go to state 61
    MINUS           shift and go to state 36

    Factor                         shift and go to state 119

state 76

    (70) Lista_Aux -> STRING COMMA . Lista_Aux
    (67) Lista_Aux -> . Expresion
    (68) Lista_Aux -> . STRING
    (69) Lista_Aux -> . Expresion COMMA Lista_Aux
    (70) Lista_Aux -> . STRING COMMA Lista_Aux
    (31) Expresion -> . Operacion_binaria
    (32) Expresion -> . Operacion_booleana
    (33) Expresion -> . Rango
    (48) Operacion_binaria -> . Operacion_binaria PLUS Term
    (49) Operacion_binaria -> . Operacion_binaria MINUS Term
    (50) Operacion_binaria -> . Term
    (34) Operacion_booleana -> . Operacion_binaria Opr_bool Operacion_binaria
    (35) Operacion_booleana -> . Operacion_booleana AND Operacion_booleana
    (36) Operacion_booleana -> . Operacion_booleana OR Operacion_booleana
    (37) Operacion_booleana -> . LPAREN Operacion_booleana RPAREN
    (38) Operacion_booleana -> . TRUE
    (39) Operacion_booleana -> . FALSE
    (40) Operacion_booleana -> . VAR_IDENTIFIER
    (41) Operacion_booleana -> . NOT Operacion_booleana
    (58) Rango -> . Operacion_binaria RANGE Operacion_binaria
    (59) Rango -> . Rango PLUS Rango
    (60) Rango -> . Rango TIMES Operacion_binaria
    (61) Rango -> . Rango INTERSECTION Rango
    (62) Rango -> . LPAREN Rango RPAREN
    (63) Rango -> . VAR_IDENTIFIER
    (51) Term -> . Term TIMES Factor
    (52) Term -> . Term DIVIDE Factor
    (53) Term -> . Factor
    (54) Factor -> . NUMBER
    (55) Factor -> . VAR_IDENTIFIER
    (56) Factor -> . LPAREN Operacion_binaria RPAREN
    (57) Factor -> . MINUS Operacion_binaria

    STRING          shift and go to state 40
    LPAREN          shift and go to state 42
    TRUE            shift and go to state 35
    FALSE           shift and go to state 45
    VAR_IDENTIFIER  shift and go to state 41
    NOT             shift and go to state 46
    NUMBER          shift and go to state 33
    MINUS           shift and go to state 36

    Expresion                      shift and go to state 38
    Operacion_binaria              shift and go to state 44
    Factor                         shift and go to state 32
    Term                           shift and go to state 39
    Lista_Aux                      shift and go to state 120
    Rango                          shift and go to state 43
    Operacion_booleana             shift and go to state 37

state 77

    (56) Factor -> LPAREN Operacion_binaria . RPAREN
    (34) Operacion_booleana -> Operacion_binaria . Opr_bool Operacion_binaria
    (58) Rango -> Operacion_binaria . RANGE Operacion_binaria
    (48) Operacion_binaria -> Operacion_binaria . PLUS Term
    (49) Operacion_binaria -> Operacion_binaria . MINUS Term
    (42) Opr_bool -> . EQEQ
    (43) Opr_bool -> . NEQEQ
    (44) Opr_bool -> . GREAT
    (45) Opr_bool -> . LESS
    (46) Opr_bool -> . GREATEQ
    (47) Opr_bool -> . LESSEQ

    RPAREN          shift and go to state 121
    RANGE           shift and go to state 89
    PLUS            shift and go to state 91
    MINUS           shift and go to state 92
    EQEQ            shift and go to state 88
    NEQEQ           shift and go to state 85
    GREAT           shift and go to state 84
    LESS            shift and go to state 87
    GREATEQ         shift and go to state 83
    LESSEQ          shift and go to state 90

    Opr_bool                       shift and go to state 86

state 78

    (62) Rango -> LPAREN Rango . RPAREN
    (59) Rango -> Rango . PLUS Rango
    (60) Rango -> Rango . TIMES Operacion_binaria
    (61) Rango -> Rango . INTERSECTION Rango

    RPAREN          shift and go to state 122
    PLUS            shift and go to state 81
    TIMES           shift and go to state 82
    INTERSECTION    shift and go to state 80


state 79

    (37) Operacion_booleana -> LPAREN Operacion_booleana . RPAREN
    (35) Operacion_booleana -> Operacion_booleana . AND Operacion_booleana
    (36) Operacion_booleana -> Operacion_booleana . OR Operacion_booleana

    RPAREN          shift and go to state 123
    AND             shift and go to state 71
    OR              shift and go to state 72


state 80

    (61) Rango -> Rango INTERSECTION . Rango
    (58) Rango -> . Operacion_binaria RANGE Operacion_binaria
    (59) Rango -> . Rango PLUS Rango
    (60) Rango -> . Rango TIMES Operacion_binaria
    (61) Rango -> . Rango INTERSECTION Rango
    (62) Rango -> . LPAREN Rango RPAREN
    (63) Rango -> . VAR_IDENTIFIER
    (48) Operacion_binaria -> . Operacion_binaria PLUS Term
    (49) Operacion_binaria -> . Operacion_binaria MINUS Term
    (50) Operacion_binaria -> . Term
    (51) Term -> . Term TIMES Factor
    (52) Term -> . Term DIVIDE Factor
    (53) Term -> . Factor
    (54) Factor -> . NUMBER
    (55) Factor -> . VAR_IDENTIFIER
    (56) Factor -> . LPAREN Operacion_binaria RPAREN
    (57) Factor -> . MINUS Operacion_binaria

    LPAREN          shift and go to state 126
    VAR_IDENTIFIER  shift and go to state 125
    NUMBER          shift and go to state 33
    MINUS           shift and go to state 36

    Rango                          shift and go to state 127
    Operacion_binaria              shift and go to state 124
    Term                           shift and go to state 39
    Factor                         shift and go to state 32

state 81

    (59) Rango -> Rango PLUS . Rango
    (58) Rango -> . Operacion_binaria RANGE Operacion_binaria
    (59) Rango -> . Rango PLUS Rango
    (60) Rango -> . Rango TIMES Operacion_binaria
    (61) Rango -> . Rango INTERSECTION Rango
    (62) Rango -> . LPAREN Rango RPAREN
    (63) Rango -> . VAR_IDENTIFIER
    (48) Operacion_binaria -> . Operacion_binaria PLUS Term
    (49) Operacion_binaria -> . Operacion_binaria MINUS Term
    (50) Operacion_binaria -> . Term
    (51) Term -> . Term TIMES Factor
    (52) Term -> . Term DIVIDE Factor
    (53) Term -> . Factor
    (54) Factor -> . NUMBER
    (55) Factor -> . VAR_IDENTIFIER
    (56) Factor -> . LPAREN Operacion_binaria RPAREN
    (57) Factor -> . MINUS Operacion_binaria

    LPAREN          shift and go to state 126
    VAR_IDENTIFIER  shift and go to state 125
    NUMBER          shift and go to state 33
    MINUS           shift and go to state 36

    Rango                          shift and go to state 128
    Operacion_binaria              shift and go to state 124
    Term                           shift and go to state 39
    Factor                         shift and go to state 32

state 82

    (60) Rango -> Rango TIMES . Operacion_binaria
    (48) Operacion_binaria -> . Operacion_binaria PLUS Term
    (49) Operacion_binaria -> . Operacion_binaria MINUS Term
    (50) Operacion_binaria -> . Term
    (51) Term -> . Term TIMES Factor
    (52) Term -> . Term DIVIDE Factor
    (53) Term -> . Factor
    (54) Factor -> . NUMBER
    (55) Factor -> . VAR_IDENTIFIER
    (56) Factor -> . LPAREN Operacion_binaria RPAREN
    (57) Factor -> . MINUS Operacion_binaria

    NUMBER          shift and go to state 33
    VAR_IDENTIFIER  shift and go to state 60
    LPAREN          shift and go to state 61
    MINUS           shift and go to state 36

    Operacion_binaria              shift and go to state 129
    Term                           shift and go to state 39
    Factor                         shift and go to state 32

state 83

    (46) Opr_bool -> GREATEQ .

    NUMBER          reduce using rule 46 (Opr_bool -> GREATEQ .)
    VAR_IDENTIFIER  reduce using rule 46 (Opr_bool -> GREATEQ .)
    LPAREN          reduce using rule 46 (Opr_bool -> GREATEQ .)
    MINUS           reduce using rule 46 (Opr_bool -> GREATEQ .)


state 84

    (44) Opr_bool -> GREAT .

    NUMBER          reduce using rule 44 (Opr_bool -> GREAT .)
    VAR_IDENTIFIER  reduce using rule 44 (Opr_bool -> GREAT .)
    LPAREN          reduce using rule 44 (Opr_bool -> GREAT .)
    MINUS           reduce using rule 44 (Opr_bool -> GREAT .)


state 85

    (43) Opr_bool -> NEQEQ .

    NUMBER          reduce using rule 43 (Opr_bool -> NEQEQ .)
    VAR_IDENTIFIER  reduce using rule 43 (Opr_bool -> NEQEQ .)
    LPAREN          reduce using rule 43 (Opr_bool -> NEQEQ .)
    MINUS           reduce using rule 43 (Opr_bool -> NEQEQ .)


state 86

    (34) Operacion_booleana -> Operacion_binaria Opr_bool . Operacion_binaria
    (48) Operacion_binaria -> . Operacion_binaria PLUS Term
    (49) Operacion_binaria -> . Operacion_binaria MINUS Term
    (50) Operacion_binaria -> . Term
    (51) Term -> . Term TIMES Factor
    (52) Term -> . Term DIVIDE Factor
    (53) Term -> . Factor
    (54) Factor -> . NUMBER
    (55) Factor -> . VAR_IDENTIFIER
    (56) Factor -> . LPAREN Operacion_binaria RPAREN
    (57) Factor -> . MINUS Operacion_binaria

    NUMBER          shift and go to state 33
    VAR_IDENTIFIER  shift and go to state 60
    LPAREN          shift and go to state 61
    MINUS           shift and go to state 36

    Operacion_binaria              shift and go to state 130
    Term                           shift and go to state 39
    Factor                         shift and go to state 32

state 87

    (45) Opr_bool -> LESS .

    NUMBER          reduce using rule 45 (Opr_bool -> LESS .)
    VAR_IDENTIFIER  reduce using rule 45 (Opr_bool -> LESS .)
    LPAREN          reduce using rule 45 (Opr_bool -> LESS .)
    MINUS           reduce using rule 45 (Opr_bool -> LESS .)


state 88

    (42) Opr_bool -> EQEQ .

    NUMBER          reduce using rule 42 (Opr_bool -> EQEQ .)
    VAR_IDENTIFIER  reduce using rule 42 (Opr_bool -> EQEQ .)
    LPAREN          reduce using rule 42 (Opr_bool -> EQEQ .)
    MINUS           reduce using rule 42 (Opr_bool -> EQEQ .)


state 89

    (58) Rango -> Operacion_binaria RANGE . Operacion_binaria
    (48) Operacion_binaria -> . Operacion_binaria PLUS Term
    (49) Operacion_binaria -> . Operacion_binaria MINUS Term
    (50) Operacion_binaria -> . Term
    (51) Term -> . Term TIMES Factor
    (52) Term -> . Term DIVIDE Factor
    (53) Term -> . Factor
    (54) Factor -> . NUMBER
    (55) Factor -> . VAR_IDENTIFIER
    (56) Factor -> . LPAREN Operacion_binaria RPAREN
    (57) Factor -> . MINUS Operacion_binaria

    NUMBER          shift and go to state 33
    VAR_IDENTIFIER  shift and go to state 60
    LPAREN          shift and go to state 61
    MINUS           shift and go to state 36

    Operacion_binaria              shift and go to state 131
    Term                           shift and go to state 39
    Factor                         shift and go to state 32

state 90

    (47) Opr_bool -> LESSEQ .

    NUMBER          reduce using rule 47 (Opr_bool -> LESSEQ .)
    VAR_IDENTIFIER  reduce using rule 47 (Opr_bool -> LESSEQ .)
    LPAREN          reduce using rule 47 (Opr_bool -> LESSEQ .)
    MINUS           reduce using rule 47 (Opr_bool -> LESSEQ .)


state 91

    (48) Operacion_binaria -> Operacion_binaria PLUS . Term
    (51) Term -> . Term TIMES Factor
    (52) Term -> . Term DIVIDE Factor
    (53) Term -> . Factor
    (54) Factor -> . NUMBER
    (55) Factor -> . VAR_IDENTIFIER
    (56) Factor -> . LPAREN Operacion_binaria RPAREN
    (57) Factor -> . MINUS Operacion_binaria

    NUMBER          shift and go to state 33
    VAR_IDENTIFIER  shift and go to state 60
    LPAREN          shift and go to state 61
    MINUS           shift and go to state 36

    Term                           shift and go to state 132
    Factor                         shift and go to state 32

state 92

    (49) Operacion_binaria -> Operacion_binaria MINUS . Term
    (51) Term -> . Term TIMES Factor
    (52) Term -> . Term DIVIDE Factor
    (53) Term -> . Factor
    (54) Factor -> . NUMBER
    (55) Factor -> . VAR_IDENTIFIER
    (56) Factor -> . LPAREN Operacion_binaria RPAREN
    (57) Factor -> . MINUS Operacion_binaria

    NUMBER          shift and go to state 33
    VAR_IDENTIFIER  shift and go to state 60
    LPAREN          shift and go to state 61
    MINUS           shift and go to state 36

    Term                           shift and go to state 133
    Factor                         shift and go to state 32

state 93

    (41) Operacion_booleana -> NOT Operacion_booleana .
    (35) Operacion_booleana -> Operacion_booleana . AND Operacion_booleana
    (36) Operacion_booleana -> Operacion_booleana . OR Operacion_booleana

    AND             reduce using rule 41 (Operacion_booleana -> NOT Operacion_booleana .)
    OR              reduce using rule 41 (Operacion_booleana -> NOT Operacion_booleana .)
    COMMA           reduce using rule 41 (Operacion_booleana -> NOT Operacion_booleana .)
    $end            reduce using rule 41 (Operacion_booleana -> NOT Operacion_booleana .)
    SEMICOLON       reduce using rule 41 (Operacion_booleana -> NOT Operacion_booleana .)
    INST_END        reduce using rule 41 (Operacion_booleana -> NOT Operacion_booleana .)
    INST_ELSE       reduce using rule 41 (Operacion_booleana -> NOT Operacion_booleana .)
    VAR_IDENTIFIER  reduce using rule 41 (Operacion_booleana -> NOT Operacion_booleana .)
    LPAREN          reduce using rule 41 (Operacion_booleana -> NOT Operacion_booleana .)
    NUMBER          reduce using rule 41 (Operacion_booleana -> NOT Operacion_booleana .)
    MINUS           reduce using rule 41 (Operacion_booleana -> NOT Operacion_booleana .)
    INST_DO         reduce using rule 41 (Operacion_booleana -> NOT Operacion_booleana .)
    INST_THEN       reduce using rule 41 (Operacion_booleana -> NOT Operacion_booleana .)
    RPAREN          reduce using rule 41 (Operacion_booleana -> NOT Operacion_booleana .)

  ! AND             [ shift and go to state 71 ]
  ! OR              [ shift and go to state 72 ]


state 94

    (19) Inst_Funcion -> TOP LPAREN VAR_IDENTIFIER . RPAREN

    RPAREN          shift and go to state 134


state 95

    (56) Factor -> LPAREN Operacion_binaria . RPAREN
    (34) Operacion_booleana -> Operacion_binaria . Opr_bool Operacion_binaria
    (48) Operacion_binaria -> Operacion_binaria . PLUS Term
    (49) Operacion_binaria -> Operacion_binaria . MINUS Term
    (42) Opr_bool -> . EQEQ
    (43) Opr_bool -> . NEQEQ
    (44) Opr_bool -> . GREAT
    (45) Opr_bool -> . LESS
    (46) Opr_bool -> . GREATEQ
    (47) Opr_bool -> . LESSEQ

    RPAREN          shift and go to state 121
    PLUS            shift and go to state 91
    MINUS           shift and go to state 92
    EQEQ            shift and go to state 88
    NEQEQ           shift and go to state 85
    GREAT           shift and go to state 84
    LESS            shift and go to state 87
    GREATEQ         shift and go to state 83
    LESSEQ          shift and go to state 90

    Opr_bool                       shift and go to state 86

state 96

    (79) Inst_While -> INST_WHILE Operacion_booleana INST_DO . Bloque_Inst
    (2) Bloque_Inst -> . INST_BEGIN Lista_Inst INST_END
    (3) Bloque_Inst -> . INST_BEGIN Inst_Declare Lista_Inst INST_END
    (4) Bloque_Inst -> . INST_BEGIN Inst_Declare INST_END
    (5) Bloque_Inst -> . Inst_Declare Inst
    (6) Bloque_Inst -> . Inst
    (21) Inst_Declare -> . Inst_Declareau
    (22) Inst_Declare -> . Inst_Declareau SEMICOLON Inst_Declare
    (9) Inst -> . Inst_Asignacion
    (10) Inst -> . Inst_Lectura
    (11) Inst -> . Inst_For
    (12) Inst -> . Inst_While
    (13) Inst -> . Inst_If
    (14) Inst -> . Inst_Case
    (15) Inst -> . Inst_Salida
    (16) Inst -> . Inst_Funcion
    (23) Inst_Declareau -> . INST_DECLARE Lista_Declare
    (30) Inst_Asignacion -> . VAR_IDENTIFIER EQUAL Expresion
    (64) Inst_Lectura -> . INST_READ VAR_IDENTIFIER
    (78) Inst_For -> . INST_FOR VAR_IDENTIFIER INST_IN Rango INST_DO Bloque_Inst
    (79) Inst_While -> . INST_WHILE Operacion_booleana INST_DO Bloque_Inst
    (71) Inst_If -> . INST_IF Operacion_booleana INST_THEN Bloque_Inst
    (72) Inst_If -> . INST_IF Operacion_booleana INST_THEN Bloque_Inst INST_ELSE Bloque_Inst
    (73) Inst_Case -> . INST_CASE Operacion_binaria INST_OF Casos INST_END
    (65) Inst_Salida -> . INST_WRITE Lista_Aux
    (66) Inst_Salida -> . INST_WRITELN Lista_Aux
    (17) Inst_Funcion -> . RTOI LPAREN VAR_IDENTIFIER RPAREN
    (18) Inst_Funcion -> . LENGTH LPAREN VAR_IDENTIFIER RPAREN
    (19) Inst_Funcion -> . TOP LPAREN VAR_IDENTIFIER RPAREN
    (20) Inst_Funcion -> . BOTTOM LPAREN VAR_IDENTIFIER RPAREN

    INST_BEGIN      shift and go to state 11
    INST_DECLARE    shift and go to state 3
    VAR_IDENTIFIER  shift and go to state 18
    INST_READ       shift and go to state 10
    INST_FOR        shift and go to state 21
    INST_WHILE      shift and go to state 9
    INST_IF         shift and go to state 22
    INST_CASE       shift and go to state 20
    INST_WRITE      shift and go to state 5
    INST_WRITELN    shift and go to state 23
    RTOI            shift and go to state 25
    LENGTH          shift and go to state 24
    TOP             shift and go to state 6
    BOTTOM          shift and go to state 13

    Inst_Salida                    shift and go to state 8
    Inst_Declare                   shift and go to state 12
    Inst_Funcion                   shift and go to state 4
    Bloque_Inst                    shift and go to state 135
    Inst_If                        shift and go to state 19
    Inst_For                       shift and go to state 14
    Inst_While                     shift and go to state 16
    Inst                           shift and go to state 15
    Inst_Asignacion                shift and go to state 26
    Inst_Case                      shift and go to state 27
    Inst_Lectura                   shift and go to state 17
    Inst_Declareau                 shift and go to state 28

state 97

    (4) Bloque_Inst -> INST_BEGIN Inst_Declare INST_END .

    VAR_IDENTIFIER  reduce using rule 4 (Bloque_Inst -> INST_BEGIN Inst_Declare INST_END .)
    LPAREN          reduce using rule 4 (Bloque_Inst -> INST_BEGIN Inst_Declare INST_END .)
    NUMBER          reduce using rule 4 (Bloque_Inst -> INST_BEGIN Inst_Declare INST_END .)
    MINUS           reduce using rule 4 (Bloque_Inst -> INST_BEGIN Inst_Declare INST_END .)
    INST_END        reduce using rule 4 (Bloque_Inst -> INST_BEGIN Inst_Declare INST_END .)
    $end            reduce using rule 4 (Bloque_Inst -> INST_BEGIN Inst_Declare INST_END .)
    SEMICOLON       reduce using rule 4 (Bloque_Inst -> INST_BEGIN Inst_Declare INST_END .)
    INST_ELSE       reduce using rule 4 (Bloque_Inst -> INST_BEGIN Inst_Declare INST_END .)


state 98

    (3) Bloque_Inst -> INST_BEGIN Inst_Declare Lista_Inst . INST_END

    INST_END        shift and go to state 136


state 99

    (8) Lista_Inst -> Inst SEMICOLON . Lista_Inst
    (7) Lista_Inst -> . Inst
    (8) Lista_Inst -> . Inst SEMICOLON Lista_Inst
    (9) Inst -> . Inst_Asignacion
    (10) Inst -> . Inst_Lectura
    (11) Inst -> . Inst_For
    (12) Inst -> . Inst_While
    (13) Inst -> . Inst_If
    (14) Inst -> . Inst_Case
    (15) Inst -> . Inst_Salida
    (16) Inst -> . Inst_Funcion
    (30) Inst_Asignacion -> . VAR_IDENTIFIER EQUAL Expresion
    (64) Inst_Lectura -> . INST_READ VAR_IDENTIFIER
    (78) Inst_For -> . INST_FOR VAR_IDENTIFIER INST_IN Rango INST_DO Bloque_Inst
    (79) Inst_While -> . INST_WHILE Operacion_booleana INST_DO Bloque_Inst
    (71) Inst_If -> . INST_IF Operacion_booleana INST_THEN Bloque_Inst
    (72) Inst_If -> . INST_IF Operacion_booleana INST_THEN Bloque_Inst INST_ELSE Bloque_Inst
    (73) Inst_Case -> . INST_CASE Operacion_binaria INST_OF Casos INST_END
    (65) Inst_Salida -> . INST_WRITE Lista_Aux
    (66) Inst_Salida -> . INST_WRITELN Lista_Aux
    (17) Inst_Funcion -> . RTOI LPAREN VAR_IDENTIFIER RPAREN
    (18) Inst_Funcion -> . LENGTH LPAREN VAR_IDENTIFIER RPAREN
    (19) Inst_Funcion -> . TOP LPAREN VAR_IDENTIFIER RPAREN
    (20) Inst_Funcion -> . BOTTOM LPAREN VAR_IDENTIFIER RPAREN

    VAR_IDENTIFIER  shift and go to state 18
    INST_READ       shift and go to state 10
    INST_FOR        shift and go to state 21
    INST_WHILE      shift and go to state 9
    INST_IF         shift and go to state 22
    INST_CASE       shift and go to state 20
    INST_WRITE      shift and go to state 5
    INST_WRITELN    shift and go to state 23
    RTOI            shift and go to state 25
    LENGTH          shift and go to state 24
    TOP             shift and go to state 6
    BOTTOM          shift and go to state 13

    Inst_Salida                    shift and go to state 8
    Inst_Funcion                   shift and go to state 4
    Inst_If                        shift and go to state 19
    Inst_For                       shift and go to state 14
    Inst_While                     shift and go to state 16
    Inst                           shift and go to state 54
    Inst_Asignacion                shift and go to state 26
    Inst_Case                      shift and go to state 27
    Inst_Lectura                   shift and go to state 17
    Lista_Inst                     shift and go to state 137

state 100

    (2) Bloque_Inst -> INST_BEGIN Lista_Inst INST_END .

    VAR_IDENTIFIER  reduce using rule 2 (Bloque_Inst -> INST_BEGIN Lista_Inst INST_END .)
    LPAREN          reduce using rule 2 (Bloque_Inst -> INST_BEGIN Lista_Inst INST_END .)
    NUMBER          reduce using rule 2 (Bloque_Inst -> INST_BEGIN Lista_Inst INST_END .)
    MINUS           reduce using rule 2 (Bloque_Inst -> INST_BEGIN Lista_Inst INST_END .)
    INST_END        reduce using rule 2 (Bloque_Inst -> INST_BEGIN Lista_Inst INST_END .)
    $end            reduce using rule 2 (Bloque_Inst -> INST_BEGIN Lista_Inst INST_END .)
    SEMICOLON       reduce using rule 2 (Bloque_Inst -> INST_BEGIN Lista_Inst INST_END .)
    INST_ELSE       reduce using rule 2 (Bloque_Inst -> INST_BEGIN Lista_Inst INST_END .)


state 101

    (20) Inst_Funcion -> BOTTOM LPAREN VAR_IDENTIFIER . RPAREN

    RPAREN          shift and go to state 138


state 102

    (30) Inst_Asignacion -> VAR_IDENTIFIER EQUAL Expresion .

    $end            reduce using rule 30 (Inst_Asignacion -> VAR_IDENTIFIER EQUAL Expresion .)
    SEMICOLON       reduce using rule 30 (Inst_Asignacion -> VAR_IDENTIFIER EQUAL Expresion .)
    INST_END        reduce using rule 30 (Inst_Asignacion -> VAR_IDENTIFIER EQUAL Expresion .)
    INST_ELSE       reduce using rule 30 (Inst_Asignacion -> VAR_IDENTIFIER EQUAL Expresion .)
    VAR_IDENTIFIER  reduce using rule 30 (Inst_Asignacion -> VAR_IDENTIFIER EQUAL Expresion .)
    LPAREN          reduce using rule 30 (Inst_Asignacion -> VAR_IDENTIFIER EQUAL Expresion .)
    NUMBER          reduce using rule 30 (Inst_Asignacion -> VAR_IDENTIFIER EQUAL Expresion .)
    MINUS           reduce using rule 30 (Inst_Asignacion -> VAR_IDENTIFIER EQUAL Expresion .)


state 103

    (73) Inst_Case -> INST_CASE Operacion_binaria INST_OF . Casos INST_END
    (74) Casos -> . VAR_IDENTIFIER - > Bloque_Inst
    (75) Casos -> . Rango - > Bloque_Inst
    (76) Casos -> . VAR_IDENTIFIER - > Bloque_Inst Casos
    (77) Casos -> . Rango - > Bloque_Inst Casos
    (58) Rango -> . Operacion_binaria RANGE Operacion_binaria
    (59) Rango -> . Rango PLUS Rango
    (60) Rango -> . Rango TIMES Operacion_binaria
    (61) Rango -> . Rango INTERSECTION Rango
    (62) Rango -> . LPAREN Rango RPAREN
    (63) Rango -> . VAR_IDENTIFIER
    (48) Operacion_binaria -> . Operacion_binaria PLUS Term
    (49) Operacion_binaria -> . Operacion_binaria MINUS Term
    (50) Operacion_binaria -> . Term
    (51) Term -> . Term TIMES Factor
    (52) Term -> . Term DIVIDE Factor
    (53) Term -> . Factor
    (54) Factor -> . NUMBER
    (55) Factor -> . VAR_IDENTIFIER
    (56) Factor -> . LPAREN Operacion_binaria RPAREN
    (57) Factor -> . MINUS Operacion_binaria

    VAR_IDENTIFIER  shift and go to state 139
    LPAREN          shift and go to state 126
    NUMBER          shift and go to state 33
    MINUS           shift and go to state 36

    Operacion_binaria              shift and go to state 124
    Term                           shift and go to state 39
    Factor                         shift and go to state 32
    Rango                          shift and go to state 140
    Casos                          shift and go to state 141

state 104

    (56) Factor -> LPAREN Operacion_binaria . RPAREN
    (48) Operacion_binaria -> Operacion_binaria . PLUS Term
    (49) Operacion_binaria -> Operacion_binaria . MINUS Term

    RPAREN          shift and go to state 121
    PLUS            shift and go to state 91
    MINUS           shift and go to state 92


state 105

    (78) Inst_For -> INST_FOR VAR_IDENTIFIER INST_IN . Rango INST_DO Bloque_Inst
    (58) Rango -> . Operacion_binaria RANGE Operacion_binaria
    (59) Rango -> . Rango PLUS Rango
    (60) Rango -> . Rango TIMES Operacion_binaria
    (61) Rango -> . Rango INTERSECTION Rango
    (62) Rango -> . LPAREN Rango RPAREN
    (63) Rango -> . VAR_IDENTIFIER
    (48) Operacion_binaria -> . Operacion_binaria PLUS Term
    (49) Operacion_binaria -> . Operacion_binaria MINUS Term
    (50) Operacion_binaria -> . Term
    (51) Term -> . Term TIMES Factor
    (52) Term -> . Term DIVIDE Factor
    (53) Term -> . Factor
    (54) Factor -> . NUMBER
    (55) Factor -> . VAR_IDENTIFIER
    (56) Factor -> . LPAREN Operacion_binaria RPAREN
    (57) Factor -> . MINUS Operacion_binaria

    LPAREN          shift and go to state 126
    VAR_IDENTIFIER  shift and go to state 125
    NUMBER          shift and go to state 33
    MINUS           shift and go to state 36

    Rango                          shift and go to state 142
    Operacion_binaria              shift and go to state 124
    Term                           shift and go to state 39
    Factor                         shift and go to state 32

state 106

    (71) Inst_If -> INST_IF Operacion_booleana INST_THEN . Bloque_Inst
    (72) Inst_If -> INST_IF Operacion_booleana INST_THEN . Bloque_Inst INST_ELSE Bloque_Inst
    (2) Bloque_Inst -> . INST_BEGIN Lista_Inst INST_END
    (3) Bloque_Inst -> . INST_BEGIN Inst_Declare Lista_Inst INST_END
    (4) Bloque_Inst -> . INST_BEGIN Inst_Declare INST_END
    (5) Bloque_Inst -> . Inst_Declare Inst
    (6) Bloque_Inst -> . Inst
    (21) Inst_Declare -> . Inst_Declareau
    (22) Inst_Declare -> . Inst_Declareau SEMICOLON Inst_Declare
    (9) Inst -> . Inst_Asignacion
    (10) Inst -> . Inst_Lectura
    (11) Inst -> . Inst_For
    (12) Inst -> . Inst_While
    (13) Inst -> . Inst_If
    (14) Inst -> . Inst_Case
    (15) Inst -> . Inst_Salida
    (16) Inst -> . Inst_Funcion
    (23) Inst_Declareau -> . INST_DECLARE Lista_Declare
    (30) Inst_Asignacion -> . VAR_IDENTIFIER EQUAL Expresion
    (64) Inst_Lectura -> . INST_READ VAR_IDENTIFIER
    (78) Inst_For -> . INST_FOR VAR_IDENTIFIER INST_IN Rango INST_DO Bloque_Inst
    (79) Inst_While -> . INST_WHILE Operacion_booleana INST_DO Bloque_Inst
    (71) Inst_If -> . INST_IF Operacion_booleana INST_THEN Bloque_Inst
    (72) Inst_If -> . INST_IF Operacion_booleana INST_THEN Bloque_Inst INST_ELSE Bloque_Inst
    (73) Inst_Case -> . INST_CASE Operacion_binaria INST_OF Casos INST_END
    (65) Inst_Salida -> . INST_WRITE Lista_Aux
    (66) Inst_Salida -> . INST_WRITELN Lista_Aux
    (17) Inst_Funcion -> . RTOI LPAREN VAR_IDENTIFIER RPAREN
    (18) Inst_Funcion -> . LENGTH LPAREN VAR_IDENTIFIER RPAREN
    (19) Inst_Funcion -> . TOP LPAREN VAR_IDENTIFIER RPAREN
    (20) Inst_Funcion -> . BOTTOM LPAREN VAR_IDENTIFIER RPAREN

    INST_BEGIN      shift and go to state 11
    INST_DECLARE    shift and go to state 3
    VAR_IDENTIFIER  shift and go to state 18
    INST_READ       shift and go to state 10
    INST_FOR        shift and go to state 21
    INST_WHILE      shift and go to state 9
    INST_IF         shift and go to state 22
    INST_CASE       shift and go to state 20
    INST_WRITE      shift and go to state 5
    INST_WRITELN    shift and go to state 23
    RTOI            shift and go to state 25
    LENGTH          shift and go to state 24
    TOP             shift and go to state 6
    BOTTOM          shift and go to state 13

    Inst_Salida                    shift and go to state 8
    Inst_Declare                   shift and go to state 12
    Inst_Funcion                   shift and go to state 4
    Bloque_Inst                    shift and go to state 143
    Inst_If                        shift and go to state 19
    Inst_For                       shift and go to state 14
    Inst_While                     shift and go to state 16
    Inst                           shift and go to state 15
    Inst_Asignacion                shift and go to state 26
    Inst_Case                      shift and go to state 27
    Inst_Lectura                   shift and go to state 17
    Inst_Declareau                 shift and go to state 28

state 107

    (18) Inst_Funcion -> LENGTH LPAREN VAR_IDENTIFIER . RPAREN

    RPAREN          shift and go to state 144


state 108

    (17) Inst_Funcion -> RTOI LPAREN VAR_IDENTIFIER . RPAREN

    RPAREN          shift and go to state 145


state 109

    (22) Inst_Declare -> Inst_Declareau SEMICOLON Inst_Declare .

    INST_END        reduce using rule 22 (Inst_Declare -> Inst_Declareau SEMICOLON Inst_Declare .)
    VAR_IDENTIFIER  reduce using rule 22 (Inst_Declare -> Inst_Declareau SEMICOLON Inst_Declare .)
    INST_READ       reduce using rule 22 (Inst_Declare -> Inst_Declareau SEMICOLON Inst_Declare .)
    INST_FOR        reduce using rule 22 (Inst_Declare -> Inst_Declareau SEMICOLON Inst_Declare .)
    INST_WHILE      reduce using rule 22 (Inst_Declare -> Inst_Declareau SEMICOLON Inst_Declare .)
    INST_IF         reduce using rule 22 (Inst_Declare -> Inst_Declareau SEMICOLON Inst_Declare .)
    INST_CASE       reduce using rule 22 (Inst_Declare -> Inst_Declareau SEMICOLON Inst_Declare .)
    INST_WRITE      reduce using rule 22 (Inst_Declare -> Inst_Declareau SEMICOLON Inst_Declare .)
    INST_WRITELN    reduce using rule 22 (Inst_Declare -> Inst_Declareau SEMICOLON Inst_Declare .)
    RTOI            reduce using rule 22 (Inst_Declare -> Inst_Declareau SEMICOLON Inst_Declare .)
    LENGTH          reduce using rule 22 (Inst_Declare -> Inst_Declareau SEMICOLON Inst_Declare .)
    TOP             reduce using rule 22 (Inst_Declare -> Inst_Declareau SEMICOLON Inst_Declare .)
    BOTTOM          reduce using rule 22 (Inst_Declare -> Inst_Declareau SEMICOLON Inst_Declare .)


state 110

    (26) Lista_Variables -> VAR_IDENTIFIER COMMA Lista_Variables .

    INST_AS         reduce using rule 26 (Lista_Variables -> VAR_IDENTIFIER COMMA Lista_Variables .)


state 111

    (27) Tipo -> TYPEDEF_INT .

    SEMICOLON       reduce using rule 27 (Tipo -> TYPEDEF_INT .)
    VAR_IDENTIFIER  reduce using rule 27 (Tipo -> TYPEDEF_INT .)
    INST_READ       reduce using rule 27 (Tipo -> TYPEDEF_INT .)
    INST_FOR        reduce using rule 27 (Tipo -> TYPEDEF_INT .)
    INST_WHILE      reduce using rule 27 (Tipo -> TYPEDEF_INT .)
    INST_IF         reduce using rule 27 (Tipo -> TYPEDEF_INT .)
    INST_CASE       reduce using rule 27 (Tipo -> TYPEDEF_INT .)
    INST_WRITE      reduce using rule 27 (Tipo -> TYPEDEF_INT .)
    INST_WRITELN    reduce using rule 27 (Tipo -> TYPEDEF_INT .)
    RTOI            reduce using rule 27 (Tipo -> TYPEDEF_INT .)
    LENGTH          reduce using rule 27 (Tipo -> TYPEDEF_INT .)
    TOP             reduce using rule 27 (Tipo -> TYPEDEF_INT .)
    BOTTOM          reduce using rule 27 (Tipo -> TYPEDEF_INT .)
    INST_END        reduce using rule 27 (Tipo -> TYPEDEF_INT .)


state 112

    (24) Lista_Declare -> Lista_Variables INST_AS Tipo .

    SEMICOLON       reduce using rule 24 (Lista_Declare -> Lista_Variables INST_AS Tipo .)
    VAR_IDENTIFIER  reduce using rule 24 (Lista_Declare -> Lista_Variables INST_AS Tipo .)
    INST_READ       reduce using rule 24 (Lista_Declare -> Lista_Variables INST_AS Tipo .)
    INST_FOR        reduce using rule 24 (Lista_Declare -> Lista_Variables INST_AS Tipo .)
    INST_WHILE      reduce using rule 24 (Lista_Declare -> Lista_Variables INST_AS Tipo .)
    INST_IF         reduce using rule 24 (Lista_Declare -> Lista_Variables INST_AS Tipo .)
    INST_CASE       reduce using rule 24 (Lista_Declare -> Lista_Variables INST_AS Tipo .)
    INST_WRITE      reduce using rule 24 (Lista_Declare -> Lista_Variables INST_AS Tipo .)
    INST_WRITELN    reduce using rule 24 (Lista_Declare -> Lista_Variables INST_AS Tipo .)
    RTOI            reduce using rule 24 (Lista_Declare -> Lista_Variables INST_AS Tipo .)
    LENGTH          reduce using rule 24 (Lista_Declare -> Lista_Variables INST_AS Tipo .)
    TOP             reduce using rule 24 (Lista_Declare -> Lista_Variables INST_AS Tipo .)
    BOTTOM          reduce using rule 24 (Lista_Declare -> Lista_Variables INST_AS Tipo .)
    INST_END        reduce using rule 24 (Lista_Declare -> Lista_Variables INST_AS Tipo .)


state 113

    (29) Tipo -> TYPEDEF_RANGE .

    SEMICOLON       reduce using rule 29 (Tipo -> TYPEDEF_RANGE .)
    VAR_IDENTIFIER  reduce using rule 29 (Tipo -> TYPEDEF_RANGE .)
    INST_READ       reduce using rule 29 (Tipo -> TYPEDEF_RANGE .)
    INST_FOR        reduce using rule 29 (Tipo -> TYPEDEF_RANGE .)
    INST_WHILE      reduce using rule 29 (Tipo -> TYPEDEF_RANGE .)
    INST_IF         reduce using rule 29 (Tipo -> TYPEDEF_RANGE .)
    INST_CASE       reduce using rule 29 (Tipo -> TYPEDEF_RANGE .)
    INST_WRITE      reduce using rule 29 (Tipo -> TYPEDEF_RANGE .)
    INST_WRITELN    reduce using rule 29 (Tipo -> TYPEDEF_RANGE .)
    RTOI            reduce using rule 29 (Tipo -> TYPEDEF_RANGE .)
    LENGTH          reduce using rule 29 (Tipo -> TYPEDEF_RANGE .)
    TOP             reduce using rule 29 (Tipo -> TYPEDEF_RANGE .)
    BOTTOM          reduce using rule 29 (Tipo -> TYPEDEF_RANGE .)
    INST_END        reduce using rule 29 (Tipo -> TYPEDEF_RANGE .)


state 114

    (28) Tipo -> TYPEDEF_BOOL .

    SEMICOLON       reduce using rule 28 (Tipo -> TYPEDEF_BOOL .)
    VAR_IDENTIFIER  reduce using rule 28 (Tipo -> TYPEDEF_BOOL .)
    INST_READ       reduce using rule 28 (Tipo -> TYPEDEF_BOOL .)
    INST_FOR        reduce using rule 28 (Tipo -> TYPEDEF_BOOL .)
    INST_WHILE      reduce using rule 28 (Tipo -> TYPEDEF_BOOL .)
    INST_IF         reduce using rule 28 (Tipo -> TYPEDEF_BOOL .)
    INST_CASE       reduce using rule 28 (Tipo -> TYPEDEF_BOOL .)
    INST_WRITE      reduce using rule 28 (Tipo -> TYPEDEF_BOOL .)
    INST_WRITELN    reduce using rule 28 (Tipo -> TYPEDEF_BOOL .)
    RTOI            reduce using rule 28 (Tipo -> TYPEDEF_BOOL .)
    LENGTH          reduce using rule 28 (Tipo -> TYPEDEF_BOOL .)
    TOP             reduce using rule 28 (Tipo -> TYPEDEF_BOOL .)
    BOTTOM          reduce using rule 28 (Tipo -> TYPEDEF_BOOL .)
    INST_END        reduce using rule 28 (Tipo -> TYPEDEF_BOOL .)


state 115

    (35) Operacion_booleana -> Operacion_booleana AND Operacion_booleana .
    (35) Operacion_booleana -> Operacion_booleana . AND Operacion_booleana
    (36) Operacion_booleana -> Operacion_booleana . OR Operacion_booleana

    AND             reduce using rule 35 (Operacion_booleana -> Operacion_booleana AND Operacion_booleana .)
    OR              reduce using rule 35 (Operacion_booleana -> Operacion_booleana AND Operacion_booleana .)
    COMMA           reduce using rule 35 (Operacion_booleana -> Operacion_booleana AND Operacion_booleana .)
    $end            reduce using rule 35 (Operacion_booleana -> Operacion_booleana AND Operacion_booleana .)
    SEMICOLON       reduce using rule 35 (Operacion_booleana -> Operacion_booleana AND Operacion_booleana .)
    INST_END        reduce using rule 35 (Operacion_booleana -> Operacion_booleana AND Operacion_booleana .)
    INST_ELSE       reduce using rule 35 (Operacion_booleana -> Operacion_booleana AND Operacion_booleana .)
    VAR_IDENTIFIER  reduce using rule 35 (Operacion_booleana -> Operacion_booleana AND Operacion_booleana .)
    LPAREN          reduce using rule 35 (Operacion_booleana -> Operacion_booleana AND Operacion_booleana .)
    NUMBER          reduce using rule 35 (Operacion_booleana -> Operacion_booleana AND Operacion_booleana .)
    MINUS           reduce using rule 35 (Operacion_booleana -> Operacion_booleana AND Operacion_booleana .)
    INST_DO         reduce using rule 35 (Operacion_booleana -> Operacion_booleana AND Operacion_booleana .)
    INST_THEN       reduce using rule 35 (Operacion_booleana -> Operacion_booleana AND Operacion_booleana .)
    RPAREN          reduce using rule 35 (Operacion_booleana -> Operacion_booleana AND Operacion_booleana .)

  ! AND             [ shift and go to state 71 ]
  ! OR              [ shift and go to state 72 ]


state 116

    (36) Operacion_booleana -> Operacion_booleana OR Operacion_booleana .
    (35) Operacion_booleana -> Operacion_booleana . AND Operacion_booleana
    (36) Operacion_booleana -> Operacion_booleana . OR Operacion_booleana

    OR              reduce using rule 36 (Operacion_booleana -> Operacion_booleana OR Operacion_booleana .)
    COMMA           reduce using rule 36 (Operacion_booleana -> Operacion_booleana OR Operacion_booleana .)
    $end            reduce using rule 36 (Operacion_booleana -> Operacion_booleana OR Operacion_booleana .)
    SEMICOLON       reduce using rule 36 (Operacion_booleana -> Operacion_booleana OR Operacion_booleana .)
    INST_END        reduce using rule 36 (Operacion_booleana -> Operacion_booleana OR Operacion_booleana .)
    INST_ELSE       reduce using rule 36 (Operacion_booleana -> Operacion_booleana OR Operacion_booleana .)
    VAR_IDENTIFIER  reduce using rule 36 (Operacion_booleana -> Operacion_booleana OR Operacion_booleana .)
    LPAREN          reduce using rule 36 (Operacion_booleana -> Operacion_booleana OR Operacion_booleana .)
    NUMBER          reduce using rule 36 (Operacion_booleana -> Operacion_booleana OR Operacion_booleana .)
    MINUS           reduce using rule 36 (Operacion_booleana -> Operacion_booleana OR Operacion_booleana .)
    INST_DO         reduce using rule 36 (Operacion_booleana -> Operacion_booleana OR Operacion_booleana .)
    INST_THEN       reduce using rule 36 (Operacion_booleana -> Operacion_booleana OR Operacion_booleana .)
    RPAREN          reduce using rule 36 (Operacion_booleana -> Operacion_booleana OR Operacion_booleana .)
    AND             shift and go to state 71

  ! AND             [ reduce using rule 36 (Operacion_booleana -> Operacion_booleana OR Operacion_booleana .) ]
  ! OR              [ shift and go to state 72 ]


state 117

    (69) Lista_Aux -> Expresion COMMA Lista_Aux .

    $end            reduce using rule 69 (Lista_Aux -> Expresion COMMA Lista_Aux .)
    SEMICOLON       reduce using rule 69 (Lista_Aux -> Expresion COMMA Lista_Aux .)
    INST_END        reduce using rule 69 (Lista_Aux -> Expresion COMMA Lista_Aux .)
    INST_ELSE       reduce using rule 69 (Lista_Aux -> Expresion COMMA Lista_Aux .)
    VAR_IDENTIFIER  reduce using rule 69 (Lista_Aux -> Expresion COMMA Lista_Aux .)
    LPAREN          reduce using rule 69 (Lista_Aux -> Expresion COMMA Lista_Aux .)
    NUMBER          reduce using rule 69 (Lista_Aux -> Expresion COMMA Lista_Aux .)
    MINUS           reduce using rule 69 (Lista_Aux -> Expresion COMMA Lista_Aux .)


state 118

    (52) Term -> Term DIVIDE Factor .

    PLUS            reduce using rule 52 (Term -> Term DIVIDE Factor .)
    MINUS           reduce using rule 52 (Term -> Term DIVIDE Factor .)
    TIMES           reduce using rule 52 (Term -> Term DIVIDE Factor .)
    DIVIDE          reduce using rule 52 (Term -> Term DIVIDE Factor .)
    RANGE           reduce using rule 52 (Term -> Term DIVIDE Factor .)
    EQEQ            reduce using rule 52 (Term -> Term DIVIDE Factor .)
    NEQEQ           reduce using rule 52 (Term -> Term DIVIDE Factor .)
    GREAT           reduce using rule 52 (Term -> Term DIVIDE Factor .)
    LESS            reduce using rule 52 (Term -> Term DIVIDE Factor .)
    GREATEQ         reduce using rule 52 (Term -> Term DIVIDE Factor .)
    LESSEQ          reduce using rule 52 (Term -> Term DIVIDE Factor .)
    COMMA           reduce using rule 52 (Term -> Term DIVIDE Factor .)
    $end            reduce using rule 52 (Term -> Term DIVIDE Factor .)
    SEMICOLON       reduce using rule 52 (Term -> Term DIVIDE Factor .)
    INST_END        reduce using rule 52 (Term -> Term DIVIDE Factor .)
    INST_ELSE       reduce using rule 52 (Term -> Term DIVIDE Factor .)
    VAR_IDENTIFIER  reduce using rule 52 (Term -> Term DIVIDE Factor .)
    LPAREN          reduce using rule 52 (Term -> Term DIVIDE Factor .)
    NUMBER          reduce using rule 52 (Term -> Term DIVIDE Factor .)
    INST_OF         reduce using rule 52 (Term -> Term DIVIDE Factor .)
    RPAREN          reduce using rule 52 (Term -> Term DIVIDE Factor .)
    INTERSECTION    reduce using rule 52 (Term -> Term DIVIDE Factor .)
    -               reduce using rule 52 (Term -> Term DIVIDE Factor .)
    INST_DO         reduce using rule 52 (Term -> Term DIVIDE Factor .)
    AND             reduce using rule 52 (Term -> Term DIVIDE Factor .)
    OR              reduce using rule 52 (Term -> Term DIVIDE Factor .)
    INST_THEN       reduce using rule 52 (Term -> Term DIVIDE Factor .)


state 119

    (51) Term -> Term TIMES Factor .

    PLUS            reduce using rule 51 (Term -> Term TIMES Factor .)
    MINUS           reduce using rule 51 (Term -> Term TIMES Factor .)
    TIMES           reduce using rule 51 (Term -> Term TIMES Factor .)
    DIVIDE          reduce using rule 51 (Term -> Term TIMES Factor .)
    RANGE           reduce using rule 51 (Term -> Term TIMES Factor .)
    EQEQ            reduce using rule 51 (Term -> Term TIMES Factor .)
    NEQEQ           reduce using rule 51 (Term -> Term TIMES Factor .)
    GREAT           reduce using rule 51 (Term -> Term TIMES Factor .)
    LESS            reduce using rule 51 (Term -> Term TIMES Factor .)
    GREATEQ         reduce using rule 51 (Term -> Term TIMES Factor .)
    LESSEQ          reduce using rule 51 (Term -> Term TIMES Factor .)
    COMMA           reduce using rule 51 (Term -> Term TIMES Factor .)
    $end            reduce using rule 51 (Term -> Term TIMES Factor .)
    SEMICOLON       reduce using rule 51 (Term -> Term TIMES Factor .)
    INST_END        reduce using rule 51 (Term -> Term TIMES Factor .)
    INST_ELSE       reduce using rule 51 (Term -> Term TIMES Factor .)
    VAR_IDENTIFIER  reduce using rule 51 (Term -> Term TIMES Factor .)
    LPAREN          reduce using rule 51 (Term -> Term TIMES Factor .)
    NUMBER          reduce using rule 51 (Term -> Term TIMES Factor .)
    INST_OF         reduce using rule 51 (Term -> Term TIMES Factor .)
    RPAREN          reduce using rule 51 (Term -> Term TIMES Factor .)
    INTERSECTION    reduce using rule 51 (Term -> Term TIMES Factor .)
    -               reduce using rule 51 (Term -> Term TIMES Factor .)
    INST_DO         reduce using rule 51 (Term -> Term TIMES Factor .)
    AND             reduce using rule 51 (Term -> Term TIMES Factor .)
    OR              reduce using rule 51 (Term -> Term TIMES Factor .)
    INST_THEN       reduce using rule 51 (Term -> Term TIMES Factor .)


state 120

    (70) Lista_Aux -> STRING COMMA Lista_Aux .

    $end            reduce using rule 70 (Lista_Aux -> STRING COMMA Lista_Aux .)
    SEMICOLON       reduce using rule 70 (Lista_Aux -> STRING COMMA Lista_Aux .)
    INST_END        reduce using rule 70 (Lista_Aux -> STRING COMMA Lista_Aux .)
    INST_ELSE       reduce using rule 70 (Lista_Aux -> STRING COMMA Lista_Aux .)
    VAR_IDENTIFIER  reduce using rule 70 (Lista_Aux -> STRING COMMA Lista_Aux .)
    LPAREN          reduce using rule 70 (Lista_Aux -> STRING COMMA Lista_Aux .)
    NUMBER          reduce using rule 70 (Lista_Aux -> STRING COMMA Lista_Aux .)
    MINUS           reduce using rule 70 (Lista_Aux -> STRING COMMA Lista_Aux .)


state 121

    (56) Factor -> LPAREN Operacion_binaria RPAREN .

    TIMES           reduce using rule 56 (Factor -> LPAREN Operacion_binaria RPAREN .)
    DIVIDE          reduce using rule 56 (Factor -> LPAREN Operacion_binaria RPAREN .)
    PLUS            reduce using rule 56 (Factor -> LPAREN Operacion_binaria RPAREN .)
    MINUS           reduce using rule 56 (Factor -> LPAREN Operacion_binaria RPAREN .)
    EQEQ            reduce using rule 56 (Factor -> LPAREN Operacion_binaria RPAREN .)
    NEQEQ           reduce using rule 56 (Factor -> LPAREN Operacion_binaria RPAREN .)
    GREAT           reduce using rule 56 (Factor -> LPAREN Operacion_binaria RPAREN .)
    LESS            reduce using rule 56 (Factor -> LPAREN Operacion_binaria RPAREN .)
    GREATEQ         reduce using rule 56 (Factor -> LPAREN Operacion_binaria RPAREN .)
    LESSEQ          reduce using rule 56 (Factor -> LPAREN Operacion_binaria RPAREN .)
    RANGE           reduce using rule 56 (Factor -> LPAREN Operacion_binaria RPAREN .)
    COMMA           reduce using rule 56 (Factor -> LPAREN Operacion_binaria RPAREN .)
    $end            reduce using rule 56 (Factor -> LPAREN Operacion_binaria RPAREN .)
    SEMICOLON       reduce using rule 56 (Factor -> LPAREN Operacion_binaria RPAREN .)
    INST_END        reduce using rule 56 (Factor -> LPAREN Operacion_binaria RPAREN .)
    INST_ELSE       reduce using rule 56 (Factor -> LPAREN Operacion_binaria RPAREN .)
    VAR_IDENTIFIER  reduce using rule 56 (Factor -> LPAREN Operacion_binaria RPAREN .)
    LPAREN          reduce using rule 56 (Factor -> LPAREN Operacion_binaria RPAREN .)
    NUMBER          reduce using rule 56 (Factor -> LPAREN Operacion_binaria RPAREN .)
    RPAREN          reduce using rule 56 (Factor -> LPAREN Operacion_binaria RPAREN .)
    INST_OF         reduce using rule 56 (Factor -> LPAREN Operacion_binaria RPAREN .)
    INTERSECTION    reduce using rule 56 (Factor -> LPAREN Operacion_binaria RPAREN .)
    -               reduce using rule 56 (Factor -> LPAREN Operacion_binaria RPAREN .)
    INST_DO         reduce using rule 56 (Factor -> LPAREN Operacion_binaria RPAREN .)
    AND             reduce using rule 56 (Factor -> LPAREN Operacion_binaria RPAREN .)
    OR              reduce using rule 56 (Factor -> LPAREN Operacion_binaria RPAREN .)
    INST_THEN       reduce using rule 56 (Factor -> LPAREN Operacion_binaria RPAREN .)


state 122

    (62) Rango -> LPAREN Rango RPAREN .

    PLUS            reduce using rule 62 (Rango -> LPAREN Rango RPAREN .)
    TIMES           reduce using rule 62 (Rango -> LPAREN Rango RPAREN .)
    INTERSECTION    reduce using rule 62 (Rango -> LPAREN Rango RPAREN .)
    COMMA           reduce using rule 62 (Rango -> LPAREN Rango RPAREN .)
    $end            reduce using rule 62 (Rango -> LPAREN Rango RPAREN .)
    SEMICOLON       reduce using rule 62 (Rango -> LPAREN Rango RPAREN .)
    INST_END        reduce using rule 62 (Rango -> LPAREN Rango RPAREN .)
    INST_ELSE       reduce using rule 62 (Rango -> LPAREN Rango RPAREN .)
    VAR_IDENTIFIER  reduce using rule 62 (Rango -> LPAREN Rango RPAREN .)
    LPAREN          reduce using rule 62 (Rango -> LPAREN Rango RPAREN .)
    NUMBER          reduce using rule 62 (Rango -> LPAREN Rango RPAREN .)
    MINUS           reduce using rule 62 (Rango -> LPAREN Rango RPAREN .)
    RPAREN          reduce using rule 62 (Rango -> LPAREN Rango RPAREN .)
    -               reduce using rule 62 (Rango -> LPAREN Rango RPAREN .)
    INST_DO         reduce using rule 62 (Rango -> LPAREN Rango RPAREN .)


state 123

    (37) Operacion_booleana -> LPAREN Operacion_booleana RPAREN .

    AND             reduce using rule 37 (Operacion_booleana -> LPAREN Operacion_booleana RPAREN .)
    OR              reduce using rule 37 (Operacion_booleana -> LPAREN Operacion_booleana RPAREN .)
    COMMA           reduce using rule 37 (Operacion_booleana -> LPAREN Operacion_booleana RPAREN .)
    $end            reduce using rule 37 (Operacion_booleana -> LPAREN Operacion_booleana RPAREN .)
    SEMICOLON       reduce using rule 37 (Operacion_booleana -> LPAREN Operacion_booleana RPAREN .)
    INST_END        reduce using rule 37 (Operacion_booleana -> LPAREN Operacion_booleana RPAREN .)
    INST_ELSE       reduce using rule 37 (Operacion_booleana -> LPAREN Operacion_booleana RPAREN .)
    VAR_IDENTIFIER  reduce using rule 37 (Operacion_booleana -> LPAREN Operacion_booleana RPAREN .)
    LPAREN          reduce using rule 37 (Operacion_booleana -> LPAREN Operacion_booleana RPAREN .)
    NUMBER          reduce using rule 37 (Operacion_booleana -> LPAREN Operacion_booleana RPAREN .)
    MINUS           reduce using rule 37 (Operacion_booleana -> LPAREN Operacion_booleana RPAREN .)
    INST_DO         reduce using rule 37 (Operacion_booleana -> LPAREN Operacion_booleana RPAREN .)
    INST_THEN       reduce using rule 37 (Operacion_booleana -> LPAREN Operacion_booleana RPAREN .)
    RPAREN          reduce using rule 37 (Operacion_booleana -> LPAREN Operacion_booleana RPAREN .)


state 124

    (58) Rango -> Operacion_binaria . RANGE Operacion_binaria
    (48) Operacion_binaria -> Operacion_binaria . PLUS Term
    (49) Operacion_binaria -> Operacion_binaria . MINUS Term

    RANGE           shift and go to state 89
    PLUS            shift and go to state 91
    MINUS           shift and go to state 92


state 125

    (63) Rango -> VAR_IDENTIFIER .
    (55) Factor -> VAR_IDENTIFIER .

  ! reduce/reduce conflict for TIMES resolved using rule 55 (Factor -> VAR_IDENTIFIER .)
  ! reduce/reduce conflict for RPAREN resolved using rule 55 (Factor -> VAR_IDENTIFIER .)
  ! reduce/reduce conflict for PLUS resolved using rule 55 (Factor -> VAR_IDENTIFIER .)
  ! reduce/reduce conflict for MINUS resolved using rule 55 (Factor -> VAR_IDENTIFIER .)
    INTERSECTION    reduce using rule 63 (Rango -> VAR_IDENTIFIER .)
    COMMA           reduce using rule 63 (Rango -> VAR_IDENTIFIER .)
    $end            reduce using rule 63 (Rango -> VAR_IDENTIFIER .)
    SEMICOLON       reduce using rule 63 (Rango -> VAR_IDENTIFIER .)
    INST_END        reduce using rule 63 (Rango -> VAR_IDENTIFIER .)
    INST_ELSE       reduce using rule 63 (Rango -> VAR_IDENTIFIER .)
    VAR_IDENTIFIER  reduce using rule 63 (Rango -> VAR_IDENTIFIER .)
    LPAREN          reduce using rule 63 (Rango -> VAR_IDENTIFIER .)
    NUMBER          reduce using rule 63 (Rango -> VAR_IDENTIFIER .)
    -               reduce using rule 63 (Rango -> VAR_IDENTIFIER .)
    INST_DO         reduce using rule 63 (Rango -> VAR_IDENTIFIER .)
    TIMES           reduce using rule 55 (Factor -> VAR_IDENTIFIER .)
    DIVIDE          reduce using rule 55 (Factor -> VAR_IDENTIFIER .)
    RPAREN          reduce using rule 55 (Factor -> VAR_IDENTIFIER .)
    RANGE           reduce using rule 55 (Factor -> VAR_IDENTIFIER .)
    PLUS            reduce using rule 55 (Factor -> VAR_IDENTIFIER .)
    MINUS           reduce using rule 55 (Factor -> VAR_IDENTIFIER .)

  ! PLUS            [ reduce using rule 63 (Rango -> VAR_IDENTIFIER .) ]
  ! TIMES           [ reduce using rule 63 (Rango -> VAR_IDENTIFIER .) ]
  ! MINUS           [ reduce using rule 63 (Rango -> VAR_IDENTIFIER .) ]
  ! RPAREN          [ reduce using rule 63 (Rango -> VAR_IDENTIFIER .) ]


state 126

    (62) Rango -> LPAREN . Rango RPAREN
    (56) Factor -> LPAREN . Operacion_binaria RPAREN
    (58) Rango -> . Operacion_binaria RANGE Operacion_binaria
    (59) Rango -> . Rango PLUS Rango
    (60) Rango -> . Rango TIMES Operacion_binaria
    (61) Rango -> . Rango INTERSECTION Rango
    (62) Rango -> . LPAREN Rango RPAREN
    (63) Rango -> . VAR_IDENTIFIER
    (48) Operacion_binaria -> . Operacion_binaria PLUS Term
    (49) Operacion_binaria -> . Operacion_binaria MINUS Term
    (50) Operacion_binaria -> . Term
    (51) Term -> . Term TIMES Factor
    (52) Term -> . Term DIVIDE Factor
    (53) Term -> . Factor
    (54) Factor -> . NUMBER
    (55) Factor -> . VAR_IDENTIFIER
    (56) Factor -> . LPAREN Operacion_binaria RPAREN
    (57) Factor -> . MINUS Operacion_binaria

    LPAREN          shift and go to state 126
    VAR_IDENTIFIER  shift and go to state 125
    NUMBER          shift and go to state 33
    MINUS           shift and go to state 36

    Rango                          shift and go to state 78
    Operacion_binaria              shift and go to state 146
    Term                           shift and go to state 39
    Factor                         shift and go to state 32

state 127

    (61) Rango -> Rango INTERSECTION Rango .
    (59) Rango -> Rango . PLUS Rango
    (60) Rango -> Rango . TIMES Operacion_binaria
    (61) Rango -> Rango . INTERSECTION Rango

    INTERSECTION    reduce using rule 61 (Rango -> Rango INTERSECTION Rango .)
    COMMA           reduce using rule 61 (Rango -> Rango INTERSECTION Rango .)
    $end            reduce using rule 61 (Rango -> Rango INTERSECTION Rango .)
    SEMICOLON       reduce using rule 61 (Rango -> Rango INTERSECTION Rango .)
    INST_END        reduce using rule 61 (Rango -> Rango INTERSECTION Rango .)
    INST_ELSE       reduce using rule 61 (Rango -> Rango INTERSECTION Rango .)
    VAR_IDENTIFIER  reduce using rule 61 (Rango -> Rango INTERSECTION Rango .)
    LPAREN          reduce using rule 61 (Rango -> Rango INTERSECTION Rango .)
    NUMBER          reduce using rule 61 (Rango -> Rango INTERSECTION Rango .)
    MINUS           reduce using rule 61 (Rango -> Rango INTERSECTION Rango .)
    RPAREN          reduce using rule 61 (Rango -> Rango INTERSECTION Rango .)
    -               reduce using rule 61 (Rango -> Rango INTERSECTION Rango .)
    INST_DO         reduce using rule 61 (Rango -> Rango INTERSECTION Rango .)
    PLUS            shift and go to state 81
    TIMES           shift and go to state 82

  ! PLUS            [ reduce using rule 61 (Rango -> Rango INTERSECTION Rango .) ]
  ! TIMES           [ reduce using rule 61 (Rango -> Rango INTERSECTION Rango .) ]
  ! INTERSECTION    [ shift and go to state 80 ]


state 128

    (59) Rango -> Rango PLUS Rango .
    (59) Rango -> Rango . PLUS Rango
    (60) Rango -> Rango . TIMES Operacion_binaria
    (61) Rango -> Rango . INTERSECTION Rango

    PLUS            reduce using rule 59 (Rango -> Rango PLUS Rango .)
    INTERSECTION    reduce using rule 59 (Rango -> Rango PLUS Rango .)
    COMMA           reduce using rule 59 (Rango -> Rango PLUS Rango .)
    $end            reduce using rule 59 (Rango -> Rango PLUS Rango .)
    SEMICOLON       reduce using rule 59 (Rango -> Rango PLUS Rango .)
    INST_END        reduce using rule 59 (Rango -> Rango PLUS Rango .)
    INST_ELSE       reduce using rule 59 (Rango -> Rango PLUS Rango .)
    VAR_IDENTIFIER  reduce using rule 59 (Rango -> Rango PLUS Rango .)
    LPAREN          reduce using rule 59 (Rango -> Rango PLUS Rango .)
    NUMBER          reduce using rule 59 (Rango -> Rango PLUS Rango .)
    MINUS           reduce using rule 59 (Rango -> Rango PLUS Rango .)
    RPAREN          reduce using rule 59 (Rango -> Rango PLUS Rango .)
    -               reduce using rule 59 (Rango -> Rango PLUS Rango .)
    INST_DO         reduce using rule 59 (Rango -> Rango PLUS Rango .)
    TIMES           shift and go to state 82

  ! TIMES           [ reduce using rule 59 (Rango -> Rango PLUS Rango .) ]
  ! PLUS            [ shift and go to state 81 ]
  ! INTERSECTION    [ shift and go to state 80 ]


state 129

    (60) Rango -> Rango TIMES Operacion_binaria .
    (48) Operacion_binaria -> Operacion_binaria . PLUS Term
    (49) Operacion_binaria -> Operacion_binaria . MINUS Term

    PLUS            reduce using rule 60 (Rango -> Rango TIMES Operacion_binaria .)
    TIMES           reduce using rule 60 (Rango -> Rango TIMES Operacion_binaria .)
    INTERSECTION    reduce using rule 60 (Rango -> Rango TIMES Operacion_binaria .)
    COMMA           reduce using rule 60 (Rango -> Rango TIMES Operacion_binaria .)
    $end            reduce using rule 60 (Rango -> Rango TIMES Operacion_binaria .)
    SEMICOLON       reduce using rule 60 (Rango -> Rango TIMES Operacion_binaria .)
    INST_END        reduce using rule 60 (Rango -> Rango TIMES Operacion_binaria .)
    INST_ELSE       reduce using rule 60 (Rango -> Rango TIMES Operacion_binaria .)
    VAR_IDENTIFIER  reduce using rule 60 (Rango -> Rango TIMES Operacion_binaria .)
    LPAREN          reduce using rule 60 (Rango -> Rango TIMES Operacion_binaria .)
    NUMBER          reduce using rule 60 (Rango -> Rango TIMES Operacion_binaria .)
    MINUS           reduce using rule 60 (Rango -> Rango TIMES Operacion_binaria .)
    RPAREN          reduce using rule 60 (Rango -> Rango TIMES Operacion_binaria .)
    -               reduce using rule 60 (Rango -> Rango TIMES Operacion_binaria .)
    INST_DO         reduce using rule 60 (Rango -> Rango TIMES Operacion_binaria .)

  ! PLUS            [ shift and go to state 91 ]
  ! MINUS           [ shift and go to state 92 ]


state 130

    (34) Operacion_booleana -> Operacion_binaria Opr_bool Operacion_binaria .
    (48) Operacion_binaria -> Operacion_binaria . PLUS Term
    (49) Operacion_binaria -> Operacion_binaria . MINUS Term

  ! shift/reduce conflict for MINUS resolved as shift
    AND             reduce using rule 34 (Operacion_booleana -> Operacion_binaria Opr_bool Operacion_binaria .)
    OR              reduce using rule 34 (Operacion_booleana -> Operacion_binaria Opr_bool Operacion_binaria .)
    COMMA           reduce using rule 34 (Operacion_booleana -> Operacion_binaria Opr_bool Operacion_binaria .)
    $end            reduce using rule 34 (Operacion_booleana -> Operacion_binaria Opr_bool Operacion_binaria .)
    SEMICOLON       reduce using rule 34 (Operacion_booleana -> Operacion_binaria Opr_bool Operacion_binaria .)
    INST_END        reduce using rule 34 (Operacion_booleana -> Operacion_binaria Opr_bool Operacion_binaria .)
    INST_ELSE       reduce using rule 34 (Operacion_booleana -> Operacion_binaria Opr_bool Operacion_binaria .)
    VAR_IDENTIFIER  reduce using rule 34 (Operacion_booleana -> Operacion_binaria Opr_bool Operacion_binaria .)
    LPAREN          reduce using rule 34 (Operacion_booleana -> Operacion_binaria Opr_bool Operacion_binaria .)
    NUMBER          reduce using rule 34 (Operacion_booleana -> Operacion_binaria Opr_bool Operacion_binaria .)
    INST_DO         reduce using rule 34 (Operacion_booleana -> Operacion_binaria Opr_bool Operacion_binaria .)
    INST_THEN       reduce using rule 34 (Operacion_booleana -> Operacion_binaria Opr_bool Operacion_binaria .)
    RPAREN          reduce using rule 34 (Operacion_booleana -> Operacion_binaria Opr_bool Operacion_binaria .)
    PLUS            shift and go to state 91
    MINUS           shift and go to state 92

  ! MINUS           [ reduce using rule 34 (Operacion_booleana -> Operacion_binaria Opr_bool Operacion_binaria .) ]


state 131

    (58) Rango -> Operacion_binaria RANGE Operacion_binaria .
    (48) Operacion_binaria -> Operacion_binaria . PLUS Term
    (49) Operacion_binaria -> Operacion_binaria . MINUS Term

    PLUS            reduce using rule 58 (Rango -> Operacion_binaria RANGE Operacion_binaria .)
    TIMES           reduce using rule 58 (Rango -> Operacion_binaria RANGE Operacion_binaria .)
    INTERSECTION    reduce using rule 58 (Rango -> Operacion_binaria RANGE Operacion_binaria .)
    COMMA           reduce using rule 58 (Rango -> Operacion_binaria RANGE Operacion_binaria .)
    $end            reduce using rule 58 (Rango -> Operacion_binaria RANGE Operacion_binaria .)
    SEMICOLON       reduce using rule 58 (Rango -> Operacion_binaria RANGE Operacion_binaria .)
    INST_END        reduce using rule 58 (Rango -> Operacion_binaria RANGE Operacion_binaria .)
    INST_ELSE       reduce using rule 58 (Rango -> Operacion_binaria RANGE Operacion_binaria .)
    VAR_IDENTIFIER  reduce using rule 58 (Rango -> Operacion_binaria RANGE Operacion_binaria .)
    LPAREN          reduce using rule 58 (Rango -> Operacion_binaria RANGE Operacion_binaria .)
    NUMBER          reduce using rule 58 (Rango -> Operacion_binaria RANGE Operacion_binaria .)
    MINUS           reduce using rule 58 (Rango -> Operacion_binaria RANGE Operacion_binaria .)
    RPAREN          reduce using rule 58 (Rango -> Operacion_binaria RANGE Operacion_binaria .)
    -               reduce using rule 58 (Rango -> Operacion_binaria RANGE Operacion_binaria .)
    INST_DO         reduce using rule 58 (Rango -> Operacion_binaria RANGE Operacion_binaria .)

  ! PLUS            [ shift and go to state 91 ]
  ! MINUS           [ shift and go to state 92 ]


state 132

    (48) Operacion_binaria -> Operacion_binaria PLUS Term .
    (51) Term -> Term . TIMES Factor
    (52) Term -> Term . DIVIDE Factor

    RPAREN          reduce using rule 48 (Operacion_binaria -> Operacion_binaria PLUS Term .)
    RANGE           reduce using rule 48 (Operacion_binaria -> Operacion_binaria PLUS Term .)
    PLUS            reduce using rule 48 (Operacion_binaria -> Operacion_binaria PLUS Term .)
    MINUS           reduce using rule 48 (Operacion_binaria -> Operacion_binaria PLUS Term .)
    EQEQ            reduce using rule 48 (Operacion_binaria -> Operacion_binaria PLUS Term .)
    NEQEQ           reduce using rule 48 (Operacion_binaria -> Operacion_binaria PLUS Term .)
    GREAT           reduce using rule 48 (Operacion_binaria -> Operacion_binaria PLUS Term .)
    LESS            reduce using rule 48 (Operacion_binaria -> Operacion_binaria PLUS Term .)
    GREATEQ         reduce using rule 48 (Operacion_binaria -> Operacion_binaria PLUS Term .)
    LESSEQ          reduce using rule 48 (Operacion_binaria -> Operacion_binaria PLUS Term .)
    COMMA           reduce using rule 48 (Operacion_binaria -> Operacion_binaria PLUS Term .)
    $end            reduce using rule 48 (Operacion_binaria -> Operacion_binaria PLUS Term .)
    SEMICOLON       reduce using rule 48 (Operacion_binaria -> Operacion_binaria PLUS Term .)
    INST_END        reduce using rule 48 (Operacion_binaria -> Operacion_binaria PLUS Term .)
    INST_ELSE       reduce using rule 48 (Operacion_binaria -> Operacion_binaria PLUS Term .)
    VAR_IDENTIFIER  reduce using rule 48 (Operacion_binaria -> Operacion_binaria PLUS Term .)
    LPAREN          reduce using rule 48 (Operacion_binaria -> Operacion_binaria PLUS Term .)
    NUMBER          reduce using rule 48 (Operacion_binaria -> Operacion_binaria PLUS Term .)
    INTERSECTION    reduce using rule 48 (Operacion_binaria -> Operacion_binaria PLUS Term .)
    -               reduce using rule 48 (Operacion_binaria -> Operacion_binaria PLUS Term .)
    INST_DO         reduce using rule 48 (Operacion_binaria -> Operacion_binaria PLUS Term .)
    INST_OF         reduce using rule 48 (Operacion_binaria -> Operacion_binaria PLUS Term .)
    AND             reduce using rule 48 (Operacion_binaria -> Operacion_binaria PLUS Term .)
    OR              reduce using rule 48 (Operacion_binaria -> Operacion_binaria PLUS Term .)
    INST_THEN       reduce using rule 48 (Operacion_binaria -> Operacion_binaria PLUS Term .)
    TIMES           shift and go to state 75
    DIVIDE          shift and go to state 74

  ! TIMES           [ reduce using rule 48 (Operacion_binaria -> Operacion_binaria PLUS Term .) ]
  ! DIVIDE          [ reduce using rule 48 (Operacion_binaria -> Operacion_binaria PLUS Term .) ]


state 133

    (49) Operacion_binaria -> Operacion_binaria MINUS Term .
    (51) Term -> Term . TIMES Factor
    (52) Term -> Term . DIVIDE Factor

    RPAREN          reduce using rule 49 (Operacion_binaria -> Operacion_binaria MINUS Term .)
    RANGE           reduce using rule 49 (Operacion_binaria -> Operacion_binaria MINUS Term .)
    PLUS            reduce using rule 49 (Operacion_binaria -> Operacion_binaria MINUS Term .)
    MINUS           reduce using rule 49 (Operacion_binaria -> Operacion_binaria MINUS Term .)
    EQEQ            reduce using rule 49 (Operacion_binaria -> Operacion_binaria MINUS Term .)
    NEQEQ           reduce using rule 49 (Operacion_binaria -> Operacion_binaria MINUS Term .)
    GREAT           reduce using rule 49 (Operacion_binaria -> Operacion_binaria MINUS Term .)
    LESS            reduce using rule 49 (Operacion_binaria -> Operacion_binaria MINUS Term .)
    GREATEQ         reduce using rule 49 (Operacion_binaria -> Operacion_binaria MINUS Term .)
    LESSEQ          reduce using rule 49 (Operacion_binaria -> Operacion_binaria MINUS Term .)
    COMMA           reduce using rule 49 (Operacion_binaria -> Operacion_binaria MINUS Term .)
    $end            reduce using rule 49 (Operacion_binaria -> Operacion_binaria MINUS Term .)
    SEMICOLON       reduce using rule 49 (Operacion_binaria -> Operacion_binaria MINUS Term .)
    INST_END        reduce using rule 49 (Operacion_binaria -> Operacion_binaria MINUS Term .)
    INST_ELSE       reduce using rule 49 (Operacion_binaria -> Operacion_binaria MINUS Term .)
    VAR_IDENTIFIER  reduce using rule 49 (Operacion_binaria -> Operacion_binaria MINUS Term .)
    LPAREN          reduce using rule 49 (Operacion_binaria -> Operacion_binaria MINUS Term .)
    NUMBER          reduce using rule 49 (Operacion_binaria -> Operacion_binaria MINUS Term .)
    INTERSECTION    reduce using rule 49 (Operacion_binaria -> Operacion_binaria MINUS Term .)
    -               reduce using rule 49 (Operacion_binaria -> Operacion_binaria MINUS Term .)
    INST_DO         reduce using rule 49 (Operacion_binaria -> Operacion_binaria MINUS Term .)
    INST_OF         reduce using rule 49 (Operacion_binaria -> Operacion_binaria MINUS Term .)
    AND             reduce using rule 49 (Operacion_binaria -> Operacion_binaria MINUS Term .)
    OR              reduce using rule 49 (Operacion_binaria -> Operacion_binaria MINUS Term .)
    INST_THEN       reduce using rule 49 (Operacion_binaria -> Operacion_binaria MINUS Term .)
    TIMES           shift and go to state 75
    DIVIDE          shift and go to state 74

  ! TIMES           [ reduce using rule 49 (Operacion_binaria -> Operacion_binaria MINUS Term .) ]
  ! DIVIDE          [ reduce using rule 49 (Operacion_binaria -> Operacion_binaria MINUS Term .) ]


state 134

    (19) Inst_Funcion -> TOP LPAREN VAR_IDENTIFIER RPAREN .

    $end            reduce using rule 19 (Inst_Funcion -> TOP LPAREN VAR_IDENTIFIER RPAREN .)
    SEMICOLON       reduce using rule 19 (Inst_Funcion -> TOP LPAREN VAR_IDENTIFIER RPAREN .)
    INST_END        reduce using rule 19 (Inst_Funcion -> TOP LPAREN VAR_IDENTIFIER RPAREN .)
    INST_ELSE       reduce using rule 19 (Inst_Funcion -> TOP LPAREN VAR_IDENTIFIER RPAREN .)
    VAR_IDENTIFIER  reduce using rule 19 (Inst_Funcion -> TOP LPAREN VAR_IDENTIFIER RPAREN .)
    LPAREN          reduce using rule 19 (Inst_Funcion -> TOP LPAREN VAR_IDENTIFIER RPAREN .)
    NUMBER          reduce using rule 19 (Inst_Funcion -> TOP LPAREN VAR_IDENTIFIER RPAREN .)
    MINUS           reduce using rule 19 (Inst_Funcion -> TOP LPAREN VAR_IDENTIFIER RPAREN .)


state 135

    (79) Inst_While -> INST_WHILE Operacion_booleana INST_DO Bloque_Inst .

    $end            reduce using rule 79 (Inst_While -> INST_WHILE Operacion_booleana INST_DO Bloque_Inst .)
    SEMICOLON       reduce using rule 79 (Inst_While -> INST_WHILE Operacion_booleana INST_DO Bloque_Inst .)
    INST_END        reduce using rule 79 (Inst_While -> INST_WHILE Operacion_booleana INST_DO Bloque_Inst .)
    INST_ELSE       reduce using rule 79 (Inst_While -> INST_WHILE Operacion_booleana INST_DO Bloque_Inst .)
    VAR_IDENTIFIER  reduce using rule 79 (Inst_While -> INST_WHILE Operacion_booleana INST_DO Bloque_Inst .)
    LPAREN          reduce using rule 79 (Inst_While -> INST_WHILE Operacion_booleana INST_DO Bloque_Inst .)
    NUMBER          reduce using rule 79 (Inst_While -> INST_WHILE Operacion_booleana INST_DO Bloque_Inst .)
    MINUS           reduce using rule 79 (Inst_While -> INST_WHILE Operacion_booleana INST_DO Bloque_Inst .)


state 136

    (3) Bloque_Inst -> INST_BEGIN Inst_Declare Lista_Inst INST_END .

    VAR_IDENTIFIER  reduce using rule 3 (Bloque_Inst -> INST_BEGIN Inst_Declare Lista_Inst INST_END .)
    LPAREN          reduce using rule 3 (Bloque_Inst -> INST_BEGIN Inst_Declare Lista_Inst INST_END .)
    NUMBER          reduce using rule 3 (Bloque_Inst -> INST_BEGIN Inst_Declare Lista_Inst INST_END .)
    MINUS           reduce using rule 3 (Bloque_Inst -> INST_BEGIN Inst_Declare Lista_Inst INST_END .)
    INST_END        reduce using rule 3 (Bloque_Inst -> INST_BEGIN Inst_Declare Lista_Inst INST_END .)
    $end            reduce using rule 3 (Bloque_Inst -> INST_BEGIN Inst_Declare Lista_Inst INST_END .)
    SEMICOLON       reduce using rule 3 (Bloque_Inst -> INST_BEGIN Inst_Declare Lista_Inst INST_END .)
    INST_ELSE       reduce using rule 3 (Bloque_Inst -> INST_BEGIN Inst_Declare Lista_Inst INST_END .)


state 137

    (8) Lista_Inst -> Inst SEMICOLON Lista_Inst .

    INST_END        reduce using rule 8 (Lista_Inst -> Inst SEMICOLON Lista_Inst .)


state 138

    (20) Inst_Funcion -> BOTTOM LPAREN VAR_IDENTIFIER RPAREN .

    $end            reduce using rule 20 (Inst_Funcion -> BOTTOM LPAREN VAR_IDENTIFIER RPAREN .)
    SEMICOLON       reduce using rule 20 (Inst_Funcion -> BOTTOM LPAREN VAR_IDENTIFIER RPAREN .)
    INST_END        reduce using rule 20 (Inst_Funcion -> BOTTOM LPAREN VAR_IDENTIFIER RPAREN .)
    INST_ELSE       reduce using rule 20 (Inst_Funcion -> BOTTOM LPAREN VAR_IDENTIFIER RPAREN .)
    VAR_IDENTIFIER  reduce using rule 20 (Inst_Funcion -> BOTTOM LPAREN VAR_IDENTIFIER RPAREN .)
    LPAREN          reduce using rule 20 (Inst_Funcion -> BOTTOM LPAREN VAR_IDENTIFIER RPAREN .)
    NUMBER          reduce using rule 20 (Inst_Funcion -> BOTTOM LPAREN VAR_IDENTIFIER RPAREN .)
    MINUS           reduce using rule 20 (Inst_Funcion -> BOTTOM LPAREN VAR_IDENTIFIER RPAREN .)


state 139

    (74) Casos -> VAR_IDENTIFIER . - > Bloque_Inst
    (76) Casos -> VAR_IDENTIFIER . - > Bloque_Inst Casos
    (63) Rango -> VAR_IDENTIFIER .
    (55) Factor -> VAR_IDENTIFIER .

  ! shift/reduce conflict for - resolved as shift
  ! reduce/reduce conflict for TIMES resolved using rule 55 (Factor -> VAR_IDENTIFIER .)
  ! reduce/reduce conflict for PLUS resolved using rule 55 (Factor -> VAR_IDENTIFIER .)
    -               shift and go to state 147
    INTERSECTION    reduce using rule 63 (Rango -> VAR_IDENTIFIER .)
    TIMES           reduce using rule 55 (Factor -> VAR_IDENTIFIER .)
    DIVIDE          reduce using rule 55 (Factor -> VAR_IDENTIFIER .)
    RANGE           reduce using rule 55 (Factor -> VAR_IDENTIFIER .)
    PLUS            reduce using rule 55 (Factor -> VAR_IDENTIFIER .)
    MINUS           reduce using rule 55 (Factor -> VAR_IDENTIFIER .)

  ! -               [ reduce using rule 63 (Rango -> VAR_IDENTIFIER .) ]
  ! PLUS            [ reduce using rule 63 (Rango -> VAR_IDENTIFIER .) ]
  ! TIMES           [ reduce using rule 63 (Rango -> VAR_IDENTIFIER .) ]


state 140

    (75) Casos -> Rango . - > Bloque_Inst
    (77) Casos -> Rango . - > Bloque_Inst Casos
    (59) Rango -> Rango . PLUS Rango
    (60) Rango -> Rango . TIMES Operacion_binaria
    (61) Rango -> Rango . INTERSECTION Rango

    -               shift and go to state 148
    PLUS            shift and go to state 81
    TIMES           shift and go to state 82
    INTERSECTION    shift and go to state 80


state 141

    (73) Inst_Case -> INST_CASE Operacion_binaria INST_OF Casos . INST_END

    INST_END        shift and go to state 149


state 142

    (78) Inst_For -> INST_FOR VAR_IDENTIFIER INST_IN Rango . INST_DO Bloque_Inst
    (59) Rango -> Rango . PLUS Rango
    (60) Rango -> Rango . TIMES Operacion_binaria
    (61) Rango -> Rango . INTERSECTION Rango

    INST_DO         shift and go to state 150
    PLUS            shift and go to state 81
    TIMES           shift and go to state 82
    INTERSECTION    shift and go to state 80


state 143

    (71) Inst_If -> INST_IF Operacion_booleana INST_THEN Bloque_Inst .
    (72) Inst_If -> INST_IF Operacion_booleana INST_THEN Bloque_Inst . INST_ELSE Bloque_Inst

  ! shift/reduce conflict for INST_ELSE resolved as shift
    $end            reduce using rule 71 (Inst_If -> INST_IF Operacion_booleana INST_THEN Bloque_Inst .)
    SEMICOLON       reduce using rule 71 (Inst_If -> INST_IF Operacion_booleana INST_THEN Bloque_Inst .)
    INST_END        reduce using rule 71 (Inst_If -> INST_IF Operacion_booleana INST_THEN Bloque_Inst .)
    VAR_IDENTIFIER  reduce using rule 71 (Inst_If -> INST_IF Operacion_booleana INST_THEN Bloque_Inst .)
    LPAREN          reduce using rule 71 (Inst_If -> INST_IF Operacion_booleana INST_THEN Bloque_Inst .)
    NUMBER          reduce using rule 71 (Inst_If -> INST_IF Operacion_booleana INST_THEN Bloque_Inst .)
    MINUS           reduce using rule 71 (Inst_If -> INST_IF Operacion_booleana INST_THEN Bloque_Inst .)
    INST_ELSE       shift and go to state 151

  ! INST_ELSE       [ reduce using rule 71 (Inst_If -> INST_IF Operacion_booleana INST_THEN Bloque_Inst .) ]


state 144

    (18) Inst_Funcion -> LENGTH LPAREN VAR_IDENTIFIER RPAREN .

    $end            reduce using rule 18 (Inst_Funcion -> LENGTH LPAREN VAR_IDENTIFIER RPAREN .)
    SEMICOLON       reduce using rule 18 (Inst_Funcion -> LENGTH LPAREN VAR_IDENTIFIER RPAREN .)
    INST_END        reduce using rule 18 (Inst_Funcion -> LENGTH LPAREN VAR_IDENTIFIER RPAREN .)
    INST_ELSE       reduce using rule 18 (Inst_Funcion -> LENGTH LPAREN VAR_IDENTIFIER RPAREN .)
    VAR_IDENTIFIER  reduce using rule 18 (Inst_Funcion -> LENGTH LPAREN VAR_IDENTIFIER RPAREN .)
    LPAREN          reduce using rule 18 (Inst_Funcion -> LENGTH LPAREN VAR_IDENTIFIER RPAREN .)
    NUMBER          reduce using rule 18 (Inst_Funcion -> LENGTH LPAREN VAR_IDENTIFIER RPAREN .)
    MINUS           reduce using rule 18 (Inst_Funcion -> LENGTH LPAREN VAR_IDENTIFIER RPAREN .)


state 145

    (17) Inst_Funcion -> RTOI LPAREN VAR_IDENTIFIER RPAREN .

    $end            reduce using rule 17 (Inst_Funcion -> RTOI LPAREN VAR_IDENTIFIER RPAREN .)
    SEMICOLON       reduce using rule 17 (Inst_Funcion -> RTOI LPAREN VAR_IDENTIFIER RPAREN .)
    INST_END        reduce using rule 17 (Inst_Funcion -> RTOI LPAREN VAR_IDENTIFIER RPAREN .)
    INST_ELSE       reduce using rule 17 (Inst_Funcion -> RTOI LPAREN VAR_IDENTIFIER RPAREN .)
    VAR_IDENTIFIER  reduce using rule 17 (Inst_Funcion -> RTOI LPAREN VAR_IDENTIFIER RPAREN .)
    LPAREN          reduce using rule 17 (Inst_Funcion -> RTOI LPAREN VAR_IDENTIFIER RPAREN .)
    NUMBER          reduce using rule 17 (Inst_Funcion -> RTOI LPAREN VAR_IDENTIFIER RPAREN .)
    MINUS           reduce using rule 17 (Inst_Funcion -> RTOI LPAREN VAR_IDENTIFIER RPAREN .)


state 146

    (56) Factor -> LPAREN Operacion_binaria . RPAREN
    (58) Rango -> Operacion_binaria . RANGE Operacion_binaria
    (48) Operacion_binaria -> Operacion_binaria . PLUS Term
    (49) Operacion_binaria -> Operacion_binaria . MINUS Term

    RPAREN          shift and go to state 121
    RANGE           shift and go to state 89
    PLUS            shift and go to state 91
    MINUS           shift and go to state 92


state 147

    (74) Casos -> VAR_IDENTIFIER - . > Bloque_Inst
    (76) Casos -> VAR_IDENTIFIER - . > Bloque_Inst Casos

    >               shift and go to state 152


state 148

    (75) Casos -> Rango - . > Bloque_Inst
    (77) Casos -> Rango - . > Bloque_Inst Casos

    >               shift and go to state 153


state 149

    (73) Inst_Case -> INST_CASE Operacion_binaria INST_OF Casos INST_END .

    SEMICOLON       reduce using rule 73 (Inst_Case -> INST_CASE Operacion_binaria INST_OF Casos INST_END .)
    INST_END        reduce using rule 73 (Inst_Case -> INST_CASE Operacion_binaria INST_OF Casos INST_END .)
    VAR_IDENTIFIER  reduce using rule 73 (Inst_Case -> INST_CASE Operacion_binaria INST_OF Casos INST_END .)
    LPAREN          reduce using rule 73 (Inst_Case -> INST_CASE Operacion_binaria INST_OF Casos INST_END .)
    NUMBER          reduce using rule 73 (Inst_Case -> INST_CASE Operacion_binaria INST_OF Casos INST_END .)
    MINUS           reduce using rule 73 (Inst_Case -> INST_CASE Operacion_binaria INST_OF Casos INST_END .)
    $end            reduce using rule 73 (Inst_Case -> INST_CASE Operacion_binaria INST_OF Casos INST_END .)
    INST_ELSE       reduce using rule 73 (Inst_Case -> INST_CASE Operacion_binaria INST_OF Casos INST_END .)


state 150

    (78) Inst_For -> INST_FOR VAR_IDENTIFIER INST_IN Rango INST_DO . Bloque_Inst
    (2) Bloque_Inst -> . INST_BEGIN Lista_Inst INST_END
    (3) Bloque_Inst -> . INST_BEGIN Inst_Declare Lista_Inst INST_END
    (4) Bloque_Inst -> . INST_BEGIN Inst_Declare INST_END
    (5) Bloque_Inst -> . Inst_Declare Inst
    (6) Bloque_Inst -> . Inst
    (21) Inst_Declare -> . Inst_Declareau
    (22) Inst_Declare -> . Inst_Declareau SEMICOLON Inst_Declare
    (9) Inst -> . Inst_Asignacion
    (10) Inst -> . Inst_Lectura
    (11) Inst -> . Inst_For
    (12) Inst -> . Inst_While
    (13) Inst -> . Inst_If
    (14) Inst -> . Inst_Case
    (15) Inst -> . Inst_Salida
    (16) Inst -> . Inst_Funcion
    (23) Inst_Declareau -> . INST_DECLARE Lista_Declare
    (30) Inst_Asignacion -> . VAR_IDENTIFIER EQUAL Expresion
    (64) Inst_Lectura -> . INST_READ VAR_IDENTIFIER
    (78) Inst_For -> . INST_FOR VAR_IDENTIFIER INST_IN Rango INST_DO Bloque_Inst
    (79) Inst_While -> . INST_WHILE Operacion_booleana INST_DO Bloque_Inst
    (71) Inst_If -> . INST_IF Operacion_booleana INST_THEN Bloque_Inst
    (72) Inst_If -> . INST_IF Operacion_booleana INST_THEN Bloque_Inst INST_ELSE Bloque_Inst
    (73) Inst_Case -> . INST_CASE Operacion_binaria INST_OF Casos INST_END
    (65) Inst_Salida -> . INST_WRITE Lista_Aux
    (66) Inst_Salida -> . INST_WRITELN Lista_Aux
    (17) Inst_Funcion -> . RTOI LPAREN VAR_IDENTIFIER RPAREN
    (18) Inst_Funcion -> . LENGTH LPAREN VAR_IDENTIFIER RPAREN
    (19) Inst_Funcion -> . TOP LPAREN VAR_IDENTIFIER RPAREN
    (20) Inst_Funcion -> . BOTTOM LPAREN VAR_IDENTIFIER RPAREN

    INST_BEGIN      shift and go to state 11
    INST_DECLARE    shift and go to state 3
    VAR_IDENTIFIER  shift and go to state 18
    INST_READ       shift and go to state 10
    INST_FOR        shift and go to state 21
    INST_WHILE      shift and go to state 9
    INST_IF         shift and go to state 22
    INST_CASE       shift and go to state 20
    INST_WRITE      shift and go to state 5
    INST_WRITELN    shift and go to state 23
    RTOI            shift and go to state 25
    LENGTH          shift and go to state 24
    TOP             shift and go to state 6
    BOTTOM          shift and go to state 13

    Inst_Salida                    shift and go to state 8
    Inst_Declare                   shift and go to state 12
    Inst_Funcion                   shift and go to state 4
    Bloque_Inst                    shift and go to state 154
    Inst_If                        shift and go to state 19
    Inst_While                     shift and go to state 16
    Inst_For                       shift and go to state 14
    Inst_Asignacion                shift and go to state 26
    Inst                           shift and go to state 15
    Inst_Case                      shift and go to state 27
    Inst_Lectura                   shift and go to state 17
    Inst_Declareau                 shift and go to state 28

state 151

    (72) Inst_If -> INST_IF Operacion_booleana INST_THEN Bloque_Inst INST_ELSE . Bloque_Inst
    (2) Bloque_Inst -> . INST_BEGIN Lista_Inst INST_END
    (3) Bloque_Inst -> . INST_BEGIN Inst_Declare Lista_Inst INST_END
    (4) Bloque_Inst -> . INST_BEGIN Inst_Declare INST_END
    (5) Bloque_Inst -> . Inst_Declare Inst
    (6) Bloque_Inst -> . Inst
    (21) Inst_Declare -> . Inst_Declareau
    (22) Inst_Declare -> . Inst_Declareau SEMICOLON Inst_Declare
    (9) Inst -> . Inst_Asignacion
    (10) Inst -> . Inst_Lectura
    (11) Inst -> . Inst_For
    (12) Inst -> . Inst_While
    (13) Inst -> . Inst_If
    (14) Inst -> . Inst_Case
    (15) Inst -> . Inst_Salida
    (16) Inst -> . Inst_Funcion
    (23) Inst_Declareau -> . INST_DECLARE Lista_Declare
    (30) Inst_Asignacion -> . VAR_IDENTIFIER EQUAL Expresion
    (64) Inst_Lectura -> . INST_READ VAR_IDENTIFIER
    (78) Inst_For -> . INST_FOR VAR_IDENTIFIER INST_IN Rango INST_DO Bloque_Inst
    (79) Inst_While -> . INST_WHILE Operacion_booleana INST_DO Bloque_Inst
    (71) Inst_If -> . INST_IF Operacion_booleana INST_THEN Bloque_Inst
    (72) Inst_If -> . INST_IF Operacion_booleana INST_THEN Bloque_Inst INST_ELSE Bloque_Inst
    (73) Inst_Case -> . INST_CASE Operacion_binaria INST_OF Casos INST_END
    (65) Inst_Salida -> . INST_WRITE Lista_Aux
    (66) Inst_Salida -> . INST_WRITELN Lista_Aux
    (17) Inst_Funcion -> . RTOI LPAREN VAR_IDENTIFIER RPAREN
    (18) Inst_Funcion -> . LENGTH LPAREN VAR_IDENTIFIER RPAREN
    (19) Inst_Funcion -> . TOP LPAREN VAR_IDENTIFIER RPAREN
    (20) Inst_Funcion -> . BOTTOM LPAREN VAR_IDENTIFIER RPAREN

    INST_BEGIN      shift and go to state 11
    INST_DECLARE    shift and go to state 3
    VAR_IDENTIFIER  shift and go to state 18
    INST_READ       shift and go to state 10
    INST_FOR        shift and go to state 21
    INST_WHILE      shift and go to state 9
    INST_IF         shift and go to state 22
    INST_CASE       shift and go to state 20
    INST_WRITE      shift and go to state 5
    INST_WRITELN    shift and go to state 23
    RTOI            shift and go to state 25
    LENGTH          shift and go to state 24
    TOP             shift and go to state 6
    BOTTOM          shift and go to state 13

    Inst_Salida                    shift and go to state 8
    Inst_Declare                   shift and go to state 12
    Inst_Funcion                   shift and go to state 4
    Bloque_Inst                    shift and go to state 155
    Inst_If                        shift and go to state 19
    Inst_For                       shift and go to state 14
    Inst_While                     shift and go to state 16
    Inst                           shift and go to state 15
    Inst_Asignacion                shift and go to state 26
    Inst_Case                      shift and go to state 27
    Inst_Lectura                   shift and go to state 17
    Inst_Declareau                 shift and go to state 28

state 152

    (74) Casos -> VAR_IDENTIFIER - > . Bloque_Inst
    (76) Casos -> VAR_IDENTIFIER - > . Bloque_Inst Casos
    (2) Bloque_Inst -> . INST_BEGIN Lista_Inst INST_END
    (3) Bloque_Inst -> . INST_BEGIN Inst_Declare Lista_Inst INST_END
    (4) Bloque_Inst -> . INST_BEGIN Inst_Declare INST_END
    (5) Bloque_Inst -> . Inst_Declare Inst
    (6) Bloque_Inst -> . Inst
    (21) Inst_Declare -> . Inst_Declareau
    (22) Inst_Declare -> . Inst_Declareau SEMICOLON Inst_Declare
    (9) Inst -> . Inst_Asignacion
    (10) Inst -> . Inst_Lectura
    (11) Inst -> . Inst_For
    (12) Inst -> . Inst_While
    (13) Inst -> . Inst_If
    (14) Inst -> . Inst_Case
    (15) Inst -> . Inst_Salida
    (16) Inst -> . Inst_Funcion
    (23) Inst_Declareau -> . INST_DECLARE Lista_Declare
    (30) Inst_Asignacion -> . VAR_IDENTIFIER EQUAL Expresion
    (64) Inst_Lectura -> . INST_READ VAR_IDENTIFIER
    (78) Inst_For -> . INST_FOR VAR_IDENTIFIER INST_IN Rango INST_DO Bloque_Inst
    (79) Inst_While -> . INST_WHILE Operacion_booleana INST_DO Bloque_Inst
    (71) Inst_If -> . INST_IF Operacion_booleana INST_THEN Bloque_Inst
    (72) Inst_If -> . INST_IF Operacion_booleana INST_THEN Bloque_Inst INST_ELSE Bloque_Inst
    (73) Inst_Case -> . INST_CASE Operacion_binaria INST_OF Casos INST_END
    (65) Inst_Salida -> . INST_WRITE Lista_Aux
    (66) Inst_Salida -> . INST_WRITELN Lista_Aux
    (17) Inst_Funcion -> . RTOI LPAREN VAR_IDENTIFIER RPAREN
    (18) Inst_Funcion -> . LENGTH LPAREN VAR_IDENTIFIER RPAREN
    (19) Inst_Funcion -> . TOP LPAREN VAR_IDENTIFIER RPAREN
    (20) Inst_Funcion -> . BOTTOM LPAREN VAR_IDENTIFIER RPAREN

    INST_BEGIN      shift and go to state 11
    INST_DECLARE    shift and go to state 3
    VAR_IDENTIFIER  shift and go to state 18
    INST_READ       shift and go to state 10
    INST_FOR        shift and go to state 21
    INST_WHILE      shift and go to state 9
    INST_IF         shift and go to state 22
    INST_CASE       shift and go to state 20
    INST_WRITE      shift and go to state 5
    INST_WRITELN    shift and go to state 23
    RTOI            shift and go to state 25
    LENGTH          shift and go to state 24
    TOP             shift and go to state 6
    BOTTOM          shift and go to state 13

    Inst_Salida                    shift and go to state 8
    Inst_Declare                   shift and go to state 12
    Inst_Funcion                   shift and go to state 4
    Bloque_Inst                    shift and go to state 156
    Inst_If                        shift and go to state 19
    Inst_For                       shift and go to state 14
    Inst_While                     shift and go to state 16
    Inst                           shift and go to state 15
    Inst_Asignacion                shift and go to state 26
    Inst_Case                      shift and go to state 27
    Inst_Lectura                   shift and go to state 17
    Inst_Declareau                 shift and go to state 28

state 153

    (75) Casos -> Rango - > . Bloque_Inst
    (77) Casos -> Rango - > . Bloque_Inst Casos
    (2) Bloque_Inst -> . INST_BEGIN Lista_Inst INST_END
    (3) Bloque_Inst -> . INST_BEGIN Inst_Declare Lista_Inst INST_END
    (4) Bloque_Inst -> . INST_BEGIN Inst_Declare INST_END
    (5) Bloque_Inst -> . Inst_Declare Inst
    (6) Bloque_Inst -> . Inst
    (21) Inst_Declare -> . Inst_Declareau
    (22) Inst_Declare -> . Inst_Declareau SEMICOLON Inst_Declare
    (9) Inst -> . Inst_Asignacion
    (10) Inst -> . Inst_Lectura
    (11) Inst -> . Inst_For
    (12) Inst -> . Inst_While
    (13) Inst -> . Inst_If
    (14) Inst -> . Inst_Case
    (15) Inst -> . Inst_Salida
    (16) Inst -> . Inst_Funcion
    (23) Inst_Declareau -> . INST_DECLARE Lista_Declare
    (30) Inst_Asignacion -> . VAR_IDENTIFIER EQUAL Expresion
    (64) Inst_Lectura -> . INST_READ VAR_IDENTIFIER
    (78) Inst_For -> . INST_FOR VAR_IDENTIFIER INST_IN Rango INST_DO Bloque_Inst
    (79) Inst_While -> . INST_WHILE Operacion_booleana INST_DO Bloque_Inst
    (71) Inst_If -> . INST_IF Operacion_booleana INST_THEN Bloque_Inst
    (72) Inst_If -> . INST_IF Operacion_booleana INST_THEN Bloque_Inst INST_ELSE Bloque_Inst
    (73) Inst_Case -> . INST_CASE Operacion_binaria INST_OF Casos INST_END
    (65) Inst_Salida -> . INST_WRITE Lista_Aux
    (66) Inst_Salida -> . INST_WRITELN Lista_Aux
    (17) Inst_Funcion -> . RTOI LPAREN VAR_IDENTIFIER RPAREN
    (18) Inst_Funcion -> . LENGTH LPAREN VAR_IDENTIFIER RPAREN
    (19) Inst_Funcion -> . TOP LPAREN VAR_IDENTIFIER RPAREN
    (20) Inst_Funcion -> . BOTTOM LPAREN VAR_IDENTIFIER RPAREN

    INST_BEGIN      shift and go to state 11
    INST_DECLARE    shift and go to state 3
    VAR_IDENTIFIER  shift and go to state 18
    INST_READ       shift and go to state 10
    INST_FOR        shift and go to state 21
    INST_WHILE      shift and go to state 9
    INST_IF         shift and go to state 22
    INST_CASE       shift and go to state 20
    INST_WRITE      shift and go to state 5
    INST_WRITELN    shift and go to state 23
    RTOI            shift and go to state 25
    LENGTH          shift and go to state 24
    TOP             shift and go to state 6
    BOTTOM          shift and go to state 13

    Inst_Salida                    shift and go to state 8
    Inst_Declare                   shift and go to state 12
    Inst_Funcion                   shift and go to state 4
    Bloque_Inst                    shift and go to state 157
    Inst_If                        shift and go to state 19
    Inst_While                     shift and go to state 16
    Inst_For                       shift and go to state 14
    Inst_Asignacion                shift and go to state 26
    Inst                           shift and go to state 15
    Inst_Case                      shift and go to state 27
    Inst_Lectura                   shift and go to state 17
    Inst_Declareau                 shift and go to state 28

state 154

    (78) Inst_For -> INST_FOR VAR_IDENTIFIER INST_IN Rango INST_DO Bloque_Inst .

    $end            reduce using rule 78 (Inst_For -> INST_FOR VAR_IDENTIFIER INST_IN Rango INST_DO Bloque_Inst .)
    SEMICOLON       reduce using rule 78 (Inst_For -> INST_FOR VAR_IDENTIFIER INST_IN Rango INST_DO Bloque_Inst .)
    INST_END        reduce using rule 78 (Inst_For -> INST_FOR VAR_IDENTIFIER INST_IN Rango INST_DO Bloque_Inst .)
    INST_ELSE       reduce using rule 78 (Inst_For -> INST_FOR VAR_IDENTIFIER INST_IN Rango INST_DO Bloque_Inst .)
    VAR_IDENTIFIER  reduce using rule 78 (Inst_For -> INST_FOR VAR_IDENTIFIER INST_IN Rango INST_DO Bloque_Inst .)
    LPAREN          reduce using rule 78 (Inst_For -> INST_FOR VAR_IDENTIFIER INST_IN Rango INST_DO Bloque_Inst .)
    NUMBER          reduce using rule 78 (Inst_For -> INST_FOR VAR_IDENTIFIER INST_IN Rango INST_DO Bloque_Inst .)
    MINUS           reduce using rule 78 (Inst_For -> INST_FOR VAR_IDENTIFIER INST_IN Rango INST_DO Bloque_Inst .)


state 155

    (72) Inst_If -> INST_IF Operacion_booleana INST_THEN Bloque_Inst INST_ELSE Bloque_Inst .

    $end            reduce using rule 72 (Inst_If -> INST_IF Operacion_booleana INST_THEN Bloque_Inst INST_ELSE Bloque_Inst .)
    SEMICOLON       reduce using rule 72 (Inst_If -> INST_IF Operacion_booleana INST_THEN Bloque_Inst INST_ELSE Bloque_Inst .)
    INST_END        reduce using rule 72 (Inst_If -> INST_IF Operacion_booleana INST_THEN Bloque_Inst INST_ELSE Bloque_Inst .)
    INST_ELSE       reduce using rule 72 (Inst_If -> INST_IF Operacion_booleana INST_THEN Bloque_Inst INST_ELSE Bloque_Inst .)
    VAR_IDENTIFIER  reduce using rule 72 (Inst_If -> INST_IF Operacion_booleana INST_THEN Bloque_Inst INST_ELSE Bloque_Inst .)
    LPAREN          reduce using rule 72 (Inst_If -> INST_IF Operacion_booleana INST_THEN Bloque_Inst INST_ELSE Bloque_Inst .)
    NUMBER          reduce using rule 72 (Inst_If -> INST_IF Operacion_booleana INST_THEN Bloque_Inst INST_ELSE Bloque_Inst .)
    MINUS           reduce using rule 72 (Inst_If -> INST_IF Operacion_booleana INST_THEN Bloque_Inst INST_ELSE Bloque_Inst .)


state 156

    (74) Casos -> VAR_IDENTIFIER - > Bloque_Inst .
    (76) Casos -> VAR_IDENTIFIER - > Bloque_Inst . Casos
    (74) Casos -> . VAR_IDENTIFIER - > Bloque_Inst
    (75) Casos -> . Rango - > Bloque_Inst
    (76) Casos -> . VAR_IDENTIFIER - > Bloque_Inst Casos
    (77) Casos -> . Rango - > Bloque_Inst Casos
    (58) Rango -> . Operacion_binaria RANGE Operacion_binaria
    (59) Rango -> . Rango PLUS Rango
    (60) Rango -> . Rango TIMES Operacion_binaria
    (61) Rango -> . Rango INTERSECTION Rango
    (62) Rango -> . LPAREN Rango RPAREN
    (63) Rango -> . VAR_IDENTIFIER
    (48) Operacion_binaria -> . Operacion_binaria PLUS Term
    (49) Operacion_binaria -> . Operacion_binaria MINUS Term
    (50) Operacion_binaria -> . Term
    (51) Term -> . Term TIMES Factor
    (52) Term -> . Term DIVIDE Factor
    (53) Term -> . Factor
    (54) Factor -> . NUMBER
    (55) Factor -> . VAR_IDENTIFIER
    (56) Factor -> . LPAREN Operacion_binaria RPAREN
    (57) Factor -> . MINUS Operacion_binaria

    INST_END        reduce using rule 74 (Casos -> VAR_IDENTIFIER - > Bloque_Inst .)
    VAR_IDENTIFIER  shift and go to state 139
    LPAREN          shift and go to state 126
    NUMBER          shift and go to state 33
    MINUS           shift and go to state 36

    Operacion_binaria              shift and go to state 124
    Term                           shift and go to state 39
    Factor                         shift and go to state 32
    Rango                          shift and go to state 140
    Casos                          shift and go to state 158

state 157

    (75) Casos -> Rango - > Bloque_Inst .
    (77) Casos -> Rango - > Bloque_Inst . Casos
    (74) Casos -> . VAR_IDENTIFIER - > Bloque_Inst
    (75) Casos -> . Rango - > Bloque_Inst
    (76) Casos -> . VAR_IDENTIFIER - > Bloque_Inst Casos
    (77) Casos -> . Rango - > Bloque_Inst Casos
    (58) Rango -> . Operacion_binaria RANGE Operacion_binaria
    (59) Rango -> . Rango PLUS Rango
    (60) Rango -> . Rango TIMES Operacion_binaria
    (61) Rango -> . Rango INTERSECTION Rango
    (62) Rango -> . LPAREN Rango RPAREN
    (63) Rango -> . VAR_IDENTIFIER
    (48) Operacion_binaria -> . Operacion_binaria PLUS Term
    (49) Operacion_binaria -> . Operacion_binaria MINUS Term
    (50) Operacion_binaria -> . Term
    (51) Term -> . Term TIMES Factor
    (52) Term -> . Term DIVIDE Factor
    (53) Term -> . Factor
    (54) Factor -> . NUMBER
    (55) Factor -> . VAR_IDENTIFIER
    (56) Factor -> . LPAREN Operacion_binaria RPAREN
    (57) Factor -> . MINUS Operacion_binaria

    INST_END        reduce using rule 75 (Casos -> Rango - > Bloque_Inst .)
    VAR_IDENTIFIER  shift and go to state 139
    LPAREN          shift and go to state 126
    NUMBER          shift and go to state 33
    MINUS           shift and go to state 36

    Operacion_binaria              shift and go to state 124
    Term                           shift and go to state 39
    Factor                         shift and go to state 32
    Rango                          shift and go to state 140
    Casos                          shift and go to state 159

state 158

    (76) Casos -> VAR_IDENTIFIER - > Bloque_Inst Casos .

    INST_END        reduce using rule 76 (Casos -> VAR_IDENTIFIER - > Bloque_Inst Casos .)


state 159

    (77) Casos -> Rango - > Bloque_Inst Casos .

    INST_END        reduce using rule 77 (Casos -> Rango - > Bloque_Inst Casos .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for TIMES in state 39 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 39 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 44 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 130 resolved as shift
WARNING: shift/reduce conflict for - in state 139 resolved as shift
WARNING: shift/reduce conflict for INST_ELSE in state 143 resolved as shift
WARNING: reduce/reduce conflict in state 41 resolved using rule (Operacion_booleana -> VAR_IDENTIFIER)
WARNING: rejected rule (Rango -> VAR_IDENTIFIER) in state 41
WARNING: reduce/reduce conflict in state 41 resolved using rule (Factor -> VAR_IDENTIFIER)
WARNING: rejected rule (Rango -> VAR_IDENTIFIER) in state 41
WARNING: reduce/reduce conflict in state 41 resolved using rule (Operacion_booleana -> VAR_IDENTIFIER)
WARNING: rejected rule (Factor -> VAR_IDENTIFIER) in state 41
WARNING: reduce/reduce conflict in state 49 resolved using rule (Operacion_booleana -> VAR_IDENTIFIER)
WARNING: rejected rule (Factor -> VAR_IDENTIFIER) in state 49
WARNING: reduce/reduce conflict in state 125 resolved using rule (Factor -> VAR_IDENTIFIER)
WARNING: rejected rule (Rango -> VAR_IDENTIFIER) in state 125
WARNING: reduce/reduce conflict in state 139 resolved using rule (Factor -> VAR_IDENTIFIER)
WARNING: rejected rule (Rango -> VAR_IDENTIFIER) in state 139
