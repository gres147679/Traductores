Created by PLY version 3.4 (http://www.dabeaz.com/ply)

Unused terminals:

    COMMENT
    RESERVED

Grammar

Rule 0     S' -> program
Rule 1     program -> INST_PROGRAM Bloque_Inst
Rule 2     program -> INST_PROGRAM Inst
Rule 3     Bloque_Inst -> INST_BEGIN Lista_Inst INST_END
Rule 4     Bloque_Inst -> INST_BEGIN Inst_Declare Lista_Inst INST_END
Rule 5     Bloque_Inst -> INST_BEGIN Inst_Declare INST_END
Rule 6     Lista_Inst -> Inst
Rule 7     Lista_Inst -> Inst SEMICOLON Lista_Inst
Rule 8     Inst -> Inst_Asignacion
Rule 9     Inst -> Inst_Lectura
Rule 10    Inst -> Inst_For
Rule 11    Inst -> Inst_While
Rule 12    Inst -> Inst_If
Rule 13    Inst -> Inst_Case
Rule 14    Inst -> Inst_Salida
Rule 15    Inst -> Inst_Funcion
Rule 16    Inst -> Bloque_Inst
Rule 17    Inst_Funcion -> RTOI LPAREN Rango RPAREN
Rule 18    Inst_Funcion -> LENGTH LPAREN Rango RPAREN
Rule 19    Inst_Funcion -> TOP LPAREN Rango RPAREN
Rule 20    Inst_Funcion -> BOTTOM LPAREN Rango RPAREN
Rule 21    Inst_Funcion -> RTOI LPAREN VAR_IDENTIFIER RPAREN
Rule 22    Inst_Funcion -> LENGTH LPAREN VAR_IDENTIFIER RPAREN
Rule 23    Inst_Funcion -> TOP LPAREN VAR_IDENTIFIER RPAREN
Rule 24    Inst_Funcion -> BOTTOM LPAREN VAR_IDENTIFIER RPAREN
Rule 25    Inst_Declare -> INST_DECLARE Lista_DeclareTipos
Rule 26    Lista_DeclareTipos -> Lista_Declare
Rule 27    Lista_DeclareTipos -> Lista_Declare SEMICOLON Lista_DeclareTipos
Rule 28    Lista_Declare -> Lista_Variables INST_AS Tipo
Rule 29    Lista_Variables -> VAR_IDENTIFIER
Rule 30    Lista_Variables -> VAR_IDENTIFIER COMMA Lista_Variables
Rule 31    Tipo -> TYPEDEF_INT
Rule 32    Tipo -> TYPEDEF_BOOL
Rule 33    Tipo -> TYPEDEF_RANGE
Rule 34    Inst_Asignacion -> VAR_IDENTIFIER EQUAL Expresion
Rule 35    Expresion -> Operacion_binaria
Rule 36    Expresion -> Operacion_booleana
Rule 37    Expresion -> Rango
Rule 38    Operacion_booleana -> Operacion_binaria Opr_bool Operacion_binaria
Rule 39    Operacion_booleana -> Operacion_booleana AND Operacion_booleana
Rule 40    Operacion_booleana -> Operacion_booleana OR Operacion_booleana
Rule 41    Operacion_booleana -> Operacion_binaria IN Rango
Rule 42    Operacion_booleana -> LPAREN Operacion_booleana RPAREN
Rule 43    Operacion_booleana -> Operacion_booleana EQEQ Operacion_booleana
Rule 44    Operacion_booleana -> Operacion_booleana NEQEQ Operacion_booleana
Rule 45    Operacion_booleana -> TRUE
Rule 46    Operacion_booleana -> FALSE
Rule 47    Operacion_booleana -> VAR_IDENTIFIER
Rule 48    Operacion_booleana -> NOT Operacion_booleana
Rule 49    Opr_bool -> GREAT
Rule 50    Opr_bool -> LESS
Rule 51    Opr_bool -> GREATEQ
Rule 52    Opr_bool -> LESSEQ
Rule 53    Operacion_binaria -> Operacion_binaria PLUS Term
Rule 54    Operacion_binaria -> Operacion_binaria MINUS Term
Rule 55    Operacion_binaria -> Term
Rule 56    Term -> Term TIMES Factor
Rule 57    Term -> Term DIVIDE Factor
Rule 58    Term -> Term MOD Factor
Rule 59    Term -> Factor
Rule 60    Factor -> NUMBER
Rule 61    Factor -> VAR_IDENTIFIER
Rule 62    Factor -> LPAREN Operacion_binaria RPAREN
Rule 63    Factor -> MINUS Factor
Rule 64    Rango -> Operacion_binaria RANGE Operacion_binaria
Rule 65    Rango -> Rango PLUS Rango
Rule 66    Rango -> Rango TIMES Operacion_binaria
Rule 67    Rango -> Rango INTERSECTION Rango
Rule 68    Rango -> LPAREN Rango RPAREN
Rule 69    Rango -> VAR_IDENTIFIER
Rule 70    Inst_Lectura -> INST_READ VAR_IDENTIFIER
Rule 71    Inst_Salida -> INST_WRITE Lista_Aux
Rule 72    Inst_Salida -> INST_WRITELN Lista_Aux
Rule 73    Lista_Aux -> Expresion
Rule 74    Lista_Aux -> STRING
Rule 75    Lista_Aux -> Expresion COMMA Lista_Aux
Rule 76    Lista_Aux -> STRING COMMA Lista_Aux
Rule 77    Bloque_Control -> Inst
Rule 78    Bloque_Control -> Bloque_Inst
Rule 79    Inst_If -> INST_IF Operacion_booleana INST_THEN Bloque_Control
Rule 80    Inst_If -> INST_IF Operacion_booleana INST_THEN Bloque_Control INST_ELSE Bloque_Control
Rule 81    Inst_Case -> INST_CASE Operacion_booleana INST_OF Casos INST_END
Rule 82    Casos -> VAR_IDENTIFIER CASE_ASSIGN Bloque_Control
Rule 83    Casos -> Rango CASE_ASSIGN Bloque_Control
Rule 84    Casos -> VAR_IDENTIFIER CASE_ASSIGN Bloque_Control SEMICOLON Casos
Rule 85    Casos -> Rango CASE_ASSIGN Bloque_Control SEMICOLON Casos
Rule 86    Inst_For -> INST_FOR VAR_IDENTIFIER INST_IN Rango INST_DO Bloque_Control
Rule 87    Inst_While -> INST_WHILE Operacion_booleana INST_DO Bloque_Inst
Rule 88    Inst_While -> INST_WHILE Operacion_booleana INST_DO Inst

Terminals, with rules where they appear

AND                  : 39
BOTTOM               : 20 24
CASE_ASSIGN          : 82 83 84 85
COMMA                : 30 75 76
COMMENT              : 
DIVIDE               : 57
EQEQ                 : 43
EQUAL                : 34
FALSE                : 46
GREAT                : 49
GREATEQ              : 51
IN                   : 41
INST_AS              : 28
INST_BEGIN           : 3 4 5
INST_CASE            : 81
INST_DECLARE         : 25
INST_DO              : 86 87 88
INST_ELSE            : 80
INST_END             : 3 4 5 81
INST_FOR             : 86
INST_IF              : 79 80
INST_IN              : 86
INST_OF              : 81
INST_PROGRAM         : 1 2
INST_READ            : 70
INST_THEN            : 79 80
INST_WHILE           : 87 88
INST_WRITE           : 71
INST_WRITELN         : 72
INTERSECTION         : 67
LENGTH               : 18 22
LESS                 : 50
LESSEQ               : 52
LPAREN               : 17 18 19 20 21 22 23 24 42 62 68
MINUS                : 54 63
MOD                  : 58
NEQEQ                : 44
NOT                  : 48
NUMBER               : 60
OR                   : 40
PLUS                 : 53 65
RANGE                : 64
RESERVED             : 
RPAREN               : 17 18 19 20 21 22 23 24 42 62 68
RTOI                 : 17 21
SEMICOLON            : 7 27 84 85
STRING               : 74 76
TIMES                : 56 66
TOP                  : 19 23
TRUE                 : 45
TYPEDEF_BOOL         : 32
TYPEDEF_INT          : 31
TYPEDEF_RANGE        : 33
VAR_IDENTIFIER       : 21 22 23 24 29 30 34 47 61 69 70 82 84 86
error                : 

Nonterminals, with rules where they appear

Bloque_Control       : 79 80 80 82 83 84 85 86
Bloque_Inst          : 1 16 78 87
Casos                : 81 84 85
Expresion            : 34 73 75
Factor               : 56 57 58 59 63
Inst                 : 2 6 7 77 88
Inst_Asignacion      : 8
Inst_Case            : 13
Inst_Declare         : 4 5
Inst_For             : 10
Inst_Funcion         : 15
Inst_If              : 12
Inst_Lectura         : 9
Inst_Salida          : 14
Inst_While           : 11
Lista_Aux            : 71 72 75 76
Lista_Declare        : 26 27
Lista_DeclareTipos   : 25 27
Lista_Inst           : 3 4 7
Lista_Variables      : 28 30
Operacion_binaria    : 35 38 38 41 53 54 62 64 64 66
Operacion_booleana   : 36 39 39 40 40 42 43 43 44 44 48 79 80 81 87 88
Opr_bool             : 38
Rango                : 17 18 19 20 37 41 65 65 66 67 67 68 83 85 86
Term                 : 53 54 55 56 57 58
Tipo                 : 28
program              : 0

Parsing method: LALR

state 0

    (0) S' -> . program
    (1) program -> . INST_PROGRAM Bloque_Inst
    (2) program -> . INST_PROGRAM Inst

    INST_PROGRAM    shift and go to state 2

    program                        shift and go to state 1

state 1

    (0) S' -> program .



state 2

    (1) program -> INST_PROGRAM . Bloque_Inst
    (2) program -> INST_PROGRAM . Inst
    (3) Bloque_Inst -> . INST_BEGIN Lista_Inst INST_END
    (4) Bloque_Inst -> . INST_BEGIN Inst_Declare Lista_Inst INST_END
    (5) Bloque_Inst -> . INST_BEGIN Inst_Declare INST_END
    (8) Inst -> . Inst_Asignacion
    (9) Inst -> . Inst_Lectura
    (10) Inst -> . Inst_For
    (11) Inst -> . Inst_While
    (12) Inst -> . Inst_If
    (13) Inst -> . Inst_Case
    (14) Inst -> . Inst_Salida
    (15) Inst -> . Inst_Funcion
    (16) Inst -> . Bloque_Inst
    (34) Inst_Asignacion -> . VAR_IDENTIFIER EQUAL Expresion
    (70) Inst_Lectura -> . INST_READ VAR_IDENTIFIER
    (86) Inst_For -> . INST_FOR VAR_IDENTIFIER INST_IN Rango INST_DO Bloque_Control
    (87) Inst_While -> . INST_WHILE Operacion_booleana INST_DO Bloque_Inst
    (88) Inst_While -> . INST_WHILE Operacion_booleana INST_DO Inst
    (79) Inst_If -> . INST_IF Operacion_booleana INST_THEN Bloque_Control
    (80) Inst_If -> . INST_IF Operacion_booleana INST_THEN Bloque_Control INST_ELSE Bloque_Control
    (81) Inst_Case -> . INST_CASE Operacion_booleana INST_OF Casos INST_END
    (71) Inst_Salida -> . INST_WRITE Lista_Aux
    (72) Inst_Salida -> . INST_WRITELN Lista_Aux
    (17) Inst_Funcion -> . RTOI LPAREN Rango RPAREN
    (18) Inst_Funcion -> . LENGTH LPAREN Rango RPAREN
    (19) Inst_Funcion -> . TOP LPAREN Rango RPAREN
    (20) Inst_Funcion -> . BOTTOM LPAREN Rango RPAREN
    (21) Inst_Funcion -> . RTOI LPAREN VAR_IDENTIFIER RPAREN
    (22) Inst_Funcion -> . LENGTH LPAREN VAR_IDENTIFIER RPAREN
    (23) Inst_Funcion -> . TOP LPAREN VAR_IDENTIFIER RPAREN
    (24) Inst_Funcion -> . BOTTOM LPAREN VAR_IDENTIFIER RPAREN

    INST_BEGIN      shift and go to state 10
    VAR_IDENTIFIER  shift and go to state 16
    INST_READ       shift and go to state 9
    INST_FOR        shift and go to state 19
    INST_WHILE      shift and go to state 8
    INST_IF         shift and go to state 20
    INST_CASE       shift and go to state 18
    INST_WRITE      shift and go to state 4
    INST_WRITELN    shift and go to state 21
    RTOI            shift and go to state 23
    LENGTH          shift and go to state 22
    TOP             shift and go to state 5
    BOTTOM          shift and go to state 11

    Inst_Salida                    shift and go to state 7
    Inst_Funcion                   shift and go to state 3
    Bloque_Inst                    shift and go to state 6
    Inst_If                        shift and go to state 17
    Inst_For                       shift and go to state 12
    Inst_While                     shift and go to state 14
    Inst                           shift and go to state 13
    Inst_Asignacion                shift and go to state 24
    Inst_Case                      shift and go to state 25
    Inst_Lectura                   shift and go to state 15

state 3

    (15) Inst -> Inst_Funcion .

    $end            reduce using rule 15 (Inst -> Inst_Funcion .)
    SEMICOLON       reduce using rule 15 (Inst -> Inst_Funcion .)
    INST_END        reduce using rule 15 (Inst -> Inst_Funcion .)
    INST_ELSE       reduce using rule 15 (Inst -> Inst_Funcion .)


state 4

    (71) Inst_Salida -> INST_WRITE . Lista_Aux
    (73) Lista_Aux -> . Expresion
    (74) Lista_Aux -> . STRING
    (75) Lista_Aux -> . Expresion COMMA Lista_Aux
    (76) Lista_Aux -> . STRING COMMA Lista_Aux
    (35) Expresion -> . Operacion_binaria
    (36) Expresion -> . Operacion_booleana
    (37) Expresion -> . Rango
    (53) Operacion_binaria -> . Operacion_binaria PLUS Term
    (54) Operacion_binaria -> . Operacion_binaria MINUS Term
    (55) Operacion_binaria -> . Term
    (38) Operacion_booleana -> . Operacion_binaria Opr_bool Operacion_binaria
    (39) Operacion_booleana -> . Operacion_booleana AND Operacion_booleana
    (40) Operacion_booleana -> . Operacion_booleana OR Operacion_booleana
    (41) Operacion_booleana -> . Operacion_binaria IN Rango
    (42) Operacion_booleana -> . LPAREN Operacion_booleana RPAREN
    (43) Operacion_booleana -> . Operacion_booleana EQEQ Operacion_booleana
    (44) Operacion_booleana -> . Operacion_booleana NEQEQ Operacion_booleana
    (45) Operacion_booleana -> . TRUE
    (46) Operacion_booleana -> . FALSE
    (47) Operacion_booleana -> . VAR_IDENTIFIER
    (48) Operacion_booleana -> . NOT Operacion_booleana
    (64) Rango -> . Operacion_binaria RANGE Operacion_binaria
    (65) Rango -> . Rango PLUS Rango
    (66) Rango -> . Rango TIMES Operacion_binaria
    (67) Rango -> . Rango INTERSECTION Rango
    (68) Rango -> . LPAREN Rango RPAREN
    (69) Rango -> . VAR_IDENTIFIER
    (56) Term -> . Term TIMES Factor
    (57) Term -> . Term DIVIDE Factor
    (58) Term -> . Term MOD Factor
    (59) Term -> . Factor
    (60) Factor -> . NUMBER
    (61) Factor -> . VAR_IDENTIFIER
    (62) Factor -> . LPAREN Operacion_binaria RPAREN
    (63) Factor -> . MINUS Factor

    STRING          shift and go to state 34
    LPAREN          shift and go to state 36
    TRUE            shift and go to state 29
    FALSE           shift and go to state 39
    VAR_IDENTIFIER  shift and go to state 35
    NOT             shift and go to state 40
    NUMBER          shift and go to state 27
    MINUS           shift and go to state 30

    Expresion                      shift and go to state 32
    Operacion_binaria              shift and go to state 38
    Factor                         shift and go to state 26
    Term                           shift and go to state 33
    Lista_Aux                      shift and go to state 28
    Rango                          shift and go to state 37
    Operacion_booleana             shift and go to state 31

state 5

    (19) Inst_Funcion -> TOP . LPAREN Rango RPAREN
    (23) Inst_Funcion -> TOP . LPAREN VAR_IDENTIFIER RPAREN

    LPAREN          shift and go to state 41


state 6

    (1) program -> INST_PROGRAM Bloque_Inst .
    (16) Inst -> Bloque_Inst .

  ! reduce/reduce conflict for $end resolved using rule 1 (program -> INST_PROGRAM Bloque_Inst .)
    $end            reduce using rule 1 (program -> INST_PROGRAM Bloque_Inst .)

  ! $end            [ reduce using rule 16 (Inst -> Bloque_Inst .) ]


state 7

    (14) Inst -> Inst_Salida .

    $end            reduce using rule 14 (Inst -> Inst_Salida .)
    SEMICOLON       reduce using rule 14 (Inst -> Inst_Salida .)
    INST_END        reduce using rule 14 (Inst -> Inst_Salida .)
    INST_ELSE       reduce using rule 14 (Inst -> Inst_Salida .)


state 8

    (87) Inst_While -> INST_WHILE . Operacion_booleana INST_DO Bloque_Inst
    (88) Inst_While -> INST_WHILE . Operacion_booleana INST_DO Inst
    (38) Operacion_booleana -> . Operacion_binaria Opr_bool Operacion_binaria
    (39) Operacion_booleana -> . Operacion_booleana AND Operacion_booleana
    (40) Operacion_booleana -> . Operacion_booleana OR Operacion_booleana
    (41) Operacion_booleana -> . Operacion_binaria IN Rango
    (42) Operacion_booleana -> . LPAREN Operacion_booleana RPAREN
    (43) Operacion_booleana -> . Operacion_booleana EQEQ Operacion_booleana
    (44) Operacion_booleana -> . Operacion_booleana NEQEQ Operacion_booleana
    (45) Operacion_booleana -> . TRUE
    (46) Operacion_booleana -> . FALSE
    (47) Operacion_booleana -> . VAR_IDENTIFIER
    (48) Operacion_booleana -> . NOT Operacion_booleana
    (53) Operacion_binaria -> . Operacion_binaria PLUS Term
    (54) Operacion_binaria -> . Operacion_binaria MINUS Term
    (55) Operacion_binaria -> . Term
    (56) Term -> . Term TIMES Factor
    (57) Term -> . Term DIVIDE Factor
    (58) Term -> . Term MOD Factor
    (59) Term -> . Factor
    (60) Factor -> . NUMBER
    (61) Factor -> . VAR_IDENTIFIER
    (62) Factor -> . LPAREN Operacion_binaria RPAREN
    (63) Factor -> . MINUS Factor

    LPAREN          shift and go to state 44
    TRUE            shift and go to state 29
    FALSE           shift and go to state 39
    VAR_IDENTIFIER  shift and go to state 43
    NOT             shift and go to state 40
    NUMBER          shift and go to state 27
    MINUS           shift and go to state 30

    Operacion_binaria              shift and go to state 45
    Term                           shift and go to state 33
    Factor                         shift and go to state 26
    Operacion_booleana             shift and go to state 42

state 9

    (70) Inst_Lectura -> INST_READ . VAR_IDENTIFIER

    VAR_IDENTIFIER  shift and go to state 46


state 10

    (3) Bloque_Inst -> INST_BEGIN . Lista_Inst INST_END
    (4) Bloque_Inst -> INST_BEGIN . Inst_Declare Lista_Inst INST_END
    (5) Bloque_Inst -> INST_BEGIN . Inst_Declare INST_END
    (6) Lista_Inst -> . Inst
    (7) Lista_Inst -> . Inst SEMICOLON Lista_Inst
    (25) Inst_Declare -> . INST_DECLARE Lista_DeclareTipos
    (8) Inst -> . Inst_Asignacion
    (9) Inst -> . Inst_Lectura
    (10) Inst -> . Inst_For
    (11) Inst -> . Inst_While
    (12) Inst -> . Inst_If
    (13) Inst -> . Inst_Case
    (14) Inst -> . Inst_Salida
    (15) Inst -> . Inst_Funcion
    (16) Inst -> . Bloque_Inst
    (34) Inst_Asignacion -> . VAR_IDENTIFIER EQUAL Expresion
    (70) Inst_Lectura -> . INST_READ VAR_IDENTIFIER
    (86) Inst_For -> . INST_FOR VAR_IDENTIFIER INST_IN Rango INST_DO Bloque_Control
    (87) Inst_While -> . INST_WHILE Operacion_booleana INST_DO Bloque_Inst
    (88) Inst_While -> . INST_WHILE Operacion_booleana INST_DO Inst
    (79) Inst_If -> . INST_IF Operacion_booleana INST_THEN Bloque_Control
    (80) Inst_If -> . INST_IF Operacion_booleana INST_THEN Bloque_Control INST_ELSE Bloque_Control
    (81) Inst_Case -> . INST_CASE Operacion_booleana INST_OF Casos INST_END
    (71) Inst_Salida -> . INST_WRITE Lista_Aux
    (72) Inst_Salida -> . INST_WRITELN Lista_Aux
    (17) Inst_Funcion -> . RTOI LPAREN Rango RPAREN
    (18) Inst_Funcion -> . LENGTH LPAREN Rango RPAREN
    (19) Inst_Funcion -> . TOP LPAREN Rango RPAREN
    (20) Inst_Funcion -> . BOTTOM LPAREN Rango RPAREN
    (21) Inst_Funcion -> . RTOI LPAREN VAR_IDENTIFIER RPAREN
    (22) Inst_Funcion -> . LENGTH LPAREN VAR_IDENTIFIER RPAREN
    (23) Inst_Funcion -> . TOP LPAREN VAR_IDENTIFIER RPAREN
    (24) Inst_Funcion -> . BOTTOM LPAREN VAR_IDENTIFIER RPAREN
    (3) Bloque_Inst -> . INST_BEGIN Lista_Inst INST_END
    (4) Bloque_Inst -> . INST_BEGIN Inst_Declare Lista_Inst INST_END
    (5) Bloque_Inst -> . INST_BEGIN Inst_Declare INST_END

    INST_DECLARE    shift and go to state 47
    VAR_IDENTIFIER  shift and go to state 16
    INST_READ       shift and go to state 9
    INST_FOR        shift and go to state 19
    INST_WHILE      shift and go to state 8
    INST_IF         shift and go to state 20
    INST_CASE       shift and go to state 18
    INST_WRITE      shift and go to state 4
    INST_WRITELN    shift and go to state 21
    RTOI            shift and go to state 23
    LENGTH          shift and go to state 22
    TOP             shift and go to state 5
    BOTTOM          shift and go to state 11
    INST_BEGIN      shift and go to state 10

    Inst_Salida                    shift and go to state 7
    Inst_Declare                   shift and go to state 49
    Inst_Funcion                   shift and go to state 3
    Bloque_Inst                    shift and go to state 48
    Inst_If                        shift and go to state 17
    Inst_For                       shift and go to state 12
    Inst_While                     shift and go to state 14
    Inst                           shift and go to state 50
    Inst_Asignacion                shift and go to state 24
    Inst_Case                      shift and go to state 25
    Inst_Lectura                   shift and go to state 15
    Lista_Inst                     shift and go to state 51

state 11

    (20) Inst_Funcion -> BOTTOM . LPAREN Rango RPAREN
    (24) Inst_Funcion -> BOTTOM . LPAREN VAR_IDENTIFIER RPAREN

    LPAREN          shift and go to state 52


state 12

    (10) Inst -> Inst_For .

    $end            reduce using rule 10 (Inst -> Inst_For .)
    SEMICOLON       reduce using rule 10 (Inst -> Inst_For .)
    INST_END        reduce using rule 10 (Inst -> Inst_For .)
    INST_ELSE       reduce using rule 10 (Inst -> Inst_For .)


state 13

    (2) program -> INST_PROGRAM Inst .

    $end            reduce using rule 2 (program -> INST_PROGRAM Inst .)


state 14

    (11) Inst -> Inst_While .

    $end            reduce using rule 11 (Inst -> Inst_While .)
    SEMICOLON       reduce using rule 11 (Inst -> Inst_While .)
    INST_END        reduce using rule 11 (Inst -> Inst_While .)
    INST_ELSE       reduce using rule 11 (Inst -> Inst_While .)


state 15

    (9) Inst -> Inst_Lectura .

    $end            reduce using rule 9 (Inst -> Inst_Lectura .)
    SEMICOLON       reduce using rule 9 (Inst -> Inst_Lectura .)
    INST_END        reduce using rule 9 (Inst -> Inst_Lectura .)
    INST_ELSE       reduce using rule 9 (Inst -> Inst_Lectura .)


state 16

    (34) Inst_Asignacion -> VAR_IDENTIFIER . EQUAL Expresion

    EQUAL           shift and go to state 53


state 17

    (12) Inst -> Inst_If .

    $end            reduce using rule 12 (Inst -> Inst_If .)
    SEMICOLON       reduce using rule 12 (Inst -> Inst_If .)
    INST_END        reduce using rule 12 (Inst -> Inst_If .)
    INST_ELSE       reduce using rule 12 (Inst -> Inst_If .)


state 18

    (81) Inst_Case -> INST_CASE . Operacion_booleana INST_OF Casos INST_END
    (38) Operacion_booleana -> . Operacion_binaria Opr_bool Operacion_binaria
    (39) Operacion_booleana -> . Operacion_booleana AND Operacion_booleana
    (40) Operacion_booleana -> . Operacion_booleana OR Operacion_booleana
    (41) Operacion_booleana -> . Operacion_binaria IN Rango
    (42) Operacion_booleana -> . LPAREN Operacion_booleana RPAREN
    (43) Operacion_booleana -> . Operacion_booleana EQEQ Operacion_booleana
    (44) Operacion_booleana -> . Operacion_booleana NEQEQ Operacion_booleana
    (45) Operacion_booleana -> . TRUE
    (46) Operacion_booleana -> . FALSE
    (47) Operacion_booleana -> . VAR_IDENTIFIER
    (48) Operacion_booleana -> . NOT Operacion_booleana
    (53) Operacion_binaria -> . Operacion_binaria PLUS Term
    (54) Operacion_binaria -> . Operacion_binaria MINUS Term
    (55) Operacion_binaria -> . Term
    (56) Term -> . Term TIMES Factor
    (57) Term -> . Term DIVIDE Factor
    (58) Term -> . Term MOD Factor
    (59) Term -> . Factor
    (60) Factor -> . NUMBER
    (61) Factor -> . VAR_IDENTIFIER
    (62) Factor -> . LPAREN Operacion_binaria RPAREN
    (63) Factor -> . MINUS Factor

    LPAREN          shift and go to state 44
    TRUE            shift and go to state 29
    FALSE           shift and go to state 39
    VAR_IDENTIFIER  shift and go to state 43
    NOT             shift and go to state 40
    NUMBER          shift and go to state 27
    MINUS           shift and go to state 30

    Operacion_binaria              shift and go to state 45
    Term                           shift and go to state 33
    Factor                         shift and go to state 26
    Operacion_booleana             shift and go to state 54

state 19

    (86) Inst_For -> INST_FOR . VAR_IDENTIFIER INST_IN Rango INST_DO Bloque_Control

    VAR_IDENTIFIER  shift and go to state 55


state 20

    (79) Inst_If -> INST_IF . Operacion_booleana INST_THEN Bloque_Control
    (80) Inst_If -> INST_IF . Operacion_booleana INST_THEN Bloque_Control INST_ELSE Bloque_Control
    (38) Operacion_booleana -> . Operacion_binaria Opr_bool Operacion_binaria
    (39) Operacion_booleana -> . Operacion_booleana AND Operacion_booleana
    (40) Operacion_booleana -> . Operacion_booleana OR Operacion_booleana
    (41) Operacion_booleana -> . Operacion_binaria IN Rango
    (42) Operacion_booleana -> . LPAREN Operacion_booleana RPAREN
    (43) Operacion_booleana -> . Operacion_booleana EQEQ Operacion_booleana
    (44) Operacion_booleana -> . Operacion_booleana NEQEQ Operacion_booleana
    (45) Operacion_booleana -> . TRUE
    (46) Operacion_booleana -> . FALSE
    (47) Operacion_booleana -> . VAR_IDENTIFIER
    (48) Operacion_booleana -> . NOT Operacion_booleana
    (53) Operacion_binaria -> . Operacion_binaria PLUS Term
    (54) Operacion_binaria -> . Operacion_binaria MINUS Term
    (55) Operacion_binaria -> . Term
    (56) Term -> . Term TIMES Factor
    (57) Term -> . Term DIVIDE Factor
    (58) Term -> . Term MOD Factor
    (59) Term -> . Factor
    (60) Factor -> . NUMBER
    (61) Factor -> . VAR_IDENTIFIER
    (62) Factor -> . LPAREN Operacion_binaria RPAREN
    (63) Factor -> . MINUS Factor

    LPAREN          shift and go to state 44
    TRUE            shift and go to state 29
    FALSE           shift and go to state 39
    VAR_IDENTIFIER  shift and go to state 43
    NOT             shift and go to state 40
    NUMBER          shift and go to state 27
    MINUS           shift and go to state 30

    Operacion_binaria              shift and go to state 45
    Term                           shift and go to state 33
    Factor                         shift and go to state 26
    Operacion_booleana             shift and go to state 56

state 21

    (72) Inst_Salida -> INST_WRITELN . Lista_Aux
    (73) Lista_Aux -> . Expresion
    (74) Lista_Aux -> . STRING
    (75) Lista_Aux -> . Expresion COMMA Lista_Aux
    (76) Lista_Aux -> . STRING COMMA Lista_Aux
    (35) Expresion -> . Operacion_binaria
    (36) Expresion -> . Operacion_booleana
    (37) Expresion -> . Rango
    (53) Operacion_binaria -> . Operacion_binaria PLUS Term
    (54) Operacion_binaria -> . Operacion_binaria MINUS Term
    (55) Operacion_binaria -> . Term
    (38) Operacion_booleana -> . Operacion_binaria Opr_bool Operacion_binaria
    (39) Operacion_booleana -> . Operacion_booleana AND Operacion_booleana
    (40) Operacion_booleana -> . Operacion_booleana OR Operacion_booleana
    (41) Operacion_booleana -> . Operacion_binaria IN Rango
    (42) Operacion_booleana -> . LPAREN Operacion_booleana RPAREN
    (43) Operacion_booleana -> . Operacion_booleana EQEQ Operacion_booleana
    (44) Operacion_booleana -> . Operacion_booleana NEQEQ Operacion_booleana
    (45) Operacion_booleana -> . TRUE
    (46) Operacion_booleana -> . FALSE
    (47) Operacion_booleana -> . VAR_IDENTIFIER
    (48) Operacion_booleana -> . NOT Operacion_booleana
    (64) Rango -> . Operacion_binaria RANGE Operacion_binaria
    (65) Rango -> . Rango PLUS Rango
    (66) Rango -> . Rango TIMES Operacion_binaria
    (67) Rango -> . Rango INTERSECTION Rango
    (68) Rango -> . LPAREN Rango RPAREN
    (69) Rango -> . VAR_IDENTIFIER
    (56) Term -> . Term TIMES Factor
    (57) Term -> . Term DIVIDE Factor
    (58) Term -> . Term MOD Factor
    (59) Term -> . Factor
    (60) Factor -> . NUMBER
    (61) Factor -> . VAR_IDENTIFIER
    (62) Factor -> . LPAREN Operacion_binaria RPAREN
    (63) Factor -> . MINUS Factor

    STRING          shift and go to state 34
    LPAREN          shift and go to state 36
    TRUE            shift and go to state 29
    FALSE           shift and go to state 39
    VAR_IDENTIFIER  shift and go to state 35
    NOT             shift and go to state 40
    NUMBER          shift and go to state 27
    MINUS           shift and go to state 30

    Expresion                      shift and go to state 32
    Operacion_binaria              shift and go to state 38
    Factor                         shift and go to state 26
    Term                           shift and go to state 33
    Lista_Aux                      shift and go to state 57
    Rango                          shift and go to state 37
    Operacion_booleana             shift and go to state 31

state 22

    (18) Inst_Funcion -> LENGTH . LPAREN Rango RPAREN
    (22) Inst_Funcion -> LENGTH . LPAREN VAR_IDENTIFIER RPAREN

    LPAREN          shift and go to state 58


state 23

    (17) Inst_Funcion -> RTOI . LPAREN Rango RPAREN
    (21) Inst_Funcion -> RTOI . LPAREN VAR_IDENTIFIER RPAREN

    LPAREN          shift and go to state 59


state 24

    (8) Inst -> Inst_Asignacion .

    $end            reduce using rule 8 (Inst -> Inst_Asignacion .)
    SEMICOLON       reduce using rule 8 (Inst -> Inst_Asignacion .)
    INST_END        reduce using rule 8 (Inst -> Inst_Asignacion .)
    INST_ELSE       reduce using rule 8 (Inst -> Inst_Asignacion .)


state 25

    (13) Inst -> Inst_Case .

    $end            reduce using rule 13 (Inst -> Inst_Case .)
    SEMICOLON       reduce using rule 13 (Inst -> Inst_Case .)
    INST_END        reduce using rule 13 (Inst -> Inst_Case .)
    INST_ELSE       reduce using rule 13 (Inst -> Inst_Case .)


state 26

    (59) Term -> Factor .

    TIMES           reduce using rule 59 (Term -> Factor .)
    DIVIDE          reduce using rule 59 (Term -> Factor .)
    MOD             reduce using rule 59 (Term -> Factor .)
    RPAREN          reduce using rule 59 (Term -> Factor .)
    IN              reduce using rule 59 (Term -> Factor .)
    PLUS            reduce using rule 59 (Term -> Factor .)
    MINUS           reduce using rule 59 (Term -> Factor .)
    GREAT           reduce using rule 59 (Term -> Factor .)
    LESS            reduce using rule 59 (Term -> Factor .)
    GREATEQ         reduce using rule 59 (Term -> Factor .)
    LESSEQ          reduce using rule 59 (Term -> Factor .)
    RANGE           reduce using rule 59 (Term -> Factor .)
    COMMA           reduce using rule 59 (Term -> Factor .)
    $end            reduce using rule 59 (Term -> Factor .)
    SEMICOLON       reduce using rule 59 (Term -> Factor .)
    INST_END        reduce using rule 59 (Term -> Factor .)
    INST_ELSE       reduce using rule 59 (Term -> Factor .)
    INTERSECTION    reduce using rule 59 (Term -> Factor .)
    AND             reduce using rule 59 (Term -> Factor .)
    OR              reduce using rule 59 (Term -> Factor .)
    EQEQ            reduce using rule 59 (Term -> Factor .)
    NEQEQ           reduce using rule 59 (Term -> Factor .)
    INST_DO         reduce using rule 59 (Term -> Factor .)
    INST_OF         reduce using rule 59 (Term -> Factor .)
    INST_THEN       reduce using rule 59 (Term -> Factor .)
    CASE_ASSIGN     reduce using rule 59 (Term -> Factor .)


state 27

    (60) Factor -> NUMBER .

    TIMES           reduce using rule 60 (Factor -> NUMBER .)
    DIVIDE          reduce using rule 60 (Factor -> NUMBER .)
    MOD             reduce using rule 60 (Factor -> NUMBER .)
    PLUS            reduce using rule 60 (Factor -> NUMBER .)
    MINUS           reduce using rule 60 (Factor -> NUMBER .)
    INTERSECTION    reduce using rule 60 (Factor -> NUMBER .)
    COMMA           reduce using rule 60 (Factor -> NUMBER .)
    $end            reduce using rule 60 (Factor -> NUMBER .)
    SEMICOLON       reduce using rule 60 (Factor -> NUMBER .)
    INST_END        reduce using rule 60 (Factor -> NUMBER .)
    INST_ELSE       reduce using rule 60 (Factor -> NUMBER .)
    RPAREN          reduce using rule 60 (Factor -> NUMBER .)
    AND             reduce using rule 60 (Factor -> NUMBER .)
    OR              reduce using rule 60 (Factor -> NUMBER .)
    EQEQ            reduce using rule 60 (Factor -> NUMBER .)
    NEQEQ           reduce using rule 60 (Factor -> NUMBER .)
    INST_DO         reduce using rule 60 (Factor -> NUMBER .)
    INST_OF         reduce using rule 60 (Factor -> NUMBER .)
    INST_THEN       reduce using rule 60 (Factor -> NUMBER .)
    CASE_ASSIGN     reduce using rule 60 (Factor -> NUMBER .)
    IN              reduce using rule 60 (Factor -> NUMBER .)
    GREAT           reduce using rule 60 (Factor -> NUMBER .)
    LESS            reduce using rule 60 (Factor -> NUMBER .)
    GREATEQ         reduce using rule 60 (Factor -> NUMBER .)
    LESSEQ          reduce using rule 60 (Factor -> NUMBER .)
    RANGE           reduce using rule 60 (Factor -> NUMBER .)


state 28

    (71) Inst_Salida -> INST_WRITE Lista_Aux .

    $end            reduce using rule 71 (Inst_Salida -> INST_WRITE Lista_Aux .)
    SEMICOLON       reduce using rule 71 (Inst_Salida -> INST_WRITE Lista_Aux .)
    INST_END        reduce using rule 71 (Inst_Salida -> INST_WRITE Lista_Aux .)
    INST_ELSE       reduce using rule 71 (Inst_Salida -> INST_WRITE Lista_Aux .)


state 29

    (45) Operacion_booleana -> TRUE .

    AND             reduce using rule 45 (Operacion_booleana -> TRUE .)
    OR              reduce using rule 45 (Operacion_booleana -> TRUE .)
    EQEQ            reduce using rule 45 (Operacion_booleana -> TRUE .)
    NEQEQ           reduce using rule 45 (Operacion_booleana -> TRUE .)
    COMMA           reduce using rule 45 (Operacion_booleana -> TRUE .)
    $end            reduce using rule 45 (Operacion_booleana -> TRUE .)
    SEMICOLON       reduce using rule 45 (Operacion_booleana -> TRUE .)
    INST_END        reduce using rule 45 (Operacion_booleana -> TRUE .)
    INST_ELSE       reduce using rule 45 (Operacion_booleana -> TRUE .)
    INST_OF         reduce using rule 45 (Operacion_booleana -> TRUE .)
    INST_DO         reduce using rule 45 (Operacion_booleana -> TRUE .)
    INST_THEN       reduce using rule 45 (Operacion_booleana -> TRUE .)
    RPAREN          reduce using rule 45 (Operacion_booleana -> TRUE .)


state 30

    (63) Factor -> MINUS . Factor
    (60) Factor -> . NUMBER
    (61) Factor -> . VAR_IDENTIFIER
    (62) Factor -> . LPAREN Operacion_binaria RPAREN
    (63) Factor -> . MINUS Factor

    NUMBER          shift and go to state 27
    VAR_IDENTIFIER  shift and go to state 60
    LPAREN          shift and go to state 61
    MINUS           shift and go to state 30

    Factor                         shift and go to state 62

state 31

    (36) Expresion -> Operacion_booleana .
    (39) Operacion_booleana -> Operacion_booleana . AND Operacion_booleana
    (40) Operacion_booleana -> Operacion_booleana . OR Operacion_booleana
    (43) Operacion_booleana -> Operacion_booleana . EQEQ Operacion_booleana
    (44) Operacion_booleana -> Operacion_booleana . NEQEQ Operacion_booleana

    COMMA           reduce using rule 36 (Expresion -> Operacion_booleana .)
    $end            reduce using rule 36 (Expresion -> Operacion_booleana .)
    SEMICOLON       reduce using rule 36 (Expresion -> Operacion_booleana .)
    INST_END        reduce using rule 36 (Expresion -> Operacion_booleana .)
    INST_ELSE       reduce using rule 36 (Expresion -> Operacion_booleana .)
    AND             shift and go to state 63
    OR              shift and go to state 65
    EQEQ            shift and go to state 64
    NEQEQ           shift and go to state 66


state 32

    (73) Lista_Aux -> Expresion .
    (75) Lista_Aux -> Expresion . COMMA Lista_Aux

    $end            reduce using rule 73 (Lista_Aux -> Expresion .)
    SEMICOLON       reduce using rule 73 (Lista_Aux -> Expresion .)
    INST_END        reduce using rule 73 (Lista_Aux -> Expresion .)
    INST_ELSE       reduce using rule 73 (Lista_Aux -> Expresion .)
    COMMA           shift and go to state 67


state 33

    (55) Operacion_binaria -> Term .
    (56) Term -> Term . TIMES Factor
    (57) Term -> Term . DIVIDE Factor
    (58) Term -> Term . MOD Factor

  ! shift/reduce conflict for TIMES resolved as shift
    IN              reduce using rule 55 (Operacion_binaria -> Term .)
    PLUS            reduce using rule 55 (Operacion_binaria -> Term .)
    MINUS           reduce using rule 55 (Operacion_binaria -> Term .)
    GREAT           reduce using rule 55 (Operacion_binaria -> Term .)
    LESS            reduce using rule 55 (Operacion_binaria -> Term .)
    GREATEQ         reduce using rule 55 (Operacion_binaria -> Term .)
    LESSEQ          reduce using rule 55 (Operacion_binaria -> Term .)
    RANGE           reduce using rule 55 (Operacion_binaria -> Term .)
    $end            reduce using rule 55 (Operacion_binaria -> Term .)
    SEMICOLON       reduce using rule 55 (Operacion_binaria -> Term .)
    INST_END        reduce using rule 55 (Operacion_binaria -> Term .)
    INST_ELSE       reduce using rule 55 (Operacion_binaria -> Term .)
    RPAREN          reduce using rule 55 (Operacion_binaria -> Term .)
    COMMA           reduce using rule 55 (Operacion_binaria -> Term .)
    INTERSECTION    reduce using rule 55 (Operacion_binaria -> Term .)
    AND             reduce using rule 55 (Operacion_binaria -> Term .)
    OR              reduce using rule 55 (Operacion_binaria -> Term .)
    EQEQ            reduce using rule 55 (Operacion_binaria -> Term .)
    NEQEQ           reduce using rule 55 (Operacion_binaria -> Term .)
    INST_DO         reduce using rule 55 (Operacion_binaria -> Term .)
    INST_OF         reduce using rule 55 (Operacion_binaria -> Term .)
    INST_THEN       reduce using rule 55 (Operacion_binaria -> Term .)
    CASE_ASSIGN     reduce using rule 55 (Operacion_binaria -> Term .)
    TIMES           shift and go to state 70
    DIVIDE          shift and go to state 68
    MOD             shift and go to state 69

  ! TIMES           [ reduce using rule 55 (Operacion_binaria -> Term .) ]


state 34

    (74) Lista_Aux -> STRING .
    (76) Lista_Aux -> STRING . COMMA Lista_Aux

    $end            reduce using rule 74 (Lista_Aux -> STRING .)
    SEMICOLON       reduce using rule 74 (Lista_Aux -> STRING .)
    INST_END        reduce using rule 74 (Lista_Aux -> STRING .)
    INST_ELSE       reduce using rule 74 (Lista_Aux -> STRING .)
    COMMA           shift and go to state 71


state 35

    (47) Operacion_booleana -> VAR_IDENTIFIER .
    (69) Rango -> VAR_IDENTIFIER .
    (61) Factor -> VAR_IDENTIFIER .

  ! reduce/reduce conflict for RPAREN resolved using rule 47 (Operacion_booleana -> VAR_IDENTIFIER .)
  ! reduce/reduce conflict for COMMA resolved using rule 47 (Operacion_booleana -> VAR_IDENTIFIER .)
  ! reduce/reduce conflict for $end resolved using rule 47 (Operacion_booleana -> VAR_IDENTIFIER .)
  ! reduce/reduce conflict for SEMICOLON resolved using rule 47 (Operacion_booleana -> VAR_IDENTIFIER .)
  ! reduce/reduce conflict for INST_END resolved using rule 47 (Operacion_booleana -> VAR_IDENTIFIER .)
  ! reduce/reduce conflict for INST_ELSE resolved using rule 47 (Operacion_booleana -> VAR_IDENTIFIER .)
  ! reduce/reduce conflict for TIMES resolved using rule 61 (Factor -> VAR_IDENTIFIER .)
  ! reduce/reduce conflict for PLUS resolved using rule 61 (Factor -> VAR_IDENTIFIER .)
  ! reduce/reduce conflict for COMMA resolved using rule 47 (Operacion_booleana -> VAR_IDENTIFIER .)
  ! reduce/reduce conflict for $end resolved using rule 47 (Operacion_booleana -> VAR_IDENTIFIER .)
  ! reduce/reduce conflict for SEMICOLON resolved using rule 47 (Operacion_booleana -> VAR_IDENTIFIER .)
  ! reduce/reduce conflict for INST_END resolved using rule 47 (Operacion_booleana -> VAR_IDENTIFIER .)
  ! reduce/reduce conflict for INST_ELSE resolved using rule 47 (Operacion_booleana -> VAR_IDENTIFIER .)
  ! reduce/reduce conflict for RPAREN resolved using rule 47 (Operacion_booleana -> VAR_IDENTIFIER .)
    AND             reduce using rule 47 (Operacion_booleana -> VAR_IDENTIFIER .)
    OR              reduce using rule 47 (Operacion_booleana -> VAR_IDENTIFIER .)
    EQEQ            reduce using rule 47 (Operacion_booleana -> VAR_IDENTIFIER .)
    NEQEQ           reduce using rule 47 (Operacion_booleana -> VAR_IDENTIFIER .)
    COMMA           reduce using rule 47 (Operacion_booleana -> VAR_IDENTIFIER .)
    $end            reduce using rule 47 (Operacion_booleana -> VAR_IDENTIFIER .)
    SEMICOLON       reduce using rule 47 (Operacion_booleana -> VAR_IDENTIFIER .)
    INST_END        reduce using rule 47 (Operacion_booleana -> VAR_IDENTIFIER .)
    INST_ELSE       reduce using rule 47 (Operacion_booleana -> VAR_IDENTIFIER .)
    RPAREN          reduce using rule 47 (Operacion_booleana -> VAR_IDENTIFIER .)
    INTERSECTION    reduce using rule 69 (Rango -> VAR_IDENTIFIER .)
    TIMES           reduce using rule 61 (Factor -> VAR_IDENTIFIER .)
    DIVIDE          reduce using rule 61 (Factor -> VAR_IDENTIFIER .)
    MOD             reduce using rule 61 (Factor -> VAR_IDENTIFIER .)
    PLUS            reduce using rule 61 (Factor -> VAR_IDENTIFIER .)
    MINUS           reduce using rule 61 (Factor -> VAR_IDENTIFIER .)
    IN              reduce using rule 61 (Factor -> VAR_IDENTIFIER .)
    RANGE           reduce using rule 61 (Factor -> VAR_IDENTIFIER .)
    GREAT           reduce using rule 61 (Factor -> VAR_IDENTIFIER .)
    LESS            reduce using rule 61 (Factor -> VAR_IDENTIFIER .)
    GREATEQ         reduce using rule 61 (Factor -> VAR_IDENTIFIER .)
    LESSEQ          reduce using rule 61 (Factor -> VAR_IDENTIFIER .)

  ! RPAREN          [ reduce using rule 69 (Rango -> VAR_IDENTIFIER .) ]
  ! PLUS            [ reduce using rule 69 (Rango -> VAR_IDENTIFIER .) ]
  ! TIMES           [ reduce using rule 69 (Rango -> VAR_IDENTIFIER .) ]
  ! COMMA           [ reduce using rule 69 (Rango -> VAR_IDENTIFIER .) ]
  ! $end            [ reduce using rule 69 (Rango -> VAR_IDENTIFIER .) ]
  ! SEMICOLON       [ reduce using rule 69 (Rango -> VAR_IDENTIFIER .) ]
  ! INST_END        [ reduce using rule 69 (Rango -> VAR_IDENTIFIER .) ]
  ! INST_ELSE       [ reduce using rule 69 (Rango -> VAR_IDENTIFIER .) ]
  ! COMMA           [ reduce using rule 61 (Factor -> VAR_IDENTIFIER .) ]
  ! $end            [ reduce using rule 61 (Factor -> VAR_IDENTIFIER .) ]
  ! SEMICOLON       [ reduce using rule 61 (Factor -> VAR_IDENTIFIER .) ]
  ! INST_END        [ reduce using rule 61 (Factor -> VAR_IDENTIFIER .) ]
  ! INST_ELSE       [ reduce using rule 61 (Factor -> VAR_IDENTIFIER .) ]
  ! RPAREN          [ reduce using rule 61 (Factor -> VAR_IDENTIFIER .) ]


state 36

    (42) Operacion_booleana -> LPAREN . Operacion_booleana RPAREN
    (68) Rango -> LPAREN . Rango RPAREN
    (62) Factor -> LPAREN . Operacion_binaria RPAREN
    (38) Operacion_booleana -> . Operacion_binaria Opr_bool Operacion_binaria
    (39) Operacion_booleana -> . Operacion_booleana AND Operacion_booleana
    (40) Operacion_booleana -> . Operacion_booleana OR Operacion_booleana
    (41) Operacion_booleana -> . Operacion_binaria IN Rango
    (42) Operacion_booleana -> . LPAREN Operacion_booleana RPAREN
    (43) Operacion_booleana -> . Operacion_booleana EQEQ Operacion_booleana
    (44) Operacion_booleana -> . Operacion_booleana NEQEQ Operacion_booleana
    (45) Operacion_booleana -> . TRUE
    (46) Operacion_booleana -> . FALSE
    (47) Operacion_booleana -> . VAR_IDENTIFIER
    (48) Operacion_booleana -> . NOT Operacion_booleana
    (64) Rango -> . Operacion_binaria RANGE Operacion_binaria
    (65) Rango -> . Rango PLUS Rango
    (66) Rango -> . Rango TIMES Operacion_binaria
    (67) Rango -> . Rango INTERSECTION Rango
    (68) Rango -> . LPAREN Rango RPAREN
    (69) Rango -> . VAR_IDENTIFIER
    (53) Operacion_binaria -> . Operacion_binaria PLUS Term
    (54) Operacion_binaria -> . Operacion_binaria MINUS Term
    (55) Operacion_binaria -> . Term
    (56) Term -> . Term TIMES Factor
    (57) Term -> . Term DIVIDE Factor
    (58) Term -> . Term MOD Factor
    (59) Term -> . Factor
    (60) Factor -> . NUMBER
    (61) Factor -> . VAR_IDENTIFIER
    (62) Factor -> . LPAREN Operacion_binaria RPAREN
    (63) Factor -> . MINUS Factor

    LPAREN          shift and go to state 36
    TRUE            shift and go to state 29
    FALSE           shift and go to state 39
    VAR_IDENTIFIER  shift and go to state 35
    NOT             shift and go to state 40
    NUMBER          shift and go to state 27
    MINUS           shift and go to state 30

    Operacion_binaria              shift and go to state 74
    Term                           shift and go to state 33
    Factor                         shift and go to state 26
    Rango                          shift and go to state 73
    Operacion_booleana             shift and go to state 72

state 37

    (37) Expresion -> Rango .
    (65) Rango -> Rango . PLUS Rango
    (66) Rango -> Rango . TIMES Operacion_binaria
    (67) Rango -> Rango . INTERSECTION Rango

    COMMA           reduce using rule 37 (Expresion -> Rango .)
    $end            reduce using rule 37 (Expresion -> Rango .)
    SEMICOLON       reduce using rule 37 (Expresion -> Rango .)
    INST_END        reduce using rule 37 (Expresion -> Rango .)
    INST_ELSE       reduce using rule 37 (Expresion -> Rango .)
    PLUS            shift and go to state 76
    TIMES           shift and go to state 77
    INTERSECTION    shift and go to state 75


state 38

    (35) Expresion -> Operacion_binaria .
    (53) Operacion_binaria -> Operacion_binaria . PLUS Term
    (54) Operacion_binaria -> Operacion_binaria . MINUS Term
    (38) Operacion_booleana -> Operacion_binaria . Opr_bool Operacion_binaria
    (41) Operacion_booleana -> Operacion_binaria . IN Rango
    (64) Rango -> Operacion_binaria . RANGE Operacion_binaria
    (49) Opr_bool -> . GREAT
    (50) Opr_bool -> . LESS
    (51) Opr_bool -> . GREATEQ
    (52) Opr_bool -> . LESSEQ

    COMMA           reduce using rule 35 (Expresion -> Operacion_binaria .)
    $end            reduce using rule 35 (Expresion -> Operacion_binaria .)
    SEMICOLON       reduce using rule 35 (Expresion -> Operacion_binaria .)
    INST_END        reduce using rule 35 (Expresion -> Operacion_binaria .)
    INST_ELSE       reduce using rule 35 (Expresion -> Operacion_binaria .)
    PLUS            shift and go to state 84
    MINUS           shift and go to state 86
    IN              shift and go to state 85
    RANGE           shift and go to state 82
    GREAT           shift and go to state 79
    LESS            shift and go to state 80
    GREATEQ         shift and go to state 78
    LESSEQ          shift and go to state 83

    Opr_bool                       shift and go to state 81

state 39

    (46) Operacion_booleana -> FALSE .

    AND             reduce using rule 46 (Operacion_booleana -> FALSE .)
    OR              reduce using rule 46 (Operacion_booleana -> FALSE .)
    EQEQ            reduce using rule 46 (Operacion_booleana -> FALSE .)
    NEQEQ           reduce using rule 46 (Operacion_booleana -> FALSE .)
    COMMA           reduce using rule 46 (Operacion_booleana -> FALSE .)
    $end            reduce using rule 46 (Operacion_booleana -> FALSE .)
    SEMICOLON       reduce using rule 46 (Operacion_booleana -> FALSE .)
    INST_END        reduce using rule 46 (Operacion_booleana -> FALSE .)
    INST_ELSE       reduce using rule 46 (Operacion_booleana -> FALSE .)
    INST_OF         reduce using rule 46 (Operacion_booleana -> FALSE .)
    INST_DO         reduce using rule 46 (Operacion_booleana -> FALSE .)
    INST_THEN       reduce using rule 46 (Operacion_booleana -> FALSE .)
    RPAREN          reduce using rule 46 (Operacion_booleana -> FALSE .)


state 40

    (48) Operacion_booleana -> NOT . Operacion_booleana
    (38) Operacion_booleana -> . Operacion_binaria Opr_bool Operacion_binaria
    (39) Operacion_booleana -> . Operacion_booleana AND Operacion_booleana
    (40) Operacion_booleana -> . Operacion_booleana OR Operacion_booleana
    (41) Operacion_booleana -> . Operacion_binaria IN Rango
    (42) Operacion_booleana -> . LPAREN Operacion_booleana RPAREN
    (43) Operacion_booleana -> . Operacion_booleana EQEQ Operacion_booleana
    (44) Operacion_booleana -> . Operacion_booleana NEQEQ Operacion_booleana
    (45) Operacion_booleana -> . TRUE
    (46) Operacion_booleana -> . FALSE
    (47) Operacion_booleana -> . VAR_IDENTIFIER
    (48) Operacion_booleana -> . NOT Operacion_booleana
    (53) Operacion_binaria -> . Operacion_binaria PLUS Term
    (54) Operacion_binaria -> . Operacion_binaria MINUS Term
    (55) Operacion_binaria -> . Term
    (56) Term -> . Term TIMES Factor
    (57) Term -> . Term DIVIDE Factor
    (58) Term -> . Term MOD Factor
    (59) Term -> . Factor
    (60) Factor -> . NUMBER
    (61) Factor -> . VAR_IDENTIFIER
    (62) Factor -> . LPAREN Operacion_binaria RPAREN
    (63) Factor -> . MINUS Factor

    LPAREN          shift and go to state 44
    TRUE            shift and go to state 29
    FALSE           shift and go to state 39
    VAR_IDENTIFIER  shift and go to state 43
    NOT             shift and go to state 40
    NUMBER          shift and go to state 27
    MINUS           shift and go to state 30

    Operacion_binaria              shift and go to state 45
    Term                           shift and go to state 33
    Factor                         shift and go to state 26
    Operacion_booleana             shift and go to state 87

state 41

    (19) Inst_Funcion -> TOP LPAREN . Rango RPAREN
    (23) Inst_Funcion -> TOP LPAREN . VAR_IDENTIFIER RPAREN
    (64) Rango -> . Operacion_binaria RANGE Operacion_binaria
    (65) Rango -> . Rango PLUS Rango
    (66) Rango -> . Rango TIMES Operacion_binaria
    (67) Rango -> . Rango INTERSECTION Rango
    (68) Rango -> . LPAREN Rango RPAREN
    (69) Rango -> . VAR_IDENTIFIER
    (53) Operacion_binaria -> . Operacion_binaria PLUS Term
    (54) Operacion_binaria -> . Operacion_binaria MINUS Term
    (55) Operacion_binaria -> . Term
    (56) Term -> . Term TIMES Factor
    (57) Term -> . Term DIVIDE Factor
    (58) Term -> . Term MOD Factor
    (59) Term -> . Factor
    (60) Factor -> . NUMBER
    (61) Factor -> . VAR_IDENTIFIER
    (62) Factor -> . LPAREN Operacion_binaria RPAREN
    (63) Factor -> . MINUS Factor

    VAR_IDENTIFIER  shift and go to state 89
    LPAREN          shift and go to state 90
    NUMBER          shift and go to state 27
    MINUS           shift and go to state 30

    Rango                          shift and go to state 91
    Operacion_binaria              shift and go to state 88
    Term                           shift and go to state 33
    Factor                         shift and go to state 26

state 42

    (87) Inst_While -> INST_WHILE Operacion_booleana . INST_DO Bloque_Inst
    (88) Inst_While -> INST_WHILE Operacion_booleana . INST_DO Inst
    (39) Operacion_booleana -> Operacion_booleana . AND Operacion_booleana
    (40) Operacion_booleana -> Operacion_booleana . OR Operacion_booleana
    (43) Operacion_booleana -> Operacion_booleana . EQEQ Operacion_booleana
    (44) Operacion_booleana -> Operacion_booleana . NEQEQ Operacion_booleana

    INST_DO         shift and go to state 92
    AND             shift and go to state 63
    OR              shift and go to state 65
    EQEQ            shift and go to state 64
    NEQEQ           shift and go to state 66


state 43

    (47) Operacion_booleana -> VAR_IDENTIFIER .
    (61) Factor -> VAR_IDENTIFIER .

  ! reduce/reduce conflict for RPAREN resolved using rule 47 (Operacion_booleana -> VAR_IDENTIFIER .)
    INST_OF         reduce using rule 47 (Operacion_booleana -> VAR_IDENTIFIER .)
    AND             reduce using rule 47 (Operacion_booleana -> VAR_IDENTIFIER .)
    OR              reduce using rule 47 (Operacion_booleana -> VAR_IDENTIFIER .)
    EQEQ            reduce using rule 47 (Operacion_booleana -> VAR_IDENTIFIER .)
    NEQEQ           reduce using rule 47 (Operacion_booleana -> VAR_IDENTIFIER .)
    COMMA           reduce using rule 47 (Operacion_booleana -> VAR_IDENTIFIER .)
    $end            reduce using rule 47 (Operacion_booleana -> VAR_IDENTIFIER .)
    SEMICOLON       reduce using rule 47 (Operacion_booleana -> VAR_IDENTIFIER .)
    INST_END        reduce using rule 47 (Operacion_booleana -> VAR_IDENTIFIER .)
    INST_ELSE       reduce using rule 47 (Operacion_booleana -> VAR_IDENTIFIER .)
    INST_DO         reduce using rule 47 (Operacion_booleana -> VAR_IDENTIFIER .)
    INST_THEN       reduce using rule 47 (Operacion_booleana -> VAR_IDENTIFIER .)
    RPAREN          reduce using rule 47 (Operacion_booleana -> VAR_IDENTIFIER .)
    TIMES           reduce using rule 61 (Factor -> VAR_IDENTIFIER .)
    DIVIDE          reduce using rule 61 (Factor -> VAR_IDENTIFIER .)
    MOD             reduce using rule 61 (Factor -> VAR_IDENTIFIER .)
    IN              reduce using rule 61 (Factor -> VAR_IDENTIFIER .)
    PLUS            reduce using rule 61 (Factor -> VAR_IDENTIFIER .)
    MINUS           reduce using rule 61 (Factor -> VAR_IDENTIFIER .)
    GREAT           reduce using rule 61 (Factor -> VAR_IDENTIFIER .)
    LESS            reduce using rule 61 (Factor -> VAR_IDENTIFIER .)
    GREATEQ         reduce using rule 61 (Factor -> VAR_IDENTIFIER .)
    LESSEQ          reduce using rule 61 (Factor -> VAR_IDENTIFIER .)

  ! RPAREN          [ reduce using rule 61 (Factor -> VAR_IDENTIFIER .) ]


state 44

    (42) Operacion_booleana -> LPAREN . Operacion_booleana RPAREN
    (62) Factor -> LPAREN . Operacion_binaria RPAREN
    (38) Operacion_booleana -> . Operacion_binaria Opr_bool Operacion_binaria
    (39) Operacion_booleana -> . Operacion_booleana AND Operacion_booleana
    (40) Operacion_booleana -> . Operacion_booleana OR Operacion_booleana
    (41) Operacion_booleana -> . Operacion_binaria IN Rango
    (42) Operacion_booleana -> . LPAREN Operacion_booleana RPAREN
    (43) Operacion_booleana -> . Operacion_booleana EQEQ Operacion_booleana
    (44) Operacion_booleana -> . Operacion_booleana NEQEQ Operacion_booleana
    (45) Operacion_booleana -> . TRUE
    (46) Operacion_booleana -> . FALSE
    (47) Operacion_booleana -> . VAR_IDENTIFIER
    (48) Operacion_booleana -> . NOT Operacion_booleana
    (53) Operacion_binaria -> . Operacion_binaria PLUS Term
    (54) Operacion_binaria -> . Operacion_binaria MINUS Term
    (55) Operacion_binaria -> . Term
    (56) Term -> . Term TIMES Factor
    (57) Term -> . Term DIVIDE Factor
    (58) Term -> . Term MOD Factor
    (59) Term -> . Factor
    (60) Factor -> . NUMBER
    (61) Factor -> . VAR_IDENTIFIER
    (62) Factor -> . LPAREN Operacion_binaria RPAREN
    (63) Factor -> . MINUS Factor

    LPAREN          shift and go to state 44
    TRUE            shift and go to state 29
    FALSE           shift and go to state 39
    VAR_IDENTIFIER  shift and go to state 43
    NOT             shift and go to state 40
    NUMBER          shift and go to state 27
    MINUS           shift and go to state 30

    Operacion_binaria              shift and go to state 93
    Term                           shift and go to state 33
    Factor                         shift and go to state 26
    Operacion_booleana             shift and go to state 72

state 45

    (38) Operacion_booleana -> Operacion_binaria . Opr_bool Operacion_binaria
    (41) Operacion_booleana -> Operacion_binaria . IN Rango
    (53) Operacion_binaria -> Operacion_binaria . PLUS Term
    (54) Operacion_binaria -> Operacion_binaria . MINUS Term
    (49) Opr_bool -> . GREAT
    (50) Opr_bool -> . LESS
    (51) Opr_bool -> . GREATEQ
    (52) Opr_bool -> . LESSEQ

    IN              shift and go to state 85
    PLUS            shift and go to state 84
    MINUS           shift and go to state 86
    GREAT           shift and go to state 79
    LESS            shift and go to state 80
    GREATEQ         shift and go to state 78
    LESSEQ          shift and go to state 83

    Opr_bool                       shift and go to state 81

state 46

    (70) Inst_Lectura -> INST_READ VAR_IDENTIFIER .

    SEMICOLON       reduce using rule 70 (Inst_Lectura -> INST_READ VAR_IDENTIFIER .)
    INST_END        reduce using rule 70 (Inst_Lectura -> INST_READ VAR_IDENTIFIER .)
    $end            reduce using rule 70 (Inst_Lectura -> INST_READ VAR_IDENTIFIER .)
    INST_ELSE       reduce using rule 70 (Inst_Lectura -> INST_READ VAR_IDENTIFIER .)


state 47

    (25) Inst_Declare -> INST_DECLARE . Lista_DeclareTipos
    (26) Lista_DeclareTipos -> . Lista_Declare
    (27) Lista_DeclareTipos -> . Lista_Declare SEMICOLON Lista_DeclareTipos
    (28) Lista_Declare -> . Lista_Variables INST_AS Tipo
    (29) Lista_Variables -> . VAR_IDENTIFIER
    (30) Lista_Variables -> . VAR_IDENTIFIER COMMA Lista_Variables

    VAR_IDENTIFIER  shift and go to state 94

    Lista_Variables                shift and go to state 96
    Lista_Declare                  shift and go to state 97
    Lista_DeclareTipos             shift and go to state 95

state 48

    (16) Inst -> Bloque_Inst .

    SEMICOLON       reduce using rule 16 (Inst -> Bloque_Inst .)
    INST_END        reduce using rule 16 (Inst -> Bloque_Inst .)


state 49

    (4) Bloque_Inst -> INST_BEGIN Inst_Declare . Lista_Inst INST_END
    (5) Bloque_Inst -> INST_BEGIN Inst_Declare . INST_END
    (6) Lista_Inst -> . Inst
    (7) Lista_Inst -> . Inst SEMICOLON Lista_Inst
    (8) Inst -> . Inst_Asignacion
    (9) Inst -> . Inst_Lectura
    (10) Inst -> . Inst_For
    (11) Inst -> . Inst_While
    (12) Inst -> . Inst_If
    (13) Inst -> . Inst_Case
    (14) Inst -> . Inst_Salida
    (15) Inst -> . Inst_Funcion
    (16) Inst -> . Bloque_Inst
    (34) Inst_Asignacion -> . VAR_IDENTIFIER EQUAL Expresion
    (70) Inst_Lectura -> . INST_READ VAR_IDENTIFIER
    (86) Inst_For -> . INST_FOR VAR_IDENTIFIER INST_IN Rango INST_DO Bloque_Control
    (87) Inst_While -> . INST_WHILE Operacion_booleana INST_DO Bloque_Inst
    (88) Inst_While -> . INST_WHILE Operacion_booleana INST_DO Inst
    (79) Inst_If -> . INST_IF Operacion_booleana INST_THEN Bloque_Control
    (80) Inst_If -> . INST_IF Operacion_booleana INST_THEN Bloque_Control INST_ELSE Bloque_Control
    (81) Inst_Case -> . INST_CASE Operacion_booleana INST_OF Casos INST_END
    (71) Inst_Salida -> . INST_WRITE Lista_Aux
    (72) Inst_Salida -> . INST_WRITELN Lista_Aux
    (17) Inst_Funcion -> . RTOI LPAREN Rango RPAREN
    (18) Inst_Funcion -> . LENGTH LPAREN Rango RPAREN
    (19) Inst_Funcion -> . TOP LPAREN Rango RPAREN
    (20) Inst_Funcion -> . BOTTOM LPAREN Rango RPAREN
    (21) Inst_Funcion -> . RTOI LPAREN VAR_IDENTIFIER RPAREN
    (22) Inst_Funcion -> . LENGTH LPAREN VAR_IDENTIFIER RPAREN
    (23) Inst_Funcion -> . TOP LPAREN VAR_IDENTIFIER RPAREN
    (24) Inst_Funcion -> . BOTTOM LPAREN VAR_IDENTIFIER RPAREN
    (3) Bloque_Inst -> . INST_BEGIN Lista_Inst INST_END
    (4) Bloque_Inst -> . INST_BEGIN Inst_Declare Lista_Inst INST_END
    (5) Bloque_Inst -> . INST_BEGIN Inst_Declare INST_END

    INST_END        shift and go to state 98
    VAR_IDENTIFIER  shift and go to state 16
    INST_READ       shift and go to state 9
    INST_FOR        shift and go to state 19
    INST_WHILE      shift and go to state 8
    INST_IF         shift and go to state 20
    INST_CASE       shift and go to state 18
    INST_WRITE      shift and go to state 4
    INST_WRITELN    shift and go to state 21
    RTOI            shift and go to state 23
    LENGTH          shift and go to state 22
    TOP             shift and go to state 5
    BOTTOM          shift and go to state 11
    INST_BEGIN      shift and go to state 10

    Inst_Salida                    shift and go to state 7
    Inst_Funcion                   shift and go to state 3
    Bloque_Inst                    shift and go to state 48
    Inst_If                        shift and go to state 17
    Inst_For                       shift and go to state 12
    Inst_While                     shift and go to state 14
    Inst                           shift and go to state 50
    Inst_Asignacion                shift and go to state 24
    Inst_Case                      shift and go to state 25
    Inst_Lectura                   shift and go to state 15
    Lista_Inst                     shift and go to state 99

state 50

    (6) Lista_Inst -> Inst .
    (7) Lista_Inst -> Inst . SEMICOLON Lista_Inst

    INST_END        reduce using rule 6 (Lista_Inst -> Inst .)
    SEMICOLON       shift and go to state 100


state 51

    (3) Bloque_Inst -> INST_BEGIN Lista_Inst . INST_END

    INST_END        shift and go to state 101


state 52

    (20) Inst_Funcion -> BOTTOM LPAREN . Rango RPAREN
    (24) Inst_Funcion -> BOTTOM LPAREN . VAR_IDENTIFIER RPAREN
    (64) Rango -> . Operacion_binaria RANGE Operacion_binaria
    (65) Rango -> . Rango PLUS Rango
    (66) Rango -> . Rango TIMES Operacion_binaria
    (67) Rango -> . Rango INTERSECTION Rango
    (68) Rango -> . LPAREN Rango RPAREN
    (69) Rango -> . VAR_IDENTIFIER
    (53) Operacion_binaria -> . Operacion_binaria PLUS Term
    (54) Operacion_binaria -> . Operacion_binaria MINUS Term
    (55) Operacion_binaria -> . Term
    (56) Term -> . Term TIMES Factor
    (57) Term -> . Term DIVIDE Factor
    (58) Term -> . Term MOD Factor
    (59) Term -> . Factor
    (60) Factor -> . NUMBER
    (61) Factor -> . VAR_IDENTIFIER
    (62) Factor -> . LPAREN Operacion_binaria RPAREN
    (63) Factor -> . MINUS Factor

    VAR_IDENTIFIER  shift and go to state 102
    LPAREN          shift and go to state 90
    NUMBER          shift and go to state 27
    MINUS           shift and go to state 30

    Rango                          shift and go to state 103
    Operacion_binaria              shift and go to state 88
    Term                           shift and go to state 33
    Factor                         shift and go to state 26

state 53

    (34) Inst_Asignacion -> VAR_IDENTIFIER EQUAL . Expresion
    (35) Expresion -> . Operacion_binaria
    (36) Expresion -> . Operacion_booleana
    (37) Expresion -> . Rango
    (53) Operacion_binaria -> . Operacion_binaria PLUS Term
    (54) Operacion_binaria -> . Operacion_binaria MINUS Term
    (55) Operacion_binaria -> . Term
    (38) Operacion_booleana -> . Operacion_binaria Opr_bool Operacion_binaria
    (39) Operacion_booleana -> . Operacion_booleana AND Operacion_booleana
    (40) Operacion_booleana -> . Operacion_booleana OR Operacion_booleana
    (41) Operacion_booleana -> . Operacion_binaria IN Rango
    (42) Operacion_booleana -> . LPAREN Operacion_booleana RPAREN
    (43) Operacion_booleana -> . Operacion_booleana EQEQ Operacion_booleana
    (44) Operacion_booleana -> . Operacion_booleana NEQEQ Operacion_booleana
    (45) Operacion_booleana -> . TRUE
    (46) Operacion_booleana -> . FALSE
    (47) Operacion_booleana -> . VAR_IDENTIFIER
    (48) Operacion_booleana -> . NOT Operacion_booleana
    (64) Rango -> . Operacion_binaria RANGE Operacion_binaria
    (65) Rango -> . Rango PLUS Rango
    (66) Rango -> . Rango TIMES Operacion_binaria
    (67) Rango -> . Rango INTERSECTION Rango
    (68) Rango -> . LPAREN Rango RPAREN
    (69) Rango -> . VAR_IDENTIFIER
    (56) Term -> . Term TIMES Factor
    (57) Term -> . Term DIVIDE Factor
    (58) Term -> . Term MOD Factor
    (59) Term -> . Factor
    (60) Factor -> . NUMBER
    (61) Factor -> . VAR_IDENTIFIER
    (62) Factor -> . LPAREN Operacion_binaria RPAREN
    (63) Factor -> . MINUS Factor

    LPAREN          shift and go to state 36
    TRUE            shift and go to state 29
    FALSE           shift and go to state 39
    VAR_IDENTIFIER  shift and go to state 35
    NOT             shift and go to state 40
    NUMBER          shift and go to state 27
    MINUS           shift and go to state 30

    Expresion                      shift and go to state 104
    Operacion_binaria              shift and go to state 38
    Term                           shift and go to state 33
    Factor                         shift and go to state 26
    Rango                          shift and go to state 37
    Operacion_booleana             shift and go to state 31

state 54

    (81) Inst_Case -> INST_CASE Operacion_booleana . INST_OF Casos INST_END
    (39) Operacion_booleana -> Operacion_booleana . AND Operacion_booleana
    (40) Operacion_booleana -> Operacion_booleana . OR Operacion_booleana
    (43) Operacion_booleana -> Operacion_booleana . EQEQ Operacion_booleana
    (44) Operacion_booleana -> Operacion_booleana . NEQEQ Operacion_booleana

    INST_OF         shift and go to state 105
    AND             shift and go to state 63
    OR              shift and go to state 65
    EQEQ            shift and go to state 64
    NEQEQ           shift and go to state 66


state 55

    (86) Inst_For -> INST_FOR VAR_IDENTIFIER . INST_IN Rango INST_DO Bloque_Control

    INST_IN         shift and go to state 106


state 56

    (79) Inst_If -> INST_IF Operacion_booleana . INST_THEN Bloque_Control
    (80) Inst_If -> INST_IF Operacion_booleana . INST_THEN Bloque_Control INST_ELSE Bloque_Control
    (39) Operacion_booleana -> Operacion_booleana . AND Operacion_booleana
    (40) Operacion_booleana -> Operacion_booleana . OR Operacion_booleana
    (43) Operacion_booleana -> Operacion_booleana . EQEQ Operacion_booleana
    (44) Operacion_booleana -> Operacion_booleana . NEQEQ Operacion_booleana

    INST_THEN       shift and go to state 107
    AND             shift and go to state 63
    OR              shift and go to state 65
    EQEQ            shift and go to state 64
    NEQEQ           shift and go to state 66


state 57

    (72) Inst_Salida -> INST_WRITELN Lista_Aux .

    $end            reduce using rule 72 (Inst_Salida -> INST_WRITELN Lista_Aux .)
    SEMICOLON       reduce using rule 72 (Inst_Salida -> INST_WRITELN Lista_Aux .)
    INST_END        reduce using rule 72 (Inst_Salida -> INST_WRITELN Lista_Aux .)
    INST_ELSE       reduce using rule 72 (Inst_Salida -> INST_WRITELN Lista_Aux .)


state 58

    (18) Inst_Funcion -> LENGTH LPAREN . Rango RPAREN
    (22) Inst_Funcion -> LENGTH LPAREN . VAR_IDENTIFIER RPAREN
    (64) Rango -> . Operacion_binaria RANGE Operacion_binaria
    (65) Rango -> . Rango PLUS Rango
    (66) Rango -> . Rango TIMES Operacion_binaria
    (67) Rango -> . Rango INTERSECTION Rango
    (68) Rango -> . LPAREN Rango RPAREN
    (69) Rango -> . VAR_IDENTIFIER
    (53) Operacion_binaria -> . Operacion_binaria PLUS Term
    (54) Operacion_binaria -> . Operacion_binaria MINUS Term
    (55) Operacion_binaria -> . Term
    (56) Term -> . Term TIMES Factor
    (57) Term -> . Term DIVIDE Factor
    (58) Term -> . Term MOD Factor
    (59) Term -> . Factor
    (60) Factor -> . NUMBER
    (61) Factor -> . VAR_IDENTIFIER
    (62) Factor -> . LPAREN Operacion_binaria RPAREN
    (63) Factor -> . MINUS Factor

    VAR_IDENTIFIER  shift and go to state 108
    LPAREN          shift and go to state 90
    NUMBER          shift and go to state 27
    MINUS           shift and go to state 30

    Rango                          shift and go to state 109
    Operacion_binaria              shift and go to state 88
    Term                           shift and go to state 33
    Factor                         shift and go to state 26

state 59

    (17) Inst_Funcion -> RTOI LPAREN . Rango RPAREN
    (21) Inst_Funcion -> RTOI LPAREN . VAR_IDENTIFIER RPAREN
    (64) Rango -> . Operacion_binaria RANGE Operacion_binaria
    (65) Rango -> . Rango PLUS Rango
    (66) Rango -> . Rango TIMES Operacion_binaria
    (67) Rango -> . Rango INTERSECTION Rango
    (68) Rango -> . LPAREN Rango RPAREN
    (69) Rango -> . VAR_IDENTIFIER
    (53) Operacion_binaria -> . Operacion_binaria PLUS Term
    (54) Operacion_binaria -> . Operacion_binaria MINUS Term
    (55) Operacion_binaria -> . Term
    (56) Term -> . Term TIMES Factor
    (57) Term -> . Term DIVIDE Factor
    (58) Term -> . Term MOD Factor
    (59) Term -> . Factor
    (60) Factor -> . NUMBER
    (61) Factor -> . VAR_IDENTIFIER
    (62) Factor -> . LPAREN Operacion_binaria RPAREN
    (63) Factor -> . MINUS Factor

    VAR_IDENTIFIER  shift and go to state 110
    LPAREN          shift and go to state 90
    NUMBER          shift and go to state 27
    MINUS           shift and go to state 30

    Rango                          shift and go to state 111
    Operacion_binaria              shift and go to state 88
    Term                           shift and go to state 33
    Factor                         shift and go to state 26

state 60

    (61) Factor -> VAR_IDENTIFIER .

    TIMES           reduce using rule 61 (Factor -> VAR_IDENTIFIER .)
    DIVIDE          reduce using rule 61 (Factor -> VAR_IDENTIFIER .)
    MOD             reduce using rule 61 (Factor -> VAR_IDENTIFIER .)
    PLUS            reduce using rule 61 (Factor -> VAR_IDENTIFIER .)
    MINUS           reduce using rule 61 (Factor -> VAR_IDENTIFIER .)
    INTERSECTION    reduce using rule 61 (Factor -> VAR_IDENTIFIER .)
    COMMA           reduce using rule 61 (Factor -> VAR_IDENTIFIER .)
    $end            reduce using rule 61 (Factor -> VAR_IDENTIFIER .)
    SEMICOLON       reduce using rule 61 (Factor -> VAR_IDENTIFIER .)
    INST_END        reduce using rule 61 (Factor -> VAR_IDENTIFIER .)
    INST_ELSE       reduce using rule 61 (Factor -> VAR_IDENTIFIER .)
    RPAREN          reduce using rule 61 (Factor -> VAR_IDENTIFIER .)
    AND             reduce using rule 61 (Factor -> VAR_IDENTIFIER .)
    OR              reduce using rule 61 (Factor -> VAR_IDENTIFIER .)
    EQEQ            reduce using rule 61 (Factor -> VAR_IDENTIFIER .)
    NEQEQ           reduce using rule 61 (Factor -> VAR_IDENTIFIER .)
    INST_DO         reduce using rule 61 (Factor -> VAR_IDENTIFIER .)
    INST_OF         reduce using rule 61 (Factor -> VAR_IDENTIFIER .)
    INST_THEN       reduce using rule 61 (Factor -> VAR_IDENTIFIER .)
    CASE_ASSIGN     reduce using rule 61 (Factor -> VAR_IDENTIFIER .)
    IN              reduce using rule 61 (Factor -> VAR_IDENTIFIER .)
    RANGE           reduce using rule 61 (Factor -> VAR_IDENTIFIER .)
    GREAT           reduce using rule 61 (Factor -> VAR_IDENTIFIER .)
    LESS            reduce using rule 61 (Factor -> VAR_IDENTIFIER .)
    GREATEQ         reduce using rule 61 (Factor -> VAR_IDENTIFIER .)
    LESSEQ          reduce using rule 61 (Factor -> VAR_IDENTIFIER .)


state 61

    (62) Factor -> LPAREN . Operacion_binaria RPAREN
    (53) Operacion_binaria -> . Operacion_binaria PLUS Term
    (54) Operacion_binaria -> . Operacion_binaria MINUS Term
    (55) Operacion_binaria -> . Term
    (56) Term -> . Term TIMES Factor
    (57) Term -> . Term DIVIDE Factor
    (58) Term -> . Term MOD Factor
    (59) Term -> . Factor
    (60) Factor -> . NUMBER
    (61) Factor -> . VAR_IDENTIFIER
    (62) Factor -> . LPAREN Operacion_binaria RPAREN
    (63) Factor -> . MINUS Factor

    NUMBER          shift and go to state 27
    VAR_IDENTIFIER  shift and go to state 60
    LPAREN          shift and go to state 61
    MINUS           shift and go to state 30

    Operacion_binaria              shift and go to state 112
    Term                           shift and go to state 33
    Factor                         shift and go to state 26

state 62

    (63) Factor -> MINUS Factor .

    TIMES           reduce using rule 63 (Factor -> MINUS Factor .)
    DIVIDE          reduce using rule 63 (Factor -> MINUS Factor .)
    MOD             reduce using rule 63 (Factor -> MINUS Factor .)
    PLUS            reduce using rule 63 (Factor -> MINUS Factor .)
    MINUS           reduce using rule 63 (Factor -> MINUS Factor .)
    INTERSECTION    reduce using rule 63 (Factor -> MINUS Factor .)
    COMMA           reduce using rule 63 (Factor -> MINUS Factor .)
    $end            reduce using rule 63 (Factor -> MINUS Factor .)
    SEMICOLON       reduce using rule 63 (Factor -> MINUS Factor .)
    INST_END        reduce using rule 63 (Factor -> MINUS Factor .)
    INST_ELSE       reduce using rule 63 (Factor -> MINUS Factor .)
    RPAREN          reduce using rule 63 (Factor -> MINUS Factor .)
    AND             reduce using rule 63 (Factor -> MINUS Factor .)
    OR              reduce using rule 63 (Factor -> MINUS Factor .)
    EQEQ            reduce using rule 63 (Factor -> MINUS Factor .)
    NEQEQ           reduce using rule 63 (Factor -> MINUS Factor .)
    INST_DO         reduce using rule 63 (Factor -> MINUS Factor .)
    INST_OF         reduce using rule 63 (Factor -> MINUS Factor .)
    INST_THEN       reduce using rule 63 (Factor -> MINUS Factor .)
    CASE_ASSIGN     reduce using rule 63 (Factor -> MINUS Factor .)
    IN              reduce using rule 63 (Factor -> MINUS Factor .)
    GREAT           reduce using rule 63 (Factor -> MINUS Factor .)
    LESS            reduce using rule 63 (Factor -> MINUS Factor .)
    GREATEQ         reduce using rule 63 (Factor -> MINUS Factor .)
    LESSEQ          reduce using rule 63 (Factor -> MINUS Factor .)
    RANGE           reduce using rule 63 (Factor -> MINUS Factor .)


state 63

    (39) Operacion_booleana -> Operacion_booleana AND . Operacion_booleana
    (38) Operacion_booleana -> . Operacion_binaria Opr_bool Operacion_binaria
    (39) Operacion_booleana -> . Operacion_booleana AND Operacion_booleana
    (40) Operacion_booleana -> . Operacion_booleana OR Operacion_booleana
    (41) Operacion_booleana -> . Operacion_binaria IN Rango
    (42) Operacion_booleana -> . LPAREN Operacion_booleana RPAREN
    (43) Operacion_booleana -> . Operacion_booleana EQEQ Operacion_booleana
    (44) Operacion_booleana -> . Operacion_booleana NEQEQ Operacion_booleana
    (45) Operacion_booleana -> . TRUE
    (46) Operacion_booleana -> . FALSE
    (47) Operacion_booleana -> . VAR_IDENTIFIER
    (48) Operacion_booleana -> . NOT Operacion_booleana
    (53) Operacion_binaria -> . Operacion_binaria PLUS Term
    (54) Operacion_binaria -> . Operacion_binaria MINUS Term
    (55) Operacion_binaria -> . Term
    (56) Term -> . Term TIMES Factor
    (57) Term -> . Term DIVIDE Factor
    (58) Term -> . Term MOD Factor
    (59) Term -> . Factor
    (60) Factor -> . NUMBER
    (61) Factor -> . VAR_IDENTIFIER
    (62) Factor -> . LPAREN Operacion_binaria RPAREN
    (63) Factor -> . MINUS Factor

    LPAREN          shift and go to state 44
    TRUE            shift and go to state 29
    FALSE           shift and go to state 39
    VAR_IDENTIFIER  shift and go to state 43
    NOT             shift and go to state 40
    NUMBER          shift and go to state 27
    MINUS           shift and go to state 30

    Operacion_binaria              shift and go to state 45
    Term                           shift and go to state 33
    Factor                         shift and go to state 26
    Operacion_booleana             shift and go to state 113

state 64

    (43) Operacion_booleana -> Operacion_booleana EQEQ . Operacion_booleana
    (38) Operacion_booleana -> . Operacion_binaria Opr_bool Operacion_binaria
    (39) Operacion_booleana -> . Operacion_booleana AND Operacion_booleana
    (40) Operacion_booleana -> . Operacion_booleana OR Operacion_booleana
    (41) Operacion_booleana -> . Operacion_binaria IN Rango
    (42) Operacion_booleana -> . LPAREN Operacion_booleana RPAREN
    (43) Operacion_booleana -> . Operacion_booleana EQEQ Operacion_booleana
    (44) Operacion_booleana -> . Operacion_booleana NEQEQ Operacion_booleana
    (45) Operacion_booleana -> . TRUE
    (46) Operacion_booleana -> . FALSE
    (47) Operacion_booleana -> . VAR_IDENTIFIER
    (48) Operacion_booleana -> . NOT Operacion_booleana
    (53) Operacion_binaria -> . Operacion_binaria PLUS Term
    (54) Operacion_binaria -> . Operacion_binaria MINUS Term
    (55) Operacion_binaria -> . Term
    (56) Term -> . Term TIMES Factor
    (57) Term -> . Term DIVIDE Factor
    (58) Term -> . Term MOD Factor
    (59) Term -> . Factor
    (60) Factor -> . NUMBER
    (61) Factor -> . VAR_IDENTIFIER
    (62) Factor -> . LPAREN Operacion_binaria RPAREN
    (63) Factor -> . MINUS Factor

    LPAREN          shift and go to state 44
    TRUE            shift and go to state 29
    FALSE           shift and go to state 39
    VAR_IDENTIFIER  shift and go to state 43
    NOT             shift and go to state 40
    NUMBER          shift and go to state 27
    MINUS           shift and go to state 30

    Operacion_binaria              shift and go to state 45
    Term                           shift and go to state 33
    Factor                         shift and go to state 26
    Operacion_booleana             shift and go to state 114

state 65

    (40) Operacion_booleana -> Operacion_booleana OR . Operacion_booleana
    (38) Operacion_booleana -> . Operacion_binaria Opr_bool Operacion_binaria
    (39) Operacion_booleana -> . Operacion_booleana AND Operacion_booleana
    (40) Operacion_booleana -> . Operacion_booleana OR Operacion_booleana
    (41) Operacion_booleana -> . Operacion_binaria IN Rango
    (42) Operacion_booleana -> . LPAREN Operacion_booleana RPAREN
    (43) Operacion_booleana -> . Operacion_booleana EQEQ Operacion_booleana
    (44) Operacion_booleana -> . Operacion_booleana NEQEQ Operacion_booleana
    (45) Operacion_booleana -> . TRUE
    (46) Operacion_booleana -> . FALSE
    (47) Operacion_booleana -> . VAR_IDENTIFIER
    (48) Operacion_booleana -> . NOT Operacion_booleana
    (53) Operacion_binaria -> . Operacion_binaria PLUS Term
    (54) Operacion_binaria -> . Operacion_binaria MINUS Term
    (55) Operacion_binaria -> . Term
    (56) Term -> . Term TIMES Factor
    (57) Term -> . Term DIVIDE Factor
    (58) Term -> . Term MOD Factor
    (59) Term -> . Factor
    (60) Factor -> . NUMBER
    (61) Factor -> . VAR_IDENTIFIER
    (62) Factor -> . LPAREN Operacion_binaria RPAREN
    (63) Factor -> . MINUS Factor

    LPAREN          shift and go to state 44
    TRUE            shift and go to state 29
    FALSE           shift and go to state 39
    VAR_IDENTIFIER  shift and go to state 43
    NOT             shift and go to state 40
    NUMBER          shift and go to state 27
    MINUS           shift and go to state 30

    Operacion_binaria              shift and go to state 45
    Term                           shift and go to state 33
    Factor                         shift and go to state 26
    Operacion_booleana             shift and go to state 115

state 66

    (44) Operacion_booleana -> Operacion_booleana NEQEQ . Operacion_booleana
    (38) Operacion_booleana -> . Operacion_binaria Opr_bool Operacion_binaria
    (39) Operacion_booleana -> . Operacion_booleana AND Operacion_booleana
    (40) Operacion_booleana -> . Operacion_booleana OR Operacion_booleana
    (41) Operacion_booleana -> . Operacion_binaria IN Rango
    (42) Operacion_booleana -> . LPAREN Operacion_booleana RPAREN
    (43) Operacion_booleana -> . Operacion_booleana EQEQ Operacion_booleana
    (44) Operacion_booleana -> . Operacion_booleana NEQEQ Operacion_booleana
    (45) Operacion_booleana -> . TRUE
    (46) Operacion_booleana -> . FALSE
    (47) Operacion_booleana -> . VAR_IDENTIFIER
    (48) Operacion_booleana -> . NOT Operacion_booleana
    (53) Operacion_binaria -> . Operacion_binaria PLUS Term
    (54) Operacion_binaria -> . Operacion_binaria MINUS Term
    (55) Operacion_binaria -> . Term
    (56) Term -> . Term TIMES Factor
    (57) Term -> . Term DIVIDE Factor
    (58) Term -> . Term MOD Factor
    (59) Term -> . Factor
    (60) Factor -> . NUMBER
    (61) Factor -> . VAR_IDENTIFIER
    (62) Factor -> . LPAREN Operacion_binaria RPAREN
    (63) Factor -> . MINUS Factor

    LPAREN          shift and go to state 44
    TRUE            shift and go to state 29
    FALSE           shift and go to state 39
    VAR_IDENTIFIER  shift and go to state 43
    NOT             shift and go to state 40
    NUMBER          shift and go to state 27
    MINUS           shift and go to state 30

    Operacion_binaria              shift and go to state 45
    Term                           shift and go to state 33
    Factor                         shift and go to state 26
    Operacion_booleana             shift and go to state 116

state 67

    (75) Lista_Aux -> Expresion COMMA . Lista_Aux
    (73) Lista_Aux -> . Expresion
    (74) Lista_Aux -> . STRING
    (75) Lista_Aux -> . Expresion COMMA Lista_Aux
    (76) Lista_Aux -> . STRING COMMA Lista_Aux
    (35) Expresion -> . Operacion_binaria
    (36) Expresion -> . Operacion_booleana
    (37) Expresion -> . Rango
    (53) Operacion_binaria -> . Operacion_binaria PLUS Term
    (54) Operacion_binaria -> . Operacion_binaria MINUS Term
    (55) Operacion_binaria -> . Term
    (38) Operacion_booleana -> . Operacion_binaria Opr_bool Operacion_binaria
    (39) Operacion_booleana -> . Operacion_booleana AND Operacion_booleana
    (40) Operacion_booleana -> . Operacion_booleana OR Operacion_booleana
    (41) Operacion_booleana -> . Operacion_binaria IN Rango
    (42) Operacion_booleana -> . LPAREN Operacion_booleana RPAREN
    (43) Operacion_booleana -> . Operacion_booleana EQEQ Operacion_booleana
    (44) Operacion_booleana -> . Operacion_booleana NEQEQ Operacion_booleana
    (45) Operacion_booleana -> . TRUE
    (46) Operacion_booleana -> . FALSE
    (47) Operacion_booleana -> . VAR_IDENTIFIER
    (48) Operacion_booleana -> . NOT Operacion_booleana
    (64) Rango -> . Operacion_binaria RANGE Operacion_binaria
    (65) Rango -> . Rango PLUS Rango
    (66) Rango -> . Rango TIMES Operacion_binaria
    (67) Rango -> . Rango INTERSECTION Rango
    (68) Rango -> . LPAREN Rango RPAREN
    (69) Rango -> . VAR_IDENTIFIER
    (56) Term -> . Term TIMES Factor
    (57) Term -> . Term DIVIDE Factor
    (58) Term -> . Term MOD Factor
    (59) Term -> . Factor
    (60) Factor -> . NUMBER
    (61) Factor -> . VAR_IDENTIFIER
    (62) Factor -> . LPAREN Operacion_binaria RPAREN
    (63) Factor -> . MINUS Factor

    STRING          shift and go to state 34
    LPAREN          shift and go to state 36
    TRUE            shift and go to state 29
    FALSE           shift and go to state 39
    VAR_IDENTIFIER  shift and go to state 35
    NOT             shift and go to state 40
    NUMBER          shift and go to state 27
    MINUS           shift and go to state 30

    Expresion                      shift and go to state 32
    Operacion_binaria              shift and go to state 38
    Factor                         shift and go to state 26
    Term                           shift and go to state 33
    Lista_Aux                      shift and go to state 117
    Rango                          shift and go to state 37
    Operacion_booleana             shift and go to state 31

state 68

    (57) Term -> Term DIVIDE . Factor
    (60) Factor -> . NUMBER
    (61) Factor -> . VAR_IDENTIFIER
    (62) Factor -> . LPAREN Operacion_binaria RPAREN
    (63) Factor -> . MINUS Factor

    NUMBER          shift and go to state 27
    VAR_IDENTIFIER  shift and go to state 60
    LPAREN          shift and go to state 61
    MINUS           shift and go to state 30

    Factor                         shift and go to state 118

state 69

    (58) Term -> Term MOD . Factor
    (60) Factor -> . NUMBER
    (61) Factor -> . VAR_IDENTIFIER
    (62) Factor -> . LPAREN Operacion_binaria RPAREN
    (63) Factor -> . MINUS Factor

    NUMBER          shift and go to state 27
    VAR_IDENTIFIER  shift and go to state 60
    LPAREN          shift and go to state 61
    MINUS           shift and go to state 30

    Factor                         shift and go to state 119

state 70

    (56) Term -> Term TIMES . Factor
    (60) Factor -> . NUMBER
    (61) Factor -> . VAR_IDENTIFIER
    (62) Factor -> . LPAREN Operacion_binaria RPAREN
    (63) Factor -> . MINUS Factor

    NUMBER          shift and go to state 27
    VAR_IDENTIFIER  shift and go to state 60
    LPAREN          shift and go to state 61
    MINUS           shift and go to state 30

    Factor                         shift and go to state 120

state 71

    (76) Lista_Aux -> STRING COMMA . Lista_Aux
    (73) Lista_Aux -> . Expresion
    (74) Lista_Aux -> . STRING
    (75) Lista_Aux -> . Expresion COMMA Lista_Aux
    (76) Lista_Aux -> . STRING COMMA Lista_Aux
    (35) Expresion -> . Operacion_binaria
    (36) Expresion -> . Operacion_booleana
    (37) Expresion -> . Rango
    (53) Operacion_binaria -> . Operacion_binaria PLUS Term
    (54) Operacion_binaria -> . Operacion_binaria MINUS Term
    (55) Operacion_binaria -> . Term
    (38) Operacion_booleana -> . Operacion_binaria Opr_bool Operacion_binaria
    (39) Operacion_booleana -> . Operacion_booleana AND Operacion_booleana
    (40) Operacion_booleana -> . Operacion_booleana OR Operacion_booleana
    (41) Operacion_booleana -> . Operacion_binaria IN Rango
    (42) Operacion_booleana -> . LPAREN Operacion_booleana RPAREN
    (43) Operacion_booleana -> . Operacion_booleana EQEQ Operacion_booleana
    (44) Operacion_booleana -> . Operacion_booleana NEQEQ Operacion_booleana
    (45) Operacion_booleana -> . TRUE
    (46) Operacion_booleana -> . FALSE
    (47) Operacion_booleana -> . VAR_IDENTIFIER
    (48) Operacion_booleana -> . NOT Operacion_booleana
    (64) Rango -> . Operacion_binaria RANGE Operacion_binaria
    (65) Rango -> . Rango PLUS Rango
    (66) Rango -> . Rango TIMES Operacion_binaria
    (67) Rango -> . Rango INTERSECTION Rango
    (68) Rango -> . LPAREN Rango RPAREN
    (69) Rango -> . VAR_IDENTIFIER
    (56) Term -> . Term TIMES Factor
    (57) Term -> . Term DIVIDE Factor
    (58) Term -> . Term MOD Factor
    (59) Term -> . Factor
    (60) Factor -> . NUMBER
    (61) Factor -> . VAR_IDENTIFIER
    (62) Factor -> . LPAREN Operacion_binaria RPAREN
    (63) Factor -> . MINUS Factor

    STRING          shift and go to state 34
    LPAREN          shift and go to state 36
    TRUE            shift and go to state 29
    FALSE           shift and go to state 39
    VAR_IDENTIFIER  shift and go to state 35
    NOT             shift and go to state 40
    NUMBER          shift and go to state 27
    MINUS           shift and go to state 30

    Expresion                      shift and go to state 32
    Operacion_binaria              shift and go to state 38
    Factor                         shift and go to state 26
    Term                           shift and go to state 33
    Lista_Aux                      shift and go to state 121
    Rango                          shift and go to state 37
    Operacion_booleana             shift and go to state 31

state 72

    (42) Operacion_booleana -> LPAREN Operacion_booleana . RPAREN
    (39) Operacion_booleana -> Operacion_booleana . AND Operacion_booleana
    (40) Operacion_booleana -> Operacion_booleana . OR Operacion_booleana
    (43) Operacion_booleana -> Operacion_booleana . EQEQ Operacion_booleana
    (44) Operacion_booleana -> Operacion_booleana . NEQEQ Operacion_booleana

    RPAREN          shift and go to state 122
    AND             shift and go to state 63
    OR              shift and go to state 65
    EQEQ            shift and go to state 64
    NEQEQ           shift and go to state 66


state 73

    (68) Rango -> LPAREN Rango . RPAREN
    (65) Rango -> Rango . PLUS Rango
    (66) Rango -> Rango . TIMES Operacion_binaria
    (67) Rango -> Rango . INTERSECTION Rango

    RPAREN          shift and go to state 123
    PLUS            shift and go to state 76
    TIMES           shift and go to state 77
    INTERSECTION    shift and go to state 75


state 74

    (62) Factor -> LPAREN Operacion_binaria . RPAREN
    (38) Operacion_booleana -> Operacion_binaria . Opr_bool Operacion_binaria
    (41) Operacion_booleana -> Operacion_binaria . IN Rango
    (64) Rango -> Operacion_binaria . RANGE Operacion_binaria
    (53) Operacion_binaria -> Operacion_binaria . PLUS Term
    (54) Operacion_binaria -> Operacion_binaria . MINUS Term
    (49) Opr_bool -> . GREAT
    (50) Opr_bool -> . LESS
    (51) Opr_bool -> . GREATEQ
    (52) Opr_bool -> . LESSEQ

    RPAREN          shift and go to state 124
    IN              shift and go to state 85
    RANGE           shift and go to state 82
    PLUS            shift and go to state 84
    MINUS           shift and go to state 86
    GREAT           shift and go to state 79
    LESS            shift and go to state 80
    GREATEQ         shift and go to state 78
    LESSEQ          shift and go to state 83

    Opr_bool                       shift and go to state 81

state 75

    (67) Rango -> Rango INTERSECTION . Rango
    (64) Rango -> . Operacion_binaria RANGE Operacion_binaria
    (65) Rango -> . Rango PLUS Rango
    (66) Rango -> . Rango TIMES Operacion_binaria
    (67) Rango -> . Rango INTERSECTION Rango
    (68) Rango -> . LPAREN Rango RPAREN
    (69) Rango -> . VAR_IDENTIFIER
    (53) Operacion_binaria -> . Operacion_binaria PLUS Term
    (54) Operacion_binaria -> . Operacion_binaria MINUS Term
    (55) Operacion_binaria -> . Term
    (56) Term -> . Term TIMES Factor
    (57) Term -> . Term DIVIDE Factor
    (58) Term -> . Term MOD Factor
    (59) Term -> . Factor
    (60) Factor -> . NUMBER
    (61) Factor -> . VAR_IDENTIFIER
    (62) Factor -> . LPAREN Operacion_binaria RPAREN
    (63) Factor -> . MINUS Factor

    LPAREN          shift and go to state 90
    VAR_IDENTIFIER  shift and go to state 125
    NUMBER          shift and go to state 27
    MINUS           shift and go to state 30

    Rango                          shift and go to state 126
    Operacion_binaria              shift and go to state 88
    Term                           shift and go to state 33
    Factor                         shift and go to state 26

state 76

    (65) Rango -> Rango PLUS . Rango
    (64) Rango -> . Operacion_binaria RANGE Operacion_binaria
    (65) Rango -> . Rango PLUS Rango
    (66) Rango -> . Rango TIMES Operacion_binaria
    (67) Rango -> . Rango INTERSECTION Rango
    (68) Rango -> . LPAREN Rango RPAREN
    (69) Rango -> . VAR_IDENTIFIER
    (53) Operacion_binaria -> . Operacion_binaria PLUS Term
    (54) Operacion_binaria -> . Operacion_binaria MINUS Term
    (55) Operacion_binaria -> . Term
    (56) Term -> . Term TIMES Factor
    (57) Term -> . Term DIVIDE Factor
    (58) Term -> . Term MOD Factor
    (59) Term -> . Factor
    (60) Factor -> . NUMBER
    (61) Factor -> . VAR_IDENTIFIER
    (62) Factor -> . LPAREN Operacion_binaria RPAREN
    (63) Factor -> . MINUS Factor

    LPAREN          shift and go to state 90
    VAR_IDENTIFIER  shift and go to state 125
    NUMBER          shift and go to state 27
    MINUS           shift and go to state 30

    Rango                          shift and go to state 127
    Operacion_binaria              shift and go to state 88
    Term                           shift and go to state 33
    Factor                         shift and go to state 26

state 77

    (66) Rango -> Rango TIMES . Operacion_binaria
    (53) Operacion_binaria -> . Operacion_binaria PLUS Term
    (54) Operacion_binaria -> . Operacion_binaria MINUS Term
    (55) Operacion_binaria -> . Term
    (56) Term -> . Term TIMES Factor
    (57) Term -> . Term DIVIDE Factor
    (58) Term -> . Term MOD Factor
    (59) Term -> . Factor
    (60) Factor -> . NUMBER
    (61) Factor -> . VAR_IDENTIFIER
    (62) Factor -> . LPAREN Operacion_binaria RPAREN
    (63) Factor -> . MINUS Factor

    NUMBER          shift and go to state 27
    VAR_IDENTIFIER  shift and go to state 60
    LPAREN          shift and go to state 61
    MINUS           shift and go to state 30

    Operacion_binaria              shift and go to state 128
    Term                           shift and go to state 33
    Factor                         shift and go to state 26

state 78

    (51) Opr_bool -> GREATEQ .

    NUMBER          reduce using rule 51 (Opr_bool -> GREATEQ .)
    VAR_IDENTIFIER  reduce using rule 51 (Opr_bool -> GREATEQ .)
    LPAREN          reduce using rule 51 (Opr_bool -> GREATEQ .)
    MINUS           reduce using rule 51 (Opr_bool -> GREATEQ .)


state 79

    (49) Opr_bool -> GREAT .

    NUMBER          reduce using rule 49 (Opr_bool -> GREAT .)
    VAR_IDENTIFIER  reduce using rule 49 (Opr_bool -> GREAT .)
    LPAREN          reduce using rule 49 (Opr_bool -> GREAT .)
    MINUS           reduce using rule 49 (Opr_bool -> GREAT .)


state 80

    (50) Opr_bool -> LESS .

    NUMBER          reduce using rule 50 (Opr_bool -> LESS .)
    VAR_IDENTIFIER  reduce using rule 50 (Opr_bool -> LESS .)
    LPAREN          reduce using rule 50 (Opr_bool -> LESS .)
    MINUS           reduce using rule 50 (Opr_bool -> LESS .)


state 81

    (38) Operacion_booleana -> Operacion_binaria Opr_bool . Operacion_binaria
    (53) Operacion_binaria -> . Operacion_binaria PLUS Term
    (54) Operacion_binaria -> . Operacion_binaria MINUS Term
    (55) Operacion_binaria -> . Term
    (56) Term -> . Term TIMES Factor
    (57) Term -> . Term DIVIDE Factor
    (58) Term -> . Term MOD Factor
    (59) Term -> . Factor
    (60) Factor -> . NUMBER
    (61) Factor -> . VAR_IDENTIFIER
    (62) Factor -> . LPAREN Operacion_binaria RPAREN
    (63) Factor -> . MINUS Factor

    NUMBER          shift and go to state 27
    VAR_IDENTIFIER  shift and go to state 60
    LPAREN          shift and go to state 61
    MINUS           shift and go to state 30

    Operacion_binaria              shift and go to state 129
    Term                           shift and go to state 33
    Factor                         shift and go to state 26

state 82

    (64) Rango -> Operacion_binaria RANGE . Operacion_binaria
    (53) Operacion_binaria -> . Operacion_binaria PLUS Term
    (54) Operacion_binaria -> . Operacion_binaria MINUS Term
    (55) Operacion_binaria -> . Term
    (56) Term -> . Term TIMES Factor
    (57) Term -> . Term DIVIDE Factor
    (58) Term -> . Term MOD Factor
    (59) Term -> . Factor
    (60) Factor -> . NUMBER
    (61) Factor -> . VAR_IDENTIFIER
    (62) Factor -> . LPAREN Operacion_binaria RPAREN
    (63) Factor -> . MINUS Factor

    NUMBER          shift and go to state 27
    VAR_IDENTIFIER  shift and go to state 60
    LPAREN          shift and go to state 61
    MINUS           shift and go to state 30

    Operacion_binaria              shift and go to state 130
    Term                           shift and go to state 33
    Factor                         shift and go to state 26

state 83

    (52) Opr_bool -> LESSEQ .

    NUMBER          reduce using rule 52 (Opr_bool -> LESSEQ .)
    VAR_IDENTIFIER  reduce using rule 52 (Opr_bool -> LESSEQ .)
    LPAREN          reduce using rule 52 (Opr_bool -> LESSEQ .)
    MINUS           reduce using rule 52 (Opr_bool -> LESSEQ .)


state 84

    (53) Operacion_binaria -> Operacion_binaria PLUS . Term
    (56) Term -> . Term TIMES Factor
    (57) Term -> . Term DIVIDE Factor
    (58) Term -> . Term MOD Factor
    (59) Term -> . Factor
    (60) Factor -> . NUMBER
    (61) Factor -> . VAR_IDENTIFIER
    (62) Factor -> . LPAREN Operacion_binaria RPAREN
    (63) Factor -> . MINUS Factor

    NUMBER          shift and go to state 27
    VAR_IDENTIFIER  shift and go to state 60
    LPAREN          shift and go to state 61
    MINUS           shift and go to state 30

    Term                           shift and go to state 131
    Factor                         shift and go to state 26

state 85

    (41) Operacion_booleana -> Operacion_binaria IN . Rango
    (64) Rango -> . Operacion_binaria RANGE Operacion_binaria
    (65) Rango -> . Rango PLUS Rango
    (66) Rango -> . Rango TIMES Operacion_binaria
    (67) Rango -> . Rango INTERSECTION Rango
    (68) Rango -> . LPAREN Rango RPAREN
    (69) Rango -> . VAR_IDENTIFIER
    (53) Operacion_binaria -> . Operacion_binaria PLUS Term
    (54) Operacion_binaria -> . Operacion_binaria MINUS Term
    (55) Operacion_binaria -> . Term
    (56) Term -> . Term TIMES Factor
    (57) Term -> . Term DIVIDE Factor
    (58) Term -> . Term MOD Factor
    (59) Term -> . Factor
    (60) Factor -> . NUMBER
    (61) Factor -> . VAR_IDENTIFIER
    (62) Factor -> . LPAREN Operacion_binaria RPAREN
    (63) Factor -> . MINUS Factor

    LPAREN          shift and go to state 90
    VAR_IDENTIFIER  shift and go to state 125
    NUMBER          shift and go to state 27
    MINUS           shift and go to state 30

    Rango                          shift and go to state 132
    Operacion_binaria              shift and go to state 88
    Term                           shift and go to state 33
    Factor                         shift and go to state 26

state 86

    (54) Operacion_binaria -> Operacion_binaria MINUS . Term
    (56) Term -> . Term TIMES Factor
    (57) Term -> . Term DIVIDE Factor
    (58) Term -> . Term MOD Factor
    (59) Term -> . Factor
    (60) Factor -> . NUMBER
    (61) Factor -> . VAR_IDENTIFIER
    (62) Factor -> . LPAREN Operacion_binaria RPAREN
    (63) Factor -> . MINUS Factor

    NUMBER          shift and go to state 27
    VAR_IDENTIFIER  shift and go to state 60
    LPAREN          shift and go to state 61
    MINUS           shift and go to state 30

    Term                           shift and go to state 133
    Factor                         shift and go to state 26

state 87

    (48) Operacion_booleana -> NOT Operacion_booleana .
    (39) Operacion_booleana -> Operacion_booleana . AND Operacion_booleana
    (40) Operacion_booleana -> Operacion_booleana . OR Operacion_booleana
    (43) Operacion_booleana -> Operacion_booleana . EQEQ Operacion_booleana
    (44) Operacion_booleana -> Operacion_booleana . NEQEQ Operacion_booleana

    AND             reduce using rule 48 (Operacion_booleana -> NOT Operacion_booleana .)
    OR              reduce using rule 48 (Operacion_booleana -> NOT Operacion_booleana .)
    COMMA           reduce using rule 48 (Operacion_booleana -> NOT Operacion_booleana .)
    $end            reduce using rule 48 (Operacion_booleana -> NOT Operacion_booleana .)
    SEMICOLON       reduce using rule 48 (Operacion_booleana -> NOT Operacion_booleana .)
    INST_END        reduce using rule 48 (Operacion_booleana -> NOT Operacion_booleana .)
    INST_ELSE       reduce using rule 48 (Operacion_booleana -> NOT Operacion_booleana .)
    INST_OF         reduce using rule 48 (Operacion_booleana -> NOT Operacion_booleana .)
    INST_DO         reduce using rule 48 (Operacion_booleana -> NOT Operacion_booleana .)
    INST_THEN       reduce using rule 48 (Operacion_booleana -> NOT Operacion_booleana .)
    RPAREN          reduce using rule 48 (Operacion_booleana -> NOT Operacion_booleana .)
    EQEQ            shift and go to state 64
    NEQEQ           shift and go to state 66

  ! EQEQ            [ reduce using rule 48 (Operacion_booleana -> NOT Operacion_booleana .) ]
  ! NEQEQ           [ reduce using rule 48 (Operacion_booleana -> NOT Operacion_booleana .) ]
  ! AND             [ shift and go to state 63 ]
  ! OR              [ shift and go to state 65 ]


state 88

    (64) Rango -> Operacion_binaria . RANGE Operacion_binaria
    (53) Operacion_binaria -> Operacion_binaria . PLUS Term
    (54) Operacion_binaria -> Operacion_binaria . MINUS Term

    RANGE           shift and go to state 82
    PLUS            shift and go to state 84
    MINUS           shift and go to state 86


state 89

    (23) Inst_Funcion -> TOP LPAREN VAR_IDENTIFIER . RPAREN
    (69) Rango -> VAR_IDENTIFIER .
    (61) Factor -> VAR_IDENTIFIER .

  ! shift/reduce conflict for RPAREN resolved as shift
  ! reduce/reduce conflict for TIMES resolved using rule 61 (Factor -> VAR_IDENTIFIER .)
  ! reduce/reduce conflict for PLUS resolved using rule 61 (Factor -> VAR_IDENTIFIER .)
    RPAREN          shift and go to state 134
    INTERSECTION    reduce using rule 69 (Rango -> VAR_IDENTIFIER .)
    TIMES           reduce using rule 61 (Factor -> VAR_IDENTIFIER .)
    DIVIDE          reduce using rule 61 (Factor -> VAR_IDENTIFIER .)
    MOD             reduce using rule 61 (Factor -> VAR_IDENTIFIER .)
    RANGE           reduce using rule 61 (Factor -> VAR_IDENTIFIER .)
    PLUS            reduce using rule 61 (Factor -> VAR_IDENTIFIER .)
    MINUS           reduce using rule 61 (Factor -> VAR_IDENTIFIER .)

  ! RPAREN          [ reduce using rule 69 (Rango -> VAR_IDENTIFIER .) ]
  ! PLUS            [ reduce using rule 69 (Rango -> VAR_IDENTIFIER .) ]
  ! TIMES           [ reduce using rule 69 (Rango -> VAR_IDENTIFIER .) ]


state 90

    (68) Rango -> LPAREN . Rango RPAREN
    (62) Factor -> LPAREN . Operacion_binaria RPAREN
    (64) Rango -> . Operacion_binaria RANGE Operacion_binaria
    (65) Rango -> . Rango PLUS Rango
    (66) Rango -> . Rango TIMES Operacion_binaria
    (67) Rango -> . Rango INTERSECTION Rango
    (68) Rango -> . LPAREN Rango RPAREN
    (69) Rango -> . VAR_IDENTIFIER
    (53) Operacion_binaria -> . Operacion_binaria PLUS Term
    (54) Operacion_binaria -> . Operacion_binaria MINUS Term
    (55) Operacion_binaria -> . Term
    (56) Term -> . Term TIMES Factor
    (57) Term -> . Term DIVIDE Factor
    (58) Term -> . Term MOD Factor
    (59) Term -> . Factor
    (60) Factor -> . NUMBER
    (61) Factor -> . VAR_IDENTIFIER
    (62) Factor -> . LPAREN Operacion_binaria RPAREN
    (63) Factor -> . MINUS Factor

    LPAREN          shift and go to state 90
    VAR_IDENTIFIER  shift and go to state 125
    NUMBER          shift and go to state 27
    MINUS           shift and go to state 30

    Rango                          shift and go to state 73
    Operacion_binaria              shift and go to state 135
    Term                           shift and go to state 33
    Factor                         shift and go to state 26

state 91

    (19) Inst_Funcion -> TOP LPAREN Rango . RPAREN
    (65) Rango -> Rango . PLUS Rango
    (66) Rango -> Rango . TIMES Operacion_binaria
    (67) Rango -> Rango . INTERSECTION Rango

    RPAREN          shift and go to state 136
    PLUS            shift and go to state 76
    TIMES           shift and go to state 77
    INTERSECTION    shift and go to state 75


state 92

    (87) Inst_While -> INST_WHILE Operacion_booleana INST_DO . Bloque_Inst
    (88) Inst_While -> INST_WHILE Operacion_booleana INST_DO . Inst
    (3) Bloque_Inst -> . INST_BEGIN Lista_Inst INST_END
    (4) Bloque_Inst -> . INST_BEGIN Inst_Declare Lista_Inst INST_END
    (5) Bloque_Inst -> . INST_BEGIN Inst_Declare INST_END
    (8) Inst -> . Inst_Asignacion
    (9) Inst -> . Inst_Lectura
    (10) Inst -> . Inst_For
    (11) Inst -> . Inst_While
    (12) Inst -> . Inst_If
    (13) Inst -> . Inst_Case
    (14) Inst -> . Inst_Salida
    (15) Inst -> . Inst_Funcion
    (16) Inst -> . Bloque_Inst
    (34) Inst_Asignacion -> . VAR_IDENTIFIER EQUAL Expresion
    (70) Inst_Lectura -> . INST_READ VAR_IDENTIFIER
    (86) Inst_For -> . INST_FOR VAR_IDENTIFIER INST_IN Rango INST_DO Bloque_Control
    (87) Inst_While -> . INST_WHILE Operacion_booleana INST_DO Bloque_Inst
    (88) Inst_While -> . INST_WHILE Operacion_booleana INST_DO Inst
    (79) Inst_If -> . INST_IF Operacion_booleana INST_THEN Bloque_Control
    (80) Inst_If -> . INST_IF Operacion_booleana INST_THEN Bloque_Control INST_ELSE Bloque_Control
    (81) Inst_Case -> . INST_CASE Operacion_booleana INST_OF Casos INST_END
    (71) Inst_Salida -> . INST_WRITE Lista_Aux
    (72) Inst_Salida -> . INST_WRITELN Lista_Aux
    (17) Inst_Funcion -> . RTOI LPAREN Rango RPAREN
    (18) Inst_Funcion -> . LENGTH LPAREN Rango RPAREN
    (19) Inst_Funcion -> . TOP LPAREN Rango RPAREN
    (20) Inst_Funcion -> . BOTTOM LPAREN Rango RPAREN
    (21) Inst_Funcion -> . RTOI LPAREN VAR_IDENTIFIER RPAREN
    (22) Inst_Funcion -> . LENGTH LPAREN VAR_IDENTIFIER RPAREN
    (23) Inst_Funcion -> . TOP LPAREN VAR_IDENTIFIER RPAREN
    (24) Inst_Funcion -> . BOTTOM LPAREN VAR_IDENTIFIER RPAREN

    INST_BEGIN      shift and go to state 10
    VAR_IDENTIFIER  shift and go to state 16
    INST_READ       shift and go to state 9
    INST_FOR        shift and go to state 19
    INST_WHILE      shift and go to state 8
    INST_IF         shift and go to state 20
    INST_CASE       shift and go to state 18
    INST_WRITE      shift and go to state 4
    INST_WRITELN    shift and go to state 21
    RTOI            shift and go to state 23
    LENGTH          shift and go to state 22
    TOP             shift and go to state 5
    BOTTOM          shift and go to state 11

    Inst_Salida                    shift and go to state 7
    Inst_Funcion                   shift and go to state 3
    Bloque_Inst                    shift and go to state 137
    Inst_If                        shift and go to state 17
    Inst_For                       shift and go to state 12
    Inst_While                     shift and go to state 14
    Inst                           shift and go to state 138
    Inst_Asignacion                shift and go to state 24
    Inst_Case                      shift and go to state 25
    Inst_Lectura                   shift and go to state 15

state 93

    (62) Factor -> LPAREN Operacion_binaria . RPAREN
    (38) Operacion_booleana -> Operacion_binaria . Opr_bool Operacion_binaria
    (41) Operacion_booleana -> Operacion_binaria . IN Rango
    (53) Operacion_binaria -> Operacion_binaria . PLUS Term
    (54) Operacion_binaria -> Operacion_binaria . MINUS Term
    (49) Opr_bool -> . GREAT
    (50) Opr_bool -> . LESS
    (51) Opr_bool -> . GREATEQ
    (52) Opr_bool -> . LESSEQ

    RPAREN          shift and go to state 124
    IN              shift and go to state 85
    PLUS            shift and go to state 84
    MINUS           shift and go to state 86
    GREAT           shift and go to state 79
    LESS            shift and go to state 80
    GREATEQ         shift and go to state 78
    LESSEQ          shift and go to state 83

    Opr_bool                       shift and go to state 81

state 94

    (29) Lista_Variables -> VAR_IDENTIFIER .
    (30) Lista_Variables -> VAR_IDENTIFIER . COMMA Lista_Variables

    INST_AS         reduce using rule 29 (Lista_Variables -> VAR_IDENTIFIER .)
    COMMA           shift and go to state 139


state 95

    (25) Inst_Declare -> INST_DECLARE Lista_DeclareTipos .

    INST_END        reduce using rule 25 (Inst_Declare -> INST_DECLARE Lista_DeclareTipos .)
    VAR_IDENTIFIER  reduce using rule 25 (Inst_Declare -> INST_DECLARE Lista_DeclareTipos .)
    INST_READ       reduce using rule 25 (Inst_Declare -> INST_DECLARE Lista_DeclareTipos .)
    INST_FOR        reduce using rule 25 (Inst_Declare -> INST_DECLARE Lista_DeclareTipos .)
    INST_WHILE      reduce using rule 25 (Inst_Declare -> INST_DECLARE Lista_DeclareTipos .)
    INST_IF         reduce using rule 25 (Inst_Declare -> INST_DECLARE Lista_DeclareTipos .)
    INST_CASE       reduce using rule 25 (Inst_Declare -> INST_DECLARE Lista_DeclareTipos .)
    INST_WRITE      reduce using rule 25 (Inst_Declare -> INST_DECLARE Lista_DeclareTipos .)
    INST_WRITELN    reduce using rule 25 (Inst_Declare -> INST_DECLARE Lista_DeclareTipos .)
    RTOI            reduce using rule 25 (Inst_Declare -> INST_DECLARE Lista_DeclareTipos .)
    LENGTH          reduce using rule 25 (Inst_Declare -> INST_DECLARE Lista_DeclareTipos .)
    TOP             reduce using rule 25 (Inst_Declare -> INST_DECLARE Lista_DeclareTipos .)
    BOTTOM          reduce using rule 25 (Inst_Declare -> INST_DECLARE Lista_DeclareTipos .)
    INST_BEGIN      reduce using rule 25 (Inst_Declare -> INST_DECLARE Lista_DeclareTipos .)


state 96

    (28) Lista_Declare -> Lista_Variables . INST_AS Tipo

    INST_AS         shift and go to state 140


state 97

    (26) Lista_DeclareTipos -> Lista_Declare .
    (27) Lista_DeclareTipos -> Lista_Declare . SEMICOLON Lista_DeclareTipos

    INST_END        reduce using rule 26 (Lista_DeclareTipos -> Lista_Declare .)
    VAR_IDENTIFIER  reduce using rule 26 (Lista_DeclareTipos -> Lista_Declare .)
    INST_READ       reduce using rule 26 (Lista_DeclareTipos -> Lista_Declare .)
    INST_FOR        reduce using rule 26 (Lista_DeclareTipos -> Lista_Declare .)
    INST_WHILE      reduce using rule 26 (Lista_DeclareTipos -> Lista_Declare .)
    INST_IF         reduce using rule 26 (Lista_DeclareTipos -> Lista_Declare .)
    INST_CASE       reduce using rule 26 (Lista_DeclareTipos -> Lista_Declare .)
    INST_WRITE      reduce using rule 26 (Lista_DeclareTipos -> Lista_Declare .)
    INST_WRITELN    reduce using rule 26 (Lista_DeclareTipos -> Lista_Declare .)
    RTOI            reduce using rule 26 (Lista_DeclareTipos -> Lista_Declare .)
    LENGTH          reduce using rule 26 (Lista_DeclareTipos -> Lista_Declare .)
    TOP             reduce using rule 26 (Lista_DeclareTipos -> Lista_Declare .)
    BOTTOM          reduce using rule 26 (Lista_DeclareTipos -> Lista_Declare .)
    INST_BEGIN      reduce using rule 26 (Lista_DeclareTipos -> Lista_Declare .)
    SEMICOLON       shift and go to state 141


state 98

    (5) Bloque_Inst -> INST_BEGIN Inst_Declare INST_END .

    SEMICOLON       reduce using rule 5 (Bloque_Inst -> INST_BEGIN Inst_Declare INST_END .)
    INST_END        reduce using rule 5 (Bloque_Inst -> INST_BEGIN Inst_Declare INST_END .)
    $end            reduce using rule 5 (Bloque_Inst -> INST_BEGIN Inst_Declare INST_END .)
    INST_ELSE       reduce using rule 5 (Bloque_Inst -> INST_BEGIN Inst_Declare INST_END .)


state 99

    (4) Bloque_Inst -> INST_BEGIN Inst_Declare Lista_Inst . INST_END

    INST_END        shift and go to state 142


state 100

    (7) Lista_Inst -> Inst SEMICOLON . Lista_Inst
    (6) Lista_Inst -> . Inst
    (7) Lista_Inst -> . Inst SEMICOLON Lista_Inst
    (8) Inst -> . Inst_Asignacion
    (9) Inst -> . Inst_Lectura
    (10) Inst -> . Inst_For
    (11) Inst -> . Inst_While
    (12) Inst -> . Inst_If
    (13) Inst -> . Inst_Case
    (14) Inst -> . Inst_Salida
    (15) Inst -> . Inst_Funcion
    (16) Inst -> . Bloque_Inst
    (34) Inst_Asignacion -> . VAR_IDENTIFIER EQUAL Expresion
    (70) Inst_Lectura -> . INST_READ VAR_IDENTIFIER
    (86) Inst_For -> . INST_FOR VAR_IDENTIFIER INST_IN Rango INST_DO Bloque_Control
    (87) Inst_While -> . INST_WHILE Operacion_booleana INST_DO Bloque_Inst
    (88) Inst_While -> . INST_WHILE Operacion_booleana INST_DO Inst
    (79) Inst_If -> . INST_IF Operacion_booleana INST_THEN Bloque_Control
    (80) Inst_If -> . INST_IF Operacion_booleana INST_THEN Bloque_Control INST_ELSE Bloque_Control
    (81) Inst_Case -> . INST_CASE Operacion_booleana INST_OF Casos INST_END
    (71) Inst_Salida -> . INST_WRITE Lista_Aux
    (72) Inst_Salida -> . INST_WRITELN Lista_Aux
    (17) Inst_Funcion -> . RTOI LPAREN Rango RPAREN
    (18) Inst_Funcion -> . LENGTH LPAREN Rango RPAREN
    (19) Inst_Funcion -> . TOP LPAREN Rango RPAREN
    (20) Inst_Funcion -> . BOTTOM LPAREN Rango RPAREN
    (21) Inst_Funcion -> . RTOI LPAREN VAR_IDENTIFIER RPAREN
    (22) Inst_Funcion -> . LENGTH LPAREN VAR_IDENTIFIER RPAREN
    (23) Inst_Funcion -> . TOP LPAREN VAR_IDENTIFIER RPAREN
    (24) Inst_Funcion -> . BOTTOM LPAREN VAR_IDENTIFIER RPAREN
    (3) Bloque_Inst -> . INST_BEGIN Lista_Inst INST_END
    (4) Bloque_Inst -> . INST_BEGIN Inst_Declare Lista_Inst INST_END
    (5) Bloque_Inst -> . INST_BEGIN Inst_Declare INST_END

    VAR_IDENTIFIER  shift and go to state 16
    INST_READ       shift and go to state 9
    INST_FOR        shift and go to state 19
    INST_WHILE      shift and go to state 8
    INST_IF         shift and go to state 20
    INST_CASE       shift and go to state 18
    INST_WRITE      shift and go to state 4
    INST_WRITELN    shift and go to state 21
    RTOI            shift and go to state 23
    LENGTH          shift and go to state 22
    TOP             shift and go to state 5
    BOTTOM          shift and go to state 11
    INST_BEGIN      shift and go to state 10

    Inst_Salida                    shift and go to state 7
    Inst_Funcion                   shift and go to state 3
    Bloque_Inst                    shift and go to state 48
    Inst_If                        shift and go to state 17
    Inst_For                       shift and go to state 12
    Inst_While                     shift and go to state 14
    Inst                           shift and go to state 50
    Inst_Asignacion                shift and go to state 24
    Inst_Case                      shift and go to state 25
    Inst_Lectura                   shift and go to state 15
    Lista_Inst                     shift and go to state 143

state 101

    (3) Bloque_Inst -> INST_BEGIN Lista_Inst INST_END .

    SEMICOLON       reduce using rule 3 (Bloque_Inst -> INST_BEGIN Lista_Inst INST_END .)
    INST_END        reduce using rule 3 (Bloque_Inst -> INST_BEGIN Lista_Inst INST_END .)
    $end            reduce using rule 3 (Bloque_Inst -> INST_BEGIN Lista_Inst INST_END .)
    INST_ELSE       reduce using rule 3 (Bloque_Inst -> INST_BEGIN Lista_Inst INST_END .)


state 102

    (24) Inst_Funcion -> BOTTOM LPAREN VAR_IDENTIFIER . RPAREN
    (69) Rango -> VAR_IDENTIFIER .
    (61) Factor -> VAR_IDENTIFIER .

  ! shift/reduce conflict for RPAREN resolved as shift
  ! reduce/reduce conflict for TIMES resolved using rule 61 (Factor -> VAR_IDENTIFIER .)
  ! reduce/reduce conflict for PLUS resolved using rule 61 (Factor -> VAR_IDENTIFIER .)
    RPAREN          shift and go to state 144
    INTERSECTION    reduce using rule 69 (Rango -> VAR_IDENTIFIER .)
    TIMES           reduce using rule 61 (Factor -> VAR_IDENTIFIER .)
    DIVIDE          reduce using rule 61 (Factor -> VAR_IDENTIFIER .)
    MOD             reduce using rule 61 (Factor -> VAR_IDENTIFIER .)
    RANGE           reduce using rule 61 (Factor -> VAR_IDENTIFIER .)
    PLUS            reduce using rule 61 (Factor -> VAR_IDENTIFIER .)
    MINUS           reduce using rule 61 (Factor -> VAR_IDENTIFIER .)

  ! RPAREN          [ reduce using rule 69 (Rango -> VAR_IDENTIFIER .) ]
  ! PLUS            [ reduce using rule 69 (Rango -> VAR_IDENTIFIER .) ]
  ! TIMES           [ reduce using rule 69 (Rango -> VAR_IDENTIFIER .) ]


state 103

    (20) Inst_Funcion -> BOTTOM LPAREN Rango . RPAREN
    (65) Rango -> Rango . PLUS Rango
    (66) Rango -> Rango . TIMES Operacion_binaria
    (67) Rango -> Rango . INTERSECTION Rango

    RPAREN          shift and go to state 145
    PLUS            shift and go to state 76
    TIMES           shift and go to state 77
    INTERSECTION    shift and go to state 75


state 104

    (34) Inst_Asignacion -> VAR_IDENTIFIER EQUAL Expresion .

    $end            reduce using rule 34 (Inst_Asignacion -> VAR_IDENTIFIER EQUAL Expresion .)
    SEMICOLON       reduce using rule 34 (Inst_Asignacion -> VAR_IDENTIFIER EQUAL Expresion .)
    INST_END        reduce using rule 34 (Inst_Asignacion -> VAR_IDENTIFIER EQUAL Expresion .)
    INST_ELSE       reduce using rule 34 (Inst_Asignacion -> VAR_IDENTIFIER EQUAL Expresion .)


state 105

    (81) Inst_Case -> INST_CASE Operacion_booleana INST_OF . Casos INST_END
    (82) Casos -> . VAR_IDENTIFIER CASE_ASSIGN Bloque_Control
    (83) Casos -> . Rango CASE_ASSIGN Bloque_Control
    (84) Casos -> . VAR_IDENTIFIER CASE_ASSIGN Bloque_Control SEMICOLON Casos
    (85) Casos -> . Rango CASE_ASSIGN Bloque_Control SEMICOLON Casos
    (64) Rango -> . Operacion_binaria RANGE Operacion_binaria
    (65) Rango -> . Rango PLUS Rango
    (66) Rango -> . Rango TIMES Operacion_binaria
    (67) Rango -> . Rango INTERSECTION Rango
    (68) Rango -> . LPAREN Rango RPAREN
    (69) Rango -> . VAR_IDENTIFIER
    (53) Operacion_binaria -> . Operacion_binaria PLUS Term
    (54) Operacion_binaria -> . Operacion_binaria MINUS Term
    (55) Operacion_binaria -> . Term
    (56) Term -> . Term TIMES Factor
    (57) Term -> . Term DIVIDE Factor
    (58) Term -> . Term MOD Factor
    (59) Term -> . Factor
    (60) Factor -> . NUMBER
    (61) Factor -> . VAR_IDENTIFIER
    (62) Factor -> . LPAREN Operacion_binaria RPAREN
    (63) Factor -> . MINUS Factor

    VAR_IDENTIFIER  shift and go to state 147
    LPAREN          shift and go to state 90
    NUMBER          shift and go to state 27
    MINUS           shift and go to state 30

    Operacion_binaria              shift and go to state 88
    Term                           shift and go to state 33
    Factor                         shift and go to state 26
    Rango                          shift and go to state 148
    Casos                          shift and go to state 146

state 106

    (86) Inst_For -> INST_FOR VAR_IDENTIFIER INST_IN . Rango INST_DO Bloque_Control
    (64) Rango -> . Operacion_binaria RANGE Operacion_binaria
    (65) Rango -> . Rango PLUS Rango
    (66) Rango -> . Rango TIMES Operacion_binaria
    (67) Rango -> . Rango INTERSECTION Rango
    (68) Rango -> . LPAREN Rango RPAREN
    (69) Rango -> . VAR_IDENTIFIER
    (53) Operacion_binaria -> . Operacion_binaria PLUS Term
    (54) Operacion_binaria -> . Operacion_binaria MINUS Term
    (55) Operacion_binaria -> . Term
    (56) Term -> . Term TIMES Factor
    (57) Term -> . Term DIVIDE Factor
    (58) Term -> . Term MOD Factor
    (59) Term -> . Factor
    (60) Factor -> . NUMBER
    (61) Factor -> . VAR_IDENTIFIER
    (62) Factor -> . LPAREN Operacion_binaria RPAREN
    (63) Factor -> . MINUS Factor

    LPAREN          shift and go to state 90
    VAR_IDENTIFIER  shift and go to state 125
    NUMBER          shift and go to state 27
    MINUS           shift and go to state 30

    Rango                          shift and go to state 149
    Operacion_binaria              shift and go to state 88
    Term                           shift and go to state 33
    Factor                         shift and go to state 26

state 107

    (79) Inst_If -> INST_IF Operacion_booleana INST_THEN . Bloque_Control
    (80) Inst_If -> INST_IF Operacion_booleana INST_THEN . Bloque_Control INST_ELSE Bloque_Control
    (77) Bloque_Control -> . Inst
    (78) Bloque_Control -> . Bloque_Inst
    (8) Inst -> . Inst_Asignacion
    (9) Inst -> . Inst_Lectura
    (10) Inst -> . Inst_For
    (11) Inst -> . Inst_While
    (12) Inst -> . Inst_If
    (13) Inst -> . Inst_Case
    (14) Inst -> . Inst_Salida
    (15) Inst -> . Inst_Funcion
    (16) Inst -> . Bloque_Inst
    (3) Bloque_Inst -> . INST_BEGIN Lista_Inst INST_END
    (4) Bloque_Inst -> . INST_BEGIN Inst_Declare Lista_Inst INST_END
    (5) Bloque_Inst -> . INST_BEGIN Inst_Declare INST_END
    (34) Inst_Asignacion -> . VAR_IDENTIFIER EQUAL Expresion
    (70) Inst_Lectura -> . INST_READ VAR_IDENTIFIER
    (86) Inst_For -> . INST_FOR VAR_IDENTIFIER INST_IN Rango INST_DO Bloque_Control
    (87) Inst_While -> . INST_WHILE Operacion_booleana INST_DO Bloque_Inst
    (88) Inst_While -> . INST_WHILE Operacion_booleana INST_DO Inst
    (79) Inst_If -> . INST_IF Operacion_booleana INST_THEN Bloque_Control
    (80) Inst_If -> . INST_IF Operacion_booleana INST_THEN Bloque_Control INST_ELSE Bloque_Control
    (81) Inst_Case -> . INST_CASE Operacion_booleana INST_OF Casos INST_END
    (71) Inst_Salida -> . INST_WRITE Lista_Aux
    (72) Inst_Salida -> . INST_WRITELN Lista_Aux
    (17) Inst_Funcion -> . RTOI LPAREN Rango RPAREN
    (18) Inst_Funcion -> . LENGTH LPAREN Rango RPAREN
    (19) Inst_Funcion -> . TOP LPAREN Rango RPAREN
    (20) Inst_Funcion -> . BOTTOM LPAREN Rango RPAREN
    (21) Inst_Funcion -> . RTOI LPAREN VAR_IDENTIFIER RPAREN
    (22) Inst_Funcion -> . LENGTH LPAREN VAR_IDENTIFIER RPAREN
    (23) Inst_Funcion -> . TOP LPAREN VAR_IDENTIFIER RPAREN
    (24) Inst_Funcion -> . BOTTOM LPAREN VAR_IDENTIFIER RPAREN

    INST_BEGIN      shift and go to state 10
    VAR_IDENTIFIER  shift and go to state 16
    INST_READ       shift and go to state 9
    INST_FOR        shift and go to state 19
    INST_WHILE      shift and go to state 8
    INST_IF         shift and go to state 20
    INST_CASE       shift and go to state 18
    INST_WRITE      shift and go to state 4
    INST_WRITELN    shift and go to state 21
    RTOI            shift and go to state 23
    LENGTH          shift and go to state 22
    TOP             shift and go to state 5
    BOTTOM          shift and go to state 11

    Bloque_Control                 shift and go to state 151
    Inst_Salida                    shift and go to state 7
    Inst_Funcion                   shift and go to state 3
    Bloque_Inst                    shift and go to state 150
    Inst_If                        shift and go to state 17
    Inst_For                       shift and go to state 12
    Inst_While                     shift and go to state 14
    Inst                           shift and go to state 152
    Inst_Asignacion                shift and go to state 24
    Inst_Case                      shift and go to state 25
    Inst_Lectura                   shift and go to state 15

state 108

    (22) Inst_Funcion -> LENGTH LPAREN VAR_IDENTIFIER . RPAREN
    (69) Rango -> VAR_IDENTIFIER .
    (61) Factor -> VAR_IDENTIFIER .

  ! shift/reduce conflict for RPAREN resolved as shift
  ! reduce/reduce conflict for TIMES resolved using rule 61 (Factor -> VAR_IDENTIFIER .)
  ! reduce/reduce conflict for PLUS resolved using rule 61 (Factor -> VAR_IDENTIFIER .)
    RPAREN          shift and go to state 153
    INTERSECTION    reduce using rule 69 (Rango -> VAR_IDENTIFIER .)
    TIMES           reduce using rule 61 (Factor -> VAR_IDENTIFIER .)
    DIVIDE          reduce using rule 61 (Factor -> VAR_IDENTIFIER .)
    MOD             reduce using rule 61 (Factor -> VAR_IDENTIFIER .)
    RANGE           reduce using rule 61 (Factor -> VAR_IDENTIFIER .)
    PLUS            reduce using rule 61 (Factor -> VAR_IDENTIFIER .)
    MINUS           reduce using rule 61 (Factor -> VAR_IDENTIFIER .)

  ! RPAREN          [ reduce using rule 69 (Rango -> VAR_IDENTIFIER .) ]
  ! PLUS            [ reduce using rule 69 (Rango -> VAR_IDENTIFIER .) ]
  ! TIMES           [ reduce using rule 69 (Rango -> VAR_IDENTIFIER .) ]


state 109

    (18) Inst_Funcion -> LENGTH LPAREN Rango . RPAREN
    (65) Rango -> Rango . PLUS Rango
    (66) Rango -> Rango . TIMES Operacion_binaria
    (67) Rango -> Rango . INTERSECTION Rango

    RPAREN          shift and go to state 154
    PLUS            shift and go to state 76
    TIMES           shift and go to state 77
    INTERSECTION    shift and go to state 75


state 110

    (21) Inst_Funcion -> RTOI LPAREN VAR_IDENTIFIER . RPAREN
    (69) Rango -> VAR_IDENTIFIER .
    (61) Factor -> VAR_IDENTIFIER .

  ! shift/reduce conflict for RPAREN resolved as shift
  ! reduce/reduce conflict for TIMES resolved using rule 61 (Factor -> VAR_IDENTIFIER .)
  ! reduce/reduce conflict for PLUS resolved using rule 61 (Factor -> VAR_IDENTIFIER .)
    RPAREN          shift and go to state 155
    INTERSECTION    reduce using rule 69 (Rango -> VAR_IDENTIFIER .)
    TIMES           reduce using rule 61 (Factor -> VAR_IDENTIFIER .)
    DIVIDE          reduce using rule 61 (Factor -> VAR_IDENTIFIER .)
    MOD             reduce using rule 61 (Factor -> VAR_IDENTIFIER .)
    RANGE           reduce using rule 61 (Factor -> VAR_IDENTIFIER .)
    PLUS            reduce using rule 61 (Factor -> VAR_IDENTIFIER .)
    MINUS           reduce using rule 61 (Factor -> VAR_IDENTIFIER .)

  ! RPAREN          [ reduce using rule 69 (Rango -> VAR_IDENTIFIER .) ]
  ! PLUS            [ reduce using rule 69 (Rango -> VAR_IDENTIFIER .) ]
  ! TIMES           [ reduce using rule 69 (Rango -> VAR_IDENTIFIER .) ]


state 111

    (17) Inst_Funcion -> RTOI LPAREN Rango . RPAREN
    (65) Rango -> Rango . PLUS Rango
    (66) Rango -> Rango . TIMES Operacion_binaria
    (67) Rango -> Rango . INTERSECTION Rango

    RPAREN          shift and go to state 156
    PLUS            shift and go to state 76
    TIMES           shift and go to state 77
    INTERSECTION    shift and go to state 75


state 112

    (62) Factor -> LPAREN Operacion_binaria . RPAREN
    (53) Operacion_binaria -> Operacion_binaria . PLUS Term
    (54) Operacion_binaria -> Operacion_binaria . MINUS Term

    RPAREN          shift and go to state 124
    PLUS            shift and go to state 84
    MINUS           shift and go to state 86


state 113

    (39) Operacion_booleana -> Operacion_booleana AND Operacion_booleana .
    (39) Operacion_booleana -> Operacion_booleana . AND Operacion_booleana
    (40) Operacion_booleana -> Operacion_booleana . OR Operacion_booleana
    (43) Operacion_booleana -> Operacion_booleana . EQEQ Operacion_booleana
    (44) Operacion_booleana -> Operacion_booleana . NEQEQ Operacion_booleana

    AND             reduce using rule 39 (Operacion_booleana -> Operacion_booleana AND Operacion_booleana .)
    OR              reduce using rule 39 (Operacion_booleana -> Operacion_booleana AND Operacion_booleana .)
    COMMA           reduce using rule 39 (Operacion_booleana -> Operacion_booleana AND Operacion_booleana .)
    $end            reduce using rule 39 (Operacion_booleana -> Operacion_booleana AND Operacion_booleana .)
    SEMICOLON       reduce using rule 39 (Operacion_booleana -> Operacion_booleana AND Operacion_booleana .)
    INST_END        reduce using rule 39 (Operacion_booleana -> Operacion_booleana AND Operacion_booleana .)
    INST_ELSE       reduce using rule 39 (Operacion_booleana -> Operacion_booleana AND Operacion_booleana .)
    INST_OF         reduce using rule 39 (Operacion_booleana -> Operacion_booleana AND Operacion_booleana .)
    INST_DO         reduce using rule 39 (Operacion_booleana -> Operacion_booleana AND Operacion_booleana .)
    INST_THEN       reduce using rule 39 (Operacion_booleana -> Operacion_booleana AND Operacion_booleana .)
    RPAREN          reduce using rule 39 (Operacion_booleana -> Operacion_booleana AND Operacion_booleana .)
    EQEQ            shift and go to state 64
    NEQEQ           shift and go to state 66

  ! EQEQ            [ reduce using rule 39 (Operacion_booleana -> Operacion_booleana AND Operacion_booleana .) ]
  ! NEQEQ           [ reduce using rule 39 (Operacion_booleana -> Operacion_booleana AND Operacion_booleana .) ]
  ! AND             [ shift and go to state 63 ]
  ! OR              [ shift and go to state 65 ]


state 114

    (43) Operacion_booleana -> Operacion_booleana EQEQ Operacion_booleana .
    (39) Operacion_booleana -> Operacion_booleana . AND Operacion_booleana
    (40) Operacion_booleana -> Operacion_booleana . OR Operacion_booleana
    (43) Operacion_booleana -> Operacion_booleana . EQEQ Operacion_booleana
    (44) Operacion_booleana -> Operacion_booleana . NEQEQ Operacion_booleana

    AND             reduce using rule 43 (Operacion_booleana -> Operacion_booleana EQEQ Operacion_booleana .)
    OR              reduce using rule 43 (Operacion_booleana -> Operacion_booleana EQEQ Operacion_booleana .)
    EQEQ            reduce using rule 43 (Operacion_booleana -> Operacion_booleana EQEQ Operacion_booleana .)
    NEQEQ           reduce using rule 43 (Operacion_booleana -> Operacion_booleana EQEQ Operacion_booleana .)
    COMMA           reduce using rule 43 (Operacion_booleana -> Operacion_booleana EQEQ Operacion_booleana .)
    $end            reduce using rule 43 (Operacion_booleana -> Operacion_booleana EQEQ Operacion_booleana .)
    SEMICOLON       reduce using rule 43 (Operacion_booleana -> Operacion_booleana EQEQ Operacion_booleana .)
    INST_END        reduce using rule 43 (Operacion_booleana -> Operacion_booleana EQEQ Operacion_booleana .)
    INST_ELSE       reduce using rule 43 (Operacion_booleana -> Operacion_booleana EQEQ Operacion_booleana .)
    INST_OF         reduce using rule 43 (Operacion_booleana -> Operacion_booleana EQEQ Operacion_booleana .)
    INST_DO         reduce using rule 43 (Operacion_booleana -> Operacion_booleana EQEQ Operacion_booleana .)
    INST_THEN       reduce using rule 43 (Operacion_booleana -> Operacion_booleana EQEQ Operacion_booleana .)
    RPAREN          reduce using rule 43 (Operacion_booleana -> Operacion_booleana EQEQ Operacion_booleana .)

  ! AND             [ shift and go to state 63 ]
  ! OR              [ shift and go to state 65 ]
  ! EQEQ            [ shift and go to state 64 ]
  ! NEQEQ           [ shift and go to state 66 ]


state 115

    (40) Operacion_booleana -> Operacion_booleana OR Operacion_booleana .
    (39) Operacion_booleana -> Operacion_booleana . AND Operacion_booleana
    (40) Operacion_booleana -> Operacion_booleana . OR Operacion_booleana
    (43) Operacion_booleana -> Operacion_booleana . EQEQ Operacion_booleana
    (44) Operacion_booleana -> Operacion_booleana . NEQEQ Operacion_booleana

    OR              reduce using rule 40 (Operacion_booleana -> Operacion_booleana OR Operacion_booleana .)
    COMMA           reduce using rule 40 (Operacion_booleana -> Operacion_booleana OR Operacion_booleana .)
    $end            reduce using rule 40 (Operacion_booleana -> Operacion_booleana OR Operacion_booleana .)
    SEMICOLON       reduce using rule 40 (Operacion_booleana -> Operacion_booleana OR Operacion_booleana .)
    INST_END        reduce using rule 40 (Operacion_booleana -> Operacion_booleana OR Operacion_booleana .)
    INST_ELSE       reduce using rule 40 (Operacion_booleana -> Operacion_booleana OR Operacion_booleana .)
    INST_OF         reduce using rule 40 (Operacion_booleana -> Operacion_booleana OR Operacion_booleana .)
    INST_DO         reduce using rule 40 (Operacion_booleana -> Operacion_booleana OR Operacion_booleana .)
    INST_THEN       reduce using rule 40 (Operacion_booleana -> Operacion_booleana OR Operacion_booleana .)
    RPAREN          reduce using rule 40 (Operacion_booleana -> Operacion_booleana OR Operacion_booleana .)
    AND             shift and go to state 63
    EQEQ            shift and go to state 64
    NEQEQ           shift and go to state 66

  ! AND             [ reduce using rule 40 (Operacion_booleana -> Operacion_booleana OR Operacion_booleana .) ]
  ! EQEQ            [ reduce using rule 40 (Operacion_booleana -> Operacion_booleana OR Operacion_booleana .) ]
  ! NEQEQ           [ reduce using rule 40 (Operacion_booleana -> Operacion_booleana OR Operacion_booleana .) ]
  ! OR              [ shift and go to state 65 ]


state 116

    (44) Operacion_booleana -> Operacion_booleana NEQEQ Operacion_booleana .
    (39) Operacion_booleana -> Operacion_booleana . AND Operacion_booleana
    (40) Operacion_booleana -> Operacion_booleana . OR Operacion_booleana
    (43) Operacion_booleana -> Operacion_booleana . EQEQ Operacion_booleana
    (44) Operacion_booleana -> Operacion_booleana . NEQEQ Operacion_booleana

    AND             reduce using rule 44 (Operacion_booleana -> Operacion_booleana NEQEQ Operacion_booleana .)
    OR              reduce using rule 44 (Operacion_booleana -> Operacion_booleana NEQEQ Operacion_booleana .)
    EQEQ            reduce using rule 44 (Operacion_booleana -> Operacion_booleana NEQEQ Operacion_booleana .)
    NEQEQ           reduce using rule 44 (Operacion_booleana -> Operacion_booleana NEQEQ Operacion_booleana .)
    COMMA           reduce using rule 44 (Operacion_booleana -> Operacion_booleana NEQEQ Operacion_booleana .)
    $end            reduce using rule 44 (Operacion_booleana -> Operacion_booleana NEQEQ Operacion_booleana .)
    SEMICOLON       reduce using rule 44 (Operacion_booleana -> Operacion_booleana NEQEQ Operacion_booleana .)
    INST_END        reduce using rule 44 (Operacion_booleana -> Operacion_booleana NEQEQ Operacion_booleana .)
    INST_ELSE       reduce using rule 44 (Operacion_booleana -> Operacion_booleana NEQEQ Operacion_booleana .)
    INST_OF         reduce using rule 44 (Operacion_booleana -> Operacion_booleana NEQEQ Operacion_booleana .)
    INST_DO         reduce using rule 44 (Operacion_booleana -> Operacion_booleana NEQEQ Operacion_booleana .)
    INST_THEN       reduce using rule 44 (Operacion_booleana -> Operacion_booleana NEQEQ Operacion_booleana .)
    RPAREN          reduce using rule 44 (Operacion_booleana -> Operacion_booleana NEQEQ Operacion_booleana .)

  ! AND             [ shift and go to state 63 ]
  ! OR              [ shift and go to state 65 ]
  ! EQEQ            [ shift and go to state 64 ]
  ! NEQEQ           [ shift and go to state 66 ]


state 117

    (75) Lista_Aux -> Expresion COMMA Lista_Aux .

    $end            reduce using rule 75 (Lista_Aux -> Expresion COMMA Lista_Aux .)
    SEMICOLON       reduce using rule 75 (Lista_Aux -> Expresion COMMA Lista_Aux .)
    INST_END        reduce using rule 75 (Lista_Aux -> Expresion COMMA Lista_Aux .)
    INST_ELSE       reduce using rule 75 (Lista_Aux -> Expresion COMMA Lista_Aux .)


state 118

    (57) Term -> Term DIVIDE Factor .

    TIMES           reduce using rule 57 (Term -> Term DIVIDE Factor .)
    DIVIDE          reduce using rule 57 (Term -> Term DIVIDE Factor .)
    MOD             reduce using rule 57 (Term -> Term DIVIDE Factor .)
    RPAREN          reduce using rule 57 (Term -> Term DIVIDE Factor .)
    IN              reduce using rule 57 (Term -> Term DIVIDE Factor .)
    PLUS            reduce using rule 57 (Term -> Term DIVIDE Factor .)
    MINUS           reduce using rule 57 (Term -> Term DIVIDE Factor .)
    GREAT           reduce using rule 57 (Term -> Term DIVIDE Factor .)
    LESS            reduce using rule 57 (Term -> Term DIVIDE Factor .)
    GREATEQ         reduce using rule 57 (Term -> Term DIVIDE Factor .)
    LESSEQ          reduce using rule 57 (Term -> Term DIVIDE Factor .)
    RANGE           reduce using rule 57 (Term -> Term DIVIDE Factor .)
    COMMA           reduce using rule 57 (Term -> Term DIVIDE Factor .)
    $end            reduce using rule 57 (Term -> Term DIVIDE Factor .)
    SEMICOLON       reduce using rule 57 (Term -> Term DIVIDE Factor .)
    INST_END        reduce using rule 57 (Term -> Term DIVIDE Factor .)
    INST_ELSE       reduce using rule 57 (Term -> Term DIVIDE Factor .)
    INTERSECTION    reduce using rule 57 (Term -> Term DIVIDE Factor .)
    AND             reduce using rule 57 (Term -> Term DIVIDE Factor .)
    OR              reduce using rule 57 (Term -> Term DIVIDE Factor .)
    EQEQ            reduce using rule 57 (Term -> Term DIVIDE Factor .)
    NEQEQ           reduce using rule 57 (Term -> Term DIVIDE Factor .)
    INST_DO         reduce using rule 57 (Term -> Term DIVIDE Factor .)
    INST_OF         reduce using rule 57 (Term -> Term DIVIDE Factor .)
    INST_THEN       reduce using rule 57 (Term -> Term DIVIDE Factor .)
    CASE_ASSIGN     reduce using rule 57 (Term -> Term DIVIDE Factor .)


state 119

    (58) Term -> Term MOD Factor .

    TIMES           reduce using rule 58 (Term -> Term MOD Factor .)
    DIVIDE          reduce using rule 58 (Term -> Term MOD Factor .)
    MOD             reduce using rule 58 (Term -> Term MOD Factor .)
    RPAREN          reduce using rule 58 (Term -> Term MOD Factor .)
    IN              reduce using rule 58 (Term -> Term MOD Factor .)
    PLUS            reduce using rule 58 (Term -> Term MOD Factor .)
    MINUS           reduce using rule 58 (Term -> Term MOD Factor .)
    GREAT           reduce using rule 58 (Term -> Term MOD Factor .)
    LESS            reduce using rule 58 (Term -> Term MOD Factor .)
    GREATEQ         reduce using rule 58 (Term -> Term MOD Factor .)
    LESSEQ          reduce using rule 58 (Term -> Term MOD Factor .)
    RANGE           reduce using rule 58 (Term -> Term MOD Factor .)
    COMMA           reduce using rule 58 (Term -> Term MOD Factor .)
    $end            reduce using rule 58 (Term -> Term MOD Factor .)
    SEMICOLON       reduce using rule 58 (Term -> Term MOD Factor .)
    INST_END        reduce using rule 58 (Term -> Term MOD Factor .)
    INST_ELSE       reduce using rule 58 (Term -> Term MOD Factor .)
    INTERSECTION    reduce using rule 58 (Term -> Term MOD Factor .)
    AND             reduce using rule 58 (Term -> Term MOD Factor .)
    OR              reduce using rule 58 (Term -> Term MOD Factor .)
    EQEQ            reduce using rule 58 (Term -> Term MOD Factor .)
    NEQEQ           reduce using rule 58 (Term -> Term MOD Factor .)
    INST_DO         reduce using rule 58 (Term -> Term MOD Factor .)
    INST_OF         reduce using rule 58 (Term -> Term MOD Factor .)
    INST_THEN       reduce using rule 58 (Term -> Term MOD Factor .)
    CASE_ASSIGN     reduce using rule 58 (Term -> Term MOD Factor .)


state 120

    (56) Term -> Term TIMES Factor .

    TIMES           reduce using rule 56 (Term -> Term TIMES Factor .)
    DIVIDE          reduce using rule 56 (Term -> Term TIMES Factor .)
    MOD             reduce using rule 56 (Term -> Term TIMES Factor .)
    RPAREN          reduce using rule 56 (Term -> Term TIMES Factor .)
    IN              reduce using rule 56 (Term -> Term TIMES Factor .)
    PLUS            reduce using rule 56 (Term -> Term TIMES Factor .)
    MINUS           reduce using rule 56 (Term -> Term TIMES Factor .)
    GREAT           reduce using rule 56 (Term -> Term TIMES Factor .)
    LESS            reduce using rule 56 (Term -> Term TIMES Factor .)
    GREATEQ         reduce using rule 56 (Term -> Term TIMES Factor .)
    LESSEQ          reduce using rule 56 (Term -> Term TIMES Factor .)
    RANGE           reduce using rule 56 (Term -> Term TIMES Factor .)
    COMMA           reduce using rule 56 (Term -> Term TIMES Factor .)
    $end            reduce using rule 56 (Term -> Term TIMES Factor .)
    SEMICOLON       reduce using rule 56 (Term -> Term TIMES Factor .)
    INST_END        reduce using rule 56 (Term -> Term TIMES Factor .)
    INST_ELSE       reduce using rule 56 (Term -> Term TIMES Factor .)
    INTERSECTION    reduce using rule 56 (Term -> Term TIMES Factor .)
    AND             reduce using rule 56 (Term -> Term TIMES Factor .)
    OR              reduce using rule 56 (Term -> Term TIMES Factor .)
    EQEQ            reduce using rule 56 (Term -> Term TIMES Factor .)
    NEQEQ           reduce using rule 56 (Term -> Term TIMES Factor .)
    INST_DO         reduce using rule 56 (Term -> Term TIMES Factor .)
    INST_OF         reduce using rule 56 (Term -> Term TIMES Factor .)
    INST_THEN       reduce using rule 56 (Term -> Term TIMES Factor .)
    CASE_ASSIGN     reduce using rule 56 (Term -> Term TIMES Factor .)


state 121

    (76) Lista_Aux -> STRING COMMA Lista_Aux .

    $end            reduce using rule 76 (Lista_Aux -> STRING COMMA Lista_Aux .)
    SEMICOLON       reduce using rule 76 (Lista_Aux -> STRING COMMA Lista_Aux .)
    INST_END        reduce using rule 76 (Lista_Aux -> STRING COMMA Lista_Aux .)
    INST_ELSE       reduce using rule 76 (Lista_Aux -> STRING COMMA Lista_Aux .)


state 122

    (42) Operacion_booleana -> LPAREN Operacion_booleana RPAREN .

    AND             reduce using rule 42 (Operacion_booleana -> LPAREN Operacion_booleana RPAREN .)
    OR              reduce using rule 42 (Operacion_booleana -> LPAREN Operacion_booleana RPAREN .)
    EQEQ            reduce using rule 42 (Operacion_booleana -> LPAREN Operacion_booleana RPAREN .)
    NEQEQ           reduce using rule 42 (Operacion_booleana -> LPAREN Operacion_booleana RPAREN .)
    COMMA           reduce using rule 42 (Operacion_booleana -> LPAREN Operacion_booleana RPAREN .)
    $end            reduce using rule 42 (Operacion_booleana -> LPAREN Operacion_booleana RPAREN .)
    SEMICOLON       reduce using rule 42 (Operacion_booleana -> LPAREN Operacion_booleana RPAREN .)
    INST_END        reduce using rule 42 (Operacion_booleana -> LPAREN Operacion_booleana RPAREN .)
    INST_ELSE       reduce using rule 42 (Operacion_booleana -> LPAREN Operacion_booleana RPAREN .)
    INST_OF         reduce using rule 42 (Operacion_booleana -> LPAREN Operacion_booleana RPAREN .)
    INST_DO         reduce using rule 42 (Operacion_booleana -> LPAREN Operacion_booleana RPAREN .)
    INST_THEN       reduce using rule 42 (Operacion_booleana -> LPAREN Operacion_booleana RPAREN .)
    RPAREN          reduce using rule 42 (Operacion_booleana -> LPAREN Operacion_booleana RPAREN .)


state 123

    (68) Rango -> LPAREN Rango RPAREN .

    CASE_ASSIGN     reduce using rule 68 (Rango -> LPAREN Rango RPAREN .)
    PLUS            reduce using rule 68 (Rango -> LPAREN Rango RPAREN .)
    TIMES           reduce using rule 68 (Rango -> LPAREN Rango RPAREN .)
    INTERSECTION    reduce using rule 68 (Rango -> LPAREN Rango RPAREN .)
    RPAREN          reduce using rule 68 (Rango -> LPAREN Rango RPAREN .)
    COMMA           reduce using rule 68 (Rango -> LPAREN Rango RPAREN .)
    $end            reduce using rule 68 (Rango -> LPAREN Rango RPAREN .)
    SEMICOLON       reduce using rule 68 (Rango -> LPAREN Rango RPAREN .)
    INST_END        reduce using rule 68 (Rango -> LPAREN Rango RPAREN .)
    INST_ELSE       reduce using rule 68 (Rango -> LPAREN Rango RPAREN .)
    AND             reduce using rule 68 (Rango -> LPAREN Rango RPAREN .)
    OR              reduce using rule 68 (Rango -> LPAREN Rango RPAREN .)
    EQEQ            reduce using rule 68 (Rango -> LPAREN Rango RPAREN .)
    NEQEQ           reduce using rule 68 (Rango -> LPAREN Rango RPAREN .)
    INST_DO         reduce using rule 68 (Rango -> LPAREN Rango RPAREN .)
    INST_OF         reduce using rule 68 (Rango -> LPAREN Rango RPAREN .)
    INST_THEN       reduce using rule 68 (Rango -> LPAREN Rango RPAREN .)


state 124

    (62) Factor -> LPAREN Operacion_binaria RPAREN .

    TIMES           reduce using rule 62 (Factor -> LPAREN Operacion_binaria RPAREN .)
    DIVIDE          reduce using rule 62 (Factor -> LPAREN Operacion_binaria RPAREN .)
    MOD             reduce using rule 62 (Factor -> LPAREN Operacion_binaria RPAREN .)
    PLUS            reduce using rule 62 (Factor -> LPAREN Operacion_binaria RPAREN .)
    MINUS           reduce using rule 62 (Factor -> LPAREN Operacion_binaria RPAREN .)
    INTERSECTION    reduce using rule 62 (Factor -> LPAREN Operacion_binaria RPAREN .)
    COMMA           reduce using rule 62 (Factor -> LPAREN Operacion_binaria RPAREN .)
    $end            reduce using rule 62 (Factor -> LPAREN Operacion_binaria RPAREN .)
    SEMICOLON       reduce using rule 62 (Factor -> LPAREN Operacion_binaria RPAREN .)
    INST_END        reduce using rule 62 (Factor -> LPAREN Operacion_binaria RPAREN .)
    INST_ELSE       reduce using rule 62 (Factor -> LPAREN Operacion_binaria RPAREN .)
    RPAREN          reduce using rule 62 (Factor -> LPAREN Operacion_binaria RPAREN .)
    AND             reduce using rule 62 (Factor -> LPAREN Operacion_binaria RPAREN .)
    OR              reduce using rule 62 (Factor -> LPAREN Operacion_binaria RPAREN .)
    EQEQ            reduce using rule 62 (Factor -> LPAREN Operacion_binaria RPAREN .)
    NEQEQ           reduce using rule 62 (Factor -> LPAREN Operacion_binaria RPAREN .)
    INST_DO         reduce using rule 62 (Factor -> LPAREN Operacion_binaria RPAREN .)
    INST_OF         reduce using rule 62 (Factor -> LPAREN Operacion_binaria RPAREN .)
    INST_THEN       reduce using rule 62 (Factor -> LPAREN Operacion_binaria RPAREN .)
    CASE_ASSIGN     reduce using rule 62 (Factor -> LPAREN Operacion_binaria RPAREN .)
    IN              reduce using rule 62 (Factor -> LPAREN Operacion_binaria RPAREN .)
    GREAT           reduce using rule 62 (Factor -> LPAREN Operacion_binaria RPAREN .)
    LESS            reduce using rule 62 (Factor -> LPAREN Operacion_binaria RPAREN .)
    GREATEQ         reduce using rule 62 (Factor -> LPAREN Operacion_binaria RPAREN .)
    LESSEQ          reduce using rule 62 (Factor -> LPAREN Operacion_binaria RPAREN .)
    RANGE           reduce using rule 62 (Factor -> LPAREN Operacion_binaria RPAREN .)


state 125

    (69) Rango -> VAR_IDENTIFIER .
    (61) Factor -> VAR_IDENTIFIER .

  ! reduce/reduce conflict for TIMES resolved using rule 61 (Factor -> VAR_IDENTIFIER .)
  ! reduce/reduce conflict for RPAREN resolved using rule 61 (Factor -> VAR_IDENTIFIER .)
  ! reduce/reduce conflict for PLUS resolved using rule 61 (Factor -> VAR_IDENTIFIER .)
    INTERSECTION    reduce using rule 69 (Rango -> VAR_IDENTIFIER .)
    COMMA           reduce using rule 69 (Rango -> VAR_IDENTIFIER .)
    $end            reduce using rule 69 (Rango -> VAR_IDENTIFIER .)
    SEMICOLON       reduce using rule 69 (Rango -> VAR_IDENTIFIER .)
    INST_END        reduce using rule 69 (Rango -> VAR_IDENTIFIER .)
    INST_ELSE       reduce using rule 69 (Rango -> VAR_IDENTIFIER .)
    AND             reduce using rule 69 (Rango -> VAR_IDENTIFIER .)
    OR              reduce using rule 69 (Rango -> VAR_IDENTIFIER .)
    EQEQ            reduce using rule 69 (Rango -> VAR_IDENTIFIER .)
    NEQEQ           reduce using rule 69 (Rango -> VAR_IDENTIFIER .)
    INST_DO         reduce using rule 69 (Rango -> VAR_IDENTIFIER .)
    INST_OF         reduce using rule 69 (Rango -> VAR_IDENTIFIER .)
    INST_THEN       reduce using rule 69 (Rango -> VAR_IDENTIFIER .)
    CASE_ASSIGN     reduce using rule 69 (Rango -> VAR_IDENTIFIER .)
    TIMES           reduce using rule 61 (Factor -> VAR_IDENTIFIER .)
    DIVIDE          reduce using rule 61 (Factor -> VAR_IDENTIFIER .)
    MOD             reduce using rule 61 (Factor -> VAR_IDENTIFIER .)
    RPAREN          reduce using rule 61 (Factor -> VAR_IDENTIFIER .)
    RANGE           reduce using rule 61 (Factor -> VAR_IDENTIFIER .)
    PLUS            reduce using rule 61 (Factor -> VAR_IDENTIFIER .)
    MINUS           reduce using rule 61 (Factor -> VAR_IDENTIFIER .)

  ! PLUS            [ reduce using rule 69 (Rango -> VAR_IDENTIFIER .) ]
  ! TIMES           [ reduce using rule 69 (Rango -> VAR_IDENTIFIER .) ]
  ! RPAREN          [ reduce using rule 69 (Rango -> VAR_IDENTIFIER .) ]


state 126

    (67) Rango -> Rango INTERSECTION Rango .
    (65) Rango -> Rango . PLUS Rango
    (66) Rango -> Rango . TIMES Operacion_binaria
    (67) Rango -> Rango . INTERSECTION Rango

    CASE_ASSIGN     reduce using rule 67 (Rango -> Rango INTERSECTION Rango .)
    INTERSECTION    reduce using rule 67 (Rango -> Rango INTERSECTION Rango .)
    RPAREN          reduce using rule 67 (Rango -> Rango INTERSECTION Rango .)
    COMMA           reduce using rule 67 (Rango -> Rango INTERSECTION Rango .)
    $end            reduce using rule 67 (Rango -> Rango INTERSECTION Rango .)
    SEMICOLON       reduce using rule 67 (Rango -> Rango INTERSECTION Rango .)
    INST_END        reduce using rule 67 (Rango -> Rango INTERSECTION Rango .)
    INST_ELSE       reduce using rule 67 (Rango -> Rango INTERSECTION Rango .)
    AND             reduce using rule 67 (Rango -> Rango INTERSECTION Rango .)
    OR              reduce using rule 67 (Rango -> Rango INTERSECTION Rango .)
    EQEQ            reduce using rule 67 (Rango -> Rango INTERSECTION Rango .)
    NEQEQ           reduce using rule 67 (Rango -> Rango INTERSECTION Rango .)
    INST_DO         reduce using rule 67 (Rango -> Rango INTERSECTION Rango .)
    INST_OF         reduce using rule 67 (Rango -> Rango INTERSECTION Rango .)
    INST_THEN       reduce using rule 67 (Rango -> Rango INTERSECTION Rango .)
    PLUS            shift and go to state 76
    TIMES           shift and go to state 77

  ! PLUS            [ reduce using rule 67 (Rango -> Rango INTERSECTION Rango .) ]
  ! TIMES           [ reduce using rule 67 (Rango -> Rango INTERSECTION Rango .) ]
  ! INTERSECTION    [ shift and go to state 75 ]


state 127

    (65) Rango -> Rango PLUS Rango .
    (65) Rango -> Rango . PLUS Rango
    (66) Rango -> Rango . TIMES Operacion_binaria
    (67) Rango -> Rango . INTERSECTION Rango

    CASE_ASSIGN     reduce using rule 65 (Rango -> Rango PLUS Rango .)
    PLUS            reduce using rule 65 (Rango -> Rango PLUS Rango .)
    INTERSECTION    reduce using rule 65 (Rango -> Rango PLUS Rango .)
    RPAREN          reduce using rule 65 (Rango -> Rango PLUS Rango .)
    COMMA           reduce using rule 65 (Rango -> Rango PLUS Rango .)
    $end            reduce using rule 65 (Rango -> Rango PLUS Rango .)
    SEMICOLON       reduce using rule 65 (Rango -> Rango PLUS Rango .)
    INST_END        reduce using rule 65 (Rango -> Rango PLUS Rango .)
    INST_ELSE       reduce using rule 65 (Rango -> Rango PLUS Rango .)
    AND             reduce using rule 65 (Rango -> Rango PLUS Rango .)
    OR              reduce using rule 65 (Rango -> Rango PLUS Rango .)
    EQEQ            reduce using rule 65 (Rango -> Rango PLUS Rango .)
    NEQEQ           reduce using rule 65 (Rango -> Rango PLUS Rango .)
    INST_DO         reduce using rule 65 (Rango -> Rango PLUS Rango .)
    INST_OF         reduce using rule 65 (Rango -> Rango PLUS Rango .)
    INST_THEN       reduce using rule 65 (Rango -> Rango PLUS Rango .)
    TIMES           shift and go to state 77

  ! TIMES           [ reduce using rule 65 (Rango -> Rango PLUS Rango .) ]
  ! PLUS            [ shift and go to state 76 ]
  ! INTERSECTION    [ shift and go to state 75 ]


state 128

    (66) Rango -> Rango TIMES Operacion_binaria .
    (53) Operacion_binaria -> Operacion_binaria . PLUS Term
    (54) Operacion_binaria -> Operacion_binaria . MINUS Term

    CASE_ASSIGN     reduce using rule 66 (Rango -> Rango TIMES Operacion_binaria .)
    PLUS            reduce using rule 66 (Rango -> Rango TIMES Operacion_binaria .)
    TIMES           reduce using rule 66 (Rango -> Rango TIMES Operacion_binaria .)
    INTERSECTION    reduce using rule 66 (Rango -> Rango TIMES Operacion_binaria .)
    RPAREN          reduce using rule 66 (Rango -> Rango TIMES Operacion_binaria .)
    COMMA           reduce using rule 66 (Rango -> Rango TIMES Operacion_binaria .)
    $end            reduce using rule 66 (Rango -> Rango TIMES Operacion_binaria .)
    SEMICOLON       reduce using rule 66 (Rango -> Rango TIMES Operacion_binaria .)
    INST_END        reduce using rule 66 (Rango -> Rango TIMES Operacion_binaria .)
    INST_ELSE       reduce using rule 66 (Rango -> Rango TIMES Operacion_binaria .)
    AND             reduce using rule 66 (Rango -> Rango TIMES Operacion_binaria .)
    OR              reduce using rule 66 (Rango -> Rango TIMES Operacion_binaria .)
    EQEQ            reduce using rule 66 (Rango -> Rango TIMES Operacion_binaria .)
    NEQEQ           reduce using rule 66 (Rango -> Rango TIMES Operacion_binaria .)
    INST_DO         reduce using rule 66 (Rango -> Rango TIMES Operacion_binaria .)
    INST_OF         reduce using rule 66 (Rango -> Rango TIMES Operacion_binaria .)
    INST_THEN       reduce using rule 66 (Rango -> Rango TIMES Operacion_binaria .)
    MINUS           shift and go to state 86

  ! PLUS            [ shift and go to state 84 ]


state 129

    (38) Operacion_booleana -> Operacion_binaria Opr_bool Operacion_binaria .
    (53) Operacion_binaria -> Operacion_binaria . PLUS Term
    (54) Operacion_binaria -> Operacion_binaria . MINUS Term

    AND             reduce using rule 38 (Operacion_booleana -> Operacion_binaria Opr_bool Operacion_binaria .)
    OR              reduce using rule 38 (Operacion_booleana -> Operacion_binaria Opr_bool Operacion_binaria .)
    EQEQ            reduce using rule 38 (Operacion_booleana -> Operacion_binaria Opr_bool Operacion_binaria .)
    NEQEQ           reduce using rule 38 (Operacion_booleana -> Operacion_binaria Opr_bool Operacion_binaria .)
    COMMA           reduce using rule 38 (Operacion_booleana -> Operacion_binaria Opr_bool Operacion_binaria .)
    $end            reduce using rule 38 (Operacion_booleana -> Operacion_binaria Opr_bool Operacion_binaria .)
    SEMICOLON       reduce using rule 38 (Operacion_booleana -> Operacion_binaria Opr_bool Operacion_binaria .)
    INST_END        reduce using rule 38 (Operacion_booleana -> Operacion_binaria Opr_bool Operacion_binaria .)
    INST_ELSE       reduce using rule 38 (Operacion_booleana -> Operacion_binaria Opr_bool Operacion_binaria .)
    INST_OF         reduce using rule 38 (Operacion_booleana -> Operacion_binaria Opr_bool Operacion_binaria .)
    INST_DO         reduce using rule 38 (Operacion_booleana -> Operacion_binaria Opr_bool Operacion_binaria .)
    INST_THEN       reduce using rule 38 (Operacion_booleana -> Operacion_binaria Opr_bool Operacion_binaria .)
    RPAREN          reduce using rule 38 (Operacion_booleana -> Operacion_binaria Opr_bool Operacion_binaria .)
    PLUS            shift and go to state 84
    MINUS           shift and go to state 86


state 130

    (64) Rango -> Operacion_binaria RANGE Operacion_binaria .
    (53) Operacion_binaria -> Operacion_binaria . PLUS Term
    (54) Operacion_binaria -> Operacion_binaria . MINUS Term

    CASE_ASSIGN     reduce using rule 64 (Rango -> Operacion_binaria RANGE Operacion_binaria .)
    PLUS            reduce using rule 64 (Rango -> Operacion_binaria RANGE Operacion_binaria .)
    TIMES           reduce using rule 64 (Rango -> Operacion_binaria RANGE Operacion_binaria .)
    INTERSECTION    reduce using rule 64 (Rango -> Operacion_binaria RANGE Operacion_binaria .)
    RPAREN          reduce using rule 64 (Rango -> Operacion_binaria RANGE Operacion_binaria .)
    COMMA           reduce using rule 64 (Rango -> Operacion_binaria RANGE Operacion_binaria .)
    $end            reduce using rule 64 (Rango -> Operacion_binaria RANGE Operacion_binaria .)
    SEMICOLON       reduce using rule 64 (Rango -> Operacion_binaria RANGE Operacion_binaria .)
    INST_END        reduce using rule 64 (Rango -> Operacion_binaria RANGE Operacion_binaria .)
    INST_ELSE       reduce using rule 64 (Rango -> Operacion_binaria RANGE Operacion_binaria .)
    AND             reduce using rule 64 (Rango -> Operacion_binaria RANGE Operacion_binaria .)
    OR              reduce using rule 64 (Rango -> Operacion_binaria RANGE Operacion_binaria .)
    EQEQ            reduce using rule 64 (Rango -> Operacion_binaria RANGE Operacion_binaria .)
    NEQEQ           reduce using rule 64 (Rango -> Operacion_binaria RANGE Operacion_binaria .)
    INST_DO         reduce using rule 64 (Rango -> Operacion_binaria RANGE Operacion_binaria .)
    INST_OF         reduce using rule 64 (Rango -> Operacion_binaria RANGE Operacion_binaria .)
    INST_THEN       reduce using rule 64 (Rango -> Operacion_binaria RANGE Operacion_binaria .)
    MINUS           shift and go to state 86

  ! PLUS            [ shift and go to state 84 ]


state 131

    (53) Operacion_binaria -> Operacion_binaria PLUS Term .
    (56) Term -> Term . TIMES Factor
    (57) Term -> Term . DIVIDE Factor
    (58) Term -> Term . MOD Factor

    IN              reduce using rule 53 (Operacion_binaria -> Operacion_binaria PLUS Term .)
    PLUS            reduce using rule 53 (Operacion_binaria -> Operacion_binaria PLUS Term .)
    MINUS           reduce using rule 53 (Operacion_binaria -> Operacion_binaria PLUS Term .)
    GREAT           reduce using rule 53 (Operacion_binaria -> Operacion_binaria PLUS Term .)
    LESS            reduce using rule 53 (Operacion_binaria -> Operacion_binaria PLUS Term .)
    GREATEQ         reduce using rule 53 (Operacion_binaria -> Operacion_binaria PLUS Term .)
    LESSEQ          reduce using rule 53 (Operacion_binaria -> Operacion_binaria PLUS Term .)
    RANGE           reduce using rule 53 (Operacion_binaria -> Operacion_binaria PLUS Term .)
    $end            reduce using rule 53 (Operacion_binaria -> Operacion_binaria PLUS Term .)
    SEMICOLON       reduce using rule 53 (Operacion_binaria -> Operacion_binaria PLUS Term .)
    INST_END        reduce using rule 53 (Operacion_binaria -> Operacion_binaria PLUS Term .)
    INST_ELSE       reduce using rule 53 (Operacion_binaria -> Operacion_binaria PLUS Term .)
    RPAREN          reduce using rule 53 (Operacion_binaria -> Operacion_binaria PLUS Term .)
    COMMA           reduce using rule 53 (Operacion_binaria -> Operacion_binaria PLUS Term .)
    INTERSECTION    reduce using rule 53 (Operacion_binaria -> Operacion_binaria PLUS Term .)
    AND             reduce using rule 53 (Operacion_binaria -> Operacion_binaria PLUS Term .)
    OR              reduce using rule 53 (Operacion_binaria -> Operacion_binaria PLUS Term .)
    EQEQ            reduce using rule 53 (Operacion_binaria -> Operacion_binaria PLUS Term .)
    NEQEQ           reduce using rule 53 (Operacion_binaria -> Operacion_binaria PLUS Term .)
    INST_DO         reduce using rule 53 (Operacion_binaria -> Operacion_binaria PLUS Term .)
    INST_OF         reduce using rule 53 (Operacion_binaria -> Operacion_binaria PLUS Term .)
    INST_THEN       reduce using rule 53 (Operacion_binaria -> Operacion_binaria PLUS Term .)
    CASE_ASSIGN     reduce using rule 53 (Operacion_binaria -> Operacion_binaria PLUS Term .)
    TIMES           shift and go to state 70
    DIVIDE          shift and go to state 68
    MOD             shift and go to state 69

  ! TIMES           [ reduce using rule 53 (Operacion_binaria -> Operacion_binaria PLUS Term .) ]


state 132

    (41) Operacion_booleana -> Operacion_binaria IN Rango .
    (65) Rango -> Rango . PLUS Rango
    (66) Rango -> Rango . TIMES Operacion_binaria
    (67) Rango -> Rango . INTERSECTION Rango

    AND             reduce using rule 41 (Operacion_booleana -> Operacion_binaria IN Rango .)
    OR              reduce using rule 41 (Operacion_booleana -> Operacion_binaria IN Rango .)
    EQEQ            reduce using rule 41 (Operacion_booleana -> Operacion_binaria IN Rango .)
    NEQEQ           reduce using rule 41 (Operacion_booleana -> Operacion_binaria IN Rango .)
    COMMA           reduce using rule 41 (Operacion_booleana -> Operacion_binaria IN Rango .)
    $end            reduce using rule 41 (Operacion_booleana -> Operacion_binaria IN Rango .)
    SEMICOLON       reduce using rule 41 (Operacion_booleana -> Operacion_binaria IN Rango .)
    INST_END        reduce using rule 41 (Operacion_booleana -> Operacion_binaria IN Rango .)
    INST_ELSE       reduce using rule 41 (Operacion_booleana -> Operacion_binaria IN Rango .)
    INST_OF         reduce using rule 41 (Operacion_booleana -> Operacion_binaria IN Rango .)
    INST_DO         reduce using rule 41 (Operacion_booleana -> Operacion_binaria IN Rango .)
    INST_THEN       reduce using rule 41 (Operacion_booleana -> Operacion_binaria IN Rango .)
    RPAREN          reduce using rule 41 (Operacion_booleana -> Operacion_binaria IN Rango .)
    PLUS            shift and go to state 76
    TIMES           shift and go to state 77
    INTERSECTION    shift and go to state 75


state 133

    (54) Operacion_binaria -> Operacion_binaria MINUS Term .
    (56) Term -> Term . TIMES Factor
    (57) Term -> Term . DIVIDE Factor
    (58) Term -> Term . MOD Factor

    IN              reduce using rule 54 (Operacion_binaria -> Operacion_binaria MINUS Term .)
    PLUS            reduce using rule 54 (Operacion_binaria -> Operacion_binaria MINUS Term .)
    MINUS           reduce using rule 54 (Operacion_binaria -> Operacion_binaria MINUS Term .)
    GREAT           reduce using rule 54 (Operacion_binaria -> Operacion_binaria MINUS Term .)
    LESS            reduce using rule 54 (Operacion_binaria -> Operacion_binaria MINUS Term .)
    GREATEQ         reduce using rule 54 (Operacion_binaria -> Operacion_binaria MINUS Term .)
    LESSEQ          reduce using rule 54 (Operacion_binaria -> Operacion_binaria MINUS Term .)
    RANGE           reduce using rule 54 (Operacion_binaria -> Operacion_binaria MINUS Term .)
    $end            reduce using rule 54 (Operacion_binaria -> Operacion_binaria MINUS Term .)
    SEMICOLON       reduce using rule 54 (Operacion_binaria -> Operacion_binaria MINUS Term .)
    INST_END        reduce using rule 54 (Operacion_binaria -> Operacion_binaria MINUS Term .)
    INST_ELSE       reduce using rule 54 (Operacion_binaria -> Operacion_binaria MINUS Term .)
    RPAREN          reduce using rule 54 (Operacion_binaria -> Operacion_binaria MINUS Term .)
    COMMA           reduce using rule 54 (Operacion_binaria -> Operacion_binaria MINUS Term .)
    INTERSECTION    reduce using rule 54 (Operacion_binaria -> Operacion_binaria MINUS Term .)
    AND             reduce using rule 54 (Operacion_binaria -> Operacion_binaria MINUS Term .)
    OR              reduce using rule 54 (Operacion_binaria -> Operacion_binaria MINUS Term .)
    EQEQ            reduce using rule 54 (Operacion_binaria -> Operacion_binaria MINUS Term .)
    NEQEQ           reduce using rule 54 (Operacion_binaria -> Operacion_binaria MINUS Term .)
    INST_DO         reduce using rule 54 (Operacion_binaria -> Operacion_binaria MINUS Term .)
    INST_OF         reduce using rule 54 (Operacion_binaria -> Operacion_binaria MINUS Term .)
    INST_THEN       reduce using rule 54 (Operacion_binaria -> Operacion_binaria MINUS Term .)
    CASE_ASSIGN     reduce using rule 54 (Operacion_binaria -> Operacion_binaria MINUS Term .)
    TIMES           shift and go to state 70
    DIVIDE          shift and go to state 68
    MOD             shift and go to state 69

  ! TIMES           [ reduce using rule 54 (Operacion_binaria -> Operacion_binaria MINUS Term .) ]


state 134

    (23) Inst_Funcion -> TOP LPAREN VAR_IDENTIFIER RPAREN .

    $end            reduce using rule 23 (Inst_Funcion -> TOP LPAREN VAR_IDENTIFIER RPAREN .)
    SEMICOLON       reduce using rule 23 (Inst_Funcion -> TOP LPAREN VAR_IDENTIFIER RPAREN .)
    INST_END        reduce using rule 23 (Inst_Funcion -> TOP LPAREN VAR_IDENTIFIER RPAREN .)
    INST_ELSE       reduce using rule 23 (Inst_Funcion -> TOP LPAREN VAR_IDENTIFIER RPAREN .)


state 135

    (62) Factor -> LPAREN Operacion_binaria . RPAREN
    (64) Rango -> Operacion_binaria . RANGE Operacion_binaria
    (53) Operacion_binaria -> Operacion_binaria . PLUS Term
    (54) Operacion_binaria -> Operacion_binaria . MINUS Term

    RPAREN          shift and go to state 124
    RANGE           shift and go to state 82
    PLUS            shift and go to state 84
    MINUS           shift and go to state 86


state 136

    (19) Inst_Funcion -> TOP LPAREN Rango RPAREN .

    $end            reduce using rule 19 (Inst_Funcion -> TOP LPAREN Rango RPAREN .)
    SEMICOLON       reduce using rule 19 (Inst_Funcion -> TOP LPAREN Rango RPAREN .)
    INST_END        reduce using rule 19 (Inst_Funcion -> TOP LPAREN Rango RPAREN .)
    INST_ELSE       reduce using rule 19 (Inst_Funcion -> TOP LPAREN Rango RPAREN .)


state 137

    (87) Inst_While -> INST_WHILE Operacion_booleana INST_DO Bloque_Inst .
    (16) Inst -> Bloque_Inst .

  ! reduce/reduce conflict for $end resolved using rule 16 (Inst -> Bloque_Inst .)
  ! reduce/reduce conflict for SEMICOLON resolved using rule 16 (Inst -> Bloque_Inst .)
  ! reduce/reduce conflict for INST_END resolved using rule 16 (Inst -> Bloque_Inst .)
  ! reduce/reduce conflict for INST_ELSE resolved using rule 16 (Inst -> Bloque_Inst .)
    $end            reduce using rule 16 (Inst -> Bloque_Inst .)
    SEMICOLON       reduce using rule 16 (Inst -> Bloque_Inst .)
    INST_END        reduce using rule 16 (Inst -> Bloque_Inst .)
    INST_ELSE       reduce using rule 16 (Inst -> Bloque_Inst .)

  ! $end            [ reduce using rule 87 (Inst_While -> INST_WHILE Operacion_booleana INST_DO Bloque_Inst .) ]
  ! SEMICOLON       [ reduce using rule 87 (Inst_While -> INST_WHILE Operacion_booleana INST_DO Bloque_Inst .) ]
  ! INST_END        [ reduce using rule 87 (Inst_While -> INST_WHILE Operacion_booleana INST_DO Bloque_Inst .) ]
  ! INST_ELSE       [ reduce using rule 87 (Inst_While -> INST_WHILE Operacion_booleana INST_DO Bloque_Inst .) ]


state 138

    (88) Inst_While -> INST_WHILE Operacion_booleana INST_DO Inst .

    $end            reduce using rule 88 (Inst_While -> INST_WHILE Operacion_booleana INST_DO Inst .)
    SEMICOLON       reduce using rule 88 (Inst_While -> INST_WHILE Operacion_booleana INST_DO Inst .)
    INST_END        reduce using rule 88 (Inst_While -> INST_WHILE Operacion_booleana INST_DO Inst .)
    INST_ELSE       reduce using rule 88 (Inst_While -> INST_WHILE Operacion_booleana INST_DO Inst .)


state 139

    (30) Lista_Variables -> VAR_IDENTIFIER COMMA . Lista_Variables
    (29) Lista_Variables -> . VAR_IDENTIFIER
    (30) Lista_Variables -> . VAR_IDENTIFIER COMMA Lista_Variables

    VAR_IDENTIFIER  shift and go to state 94

    Lista_Variables                shift and go to state 157

state 140

    (28) Lista_Declare -> Lista_Variables INST_AS . Tipo
    (31) Tipo -> . TYPEDEF_INT
    (32) Tipo -> . TYPEDEF_BOOL
    (33) Tipo -> . TYPEDEF_RANGE

    TYPEDEF_INT     shift and go to state 158
    TYPEDEF_BOOL    shift and go to state 161
    TYPEDEF_RANGE   shift and go to state 160

    Tipo                           shift and go to state 159

state 141

    (27) Lista_DeclareTipos -> Lista_Declare SEMICOLON . Lista_DeclareTipos
    (26) Lista_DeclareTipos -> . Lista_Declare
    (27) Lista_DeclareTipos -> . Lista_Declare SEMICOLON Lista_DeclareTipos
    (28) Lista_Declare -> . Lista_Variables INST_AS Tipo
    (29) Lista_Variables -> . VAR_IDENTIFIER
    (30) Lista_Variables -> . VAR_IDENTIFIER COMMA Lista_Variables

    VAR_IDENTIFIER  shift and go to state 94

    Lista_Variables                shift and go to state 96
    Lista_Declare                  shift and go to state 97
    Lista_DeclareTipos             shift and go to state 162

state 142

    (4) Bloque_Inst -> INST_BEGIN Inst_Declare Lista_Inst INST_END .

    SEMICOLON       reduce using rule 4 (Bloque_Inst -> INST_BEGIN Inst_Declare Lista_Inst INST_END .)
    INST_END        reduce using rule 4 (Bloque_Inst -> INST_BEGIN Inst_Declare Lista_Inst INST_END .)
    $end            reduce using rule 4 (Bloque_Inst -> INST_BEGIN Inst_Declare Lista_Inst INST_END .)
    INST_ELSE       reduce using rule 4 (Bloque_Inst -> INST_BEGIN Inst_Declare Lista_Inst INST_END .)


state 143

    (7) Lista_Inst -> Inst SEMICOLON Lista_Inst .

    INST_END        reduce using rule 7 (Lista_Inst -> Inst SEMICOLON Lista_Inst .)


state 144

    (24) Inst_Funcion -> BOTTOM LPAREN VAR_IDENTIFIER RPAREN .

    $end            reduce using rule 24 (Inst_Funcion -> BOTTOM LPAREN VAR_IDENTIFIER RPAREN .)
    SEMICOLON       reduce using rule 24 (Inst_Funcion -> BOTTOM LPAREN VAR_IDENTIFIER RPAREN .)
    INST_END        reduce using rule 24 (Inst_Funcion -> BOTTOM LPAREN VAR_IDENTIFIER RPAREN .)
    INST_ELSE       reduce using rule 24 (Inst_Funcion -> BOTTOM LPAREN VAR_IDENTIFIER RPAREN .)


state 145

    (20) Inst_Funcion -> BOTTOM LPAREN Rango RPAREN .

    $end            reduce using rule 20 (Inst_Funcion -> BOTTOM LPAREN Rango RPAREN .)
    SEMICOLON       reduce using rule 20 (Inst_Funcion -> BOTTOM LPAREN Rango RPAREN .)
    INST_END        reduce using rule 20 (Inst_Funcion -> BOTTOM LPAREN Rango RPAREN .)
    INST_ELSE       reduce using rule 20 (Inst_Funcion -> BOTTOM LPAREN Rango RPAREN .)


state 146

    (81) Inst_Case -> INST_CASE Operacion_booleana INST_OF Casos . INST_END

    INST_END        shift and go to state 163


state 147

    (82) Casos -> VAR_IDENTIFIER . CASE_ASSIGN Bloque_Control
    (84) Casos -> VAR_IDENTIFIER . CASE_ASSIGN Bloque_Control SEMICOLON Casos
    (69) Rango -> VAR_IDENTIFIER .
    (61) Factor -> VAR_IDENTIFIER .

  ! shift/reduce conflict for CASE_ASSIGN resolved as shift
  ! reduce/reduce conflict for TIMES resolved using rule 61 (Factor -> VAR_IDENTIFIER .)
  ! reduce/reduce conflict for PLUS resolved using rule 61 (Factor -> VAR_IDENTIFIER .)
    CASE_ASSIGN     shift and go to state 164
    INTERSECTION    reduce using rule 69 (Rango -> VAR_IDENTIFIER .)
    TIMES           reduce using rule 61 (Factor -> VAR_IDENTIFIER .)
    DIVIDE          reduce using rule 61 (Factor -> VAR_IDENTIFIER .)
    MOD             reduce using rule 61 (Factor -> VAR_IDENTIFIER .)
    RANGE           reduce using rule 61 (Factor -> VAR_IDENTIFIER .)
    PLUS            reduce using rule 61 (Factor -> VAR_IDENTIFIER .)
    MINUS           reduce using rule 61 (Factor -> VAR_IDENTIFIER .)

  ! CASE_ASSIGN     [ reduce using rule 69 (Rango -> VAR_IDENTIFIER .) ]
  ! PLUS            [ reduce using rule 69 (Rango -> VAR_IDENTIFIER .) ]
  ! TIMES           [ reduce using rule 69 (Rango -> VAR_IDENTIFIER .) ]


state 148

    (83) Casos -> Rango . CASE_ASSIGN Bloque_Control
    (85) Casos -> Rango . CASE_ASSIGN Bloque_Control SEMICOLON Casos
    (65) Rango -> Rango . PLUS Rango
    (66) Rango -> Rango . TIMES Operacion_binaria
    (67) Rango -> Rango . INTERSECTION Rango

    CASE_ASSIGN     shift and go to state 165
    PLUS            shift and go to state 76
    TIMES           shift and go to state 77
    INTERSECTION    shift and go to state 75


state 149

    (86) Inst_For -> INST_FOR VAR_IDENTIFIER INST_IN Rango . INST_DO Bloque_Control
    (65) Rango -> Rango . PLUS Rango
    (66) Rango -> Rango . TIMES Operacion_binaria
    (67) Rango -> Rango . INTERSECTION Rango

    INST_DO         shift and go to state 166
    PLUS            shift and go to state 76
    TIMES           shift and go to state 77
    INTERSECTION    shift and go to state 75


state 150

    (78) Bloque_Control -> Bloque_Inst .
    (16) Inst -> Bloque_Inst .

  ! reduce/reduce conflict for $end resolved using rule 16 (Inst -> Bloque_Inst .)
  ! reduce/reduce conflict for SEMICOLON resolved using rule 16 (Inst -> Bloque_Inst .)
  ! reduce/reduce conflict for INST_END resolved using rule 16 (Inst -> Bloque_Inst .)
  ! reduce/reduce conflict for INST_ELSE resolved using rule 16 (Inst -> Bloque_Inst .)
    $end            reduce using rule 16 (Inst -> Bloque_Inst .)
    SEMICOLON       reduce using rule 16 (Inst -> Bloque_Inst .)
    INST_END        reduce using rule 16 (Inst -> Bloque_Inst .)
    INST_ELSE       reduce using rule 16 (Inst -> Bloque_Inst .)

  ! SEMICOLON       [ reduce using rule 78 (Bloque_Control -> Bloque_Inst .) ]
  ! INST_END        [ reduce using rule 78 (Bloque_Control -> Bloque_Inst .) ]
  ! $end            [ reduce using rule 78 (Bloque_Control -> Bloque_Inst .) ]
  ! INST_ELSE       [ reduce using rule 78 (Bloque_Control -> Bloque_Inst .) ]


state 151

    (79) Inst_If -> INST_IF Operacion_booleana INST_THEN Bloque_Control .
    (80) Inst_If -> INST_IF Operacion_booleana INST_THEN Bloque_Control . INST_ELSE Bloque_Control

  ! shift/reduce conflict for INST_ELSE resolved as shift
    $end            reduce using rule 79 (Inst_If -> INST_IF Operacion_booleana INST_THEN Bloque_Control .)
    SEMICOLON       reduce using rule 79 (Inst_If -> INST_IF Operacion_booleana INST_THEN Bloque_Control .)
    INST_END        reduce using rule 79 (Inst_If -> INST_IF Operacion_booleana INST_THEN Bloque_Control .)
    INST_ELSE       shift and go to state 167

  ! INST_ELSE       [ reduce using rule 79 (Inst_If -> INST_IF Operacion_booleana INST_THEN Bloque_Control .) ]


state 152

    (77) Bloque_Control -> Inst .

    SEMICOLON       reduce using rule 77 (Bloque_Control -> Inst .)
    INST_END        reduce using rule 77 (Bloque_Control -> Inst .)
    $end            reduce using rule 77 (Bloque_Control -> Inst .)
    INST_ELSE       reduce using rule 77 (Bloque_Control -> Inst .)


state 153

    (22) Inst_Funcion -> LENGTH LPAREN VAR_IDENTIFIER RPAREN .

    $end            reduce using rule 22 (Inst_Funcion -> LENGTH LPAREN VAR_IDENTIFIER RPAREN .)
    SEMICOLON       reduce using rule 22 (Inst_Funcion -> LENGTH LPAREN VAR_IDENTIFIER RPAREN .)
    INST_END        reduce using rule 22 (Inst_Funcion -> LENGTH LPAREN VAR_IDENTIFIER RPAREN .)
    INST_ELSE       reduce using rule 22 (Inst_Funcion -> LENGTH LPAREN VAR_IDENTIFIER RPAREN .)


state 154

    (18) Inst_Funcion -> LENGTH LPAREN Rango RPAREN .

    $end            reduce using rule 18 (Inst_Funcion -> LENGTH LPAREN Rango RPAREN .)
    SEMICOLON       reduce using rule 18 (Inst_Funcion -> LENGTH LPAREN Rango RPAREN .)
    INST_END        reduce using rule 18 (Inst_Funcion -> LENGTH LPAREN Rango RPAREN .)
    INST_ELSE       reduce using rule 18 (Inst_Funcion -> LENGTH LPAREN Rango RPAREN .)


state 155

    (21) Inst_Funcion -> RTOI LPAREN VAR_IDENTIFIER RPAREN .

    $end            reduce using rule 21 (Inst_Funcion -> RTOI LPAREN VAR_IDENTIFIER RPAREN .)
    SEMICOLON       reduce using rule 21 (Inst_Funcion -> RTOI LPAREN VAR_IDENTIFIER RPAREN .)
    INST_END        reduce using rule 21 (Inst_Funcion -> RTOI LPAREN VAR_IDENTIFIER RPAREN .)
    INST_ELSE       reduce using rule 21 (Inst_Funcion -> RTOI LPAREN VAR_IDENTIFIER RPAREN .)


state 156

    (17) Inst_Funcion -> RTOI LPAREN Rango RPAREN .

    $end            reduce using rule 17 (Inst_Funcion -> RTOI LPAREN Rango RPAREN .)
    SEMICOLON       reduce using rule 17 (Inst_Funcion -> RTOI LPAREN Rango RPAREN .)
    INST_END        reduce using rule 17 (Inst_Funcion -> RTOI LPAREN Rango RPAREN .)
    INST_ELSE       reduce using rule 17 (Inst_Funcion -> RTOI LPAREN Rango RPAREN .)


state 157

    (30) Lista_Variables -> VAR_IDENTIFIER COMMA Lista_Variables .

    INST_AS         reduce using rule 30 (Lista_Variables -> VAR_IDENTIFIER COMMA Lista_Variables .)


state 158

    (31) Tipo -> TYPEDEF_INT .

    SEMICOLON       reduce using rule 31 (Tipo -> TYPEDEF_INT .)
    INST_END        reduce using rule 31 (Tipo -> TYPEDEF_INT .)
    VAR_IDENTIFIER  reduce using rule 31 (Tipo -> TYPEDEF_INT .)
    INST_READ       reduce using rule 31 (Tipo -> TYPEDEF_INT .)
    INST_FOR        reduce using rule 31 (Tipo -> TYPEDEF_INT .)
    INST_WHILE      reduce using rule 31 (Tipo -> TYPEDEF_INT .)
    INST_IF         reduce using rule 31 (Tipo -> TYPEDEF_INT .)
    INST_CASE       reduce using rule 31 (Tipo -> TYPEDEF_INT .)
    INST_WRITE      reduce using rule 31 (Tipo -> TYPEDEF_INT .)
    INST_WRITELN    reduce using rule 31 (Tipo -> TYPEDEF_INT .)
    RTOI            reduce using rule 31 (Tipo -> TYPEDEF_INT .)
    LENGTH          reduce using rule 31 (Tipo -> TYPEDEF_INT .)
    TOP             reduce using rule 31 (Tipo -> TYPEDEF_INT .)
    BOTTOM          reduce using rule 31 (Tipo -> TYPEDEF_INT .)
    INST_BEGIN      reduce using rule 31 (Tipo -> TYPEDEF_INT .)


state 159

    (28) Lista_Declare -> Lista_Variables INST_AS Tipo .

    SEMICOLON       reduce using rule 28 (Lista_Declare -> Lista_Variables INST_AS Tipo .)
    INST_END        reduce using rule 28 (Lista_Declare -> Lista_Variables INST_AS Tipo .)
    VAR_IDENTIFIER  reduce using rule 28 (Lista_Declare -> Lista_Variables INST_AS Tipo .)
    INST_READ       reduce using rule 28 (Lista_Declare -> Lista_Variables INST_AS Tipo .)
    INST_FOR        reduce using rule 28 (Lista_Declare -> Lista_Variables INST_AS Tipo .)
    INST_WHILE      reduce using rule 28 (Lista_Declare -> Lista_Variables INST_AS Tipo .)
    INST_IF         reduce using rule 28 (Lista_Declare -> Lista_Variables INST_AS Tipo .)
    INST_CASE       reduce using rule 28 (Lista_Declare -> Lista_Variables INST_AS Tipo .)
    INST_WRITE      reduce using rule 28 (Lista_Declare -> Lista_Variables INST_AS Tipo .)
    INST_WRITELN    reduce using rule 28 (Lista_Declare -> Lista_Variables INST_AS Tipo .)
    RTOI            reduce using rule 28 (Lista_Declare -> Lista_Variables INST_AS Tipo .)
    LENGTH          reduce using rule 28 (Lista_Declare -> Lista_Variables INST_AS Tipo .)
    TOP             reduce using rule 28 (Lista_Declare -> Lista_Variables INST_AS Tipo .)
    BOTTOM          reduce using rule 28 (Lista_Declare -> Lista_Variables INST_AS Tipo .)
    INST_BEGIN      reduce using rule 28 (Lista_Declare -> Lista_Variables INST_AS Tipo .)


state 160

    (33) Tipo -> TYPEDEF_RANGE .

    SEMICOLON       reduce using rule 33 (Tipo -> TYPEDEF_RANGE .)
    INST_END        reduce using rule 33 (Tipo -> TYPEDEF_RANGE .)
    VAR_IDENTIFIER  reduce using rule 33 (Tipo -> TYPEDEF_RANGE .)
    INST_READ       reduce using rule 33 (Tipo -> TYPEDEF_RANGE .)
    INST_FOR        reduce using rule 33 (Tipo -> TYPEDEF_RANGE .)
    INST_WHILE      reduce using rule 33 (Tipo -> TYPEDEF_RANGE .)
    INST_IF         reduce using rule 33 (Tipo -> TYPEDEF_RANGE .)
    INST_CASE       reduce using rule 33 (Tipo -> TYPEDEF_RANGE .)
    INST_WRITE      reduce using rule 33 (Tipo -> TYPEDEF_RANGE .)
    INST_WRITELN    reduce using rule 33 (Tipo -> TYPEDEF_RANGE .)
    RTOI            reduce using rule 33 (Tipo -> TYPEDEF_RANGE .)
    LENGTH          reduce using rule 33 (Tipo -> TYPEDEF_RANGE .)
    TOP             reduce using rule 33 (Tipo -> TYPEDEF_RANGE .)
    BOTTOM          reduce using rule 33 (Tipo -> TYPEDEF_RANGE .)
    INST_BEGIN      reduce using rule 33 (Tipo -> TYPEDEF_RANGE .)


state 161

    (32) Tipo -> TYPEDEF_BOOL .

    SEMICOLON       reduce using rule 32 (Tipo -> TYPEDEF_BOOL .)
    INST_END        reduce using rule 32 (Tipo -> TYPEDEF_BOOL .)
    VAR_IDENTIFIER  reduce using rule 32 (Tipo -> TYPEDEF_BOOL .)
    INST_READ       reduce using rule 32 (Tipo -> TYPEDEF_BOOL .)
    INST_FOR        reduce using rule 32 (Tipo -> TYPEDEF_BOOL .)
    INST_WHILE      reduce using rule 32 (Tipo -> TYPEDEF_BOOL .)
    INST_IF         reduce using rule 32 (Tipo -> TYPEDEF_BOOL .)
    INST_CASE       reduce using rule 32 (Tipo -> TYPEDEF_BOOL .)
    INST_WRITE      reduce using rule 32 (Tipo -> TYPEDEF_BOOL .)
    INST_WRITELN    reduce using rule 32 (Tipo -> TYPEDEF_BOOL .)
    RTOI            reduce using rule 32 (Tipo -> TYPEDEF_BOOL .)
    LENGTH          reduce using rule 32 (Tipo -> TYPEDEF_BOOL .)
    TOP             reduce using rule 32 (Tipo -> TYPEDEF_BOOL .)
    BOTTOM          reduce using rule 32 (Tipo -> TYPEDEF_BOOL .)
    INST_BEGIN      reduce using rule 32 (Tipo -> TYPEDEF_BOOL .)


state 162

    (27) Lista_DeclareTipos -> Lista_Declare SEMICOLON Lista_DeclareTipos .

    INST_END        reduce using rule 27 (Lista_DeclareTipos -> Lista_Declare SEMICOLON Lista_DeclareTipos .)
    VAR_IDENTIFIER  reduce using rule 27 (Lista_DeclareTipos -> Lista_Declare SEMICOLON Lista_DeclareTipos .)
    INST_READ       reduce using rule 27 (Lista_DeclareTipos -> Lista_Declare SEMICOLON Lista_DeclareTipos .)
    INST_FOR        reduce using rule 27 (Lista_DeclareTipos -> Lista_Declare SEMICOLON Lista_DeclareTipos .)
    INST_WHILE      reduce using rule 27 (Lista_DeclareTipos -> Lista_Declare SEMICOLON Lista_DeclareTipos .)
    INST_IF         reduce using rule 27 (Lista_DeclareTipos -> Lista_Declare SEMICOLON Lista_DeclareTipos .)
    INST_CASE       reduce using rule 27 (Lista_DeclareTipos -> Lista_Declare SEMICOLON Lista_DeclareTipos .)
    INST_WRITE      reduce using rule 27 (Lista_DeclareTipos -> Lista_Declare SEMICOLON Lista_DeclareTipos .)
    INST_WRITELN    reduce using rule 27 (Lista_DeclareTipos -> Lista_Declare SEMICOLON Lista_DeclareTipos .)
    RTOI            reduce using rule 27 (Lista_DeclareTipos -> Lista_Declare SEMICOLON Lista_DeclareTipos .)
    LENGTH          reduce using rule 27 (Lista_DeclareTipos -> Lista_Declare SEMICOLON Lista_DeclareTipos .)
    TOP             reduce using rule 27 (Lista_DeclareTipos -> Lista_Declare SEMICOLON Lista_DeclareTipos .)
    BOTTOM          reduce using rule 27 (Lista_DeclareTipos -> Lista_Declare SEMICOLON Lista_DeclareTipos .)
    INST_BEGIN      reduce using rule 27 (Lista_DeclareTipos -> Lista_Declare SEMICOLON Lista_DeclareTipos .)


state 163

    (81) Inst_Case -> INST_CASE Operacion_booleana INST_OF Casos INST_END .

    SEMICOLON       reduce using rule 81 (Inst_Case -> INST_CASE Operacion_booleana INST_OF Casos INST_END .)
    INST_END        reduce using rule 81 (Inst_Case -> INST_CASE Operacion_booleana INST_OF Casos INST_END .)
    $end            reduce using rule 81 (Inst_Case -> INST_CASE Operacion_booleana INST_OF Casos INST_END .)
    INST_ELSE       reduce using rule 81 (Inst_Case -> INST_CASE Operacion_booleana INST_OF Casos INST_END .)


state 164

    (82) Casos -> VAR_IDENTIFIER CASE_ASSIGN . Bloque_Control
    (84) Casos -> VAR_IDENTIFIER CASE_ASSIGN . Bloque_Control SEMICOLON Casos
    (77) Bloque_Control -> . Inst
    (78) Bloque_Control -> . Bloque_Inst
    (8) Inst -> . Inst_Asignacion
    (9) Inst -> . Inst_Lectura
    (10) Inst -> . Inst_For
    (11) Inst -> . Inst_While
    (12) Inst -> . Inst_If
    (13) Inst -> . Inst_Case
    (14) Inst -> . Inst_Salida
    (15) Inst -> . Inst_Funcion
    (16) Inst -> . Bloque_Inst
    (3) Bloque_Inst -> . INST_BEGIN Lista_Inst INST_END
    (4) Bloque_Inst -> . INST_BEGIN Inst_Declare Lista_Inst INST_END
    (5) Bloque_Inst -> . INST_BEGIN Inst_Declare INST_END
    (34) Inst_Asignacion -> . VAR_IDENTIFIER EQUAL Expresion
    (70) Inst_Lectura -> . INST_READ VAR_IDENTIFIER
    (86) Inst_For -> . INST_FOR VAR_IDENTIFIER INST_IN Rango INST_DO Bloque_Control
    (87) Inst_While -> . INST_WHILE Operacion_booleana INST_DO Bloque_Inst
    (88) Inst_While -> . INST_WHILE Operacion_booleana INST_DO Inst
    (79) Inst_If -> . INST_IF Operacion_booleana INST_THEN Bloque_Control
    (80) Inst_If -> . INST_IF Operacion_booleana INST_THEN Bloque_Control INST_ELSE Bloque_Control
    (81) Inst_Case -> . INST_CASE Operacion_booleana INST_OF Casos INST_END
    (71) Inst_Salida -> . INST_WRITE Lista_Aux
    (72) Inst_Salida -> . INST_WRITELN Lista_Aux
    (17) Inst_Funcion -> . RTOI LPAREN Rango RPAREN
    (18) Inst_Funcion -> . LENGTH LPAREN Rango RPAREN
    (19) Inst_Funcion -> . TOP LPAREN Rango RPAREN
    (20) Inst_Funcion -> . BOTTOM LPAREN Rango RPAREN
    (21) Inst_Funcion -> . RTOI LPAREN VAR_IDENTIFIER RPAREN
    (22) Inst_Funcion -> . LENGTH LPAREN VAR_IDENTIFIER RPAREN
    (23) Inst_Funcion -> . TOP LPAREN VAR_IDENTIFIER RPAREN
    (24) Inst_Funcion -> . BOTTOM LPAREN VAR_IDENTIFIER RPAREN

    INST_BEGIN      shift and go to state 10
    VAR_IDENTIFIER  shift and go to state 16
    INST_READ       shift and go to state 9
    INST_FOR        shift and go to state 19
    INST_WHILE      shift and go to state 8
    INST_IF         shift and go to state 20
    INST_CASE       shift and go to state 18
    INST_WRITE      shift and go to state 4
    INST_WRITELN    shift and go to state 21
    RTOI            shift and go to state 23
    LENGTH          shift and go to state 22
    TOP             shift and go to state 5
    BOTTOM          shift and go to state 11

    Bloque_Control                 shift and go to state 168
    Inst_Salida                    shift and go to state 7
    Inst_Funcion                   shift and go to state 3
    Bloque_Inst                    shift and go to state 150
    Inst_If                        shift and go to state 17
    Inst_For                       shift and go to state 12
    Inst_While                     shift and go to state 14
    Inst                           shift and go to state 152
    Inst_Asignacion                shift and go to state 24
    Inst_Case                      shift and go to state 25
    Inst_Lectura                   shift and go to state 15

state 165

    (83) Casos -> Rango CASE_ASSIGN . Bloque_Control
    (85) Casos -> Rango CASE_ASSIGN . Bloque_Control SEMICOLON Casos
    (77) Bloque_Control -> . Inst
    (78) Bloque_Control -> . Bloque_Inst
    (8) Inst -> . Inst_Asignacion
    (9) Inst -> . Inst_Lectura
    (10) Inst -> . Inst_For
    (11) Inst -> . Inst_While
    (12) Inst -> . Inst_If
    (13) Inst -> . Inst_Case
    (14) Inst -> . Inst_Salida
    (15) Inst -> . Inst_Funcion
    (16) Inst -> . Bloque_Inst
    (3) Bloque_Inst -> . INST_BEGIN Lista_Inst INST_END
    (4) Bloque_Inst -> . INST_BEGIN Inst_Declare Lista_Inst INST_END
    (5) Bloque_Inst -> . INST_BEGIN Inst_Declare INST_END
    (34) Inst_Asignacion -> . VAR_IDENTIFIER EQUAL Expresion
    (70) Inst_Lectura -> . INST_READ VAR_IDENTIFIER
    (86) Inst_For -> . INST_FOR VAR_IDENTIFIER INST_IN Rango INST_DO Bloque_Control
    (87) Inst_While -> . INST_WHILE Operacion_booleana INST_DO Bloque_Inst
    (88) Inst_While -> . INST_WHILE Operacion_booleana INST_DO Inst
    (79) Inst_If -> . INST_IF Operacion_booleana INST_THEN Bloque_Control
    (80) Inst_If -> . INST_IF Operacion_booleana INST_THEN Bloque_Control INST_ELSE Bloque_Control
    (81) Inst_Case -> . INST_CASE Operacion_booleana INST_OF Casos INST_END
    (71) Inst_Salida -> . INST_WRITE Lista_Aux
    (72) Inst_Salida -> . INST_WRITELN Lista_Aux
    (17) Inst_Funcion -> . RTOI LPAREN Rango RPAREN
    (18) Inst_Funcion -> . LENGTH LPAREN Rango RPAREN
    (19) Inst_Funcion -> . TOP LPAREN Rango RPAREN
    (20) Inst_Funcion -> . BOTTOM LPAREN Rango RPAREN
    (21) Inst_Funcion -> . RTOI LPAREN VAR_IDENTIFIER RPAREN
    (22) Inst_Funcion -> . LENGTH LPAREN VAR_IDENTIFIER RPAREN
    (23) Inst_Funcion -> . TOP LPAREN VAR_IDENTIFIER RPAREN
    (24) Inst_Funcion -> . BOTTOM LPAREN VAR_IDENTIFIER RPAREN

    INST_BEGIN      shift and go to state 10
    VAR_IDENTIFIER  shift and go to state 16
    INST_READ       shift and go to state 9
    INST_FOR        shift and go to state 19
    INST_WHILE      shift and go to state 8
    INST_IF         shift and go to state 20
    INST_CASE       shift and go to state 18
    INST_WRITE      shift and go to state 4
    INST_WRITELN    shift and go to state 21
    RTOI            shift and go to state 23
    LENGTH          shift and go to state 22
    TOP             shift and go to state 5
    BOTTOM          shift and go to state 11

    Bloque_Control                 shift and go to state 169
    Inst_Salida                    shift and go to state 7
    Inst_Funcion                   shift and go to state 3
    Bloque_Inst                    shift and go to state 150
    Inst_If                        shift and go to state 17
    Inst_While                     shift and go to state 14
    Inst_For                       shift and go to state 12
    Inst_Asignacion                shift and go to state 24
    Inst                           shift and go to state 152
    Inst_Case                      shift and go to state 25
    Inst_Lectura                   shift and go to state 15

state 166

    (86) Inst_For -> INST_FOR VAR_IDENTIFIER INST_IN Rango INST_DO . Bloque_Control
    (77) Bloque_Control -> . Inst
    (78) Bloque_Control -> . Bloque_Inst
    (8) Inst -> . Inst_Asignacion
    (9) Inst -> . Inst_Lectura
    (10) Inst -> . Inst_For
    (11) Inst -> . Inst_While
    (12) Inst -> . Inst_If
    (13) Inst -> . Inst_Case
    (14) Inst -> . Inst_Salida
    (15) Inst -> . Inst_Funcion
    (16) Inst -> . Bloque_Inst
    (3) Bloque_Inst -> . INST_BEGIN Lista_Inst INST_END
    (4) Bloque_Inst -> . INST_BEGIN Inst_Declare Lista_Inst INST_END
    (5) Bloque_Inst -> . INST_BEGIN Inst_Declare INST_END
    (34) Inst_Asignacion -> . VAR_IDENTIFIER EQUAL Expresion
    (70) Inst_Lectura -> . INST_READ VAR_IDENTIFIER
    (86) Inst_For -> . INST_FOR VAR_IDENTIFIER INST_IN Rango INST_DO Bloque_Control
    (87) Inst_While -> . INST_WHILE Operacion_booleana INST_DO Bloque_Inst
    (88) Inst_While -> . INST_WHILE Operacion_booleana INST_DO Inst
    (79) Inst_If -> . INST_IF Operacion_booleana INST_THEN Bloque_Control
    (80) Inst_If -> . INST_IF Operacion_booleana INST_THEN Bloque_Control INST_ELSE Bloque_Control
    (81) Inst_Case -> . INST_CASE Operacion_booleana INST_OF Casos INST_END
    (71) Inst_Salida -> . INST_WRITE Lista_Aux
    (72) Inst_Salida -> . INST_WRITELN Lista_Aux
    (17) Inst_Funcion -> . RTOI LPAREN Rango RPAREN
    (18) Inst_Funcion -> . LENGTH LPAREN Rango RPAREN
    (19) Inst_Funcion -> . TOP LPAREN Rango RPAREN
    (20) Inst_Funcion -> . BOTTOM LPAREN Rango RPAREN
    (21) Inst_Funcion -> . RTOI LPAREN VAR_IDENTIFIER RPAREN
    (22) Inst_Funcion -> . LENGTH LPAREN VAR_IDENTIFIER RPAREN
    (23) Inst_Funcion -> . TOP LPAREN VAR_IDENTIFIER RPAREN
    (24) Inst_Funcion -> . BOTTOM LPAREN VAR_IDENTIFIER RPAREN

    INST_BEGIN      shift and go to state 10
    VAR_IDENTIFIER  shift and go to state 16
    INST_READ       shift and go to state 9
    INST_FOR        shift and go to state 19
    INST_WHILE      shift and go to state 8
    INST_IF         shift and go to state 20
    INST_CASE       shift and go to state 18
    INST_WRITE      shift and go to state 4
    INST_WRITELN    shift and go to state 21
    RTOI            shift and go to state 23
    LENGTH          shift and go to state 22
    TOP             shift and go to state 5
    BOTTOM          shift and go to state 11

    Bloque_Control                 shift and go to state 170
    Inst_Salida                    shift and go to state 7
    Inst_Funcion                   shift and go to state 3
    Bloque_Inst                    shift and go to state 150
    Inst_If                        shift and go to state 17
    Inst_While                     shift and go to state 14
    Inst_For                       shift and go to state 12
    Inst_Asignacion                shift and go to state 24
    Inst                           shift and go to state 152
    Inst_Case                      shift and go to state 25
    Inst_Lectura                   shift and go to state 15

state 167

    (80) Inst_If -> INST_IF Operacion_booleana INST_THEN Bloque_Control INST_ELSE . Bloque_Control
    (77) Bloque_Control -> . Inst
    (78) Bloque_Control -> . Bloque_Inst
    (8) Inst -> . Inst_Asignacion
    (9) Inst -> . Inst_Lectura
    (10) Inst -> . Inst_For
    (11) Inst -> . Inst_While
    (12) Inst -> . Inst_If
    (13) Inst -> . Inst_Case
    (14) Inst -> . Inst_Salida
    (15) Inst -> . Inst_Funcion
    (16) Inst -> . Bloque_Inst
    (3) Bloque_Inst -> . INST_BEGIN Lista_Inst INST_END
    (4) Bloque_Inst -> . INST_BEGIN Inst_Declare Lista_Inst INST_END
    (5) Bloque_Inst -> . INST_BEGIN Inst_Declare INST_END
    (34) Inst_Asignacion -> . VAR_IDENTIFIER EQUAL Expresion
    (70) Inst_Lectura -> . INST_READ VAR_IDENTIFIER
    (86) Inst_For -> . INST_FOR VAR_IDENTIFIER INST_IN Rango INST_DO Bloque_Control
    (87) Inst_While -> . INST_WHILE Operacion_booleana INST_DO Bloque_Inst
    (88) Inst_While -> . INST_WHILE Operacion_booleana INST_DO Inst
    (79) Inst_If -> . INST_IF Operacion_booleana INST_THEN Bloque_Control
    (80) Inst_If -> . INST_IF Operacion_booleana INST_THEN Bloque_Control INST_ELSE Bloque_Control
    (81) Inst_Case -> . INST_CASE Operacion_booleana INST_OF Casos INST_END
    (71) Inst_Salida -> . INST_WRITE Lista_Aux
    (72) Inst_Salida -> . INST_WRITELN Lista_Aux
    (17) Inst_Funcion -> . RTOI LPAREN Rango RPAREN
    (18) Inst_Funcion -> . LENGTH LPAREN Rango RPAREN
    (19) Inst_Funcion -> . TOP LPAREN Rango RPAREN
    (20) Inst_Funcion -> . BOTTOM LPAREN Rango RPAREN
    (21) Inst_Funcion -> . RTOI LPAREN VAR_IDENTIFIER RPAREN
    (22) Inst_Funcion -> . LENGTH LPAREN VAR_IDENTIFIER RPAREN
    (23) Inst_Funcion -> . TOP LPAREN VAR_IDENTIFIER RPAREN
    (24) Inst_Funcion -> . BOTTOM LPAREN VAR_IDENTIFIER RPAREN

    INST_BEGIN      shift and go to state 10
    VAR_IDENTIFIER  shift and go to state 16
    INST_READ       shift and go to state 9
    INST_FOR        shift and go to state 19
    INST_WHILE      shift and go to state 8
    INST_IF         shift and go to state 20
    INST_CASE       shift and go to state 18
    INST_WRITE      shift and go to state 4
    INST_WRITELN    shift and go to state 21
    RTOI            shift and go to state 23
    LENGTH          shift and go to state 22
    TOP             shift and go to state 5
    BOTTOM          shift and go to state 11

    Bloque_Control                 shift and go to state 171
    Inst_Salida                    shift and go to state 7
    Inst_Funcion                   shift and go to state 3
    Bloque_Inst                    shift and go to state 150
    Inst_If                        shift and go to state 17
    Inst_For                       shift and go to state 12
    Inst_While                     shift and go to state 14
    Inst                           shift and go to state 152
    Inst_Asignacion                shift and go to state 24
    Inst_Case                      shift and go to state 25
    Inst_Lectura                   shift and go to state 15

state 168

    (82) Casos -> VAR_IDENTIFIER CASE_ASSIGN Bloque_Control .
    (84) Casos -> VAR_IDENTIFIER CASE_ASSIGN Bloque_Control . SEMICOLON Casos

    INST_END        reduce using rule 82 (Casos -> VAR_IDENTIFIER CASE_ASSIGN Bloque_Control .)
    SEMICOLON       shift and go to state 172


state 169

    (83) Casos -> Rango CASE_ASSIGN Bloque_Control .
    (85) Casos -> Rango CASE_ASSIGN Bloque_Control . SEMICOLON Casos

    INST_END        reduce using rule 83 (Casos -> Rango CASE_ASSIGN Bloque_Control .)
    SEMICOLON       shift and go to state 173


state 170

    (86) Inst_For -> INST_FOR VAR_IDENTIFIER INST_IN Rango INST_DO Bloque_Control .

    $end            reduce using rule 86 (Inst_For -> INST_FOR VAR_IDENTIFIER INST_IN Rango INST_DO Bloque_Control .)
    SEMICOLON       reduce using rule 86 (Inst_For -> INST_FOR VAR_IDENTIFIER INST_IN Rango INST_DO Bloque_Control .)
    INST_END        reduce using rule 86 (Inst_For -> INST_FOR VAR_IDENTIFIER INST_IN Rango INST_DO Bloque_Control .)
    INST_ELSE       reduce using rule 86 (Inst_For -> INST_FOR VAR_IDENTIFIER INST_IN Rango INST_DO Bloque_Control .)


state 171

    (80) Inst_If -> INST_IF Operacion_booleana INST_THEN Bloque_Control INST_ELSE Bloque_Control .

    $end            reduce using rule 80 (Inst_If -> INST_IF Operacion_booleana INST_THEN Bloque_Control INST_ELSE Bloque_Control .)
    SEMICOLON       reduce using rule 80 (Inst_If -> INST_IF Operacion_booleana INST_THEN Bloque_Control INST_ELSE Bloque_Control .)
    INST_END        reduce using rule 80 (Inst_If -> INST_IF Operacion_booleana INST_THEN Bloque_Control INST_ELSE Bloque_Control .)
    INST_ELSE       reduce using rule 80 (Inst_If -> INST_IF Operacion_booleana INST_THEN Bloque_Control INST_ELSE Bloque_Control .)


state 172

    (84) Casos -> VAR_IDENTIFIER CASE_ASSIGN Bloque_Control SEMICOLON . Casos
    (82) Casos -> . VAR_IDENTIFIER CASE_ASSIGN Bloque_Control
    (83) Casos -> . Rango CASE_ASSIGN Bloque_Control
    (84) Casos -> . VAR_IDENTIFIER CASE_ASSIGN Bloque_Control SEMICOLON Casos
    (85) Casos -> . Rango CASE_ASSIGN Bloque_Control SEMICOLON Casos
    (64) Rango -> . Operacion_binaria RANGE Operacion_binaria
    (65) Rango -> . Rango PLUS Rango
    (66) Rango -> . Rango TIMES Operacion_binaria
    (67) Rango -> . Rango INTERSECTION Rango
    (68) Rango -> . LPAREN Rango RPAREN
    (69) Rango -> . VAR_IDENTIFIER
    (53) Operacion_binaria -> . Operacion_binaria PLUS Term
    (54) Operacion_binaria -> . Operacion_binaria MINUS Term
    (55) Operacion_binaria -> . Term
    (56) Term -> . Term TIMES Factor
    (57) Term -> . Term DIVIDE Factor
    (58) Term -> . Term MOD Factor
    (59) Term -> . Factor
    (60) Factor -> . NUMBER
    (61) Factor -> . VAR_IDENTIFIER
    (62) Factor -> . LPAREN Operacion_binaria RPAREN
    (63) Factor -> . MINUS Factor

    VAR_IDENTIFIER  shift and go to state 147
    LPAREN          shift and go to state 90
    NUMBER          shift and go to state 27
    MINUS           shift and go to state 30

    Operacion_binaria              shift and go to state 88
    Term                           shift and go to state 33
    Factor                         shift and go to state 26
    Rango                          shift and go to state 148
    Casos                          shift and go to state 174

state 173

    (85) Casos -> Rango CASE_ASSIGN Bloque_Control SEMICOLON . Casos
    (82) Casos -> . VAR_IDENTIFIER CASE_ASSIGN Bloque_Control
    (83) Casos -> . Rango CASE_ASSIGN Bloque_Control
    (84) Casos -> . VAR_IDENTIFIER CASE_ASSIGN Bloque_Control SEMICOLON Casos
    (85) Casos -> . Rango CASE_ASSIGN Bloque_Control SEMICOLON Casos
    (64) Rango -> . Operacion_binaria RANGE Operacion_binaria
    (65) Rango -> . Rango PLUS Rango
    (66) Rango -> . Rango TIMES Operacion_binaria
    (67) Rango -> . Rango INTERSECTION Rango
    (68) Rango -> . LPAREN Rango RPAREN
    (69) Rango -> . VAR_IDENTIFIER
    (53) Operacion_binaria -> . Operacion_binaria PLUS Term
    (54) Operacion_binaria -> . Operacion_binaria MINUS Term
    (55) Operacion_binaria -> . Term
    (56) Term -> . Term TIMES Factor
    (57) Term -> . Term DIVIDE Factor
    (58) Term -> . Term MOD Factor
    (59) Term -> . Factor
    (60) Factor -> . NUMBER
    (61) Factor -> . VAR_IDENTIFIER
    (62) Factor -> . LPAREN Operacion_binaria RPAREN
    (63) Factor -> . MINUS Factor

    VAR_IDENTIFIER  shift and go to state 147
    LPAREN          shift and go to state 90
    NUMBER          shift and go to state 27
    MINUS           shift and go to state 30

    Operacion_binaria              shift and go to state 88
    Term                           shift and go to state 33
    Factor                         shift and go to state 26
    Rango                          shift and go to state 148
    Casos                          shift and go to state 175

state 174

    (84) Casos -> VAR_IDENTIFIER CASE_ASSIGN Bloque_Control SEMICOLON Casos .

    INST_END        reduce using rule 84 (Casos -> VAR_IDENTIFIER CASE_ASSIGN Bloque_Control SEMICOLON Casos .)


state 175

    (85) Casos -> Rango CASE_ASSIGN Bloque_Control SEMICOLON Casos .

    INST_END        reduce using rule 85 (Casos -> Rango CASE_ASSIGN Bloque_Control SEMICOLON Casos .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for TIMES in state 33 resolved as shift
WARNING: shift/reduce conflict for RPAREN in state 89 resolved as shift
WARNING: shift/reduce conflict for RPAREN in state 102 resolved as shift
WARNING: shift/reduce conflict for RPAREN in state 108 resolved as shift
WARNING: shift/reduce conflict for RPAREN in state 110 resolved as shift
WARNING: shift/reduce conflict for CASE_ASSIGN in state 147 resolved as shift
WARNING: shift/reduce conflict for INST_ELSE in state 151 resolved as shift
WARNING: reduce/reduce conflict in state 6 resolved using rule (program -> INST_PROGRAM Bloque_Inst)
WARNING: rejected rule (Inst -> Bloque_Inst) in state 6
WARNING: reduce/reduce conflict in state 35 resolved using rule (Operacion_booleana -> VAR_IDENTIFIER)
WARNING: rejected rule (Rango -> VAR_IDENTIFIER) in state 35
WARNING: reduce/reduce conflict in state 35 resolved using rule (Factor -> VAR_IDENTIFIER)
WARNING: rejected rule (Rango -> VAR_IDENTIFIER) in state 35
WARNING: reduce/reduce conflict in state 35 resolved using rule (Operacion_booleana -> VAR_IDENTIFIER)
WARNING: rejected rule (Factor -> VAR_IDENTIFIER) in state 35
WARNING: reduce/reduce conflict in state 43 resolved using rule (Operacion_booleana -> VAR_IDENTIFIER)
WARNING: rejected rule (Factor -> VAR_IDENTIFIER) in state 43
WARNING: reduce/reduce conflict in state 89 resolved using rule (Factor -> VAR_IDENTIFIER)
WARNING: rejected rule (Rango -> VAR_IDENTIFIER) in state 89
WARNING: reduce/reduce conflict in state 102 resolved using rule (Factor -> VAR_IDENTIFIER)
WARNING: rejected rule (Rango -> VAR_IDENTIFIER) in state 102
WARNING: reduce/reduce conflict in state 108 resolved using rule (Factor -> VAR_IDENTIFIER)
WARNING: rejected rule (Rango -> VAR_IDENTIFIER) in state 108
WARNING: reduce/reduce conflict in state 110 resolved using rule (Factor -> VAR_IDENTIFIER)
WARNING: rejected rule (Rango -> VAR_IDENTIFIER) in state 110
WARNING: reduce/reduce conflict in state 125 resolved using rule (Factor -> VAR_IDENTIFIER)
WARNING: rejected rule (Rango -> VAR_IDENTIFIER) in state 125
WARNING: reduce/reduce conflict in state 137 resolved using rule (Inst -> Bloque_Inst)
WARNING: rejected rule (Inst_While -> INST_WHILE Operacion_booleana INST_DO Bloque_Inst) in state 137
WARNING: reduce/reduce conflict in state 147 resolved using rule (Factor -> VAR_IDENTIFIER)
WARNING: rejected rule (Rango -> VAR_IDENTIFIER) in state 147
WARNING: reduce/reduce conflict in state 150 resolved using rule (Inst -> Bloque_Inst)
WARNING: rejected rule (Bloque_Control -> Bloque_Inst) in state 150
WARNING: Rule (Inst_While -> INST_WHILE Operacion_booleana INST_DO Bloque_Inst) is never reduced
WARNING: Rule (Bloque_Control -> Bloque_Inst) is never reduced
