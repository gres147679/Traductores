Created by PLY version 3.4 (http://www.dabeaz.com/ply)

Unused terminals:

    COMMENT
    RESERVED

Grammar

Rule 0     S' -> program
Rule 1     program -> INST_PROGRAM Bloque_Inst
Rule 2     program -> INST_PROGRAM Inst
Rule 3     Bloque_Inst -> INST_BEGIN Lista_Inst INST_END
Rule 4     Bloque_Inst -> INST_BEGIN Inst_Declare Lista_Inst INST_END
Rule 5     Bloque_Inst -> INST_BEGIN Inst_Declare INST_END
Rule 6     Lista_Inst -> Inst
Rule 7     Lista_Inst -> Inst SEMICOLON Lista_Inst
Rule 8     Inst -> Inst_Asignacion
Rule 9     Inst -> Inst_Lectura
Rule 10    Inst -> Inst_For
Rule 11    Inst -> Inst_While
Rule 12    Inst -> Inst_If
Rule 13    Inst -> Inst_Case
Rule 14    Inst -> Inst_Salida
Rule 15    Inst -> Inst_Funcion
Rule 16    Inst -> Bloque_Inst
Rule 17    Inst_Funcion -> RTOI LPAREN Rango RPAREN
Rule 18    Inst_Funcion -> LENGTH LPAREN Rango RPAREN
Rule 19    Inst_Funcion -> TOP LPAREN Rango RPAREN
Rule 20    Inst_Funcion -> BOTTOM LPAREN Rango RPAREN
Rule 21    Inst_Funcion -> RTOI LPAREN VAR_IDENTIFIER RPAREN
Rule 22    Inst_Funcion -> LENGTH LPAREN VAR_IDENTIFIER RPAREN
Rule 23    Inst_Funcion -> TOP LPAREN VAR_IDENTIFIER RPAREN
Rule 24    Inst_Funcion -> BOTTOM LPAREN VAR_IDENTIFIER RPAREN
Rule 25    Inst_Declare -> INST_DECLARE Lista_DeclareTipos
Rule 26    Lista_DeclareTipos -> Lista_Declare
Rule 27    Lista_DeclareTipos -> Lista_Declare SEMICOLON Lista_DeclareTipos
Rule 28    Lista_Declare -> Lista_Variables INST_AS Tipo
Rule 29    Lista_Variables -> VAR_IDENTIFIER
Rule 30    Lista_Variables -> VAR_IDENTIFIER COMMA Lista_Variables
Rule 31    Tipo -> TYPEDEF_INT
Rule 32    Tipo -> TYPEDEF_BOOL
Rule 33    Tipo -> TYPEDEF_RANGE
Rule 34    Inst_Asignacion -> VAR_IDENTIFIER EQUAL Expresion
Rule 35    Expresion -> Operacion_binaria
Rule 36    Expresion -> Operacion_booleana
Rule 37    Expresion -> Rango
Rule 38    Operacion_booleana -> Operacion_binaria Opr_bool Operacion_binaria
Rule 39    Operacion_booleana -> Operacion_booleana AND Operacion_booleana
Rule 40    Operacion_booleana -> Operacion_booleana OR Operacion_booleana
Rule 41    Operacion_booleana -> Operacion_binaria IN Rango
Rule 42    Operacion_booleana -> LPAREN Operacion_booleana RPAREN
Rule 43    Operacion_booleana -> Operacion_booleana EQEQ Operacion_booleana
Rule 44    Operacion_booleana -> Operacion_booleana NEQEQ Operacion_booleana
Rule 45    Operacion_booleana -> Operacion_binaria EQEQ Operacion_binaria
Rule 46    Operacion_booleana -> Operacion_binaria NEQEQ Operacion_binaria
Rule 47    Operacion_booleana -> TRUE
Rule 48    Operacion_booleana -> FALSE
Rule 49    Operacion_booleana -> VAR_IDENTIFIER
Rule 50    Operacion_booleana -> NOT Operacion_booleana
Rule 51    Opr_bool -> GREAT
Rule 52    Opr_bool -> LESS
Rule 53    Opr_bool -> GREATEQ
Rule 54    Opr_bool -> LESSEQ
Rule 55    Operacion_binaria -> Operacion_binaria PLUS Term
Rule 56    Operacion_binaria -> Operacion_binaria MINUS Term
Rule 57    Operacion_binaria -> Term
Rule 58    Term -> Term TIMES Factor
Rule 59    Term -> Term DIVIDE Factor
Rule 60    Term -> Term MOD Factor
Rule 61    Term -> Factor
Rule 62    Factor -> NUMBER
Rule 63    Factor -> VAR_IDENTIFIER
Rule 64    Factor -> LPAREN Operacion_binaria RPAREN
Rule 65    Factor -> Inst_Funcion
Rule 66    Factor -> MINUS Factor
Rule 67    Rango -> Operacion_binaria RANGE Operacion_binaria
Rule 68    Rango -> Rango PLUS Rango
Rule 69    Rango -> Rango TIMES Operacion_binaria
Rule 70    Rango -> Rango INTERSECTION Rango
Rule 71    Rango -> LPAREN Rango RPAREN
Rule 72    Rango -> VAR_IDENTIFIER
Rule 73    Inst_Lectura -> INST_READ VAR_IDENTIFIER
Rule 74    Inst_Salida -> INST_WRITE Lista_Aux
Rule 75    Inst_Salida -> INST_WRITELN Lista_Aux
Rule 76    Lista_Aux -> Expresion
Rule 77    Lista_Aux -> STRING
Rule 78    Lista_Aux -> Expresion COMMA Lista_Aux
Rule 79    Lista_Aux -> STRING COMMA Lista_Aux
Rule 80    Bloque_Control -> Inst
Rule 81    Bloque_Control -> Bloque_Inst
Rule 82    Inst_If -> INST_IF Operacion_booleana INST_THEN Bloque_Control
Rule 83    Inst_If -> INST_IF Operacion_booleana INST_THEN Bloque_Control INST_ELSE Bloque_Control
Rule 84    Inst_Case -> INST_CASE Operacion_binaria INST_OF Casos INST_END
Rule 85    Casos -> VAR_IDENTIFIER CASE_ASSIGN Bloque_Control SEMICOLON
Rule 86    Casos -> Rango CASE_ASSIGN Bloque_Control SEMICOLON
Rule 87    Casos -> VAR_IDENTIFIER CASE_ASSIGN Bloque_Control SEMICOLON Casos
Rule 88    Casos -> Rango CASE_ASSIGN Bloque_Control SEMICOLON Casos
Rule 89    Inst_For -> INST_FOR VAR_IDENTIFIER INST_IN Rango INST_DO Bloque_Control
Rule 90    Inst_While -> INST_WHILE Operacion_booleana INST_DO Bloque_Inst
Rule 91    Inst_While -> INST_WHILE Operacion_booleana INST_DO Inst

Terminals, with rules where they appear

AND                  : 39
BOTTOM               : 20 24
CASE_ASSIGN          : 85 86 87 88
COMMA                : 30 78 79
COMMENT              : 
DIVIDE               : 59
EQEQ                 : 43 45
EQUAL                : 34
FALSE                : 48
GREAT                : 51
GREATEQ              : 53
IN                   : 41
INST_AS              : 28
INST_BEGIN           : 3 4 5
INST_CASE            : 84
INST_DECLARE         : 25
INST_DO              : 89 90 91
INST_ELSE            : 83
INST_END             : 3 4 5 84
INST_FOR             : 89
INST_IF              : 82 83
INST_IN              : 89
INST_OF              : 84
INST_PROGRAM         : 1 2
INST_READ            : 73
INST_THEN            : 82 83
INST_WHILE           : 90 91
INST_WRITE           : 74
INST_WRITELN         : 75
INTERSECTION         : 70
LENGTH               : 18 22
LESS                 : 52
LESSEQ               : 54
LPAREN               : 17 18 19 20 21 22 23 24 42 64 71
MINUS                : 56 66
MOD                  : 60
NEQEQ                : 44 46
NOT                  : 50
NUMBER               : 62
OR                   : 40
PLUS                 : 55 68
RANGE                : 67
RESERVED             : 
RPAREN               : 17 18 19 20 21 22 23 24 42 64 71
RTOI                 : 17 21
SEMICOLON            : 7 27 85 86 87 88
STRING               : 77 79
TIMES                : 58 69
TOP                  : 19 23
TRUE                 : 47
TYPEDEF_BOOL         : 32
TYPEDEF_INT          : 31
TYPEDEF_RANGE        : 33
VAR_IDENTIFIER       : 21 22 23 24 29 30 34 49 63 72 73 85 87 89
error                : 

Nonterminals, with rules where they appear

Bloque_Control       : 82 83 83 85 86 87 88 89
Bloque_Inst          : 1 16 81 90
Casos                : 84 87 88
Expresion            : 34 76 78
Factor               : 58 59 60 61 66
Inst                 : 2 6 7 80 91
Inst_Asignacion      : 8
Inst_Case            : 13
Inst_Declare         : 4 5
Inst_For             : 10
Inst_Funcion         : 15 65
Inst_If              : 12
Inst_Lectura         : 9
Inst_Salida          : 14
Inst_While           : 11
Lista_Aux            : 74 75 78 79
Lista_Declare        : 26 27
Lista_DeclareTipos   : 25 27
Lista_Inst           : 3 4 7
Lista_Variables      : 28 30
Operacion_binaria    : 35 38 38 41 45 45 46 46 55 56 64 67 67 69 84
Operacion_booleana   : 36 39 39 40 40 42 43 43 44 44 50 82 83 90 91
Opr_bool             : 38
Rango                : 17 18 19 20 37 41 68 68 69 70 70 71 86 88 89
Term                 : 55 56 57 58 59 60
Tipo                 : 28
program              : 0

Parsing method: LALR

state 0

    (0) S' -> . program
    (1) program -> . INST_PROGRAM Bloque_Inst
    (2) program -> . INST_PROGRAM Inst

    INST_PROGRAM    shift and go to state 2

    program                        shift and go to state 1

state 1

    (0) S' -> program .



state 2

    (1) program -> INST_PROGRAM . Bloque_Inst
    (2) program -> INST_PROGRAM . Inst
    (3) Bloque_Inst -> . INST_BEGIN Lista_Inst INST_END
    (4) Bloque_Inst -> . INST_BEGIN Inst_Declare Lista_Inst INST_END
    (5) Bloque_Inst -> . INST_BEGIN Inst_Declare INST_END
    (8) Inst -> . Inst_Asignacion
    (9) Inst -> . Inst_Lectura
    (10) Inst -> . Inst_For
    (11) Inst -> . Inst_While
    (12) Inst -> . Inst_If
    (13) Inst -> . Inst_Case
    (14) Inst -> . Inst_Salida
    (15) Inst -> . Inst_Funcion
    (16) Inst -> . Bloque_Inst
    (34) Inst_Asignacion -> . VAR_IDENTIFIER EQUAL Expresion
    (73) Inst_Lectura -> . INST_READ VAR_IDENTIFIER
    (89) Inst_For -> . INST_FOR VAR_IDENTIFIER INST_IN Rango INST_DO Bloque_Control
    (90) Inst_While -> . INST_WHILE Operacion_booleana INST_DO Bloque_Inst
    (91) Inst_While -> . INST_WHILE Operacion_booleana INST_DO Inst
    (82) Inst_If -> . INST_IF Operacion_booleana INST_THEN Bloque_Control
    (83) Inst_If -> . INST_IF Operacion_booleana INST_THEN Bloque_Control INST_ELSE Bloque_Control
    (84) Inst_Case -> . INST_CASE Operacion_binaria INST_OF Casos INST_END
    (74) Inst_Salida -> . INST_WRITE Lista_Aux
    (75) Inst_Salida -> . INST_WRITELN Lista_Aux
    (17) Inst_Funcion -> . RTOI LPAREN Rango RPAREN
    (18) Inst_Funcion -> . LENGTH LPAREN Rango RPAREN
    (19) Inst_Funcion -> . TOP LPAREN Rango RPAREN
    (20) Inst_Funcion -> . BOTTOM LPAREN Rango RPAREN
    (21) Inst_Funcion -> . RTOI LPAREN VAR_IDENTIFIER RPAREN
    (22) Inst_Funcion -> . LENGTH LPAREN VAR_IDENTIFIER RPAREN
    (23) Inst_Funcion -> . TOP LPAREN VAR_IDENTIFIER RPAREN
    (24) Inst_Funcion -> . BOTTOM LPAREN VAR_IDENTIFIER RPAREN

    INST_BEGIN      shift and go to state 10
    VAR_IDENTIFIER  shift and go to state 16
    INST_READ       shift and go to state 9
    INST_FOR        shift and go to state 19
    INST_WHILE      shift and go to state 8
    INST_IF         shift and go to state 20
    INST_CASE       shift and go to state 18
    INST_WRITE      shift and go to state 4
    INST_WRITELN    shift and go to state 21
    RTOI            shift and go to state 23
    LENGTH          shift and go to state 22
    TOP             shift and go to state 5
    BOTTOM          shift and go to state 11

    Inst_Salida                    shift and go to state 7
    Inst_Funcion                   shift and go to state 3
    Bloque_Inst                    shift and go to state 6
    Inst_If                        shift and go to state 17
    Inst_For                       shift and go to state 12
    Inst_While                     shift and go to state 14
    Inst                           shift and go to state 13
    Inst_Asignacion                shift and go to state 24
    Inst_Case                      shift and go to state 25
    Inst_Lectura                   shift and go to state 15

state 3

    (15) Inst -> Inst_Funcion .

    $end            reduce using rule 15 (Inst -> Inst_Funcion .)
    SEMICOLON       reduce using rule 15 (Inst -> Inst_Funcion .)
    INST_END        reduce using rule 15 (Inst -> Inst_Funcion .)
    INST_ELSE       reduce using rule 15 (Inst -> Inst_Funcion .)


state 4

    (74) Inst_Salida -> INST_WRITE . Lista_Aux
    (76) Lista_Aux -> . Expresion
    (77) Lista_Aux -> . STRING
    (78) Lista_Aux -> . Expresion COMMA Lista_Aux
    (79) Lista_Aux -> . STRING COMMA Lista_Aux
    (35) Expresion -> . Operacion_binaria
    (36) Expresion -> . Operacion_booleana
    (37) Expresion -> . Rango
    (55) Operacion_binaria -> . Operacion_binaria PLUS Term
    (56) Operacion_binaria -> . Operacion_binaria MINUS Term
    (57) Operacion_binaria -> . Term
    (38) Operacion_booleana -> . Operacion_binaria Opr_bool Operacion_binaria
    (39) Operacion_booleana -> . Operacion_booleana AND Operacion_booleana
    (40) Operacion_booleana -> . Operacion_booleana OR Operacion_booleana
    (41) Operacion_booleana -> . Operacion_binaria IN Rango
    (42) Operacion_booleana -> . LPAREN Operacion_booleana RPAREN
    (43) Operacion_booleana -> . Operacion_booleana EQEQ Operacion_booleana
    (44) Operacion_booleana -> . Operacion_booleana NEQEQ Operacion_booleana
    (45) Operacion_booleana -> . Operacion_binaria EQEQ Operacion_binaria
    (46) Operacion_booleana -> . Operacion_binaria NEQEQ Operacion_binaria
    (47) Operacion_booleana -> . TRUE
    (48) Operacion_booleana -> . FALSE
    (49) Operacion_booleana -> . VAR_IDENTIFIER
    (50) Operacion_booleana -> . NOT Operacion_booleana
    (67) Rango -> . Operacion_binaria RANGE Operacion_binaria
    (68) Rango -> . Rango PLUS Rango
    (69) Rango -> . Rango TIMES Operacion_binaria
    (70) Rango -> . Rango INTERSECTION Rango
    (71) Rango -> . LPAREN Rango RPAREN
    (72) Rango -> . VAR_IDENTIFIER
    (58) Term -> . Term TIMES Factor
    (59) Term -> . Term DIVIDE Factor
    (60) Term -> . Term MOD Factor
    (61) Term -> . Factor
    (62) Factor -> . NUMBER
    (63) Factor -> . VAR_IDENTIFIER
    (64) Factor -> . LPAREN Operacion_binaria RPAREN
    (65) Factor -> . Inst_Funcion
    (66) Factor -> . MINUS Factor
    (17) Inst_Funcion -> . RTOI LPAREN Rango RPAREN
    (18) Inst_Funcion -> . LENGTH LPAREN Rango RPAREN
    (19) Inst_Funcion -> . TOP LPAREN Rango RPAREN
    (20) Inst_Funcion -> . BOTTOM LPAREN Rango RPAREN
    (21) Inst_Funcion -> . RTOI LPAREN VAR_IDENTIFIER RPAREN
    (22) Inst_Funcion -> . LENGTH LPAREN VAR_IDENTIFIER RPAREN
    (23) Inst_Funcion -> . TOP LPAREN VAR_IDENTIFIER RPAREN
    (24) Inst_Funcion -> . BOTTOM LPAREN VAR_IDENTIFIER RPAREN

    STRING          shift and go to state 35
    LPAREN          shift and go to state 37
    TRUE            shift and go to state 30
    FALSE           shift and go to state 40
    VAR_IDENTIFIER  shift and go to state 36
    NOT             shift and go to state 41
    NUMBER          shift and go to state 28
    MINUS           shift and go to state 31
    RTOI            shift and go to state 23
    LENGTH          shift and go to state 22
    TOP             shift and go to state 5
    BOTTOM          shift and go to state 11

    Expresion                      shift and go to state 33
    Operacion_binaria              shift and go to state 39
    Inst_Funcion                   shift and go to state 26
    Factor                         shift and go to state 27
    Term                           shift and go to state 34
    Lista_Aux                      shift and go to state 29
    Rango                          shift and go to state 38
    Operacion_booleana             shift and go to state 32

state 5

    (19) Inst_Funcion -> TOP . LPAREN Rango RPAREN
    (23) Inst_Funcion -> TOP . LPAREN VAR_IDENTIFIER RPAREN

    LPAREN          shift and go to state 42


state 6

    (1) program -> INST_PROGRAM Bloque_Inst .
    (16) Inst -> Bloque_Inst .

  ! reduce/reduce conflict for $end resolved using rule 1 (program -> INST_PROGRAM Bloque_Inst .)
    $end            reduce using rule 1 (program -> INST_PROGRAM Bloque_Inst .)

  ! $end            [ reduce using rule 16 (Inst -> Bloque_Inst .) ]


state 7

    (14) Inst -> Inst_Salida .

    $end            reduce using rule 14 (Inst -> Inst_Salida .)
    SEMICOLON       reduce using rule 14 (Inst -> Inst_Salida .)
    INST_END        reduce using rule 14 (Inst -> Inst_Salida .)
    INST_ELSE       reduce using rule 14 (Inst -> Inst_Salida .)


state 8

    (90) Inst_While -> INST_WHILE . Operacion_booleana INST_DO Bloque_Inst
    (91) Inst_While -> INST_WHILE . Operacion_booleana INST_DO Inst
    (38) Operacion_booleana -> . Operacion_binaria Opr_bool Operacion_binaria
    (39) Operacion_booleana -> . Operacion_booleana AND Operacion_booleana
    (40) Operacion_booleana -> . Operacion_booleana OR Operacion_booleana
    (41) Operacion_booleana -> . Operacion_binaria IN Rango
    (42) Operacion_booleana -> . LPAREN Operacion_booleana RPAREN
    (43) Operacion_booleana -> . Operacion_booleana EQEQ Operacion_booleana
    (44) Operacion_booleana -> . Operacion_booleana NEQEQ Operacion_booleana
    (45) Operacion_booleana -> . Operacion_binaria EQEQ Operacion_binaria
    (46) Operacion_booleana -> . Operacion_binaria NEQEQ Operacion_binaria
    (47) Operacion_booleana -> . TRUE
    (48) Operacion_booleana -> . FALSE
    (49) Operacion_booleana -> . VAR_IDENTIFIER
    (50) Operacion_booleana -> . NOT Operacion_booleana
    (55) Operacion_binaria -> . Operacion_binaria PLUS Term
    (56) Operacion_binaria -> . Operacion_binaria MINUS Term
    (57) Operacion_binaria -> . Term
    (58) Term -> . Term TIMES Factor
    (59) Term -> . Term DIVIDE Factor
    (60) Term -> . Term MOD Factor
    (61) Term -> . Factor
    (62) Factor -> . NUMBER
    (63) Factor -> . VAR_IDENTIFIER
    (64) Factor -> . LPAREN Operacion_binaria RPAREN
    (65) Factor -> . Inst_Funcion
    (66) Factor -> . MINUS Factor
    (17) Inst_Funcion -> . RTOI LPAREN Rango RPAREN
    (18) Inst_Funcion -> . LENGTH LPAREN Rango RPAREN
    (19) Inst_Funcion -> . TOP LPAREN Rango RPAREN
    (20) Inst_Funcion -> . BOTTOM LPAREN Rango RPAREN
    (21) Inst_Funcion -> . RTOI LPAREN VAR_IDENTIFIER RPAREN
    (22) Inst_Funcion -> . LENGTH LPAREN VAR_IDENTIFIER RPAREN
    (23) Inst_Funcion -> . TOP LPAREN VAR_IDENTIFIER RPAREN
    (24) Inst_Funcion -> . BOTTOM LPAREN VAR_IDENTIFIER RPAREN

    LPAREN          shift and go to state 45
    TRUE            shift and go to state 30
    FALSE           shift and go to state 40
    VAR_IDENTIFIER  shift and go to state 44
    NOT             shift and go to state 41
    NUMBER          shift and go to state 28
    MINUS           shift and go to state 31
    RTOI            shift and go to state 23
    LENGTH          shift and go to state 22
    TOP             shift and go to state 5
    BOTTOM          shift and go to state 11

    Operacion_binaria              shift and go to state 46
    Inst_Funcion                   shift and go to state 26
    Term                           shift and go to state 34
    Factor                         shift and go to state 27
    Operacion_booleana             shift and go to state 43

state 9

    (73) Inst_Lectura -> INST_READ . VAR_IDENTIFIER

    VAR_IDENTIFIER  shift and go to state 47


state 10

    (3) Bloque_Inst -> INST_BEGIN . Lista_Inst INST_END
    (4) Bloque_Inst -> INST_BEGIN . Inst_Declare Lista_Inst INST_END
    (5) Bloque_Inst -> INST_BEGIN . Inst_Declare INST_END
    (6) Lista_Inst -> . Inst
    (7) Lista_Inst -> . Inst SEMICOLON Lista_Inst
    (25) Inst_Declare -> . INST_DECLARE Lista_DeclareTipos
    (8) Inst -> . Inst_Asignacion
    (9) Inst -> . Inst_Lectura
    (10) Inst -> . Inst_For
    (11) Inst -> . Inst_While
    (12) Inst -> . Inst_If
    (13) Inst -> . Inst_Case
    (14) Inst -> . Inst_Salida
    (15) Inst -> . Inst_Funcion
    (16) Inst -> . Bloque_Inst
    (34) Inst_Asignacion -> . VAR_IDENTIFIER EQUAL Expresion
    (73) Inst_Lectura -> . INST_READ VAR_IDENTIFIER
    (89) Inst_For -> . INST_FOR VAR_IDENTIFIER INST_IN Rango INST_DO Bloque_Control
    (90) Inst_While -> . INST_WHILE Operacion_booleana INST_DO Bloque_Inst
    (91) Inst_While -> . INST_WHILE Operacion_booleana INST_DO Inst
    (82) Inst_If -> . INST_IF Operacion_booleana INST_THEN Bloque_Control
    (83) Inst_If -> . INST_IF Operacion_booleana INST_THEN Bloque_Control INST_ELSE Bloque_Control
    (84) Inst_Case -> . INST_CASE Operacion_binaria INST_OF Casos INST_END
    (74) Inst_Salida -> . INST_WRITE Lista_Aux
    (75) Inst_Salida -> . INST_WRITELN Lista_Aux
    (17) Inst_Funcion -> . RTOI LPAREN Rango RPAREN
    (18) Inst_Funcion -> . LENGTH LPAREN Rango RPAREN
    (19) Inst_Funcion -> . TOP LPAREN Rango RPAREN
    (20) Inst_Funcion -> . BOTTOM LPAREN Rango RPAREN
    (21) Inst_Funcion -> . RTOI LPAREN VAR_IDENTIFIER RPAREN
    (22) Inst_Funcion -> . LENGTH LPAREN VAR_IDENTIFIER RPAREN
    (23) Inst_Funcion -> . TOP LPAREN VAR_IDENTIFIER RPAREN
    (24) Inst_Funcion -> . BOTTOM LPAREN VAR_IDENTIFIER RPAREN
    (3) Bloque_Inst -> . INST_BEGIN Lista_Inst INST_END
    (4) Bloque_Inst -> . INST_BEGIN Inst_Declare Lista_Inst INST_END
    (5) Bloque_Inst -> . INST_BEGIN Inst_Declare INST_END

    INST_DECLARE    shift and go to state 48
    VAR_IDENTIFIER  shift and go to state 16
    INST_READ       shift and go to state 9
    INST_FOR        shift and go to state 19
    INST_WHILE      shift and go to state 8
    INST_IF         shift and go to state 20
    INST_CASE       shift and go to state 18
    INST_WRITE      shift and go to state 4
    INST_WRITELN    shift and go to state 21
    RTOI            shift and go to state 23
    LENGTH          shift and go to state 22
    TOP             shift and go to state 5
    BOTTOM          shift and go to state 11
    INST_BEGIN      shift and go to state 10

    Inst_Salida                    shift and go to state 7
    Inst_Declare                   shift and go to state 50
    Inst_Funcion                   shift and go to state 3
    Bloque_Inst                    shift and go to state 49
    Inst_If                        shift and go to state 17
    Inst_For                       shift and go to state 12
    Inst_While                     shift and go to state 14
    Inst                           shift and go to state 51
    Inst_Asignacion                shift and go to state 24
    Inst_Case                      shift and go to state 25
    Inst_Lectura                   shift and go to state 15
    Lista_Inst                     shift and go to state 52

state 11

    (20) Inst_Funcion -> BOTTOM . LPAREN Rango RPAREN
    (24) Inst_Funcion -> BOTTOM . LPAREN VAR_IDENTIFIER RPAREN

    LPAREN          shift and go to state 53


state 12

    (10) Inst -> Inst_For .

    $end            reduce using rule 10 (Inst -> Inst_For .)
    SEMICOLON       reduce using rule 10 (Inst -> Inst_For .)
    INST_END        reduce using rule 10 (Inst -> Inst_For .)
    INST_ELSE       reduce using rule 10 (Inst -> Inst_For .)


state 13

    (2) program -> INST_PROGRAM Inst .

    $end            reduce using rule 2 (program -> INST_PROGRAM Inst .)


state 14

    (11) Inst -> Inst_While .

    $end            reduce using rule 11 (Inst -> Inst_While .)
    SEMICOLON       reduce using rule 11 (Inst -> Inst_While .)
    INST_END        reduce using rule 11 (Inst -> Inst_While .)
    INST_ELSE       reduce using rule 11 (Inst -> Inst_While .)


state 15

    (9) Inst -> Inst_Lectura .

    $end            reduce using rule 9 (Inst -> Inst_Lectura .)
    SEMICOLON       reduce using rule 9 (Inst -> Inst_Lectura .)
    INST_END        reduce using rule 9 (Inst -> Inst_Lectura .)
    INST_ELSE       reduce using rule 9 (Inst -> Inst_Lectura .)


state 16

    (34) Inst_Asignacion -> VAR_IDENTIFIER . EQUAL Expresion

    EQUAL           shift and go to state 54


state 17

    (12) Inst -> Inst_If .

    $end            reduce using rule 12 (Inst -> Inst_If .)
    SEMICOLON       reduce using rule 12 (Inst -> Inst_If .)
    INST_END        reduce using rule 12 (Inst -> Inst_If .)
    INST_ELSE       reduce using rule 12 (Inst -> Inst_If .)


state 18

    (84) Inst_Case -> INST_CASE . Operacion_binaria INST_OF Casos INST_END
    (55) Operacion_binaria -> . Operacion_binaria PLUS Term
    (56) Operacion_binaria -> . Operacion_binaria MINUS Term
    (57) Operacion_binaria -> . Term
    (58) Term -> . Term TIMES Factor
    (59) Term -> . Term DIVIDE Factor
    (60) Term -> . Term MOD Factor
    (61) Term -> . Factor
    (62) Factor -> . NUMBER
    (63) Factor -> . VAR_IDENTIFIER
    (64) Factor -> . LPAREN Operacion_binaria RPAREN
    (65) Factor -> . Inst_Funcion
    (66) Factor -> . MINUS Factor
    (17) Inst_Funcion -> . RTOI LPAREN Rango RPAREN
    (18) Inst_Funcion -> . LENGTH LPAREN Rango RPAREN
    (19) Inst_Funcion -> . TOP LPAREN Rango RPAREN
    (20) Inst_Funcion -> . BOTTOM LPAREN Rango RPAREN
    (21) Inst_Funcion -> . RTOI LPAREN VAR_IDENTIFIER RPAREN
    (22) Inst_Funcion -> . LENGTH LPAREN VAR_IDENTIFIER RPAREN
    (23) Inst_Funcion -> . TOP LPAREN VAR_IDENTIFIER RPAREN
    (24) Inst_Funcion -> . BOTTOM LPAREN VAR_IDENTIFIER RPAREN

    NUMBER          shift and go to state 28
    VAR_IDENTIFIER  shift and go to state 55
    LPAREN          shift and go to state 56
    MINUS           shift and go to state 31
    RTOI            shift and go to state 23
    LENGTH          shift and go to state 22
    TOP             shift and go to state 5
    BOTTOM          shift and go to state 11

    Operacion_binaria              shift and go to state 57
    Inst_Funcion                   shift and go to state 26
    Term                           shift and go to state 34
    Factor                         shift and go to state 27

state 19

    (89) Inst_For -> INST_FOR . VAR_IDENTIFIER INST_IN Rango INST_DO Bloque_Control

    VAR_IDENTIFIER  shift and go to state 58


state 20

    (82) Inst_If -> INST_IF . Operacion_booleana INST_THEN Bloque_Control
    (83) Inst_If -> INST_IF . Operacion_booleana INST_THEN Bloque_Control INST_ELSE Bloque_Control
    (38) Operacion_booleana -> . Operacion_binaria Opr_bool Operacion_binaria
    (39) Operacion_booleana -> . Operacion_booleana AND Operacion_booleana
    (40) Operacion_booleana -> . Operacion_booleana OR Operacion_booleana
    (41) Operacion_booleana -> . Operacion_binaria IN Rango
    (42) Operacion_booleana -> . LPAREN Operacion_booleana RPAREN
    (43) Operacion_booleana -> . Operacion_booleana EQEQ Operacion_booleana
    (44) Operacion_booleana -> . Operacion_booleana NEQEQ Operacion_booleana
    (45) Operacion_booleana -> . Operacion_binaria EQEQ Operacion_binaria
    (46) Operacion_booleana -> . Operacion_binaria NEQEQ Operacion_binaria
    (47) Operacion_booleana -> . TRUE
    (48) Operacion_booleana -> . FALSE
    (49) Operacion_booleana -> . VAR_IDENTIFIER
    (50) Operacion_booleana -> . NOT Operacion_booleana
    (55) Operacion_binaria -> . Operacion_binaria PLUS Term
    (56) Operacion_binaria -> . Operacion_binaria MINUS Term
    (57) Operacion_binaria -> . Term
    (58) Term -> . Term TIMES Factor
    (59) Term -> . Term DIVIDE Factor
    (60) Term -> . Term MOD Factor
    (61) Term -> . Factor
    (62) Factor -> . NUMBER
    (63) Factor -> . VAR_IDENTIFIER
    (64) Factor -> . LPAREN Operacion_binaria RPAREN
    (65) Factor -> . Inst_Funcion
    (66) Factor -> . MINUS Factor
    (17) Inst_Funcion -> . RTOI LPAREN Rango RPAREN
    (18) Inst_Funcion -> . LENGTH LPAREN Rango RPAREN
    (19) Inst_Funcion -> . TOP LPAREN Rango RPAREN
    (20) Inst_Funcion -> . BOTTOM LPAREN Rango RPAREN
    (21) Inst_Funcion -> . RTOI LPAREN VAR_IDENTIFIER RPAREN
    (22) Inst_Funcion -> . LENGTH LPAREN VAR_IDENTIFIER RPAREN
    (23) Inst_Funcion -> . TOP LPAREN VAR_IDENTIFIER RPAREN
    (24) Inst_Funcion -> . BOTTOM LPAREN VAR_IDENTIFIER RPAREN

    LPAREN          shift and go to state 45
    TRUE            shift and go to state 30
    FALSE           shift and go to state 40
    VAR_IDENTIFIER  shift and go to state 44
    NOT             shift and go to state 41
    NUMBER          shift and go to state 28
    MINUS           shift and go to state 31
    RTOI            shift and go to state 23
    LENGTH          shift and go to state 22
    TOP             shift and go to state 5
    BOTTOM          shift and go to state 11

    Operacion_binaria              shift and go to state 46
    Inst_Funcion                   shift and go to state 26
    Term                           shift and go to state 34
    Factor                         shift and go to state 27
    Operacion_booleana             shift and go to state 59

state 21

    (75) Inst_Salida -> INST_WRITELN . Lista_Aux
    (76) Lista_Aux -> . Expresion
    (77) Lista_Aux -> . STRING
    (78) Lista_Aux -> . Expresion COMMA Lista_Aux
    (79) Lista_Aux -> . STRING COMMA Lista_Aux
    (35) Expresion -> . Operacion_binaria
    (36) Expresion -> . Operacion_booleana
    (37) Expresion -> . Rango
    (55) Operacion_binaria -> . Operacion_binaria PLUS Term
    (56) Operacion_binaria -> . Operacion_binaria MINUS Term
    (57) Operacion_binaria -> . Term
    (38) Operacion_booleana -> . Operacion_binaria Opr_bool Operacion_binaria
    (39) Operacion_booleana -> . Operacion_booleana AND Operacion_booleana
    (40) Operacion_booleana -> . Operacion_booleana OR Operacion_booleana
    (41) Operacion_booleana -> . Operacion_binaria IN Rango
    (42) Operacion_booleana -> . LPAREN Operacion_booleana RPAREN
    (43) Operacion_booleana -> . Operacion_booleana EQEQ Operacion_booleana
    (44) Operacion_booleana -> . Operacion_booleana NEQEQ Operacion_booleana
    (45) Operacion_booleana -> . Operacion_binaria EQEQ Operacion_binaria
    (46) Operacion_booleana -> . Operacion_binaria NEQEQ Operacion_binaria
    (47) Operacion_booleana -> . TRUE
    (48) Operacion_booleana -> . FALSE
    (49) Operacion_booleana -> . VAR_IDENTIFIER
    (50) Operacion_booleana -> . NOT Operacion_booleana
    (67) Rango -> . Operacion_binaria RANGE Operacion_binaria
    (68) Rango -> . Rango PLUS Rango
    (69) Rango -> . Rango TIMES Operacion_binaria
    (70) Rango -> . Rango INTERSECTION Rango
    (71) Rango -> . LPAREN Rango RPAREN
    (72) Rango -> . VAR_IDENTIFIER
    (58) Term -> . Term TIMES Factor
    (59) Term -> . Term DIVIDE Factor
    (60) Term -> . Term MOD Factor
    (61) Term -> . Factor
    (62) Factor -> . NUMBER
    (63) Factor -> . VAR_IDENTIFIER
    (64) Factor -> . LPAREN Operacion_binaria RPAREN
    (65) Factor -> . Inst_Funcion
    (66) Factor -> . MINUS Factor
    (17) Inst_Funcion -> . RTOI LPAREN Rango RPAREN
    (18) Inst_Funcion -> . LENGTH LPAREN Rango RPAREN
    (19) Inst_Funcion -> . TOP LPAREN Rango RPAREN
    (20) Inst_Funcion -> . BOTTOM LPAREN Rango RPAREN
    (21) Inst_Funcion -> . RTOI LPAREN VAR_IDENTIFIER RPAREN
    (22) Inst_Funcion -> . LENGTH LPAREN VAR_IDENTIFIER RPAREN
    (23) Inst_Funcion -> . TOP LPAREN VAR_IDENTIFIER RPAREN
    (24) Inst_Funcion -> . BOTTOM LPAREN VAR_IDENTIFIER RPAREN

    STRING          shift and go to state 35
    LPAREN          shift and go to state 37
    TRUE            shift and go to state 30
    FALSE           shift and go to state 40
    VAR_IDENTIFIER  shift and go to state 36
    NOT             shift and go to state 41
    NUMBER          shift and go to state 28
    MINUS           shift and go to state 31
    RTOI            shift and go to state 23
    LENGTH          shift and go to state 22
    TOP             shift and go to state 5
    BOTTOM          shift and go to state 11

    Expresion                      shift and go to state 33
    Operacion_binaria              shift and go to state 39
    Inst_Funcion                   shift and go to state 26
    Factor                         shift and go to state 27
    Term                           shift and go to state 34
    Lista_Aux                      shift and go to state 60
    Rango                          shift and go to state 38
    Operacion_booleana             shift and go to state 32

state 22

    (18) Inst_Funcion -> LENGTH . LPAREN Rango RPAREN
    (22) Inst_Funcion -> LENGTH . LPAREN VAR_IDENTIFIER RPAREN

    LPAREN          shift and go to state 61


state 23

    (17) Inst_Funcion -> RTOI . LPAREN Rango RPAREN
    (21) Inst_Funcion -> RTOI . LPAREN VAR_IDENTIFIER RPAREN

    LPAREN          shift and go to state 62


state 24

    (8) Inst -> Inst_Asignacion .

    $end            reduce using rule 8 (Inst -> Inst_Asignacion .)
    SEMICOLON       reduce using rule 8 (Inst -> Inst_Asignacion .)
    INST_END        reduce using rule 8 (Inst -> Inst_Asignacion .)
    INST_ELSE       reduce using rule 8 (Inst -> Inst_Asignacion .)


state 25

    (13) Inst -> Inst_Case .

    $end            reduce using rule 13 (Inst -> Inst_Case .)
    SEMICOLON       reduce using rule 13 (Inst -> Inst_Case .)
    INST_END        reduce using rule 13 (Inst -> Inst_Case .)
    INST_ELSE       reduce using rule 13 (Inst -> Inst_Case .)


state 26

    (65) Factor -> Inst_Funcion .

    TIMES           reduce using rule 65 (Factor -> Inst_Funcion .)
    DIVIDE          reduce using rule 65 (Factor -> Inst_Funcion .)
    MOD             reduce using rule 65 (Factor -> Inst_Funcion .)
    RPAREN          reduce using rule 65 (Factor -> Inst_Funcion .)
    IN              reduce using rule 65 (Factor -> Inst_Funcion .)
    EQEQ            reduce using rule 65 (Factor -> Inst_Funcion .)
    NEQEQ           reduce using rule 65 (Factor -> Inst_Funcion .)
    PLUS            reduce using rule 65 (Factor -> Inst_Funcion .)
    MINUS           reduce using rule 65 (Factor -> Inst_Funcion .)
    GREAT           reduce using rule 65 (Factor -> Inst_Funcion .)
    LESS            reduce using rule 65 (Factor -> Inst_Funcion .)
    GREATEQ         reduce using rule 65 (Factor -> Inst_Funcion .)
    LESSEQ          reduce using rule 65 (Factor -> Inst_Funcion .)
    RANGE           reduce using rule 65 (Factor -> Inst_Funcion .)
    COMMA           reduce using rule 65 (Factor -> Inst_Funcion .)
    $end            reduce using rule 65 (Factor -> Inst_Funcion .)
    SEMICOLON       reduce using rule 65 (Factor -> Inst_Funcion .)
    INST_END        reduce using rule 65 (Factor -> Inst_Funcion .)
    INST_ELSE       reduce using rule 65 (Factor -> Inst_Funcion .)
    INST_OF         reduce using rule 65 (Factor -> Inst_Funcion .)
    INTERSECTION    reduce using rule 65 (Factor -> Inst_Funcion .)
    AND             reduce using rule 65 (Factor -> Inst_Funcion .)
    OR              reduce using rule 65 (Factor -> Inst_Funcion .)
    INST_DO         reduce using rule 65 (Factor -> Inst_Funcion .)
    INST_THEN       reduce using rule 65 (Factor -> Inst_Funcion .)
    CASE_ASSIGN     reduce using rule 65 (Factor -> Inst_Funcion .)


state 27

    (61) Term -> Factor .

    TIMES           reduce using rule 61 (Term -> Factor .)
    DIVIDE          reduce using rule 61 (Term -> Factor .)
    MOD             reduce using rule 61 (Term -> Factor .)
    INST_OF         reduce using rule 61 (Term -> Factor .)
    PLUS            reduce using rule 61 (Term -> Factor .)
    MINUS           reduce using rule 61 (Term -> Factor .)
    IN              reduce using rule 61 (Term -> Factor .)
    EQEQ            reduce using rule 61 (Term -> Factor .)
    NEQEQ           reduce using rule 61 (Term -> Factor .)
    RANGE           reduce using rule 61 (Term -> Factor .)
    GREAT           reduce using rule 61 (Term -> Factor .)
    LESS            reduce using rule 61 (Term -> Factor .)
    GREATEQ         reduce using rule 61 (Term -> Factor .)
    LESSEQ          reduce using rule 61 (Term -> Factor .)
    $end            reduce using rule 61 (Term -> Factor .)
    SEMICOLON       reduce using rule 61 (Term -> Factor .)
    INST_END        reduce using rule 61 (Term -> Factor .)
    INST_ELSE       reduce using rule 61 (Term -> Factor .)
    COMMA           reduce using rule 61 (Term -> Factor .)
    RPAREN          reduce using rule 61 (Term -> Factor .)
    INTERSECTION    reduce using rule 61 (Term -> Factor .)
    AND             reduce using rule 61 (Term -> Factor .)
    OR              reduce using rule 61 (Term -> Factor .)
    INST_DO         reduce using rule 61 (Term -> Factor .)
    INST_THEN       reduce using rule 61 (Term -> Factor .)
    CASE_ASSIGN     reduce using rule 61 (Term -> Factor .)


state 28

    (62) Factor -> NUMBER .

    TIMES           reduce using rule 62 (Factor -> NUMBER .)
    DIVIDE          reduce using rule 62 (Factor -> NUMBER .)
    MOD             reduce using rule 62 (Factor -> NUMBER .)
    RPAREN          reduce using rule 62 (Factor -> NUMBER .)
    IN              reduce using rule 62 (Factor -> NUMBER .)
    EQEQ            reduce using rule 62 (Factor -> NUMBER .)
    NEQEQ           reduce using rule 62 (Factor -> NUMBER .)
    PLUS            reduce using rule 62 (Factor -> NUMBER .)
    MINUS           reduce using rule 62 (Factor -> NUMBER .)
    GREAT           reduce using rule 62 (Factor -> NUMBER .)
    LESS            reduce using rule 62 (Factor -> NUMBER .)
    GREATEQ         reduce using rule 62 (Factor -> NUMBER .)
    LESSEQ          reduce using rule 62 (Factor -> NUMBER .)
    RANGE           reduce using rule 62 (Factor -> NUMBER .)
    COMMA           reduce using rule 62 (Factor -> NUMBER .)
    $end            reduce using rule 62 (Factor -> NUMBER .)
    SEMICOLON       reduce using rule 62 (Factor -> NUMBER .)
    INST_END        reduce using rule 62 (Factor -> NUMBER .)
    INST_ELSE       reduce using rule 62 (Factor -> NUMBER .)
    INST_OF         reduce using rule 62 (Factor -> NUMBER .)
    INTERSECTION    reduce using rule 62 (Factor -> NUMBER .)
    AND             reduce using rule 62 (Factor -> NUMBER .)
    OR              reduce using rule 62 (Factor -> NUMBER .)
    INST_DO         reduce using rule 62 (Factor -> NUMBER .)
    INST_THEN       reduce using rule 62 (Factor -> NUMBER .)
    CASE_ASSIGN     reduce using rule 62 (Factor -> NUMBER .)


state 29

    (74) Inst_Salida -> INST_WRITE Lista_Aux .

    SEMICOLON       reduce using rule 74 (Inst_Salida -> INST_WRITE Lista_Aux .)
    INST_END        reduce using rule 74 (Inst_Salida -> INST_WRITE Lista_Aux .)
    $end            reduce using rule 74 (Inst_Salida -> INST_WRITE Lista_Aux .)
    INST_ELSE       reduce using rule 74 (Inst_Salida -> INST_WRITE Lista_Aux .)


state 30

    (47) Operacion_booleana -> TRUE .

    AND             reduce using rule 47 (Operacion_booleana -> TRUE .)
    OR              reduce using rule 47 (Operacion_booleana -> TRUE .)
    EQEQ            reduce using rule 47 (Operacion_booleana -> TRUE .)
    NEQEQ           reduce using rule 47 (Operacion_booleana -> TRUE .)
    COMMA           reduce using rule 47 (Operacion_booleana -> TRUE .)
    $end            reduce using rule 47 (Operacion_booleana -> TRUE .)
    SEMICOLON       reduce using rule 47 (Operacion_booleana -> TRUE .)
    INST_END        reduce using rule 47 (Operacion_booleana -> TRUE .)
    INST_ELSE       reduce using rule 47 (Operacion_booleana -> TRUE .)
    INST_DO         reduce using rule 47 (Operacion_booleana -> TRUE .)
    INST_THEN       reduce using rule 47 (Operacion_booleana -> TRUE .)
    RPAREN          reduce using rule 47 (Operacion_booleana -> TRUE .)


state 31

    (66) Factor -> MINUS . Factor
    (62) Factor -> . NUMBER
    (63) Factor -> . VAR_IDENTIFIER
    (64) Factor -> . LPAREN Operacion_binaria RPAREN
    (65) Factor -> . Inst_Funcion
    (66) Factor -> . MINUS Factor
    (17) Inst_Funcion -> . RTOI LPAREN Rango RPAREN
    (18) Inst_Funcion -> . LENGTH LPAREN Rango RPAREN
    (19) Inst_Funcion -> . TOP LPAREN Rango RPAREN
    (20) Inst_Funcion -> . BOTTOM LPAREN Rango RPAREN
    (21) Inst_Funcion -> . RTOI LPAREN VAR_IDENTIFIER RPAREN
    (22) Inst_Funcion -> . LENGTH LPAREN VAR_IDENTIFIER RPAREN
    (23) Inst_Funcion -> . TOP LPAREN VAR_IDENTIFIER RPAREN
    (24) Inst_Funcion -> . BOTTOM LPAREN VAR_IDENTIFIER RPAREN

    NUMBER          shift and go to state 28
    VAR_IDENTIFIER  shift and go to state 55
    LPAREN          shift and go to state 56
    MINUS           shift and go to state 31
    RTOI            shift and go to state 23
    LENGTH          shift and go to state 22
    TOP             shift and go to state 5
    BOTTOM          shift and go to state 11

    Inst_Funcion                   shift and go to state 26
    Factor                         shift and go to state 63

state 32

    (36) Expresion -> Operacion_booleana .
    (39) Operacion_booleana -> Operacion_booleana . AND Operacion_booleana
    (40) Operacion_booleana -> Operacion_booleana . OR Operacion_booleana
    (43) Operacion_booleana -> Operacion_booleana . EQEQ Operacion_booleana
    (44) Operacion_booleana -> Operacion_booleana . NEQEQ Operacion_booleana

    COMMA           reduce using rule 36 (Expresion -> Operacion_booleana .)
    $end            reduce using rule 36 (Expresion -> Operacion_booleana .)
    SEMICOLON       reduce using rule 36 (Expresion -> Operacion_booleana .)
    INST_END        reduce using rule 36 (Expresion -> Operacion_booleana .)
    INST_ELSE       reduce using rule 36 (Expresion -> Operacion_booleana .)
    AND             shift and go to state 64
    OR              shift and go to state 66
    EQEQ            shift and go to state 65
    NEQEQ           shift and go to state 67


state 33

    (76) Lista_Aux -> Expresion .
    (78) Lista_Aux -> Expresion . COMMA Lista_Aux

    $end            reduce using rule 76 (Lista_Aux -> Expresion .)
    SEMICOLON       reduce using rule 76 (Lista_Aux -> Expresion .)
    INST_END        reduce using rule 76 (Lista_Aux -> Expresion .)
    INST_ELSE       reduce using rule 76 (Lista_Aux -> Expresion .)
    COMMA           shift and go to state 68


state 34

    (57) Operacion_binaria -> Term .
    (58) Term -> Term . TIMES Factor
    (59) Term -> Term . DIVIDE Factor
    (60) Term -> Term . MOD Factor

  ! shift/reduce conflict for TIMES resolved as shift
    IN              reduce using rule 57 (Operacion_binaria -> Term .)
    EQEQ            reduce using rule 57 (Operacion_binaria -> Term .)
    NEQEQ           reduce using rule 57 (Operacion_binaria -> Term .)
    PLUS            reduce using rule 57 (Operacion_binaria -> Term .)
    MINUS           reduce using rule 57 (Operacion_binaria -> Term .)
    GREAT           reduce using rule 57 (Operacion_binaria -> Term .)
    LESS            reduce using rule 57 (Operacion_binaria -> Term .)
    GREATEQ         reduce using rule 57 (Operacion_binaria -> Term .)
    LESSEQ          reduce using rule 57 (Operacion_binaria -> Term .)
    AND             reduce using rule 57 (Operacion_binaria -> Term .)
    OR              reduce using rule 57 (Operacion_binaria -> Term .)
    COMMA           reduce using rule 57 (Operacion_binaria -> Term .)
    $end            reduce using rule 57 (Operacion_binaria -> Term .)
    SEMICOLON       reduce using rule 57 (Operacion_binaria -> Term .)
    INST_END        reduce using rule 57 (Operacion_binaria -> Term .)
    INST_ELSE       reduce using rule 57 (Operacion_binaria -> Term .)
    INST_DO         reduce using rule 57 (Operacion_binaria -> Term .)
    INST_THEN       reduce using rule 57 (Operacion_binaria -> Term .)
    RPAREN          reduce using rule 57 (Operacion_binaria -> Term .)
    RANGE           reduce using rule 57 (Operacion_binaria -> Term .)
    INTERSECTION    reduce using rule 57 (Operacion_binaria -> Term .)
    CASE_ASSIGN     reduce using rule 57 (Operacion_binaria -> Term .)
    INST_OF         reduce using rule 57 (Operacion_binaria -> Term .)
    TIMES           shift and go to state 71
    DIVIDE          shift and go to state 69
    MOD             shift and go to state 70

  ! TIMES           [ reduce using rule 57 (Operacion_binaria -> Term .) ]


state 35

    (77) Lista_Aux -> STRING .
    (79) Lista_Aux -> STRING . COMMA Lista_Aux

    $end            reduce using rule 77 (Lista_Aux -> STRING .)
    SEMICOLON       reduce using rule 77 (Lista_Aux -> STRING .)
    INST_END        reduce using rule 77 (Lista_Aux -> STRING .)
    INST_ELSE       reduce using rule 77 (Lista_Aux -> STRING .)
    COMMA           shift and go to state 72


state 36

    (49) Operacion_booleana -> VAR_IDENTIFIER .
    (72) Rango -> VAR_IDENTIFIER .
    (63) Factor -> VAR_IDENTIFIER .

  ! reduce/reduce conflict for COMMA resolved using rule 49 (Operacion_booleana -> VAR_IDENTIFIER .)
  ! reduce/reduce conflict for $end resolved using rule 49 (Operacion_booleana -> VAR_IDENTIFIER .)
  ! reduce/reduce conflict for SEMICOLON resolved using rule 49 (Operacion_booleana -> VAR_IDENTIFIER .)
  ! reduce/reduce conflict for INST_END resolved using rule 49 (Operacion_booleana -> VAR_IDENTIFIER .)
  ! reduce/reduce conflict for INST_ELSE resolved using rule 49 (Operacion_booleana -> VAR_IDENTIFIER .)
  ! reduce/reduce conflict for RPAREN resolved using rule 49 (Operacion_booleana -> VAR_IDENTIFIER .)
  ! reduce/reduce conflict for TIMES resolved using rule 63 (Factor -> VAR_IDENTIFIER .)
  ! reduce/reduce conflict for PLUS resolved using rule 63 (Factor -> VAR_IDENTIFIER .)
  ! reduce/reduce conflict for EQEQ resolved using rule 49 (Operacion_booleana -> VAR_IDENTIFIER .)
  ! reduce/reduce conflict for NEQEQ resolved using rule 49 (Operacion_booleana -> VAR_IDENTIFIER .)
  ! reduce/reduce conflict for COMMA resolved using rule 49 (Operacion_booleana -> VAR_IDENTIFIER .)
  ! reduce/reduce conflict for $end resolved using rule 49 (Operacion_booleana -> VAR_IDENTIFIER .)
  ! reduce/reduce conflict for SEMICOLON resolved using rule 49 (Operacion_booleana -> VAR_IDENTIFIER .)
  ! reduce/reduce conflict for INST_END resolved using rule 49 (Operacion_booleana -> VAR_IDENTIFIER .)
  ! reduce/reduce conflict for INST_ELSE resolved using rule 49 (Operacion_booleana -> VAR_IDENTIFIER .)
  ! reduce/reduce conflict for RPAREN resolved using rule 49 (Operacion_booleana -> VAR_IDENTIFIER .)
    AND             reduce using rule 49 (Operacion_booleana -> VAR_IDENTIFIER .)
    OR              reduce using rule 49 (Operacion_booleana -> VAR_IDENTIFIER .)
    EQEQ            reduce using rule 49 (Operacion_booleana -> VAR_IDENTIFIER .)
    NEQEQ           reduce using rule 49 (Operacion_booleana -> VAR_IDENTIFIER .)
    COMMA           reduce using rule 49 (Operacion_booleana -> VAR_IDENTIFIER .)
    $end            reduce using rule 49 (Operacion_booleana -> VAR_IDENTIFIER .)
    SEMICOLON       reduce using rule 49 (Operacion_booleana -> VAR_IDENTIFIER .)
    INST_END        reduce using rule 49 (Operacion_booleana -> VAR_IDENTIFIER .)
    INST_ELSE       reduce using rule 49 (Operacion_booleana -> VAR_IDENTIFIER .)
    RPAREN          reduce using rule 49 (Operacion_booleana -> VAR_IDENTIFIER .)
    INTERSECTION    reduce using rule 72 (Rango -> VAR_IDENTIFIER .)
    TIMES           reduce using rule 63 (Factor -> VAR_IDENTIFIER .)
    DIVIDE          reduce using rule 63 (Factor -> VAR_IDENTIFIER .)
    MOD             reduce using rule 63 (Factor -> VAR_IDENTIFIER .)
    PLUS            reduce using rule 63 (Factor -> VAR_IDENTIFIER .)
    MINUS           reduce using rule 63 (Factor -> VAR_IDENTIFIER .)
    IN              reduce using rule 63 (Factor -> VAR_IDENTIFIER .)
    RANGE           reduce using rule 63 (Factor -> VAR_IDENTIFIER .)
    GREAT           reduce using rule 63 (Factor -> VAR_IDENTIFIER .)
    LESS            reduce using rule 63 (Factor -> VAR_IDENTIFIER .)
    GREATEQ         reduce using rule 63 (Factor -> VAR_IDENTIFIER .)
    LESSEQ          reduce using rule 63 (Factor -> VAR_IDENTIFIER .)

  ! PLUS            [ reduce using rule 72 (Rango -> VAR_IDENTIFIER .) ]
  ! TIMES           [ reduce using rule 72 (Rango -> VAR_IDENTIFIER .) ]
  ! COMMA           [ reduce using rule 72 (Rango -> VAR_IDENTIFIER .) ]
  ! $end            [ reduce using rule 72 (Rango -> VAR_IDENTIFIER .) ]
  ! SEMICOLON       [ reduce using rule 72 (Rango -> VAR_IDENTIFIER .) ]
  ! INST_END        [ reduce using rule 72 (Rango -> VAR_IDENTIFIER .) ]
  ! INST_ELSE       [ reduce using rule 72 (Rango -> VAR_IDENTIFIER .) ]
  ! RPAREN          [ reduce using rule 72 (Rango -> VAR_IDENTIFIER .) ]
  ! EQEQ            [ reduce using rule 63 (Factor -> VAR_IDENTIFIER .) ]
  ! NEQEQ           [ reduce using rule 63 (Factor -> VAR_IDENTIFIER .) ]
  ! COMMA           [ reduce using rule 63 (Factor -> VAR_IDENTIFIER .) ]
  ! $end            [ reduce using rule 63 (Factor -> VAR_IDENTIFIER .) ]
  ! SEMICOLON       [ reduce using rule 63 (Factor -> VAR_IDENTIFIER .) ]
  ! INST_END        [ reduce using rule 63 (Factor -> VAR_IDENTIFIER .) ]
  ! INST_ELSE       [ reduce using rule 63 (Factor -> VAR_IDENTIFIER .) ]
  ! RPAREN          [ reduce using rule 63 (Factor -> VAR_IDENTIFIER .) ]


state 37

    (42) Operacion_booleana -> LPAREN . Operacion_booleana RPAREN
    (71) Rango -> LPAREN . Rango RPAREN
    (64) Factor -> LPAREN . Operacion_binaria RPAREN
    (38) Operacion_booleana -> . Operacion_binaria Opr_bool Operacion_binaria
    (39) Operacion_booleana -> . Operacion_booleana AND Operacion_booleana
    (40) Operacion_booleana -> . Operacion_booleana OR Operacion_booleana
    (41) Operacion_booleana -> . Operacion_binaria IN Rango
    (42) Operacion_booleana -> . LPAREN Operacion_booleana RPAREN
    (43) Operacion_booleana -> . Operacion_booleana EQEQ Operacion_booleana
    (44) Operacion_booleana -> . Operacion_booleana NEQEQ Operacion_booleana
    (45) Operacion_booleana -> . Operacion_binaria EQEQ Operacion_binaria
    (46) Operacion_booleana -> . Operacion_binaria NEQEQ Operacion_binaria
    (47) Operacion_booleana -> . TRUE
    (48) Operacion_booleana -> . FALSE
    (49) Operacion_booleana -> . VAR_IDENTIFIER
    (50) Operacion_booleana -> . NOT Operacion_booleana
    (67) Rango -> . Operacion_binaria RANGE Operacion_binaria
    (68) Rango -> . Rango PLUS Rango
    (69) Rango -> . Rango TIMES Operacion_binaria
    (70) Rango -> . Rango INTERSECTION Rango
    (71) Rango -> . LPAREN Rango RPAREN
    (72) Rango -> . VAR_IDENTIFIER
    (55) Operacion_binaria -> . Operacion_binaria PLUS Term
    (56) Operacion_binaria -> . Operacion_binaria MINUS Term
    (57) Operacion_binaria -> . Term
    (58) Term -> . Term TIMES Factor
    (59) Term -> . Term DIVIDE Factor
    (60) Term -> . Term MOD Factor
    (61) Term -> . Factor
    (62) Factor -> . NUMBER
    (63) Factor -> . VAR_IDENTIFIER
    (64) Factor -> . LPAREN Operacion_binaria RPAREN
    (65) Factor -> . Inst_Funcion
    (66) Factor -> . MINUS Factor
    (17) Inst_Funcion -> . RTOI LPAREN Rango RPAREN
    (18) Inst_Funcion -> . LENGTH LPAREN Rango RPAREN
    (19) Inst_Funcion -> . TOP LPAREN Rango RPAREN
    (20) Inst_Funcion -> . BOTTOM LPAREN Rango RPAREN
    (21) Inst_Funcion -> . RTOI LPAREN VAR_IDENTIFIER RPAREN
    (22) Inst_Funcion -> . LENGTH LPAREN VAR_IDENTIFIER RPAREN
    (23) Inst_Funcion -> . TOP LPAREN VAR_IDENTIFIER RPAREN
    (24) Inst_Funcion -> . BOTTOM LPAREN VAR_IDENTIFIER RPAREN

    LPAREN          shift and go to state 37
    TRUE            shift and go to state 30
    FALSE           shift and go to state 40
    VAR_IDENTIFIER  shift and go to state 36
    NOT             shift and go to state 41
    NUMBER          shift and go to state 28
    MINUS           shift and go to state 31
    RTOI            shift and go to state 23
    LENGTH          shift and go to state 22
    TOP             shift and go to state 5
    BOTTOM          shift and go to state 11

    Operacion_binaria              shift and go to state 75
    Inst_Funcion                   shift and go to state 26
    Term                           shift and go to state 34
    Factor                         shift and go to state 27
    Rango                          shift and go to state 74
    Operacion_booleana             shift and go to state 73

state 38

    (37) Expresion -> Rango .
    (68) Rango -> Rango . PLUS Rango
    (69) Rango -> Rango . TIMES Operacion_binaria
    (70) Rango -> Rango . INTERSECTION Rango

    COMMA           reduce using rule 37 (Expresion -> Rango .)
    $end            reduce using rule 37 (Expresion -> Rango .)
    SEMICOLON       reduce using rule 37 (Expresion -> Rango .)
    INST_END        reduce using rule 37 (Expresion -> Rango .)
    INST_ELSE       reduce using rule 37 (Expresion -> Rango .)
    PLUS            shift and go to state 77
    TIMES           shift and go to state 78
    INTERSECTION    shift and go to state 76


state 39

    (35) Expresion -> Operacion_binaria .
    (55) Operacion_binaria -> Operacion_binaria . PLUS Term
    (56) Operacion_binaria -> Operacion_binaria . MINUS Term
    (38) Operacion_booleana -> Operacion_binaria . Opr_bool Operacion_binaria
    (41) Operacion_booleana -> Operacion_binaria . IN Rango
    (45) Operacion_booleana -> Operacion_binaria . EQEQ Operacion_binaria
    (46) Operacion_booleana -> Operacion_binaria . NEQEQ Operacion_binaria
    (67) Rango -> Operacion_binaria . RANGE Operacion_binaria
    (51) Opr_bool -> . GREAT
    (52) Opr_bool -> . LESS
    (53) Opr_bool -> . GREATEQ
    (54) Opr_bool -> . LESSEQ

    COMMA           reduce using rule 35 (Expresion -> Operacion_binaria .)
    $end            reduce using rule 35 (Expresion -> Operacion_binaria .)
    SEMICOLON       reduce using rule 35 (Expresion -> Operacion_binaria .)
    INST_END        reduce using rule 35 (Expresion -> Operacion_binaria .)
    INST_ELSE       reduce using rule 35 (Expresion -> Operacion_binaria .)
    PLUS            shift and go to state 87
    MINUS           shift and go to state 89
    IN              shift and go to state 88
    EQEQ            shift and go to state 84
    NEQEQ           shift and go to state 81
    RANGE           shift and go to state 85
    GREAT           shift and go to state 80
    LESS            shift and go to state 83
    GREATEQ         shift and go to state 79
    LESSEQ          shift and go to state 86

    Opr_bool                       shift and go to state 82

state 40

    (48) Operacion_booleana -> FALSE .

    AND             reduce using rule 48 (Operacion_booleana -> FALSE .)
    OR              reduce using rule 48 (Operacion_booleana -> FALSE .)
    EQEQ            reduce using rule 48 (Operacion_booleana -> FALSE .)
    NEQEQ           reduce using rule 48 (Operacion_booleana -> FALSE .)
    COMMA           reduce using rule 48 (Operacion_booleana -> FALSE .)
    $end            reduce using rule 48 (Operacion_booleana -> FALSE .)
    SEMICOLON       reduce using rule 48 (Operacion_booleana -> FALSE .)
    INST_END        reduce using rule 48 (Operacion_booleana -> FALSE .)
    INST_ELSE       reduce using rule 48 (Operacion_booleana -> FALSE .)
    INST_DO         reduce using rule 48 (Operacion_booleana -> FALSE .)
    INST_THEN       reduce using rule 48 (Operacion_booleana -> FALSE .)
    RPAREN          reduce using rule 48 (Operacion_booleana -> FALSE .)


state 41

    (50) Operacion_booleana -> NOT . Operacion_booleana
    (38) Operacion_booleana -> . Operacion_binaria Opr_bool Operacion_binaria
    (39) Operacion_booleana -> . Operacion_booleana AND Operacion_booleana
    (40) Operacion_booleana -> . Operacion_booleana OR Operacion_booleana
    (41) Operacion_booleana -> . Operacion_binaria IN Rango
    (42) Operacion_booleana -> . LPAREN Operacion_booleana RPAREN
    (43) Operacion_booleana -> . Operacion_booleana EQEQ Operacion_booleana
    (44) Operacion_booleana -> . Operacion_booleana NEQEQ Operacion_booleana
    (45) Operacion_booleana -> . Operacion_binaria EQEQ Operacion_binaria
    (46) Operacion_booleana -> . Operacion_binaria NEQEQ Operacion_binaria
    (47) Operacion_booleana -> . TRUE
    (48) Operacion_booleana -> . FALSE
    (49) Operacion_booleana -> . VAR_IDENTIFIER
    (50) Operacion_booleana -> . NOT Operacion_booleana
    (55) Operacion_binaria -> . Operacion_binaria PLUS Term
    (56) Operacion_binaria -> . Operacion_binaria MINUS Term
    (57) Operacion_binaria -> . Term
    (58) Term -> . Term TIMES Factor
    (59) Term -> . Term DIVIDE Factor
    (60) Term -> . Term MOD Factor
    (61) Term -> . Factor
    (62) Factor -> . NUMBER
    (63) Factor -> . VAR_IDENTIFIER
    (64) Factor -> . LPAREN Operacion_binaria RPAREN
    (65) Factor -> . Inst_Funcion
    (66) Factor -> . MINUS Factor
    (17) Inst_Funcion -> . RTOI LPAREN Rango RPAREN
    (18) Inst_Funcion -> . LENGTH LPAREN Rango RPAREN
    (19) Inst_Funcion -> . TOP LPAREN Rango RPAREN
    (20) Inst_Funcion -> . BOTTOM LPAREN Rango RPAREN
    (21) Inst_Funcion -> . RTOI LPAREN VAR_IDENTIFIER RPAREN
    (22) Inst_Funcion -> . LENGTH LPAREN VAR_IDENTIFIER RPAREN
    (23) Inst_Funcion -> . TOP LPAREN VAR_IDENTIFIER RPAREN
    (24) Inst_Funcion -> . BOTTOM LPAREN VAR_IDENTIFIER RPAREN

    LPAREN          shift and go to state 45
    TRUE            shift and go to state 30
    FALSE           shift and go to state 40
    VAR_IDENTIFIER  shift and go to state 44
    NOT             shift and go to state 41
    NUMBER          shift and go to state 28
    MINUS           shift and go to state 31
    RTOI            shift and go to state 23
    LENGTH          shift and go to state 22
    TOP             shift and go to state 5
    BOTTOM          shift and go to state 11

    Operacion_binaria              shift and go to state 46
    Inst_Funcion                   shift and go to state 26
    Term                           shift and go to state 34
    Factor                         shift and go to state 27
    Operacion_booleana             shift and go to state 90

state 42

    (19) Inst_Funcion -> TOP LPAREN . Rango RPAREN
    (23) Inst_Funcion -> TOP LPAREN . VAR_IDENTIFIER RPAREN
    (67) Rango -> . Operacion_binaria RANGE Operacion_binaria
    (68) Rango -> . Rango PLUS Rango
    (69) Rango -> . Rango TIMES Operacion_binaria
    (70) Rango -> . Rango INTERSECTION Rango
    (71) Rango -> . LPAREN Rango RPAREN
    (72) Rango -> . VAR_IDENTIFIER
    (55) Operacion_binaria -> . Operacion_binaria PLUS Term
    (56) Operacion_binaria -> . Operacion_binaria MINUS Term
    (57) Operacion_binaria -> . Term
    (58) Term -> . Term TIMES Factor
    (59) Term -> . Term DIVIDE Factor
    (60) Term -> . Term MOD Factor
    (61) Term -> . Factor
    (62) Factor -> . NUMBER
    (63) Factor -> . VAR_IDENTIFIER
    (64) Factor -> . LPAREN Operacion_binaria RPAREN
    (65) Factor -> . Inst_Funcion
    (66) Factor -> . MINUS Factor
    (17) Inst_Funcion -> . RTOI LPAREN Rango RPAREN
    (18) Inst_Funcion -> . LENGTH LPAREN Rango RPAREN
    (19) Inst_Funcion -> . TOP LPAREN Rango RPAREN
    (20) Inst_Funcion -> . BOTTOM LPAREN Rango RPAREN
    (21) Inst_Funcion -> . RTOI LPAREN VAR_IDENTIFIER RPAREN
    (22) Inst_Funcion -> . LENGTH LPAREN VAR_IDENTIFIER RPAREN
    (23) Inst_Funcion -> . TOP LPAREN VAR_IDENTIFIER RPAREN
    (24) Inst_Funcion -> . BOTTOM LPAREN VAR_IDENTIFIER RPAREN

    VAR_IDENTIFIER  shift and go to state 92
    LPAREN          shift and go to state 93
    NUMBER          shift and go to state 28
    MINUS           shift and go to state 31
    RTOI            shift and go to state 23
    LENGTH          shift and go to state 22
    TOP             shift and go to state 5
    BOTTOM          shift and go to state 11

    Rango                          shift and go to state 94
    Operacion_binaria              shift and go to state 91
    Inst_Funcion                   shift and go to state 26
    Term                           shift and go to state 34
    Factor                         shift and go to state 27

state 43

    (90) Inst_While -> INST_WHILE Operacion_booleana . INST_DO Bloque_Inst
    (91) Inst_While -> INST_WHILE Operacion_booleana . INST_DO Inst
    (39) Operacion_booleana -> Operacion_booleana . AND Operacion_booleana
    (40) Operacion_booleana -> Operacion_booleana . OR Operacion_booleana
    (43) Operacion_booleana -> Operacion_booleana . EQEQ Operacion_booleana
    (44) Operacion_booleana -> Operacion_booleana . NEQEQ Operacion_booleana

    INST_DO         shift and go to state 95
    AND             shift and go to state 64
    OR              shift and go to state 66
    EQEQ            shift and go to state 65
    NEQEQ           shift and go to state 67


state 44

    (49) Operacion_booleana -> VAR_IDENTIFIER .
    (63) Factor -> VAR_IDENTIFIER .

  ! reduce/reduce conflict for RPAREN resolved using rule 49 (Operacion_booleana -> VAR_IDENTIFIER .)
  ! reduce/reduce conflict for EQEQ resolved using rule 49 (Operacion_booleana -> VAR_IDENTIFIER .)
  ! reduce/reduce conflict for NEQEQ resolved using rule 49 (Operacion_booleana -> VAR_IDENTIFIER .)
    AND             reduce using rule 49 (Operacion_booleana -> VAR_IDENTIFIER .)
    OR              reduce using rule 49 (Operacion_booleana -> VAR_IDENTIFIER .)
    EQEQ            reduce using rule 49 (Operacion_booleana -> VAR_IDENTIFIER .)
    NEQEQ           reduce using rule 49 (Operacion_booleana -> VAR_IDENTIFIER .)
    COMMA           reduce using rule 49 (Operacion_booleana -> VAR_IDENTIFIER .)
    $end            reduce using rule 49 (Operacion_booleana -> VAR_IDENTIFIER .)
    SEMICOLON       reduce using rule 49 (Operacion_booleana -> VAR_IDENTIFIER .)
    INST_END        reduce using rule 49 (Operacion_booleana -> VAR_IDENTIFIER .)
    INST_ELSE       reduce using rule 49 (Operacion_booleana -> VAR_IDENTIFIER .)
    INST_DO         reduce using rule 49 (Operacion_booleana -> VAR_IDENTIFIER .)
    INST_THEN       reduce using rule 49 (Operacion_booleana -> VAR_IDENTIFIER .)
    RPAREN          reduce using rule 49 (Operacion_booleana -> VAR_IDENTIFIER .)
    TIMES           reduce using rule 63 (Factor -> VAR_IDENTIFIER .)
    DIVIDE          reduce using rule 63 (Factor -> VAR_IDENTIFIER .)
    MOD             reduce using rule 63 (Factor -> VAR_IDENTIFIER .)
    IN              reduce using rule 63 (Factor -> VAR_IDENTIFIER .)
    PLUS            reduce using rule 63 (Factor -> VAR_IDENTIFIER .)
    MINUS           reduce using rule 63 (Factor -> VAR_IDENTIFIER .)
    GREAT           reduce using rule 63 (Factor -> VAR_IDENTIFIER .)
    LESS            reduce using rule 63 (Factor -> VAR_IDENTIFIER .)
    GREATEQ         reduce using rule 63 (Factor -> VAR_IDENTIFIER .)
    LESSEQ          reduce using rule 63 (Factor -> VAR_IDENTIFIER .)

  ! RPAREN          [ reduce using rule 63 (Factor -> VAR_IDENTIFIER .) ]
  ! EQEQ            [ reduce using rule 63 (Factor -> VAR_IDENTIFIER .) ]
  ! NEQEQ           [ reduce using rule 63 (Factor -> VAR_IDENTIFIER .) ]


state 45

    (42) Operacion_booleana -> LPAREN . Operacion_booleana RPAREN
    (64) Factor -> LPAREN . Operacion_binaria RPAREN
    (38) Operacion_booleana -> . Operacion_binaria Opr_bool Operacion_binaria
    (39) Operacion_booleana -> . Operacion_booleana AND Operacion_booleana
    (40) Operacion_booleana -> . Operacion_booleana OR Operacion_booleana
    (41) Operacion_booleana -> . Operacion_binaria IN Rango
    (42) Operacion_booleana -> . LPAREN Operacion_booleana RPAREN
    (43) Operacion_booleana -> . Operacion_booleana EQEQ Operacion_booleana
    (44) Operacion_booleana -> . Operacion_booleana NEQEQ Operacion_booleana
    (45) Operacion_booleana -> . Operacion_binaria EQEQ Operacion_binaria
    (46) Operacion_booleana -> . Operacion_binaria NEQEQ Operacion_binaria
    (47) Operacion_booleana -> . TRUE
    (48) Operacion_booleana -> . FALSE
    (49) Operacion_booleana -> . VAR_IDENTIFIER
    (50) Operacion_booleana -> . NOT Operacion_booleana
    (55) Operacion_binaria -> . Operacion_binaria PLUS Term
    (56) Operacion_binaria -> . Operacion_binaria MINUS Term
    (57) Operacion_binaria -> . Term
    (58) Term -> . Term TIMES Factor
    (59) Term -> . Term DIVIDE Factor
    (60) Term -> . Term MOD Factor
    (61) Term -> . Factor
    (62) Factor -> . NUMBER
    (63) Factor -> . VAR_IDENTIFIER
    (64) Factor -> . LPAREN Operacion_binaria RPAREN
    (65) Factor -> . Inst_Funcion
    (66) Factor -> . MINUS Factor
    (17) Inst_Funcion -> . RTOI LPAREN Rango RPAREN
    (18) Inst_Funcion -> . LENGTH LPAREN Rango RPAREN
    (19) Inst_Funcion -> . TOP LPAREN Rango RPAREN
    (20) Inst_Funcion -> . BOTTOM LPAREN Rango RPAREN
    (21) Inst_Funcion -> . RTOI LPAREN VAR_IDENTIFIER RPAREN
    (22) Inst_Funcion -> . LENGTH LPAREN VAR_IDENTIFIER RPAREN
    (23) Inst_Funcion -> . TOP LPAREN VAR_IDENTIFIER RPAREN
    (24) Inst_Funcion -> . BOTTOM LPAREN VAR_IDENTIFIER RPAREN

    LPAREN          shift and go to state 45
    TRUE            shift and go to state 30
    FALSE           shift and go to state 40
    VAR_IDENTIFIER  shift and go to state 44
    NOT             shift and go to state 41
    NUMBER          shift and go to state 28
    MINUS           shift and go to state 31
    RTOI            shift and go to state 23
    LENGTH          shift and go to state 22
    TOP             shift and go to state 5
    BOTTOM          shift and go to state 11

    Operacion_binaria              shift and go to state 96
    Inst_Funcion                   shift and go to state 26
    Term                           shift and go to state 34
    Factor                         shift and go to state 27
    Operacion_booleana             shift and go to state 73

state 46

    (38) Operacion_booleana -> Operacion_binaria . Opr_bool Operacion_binaria
    (41) Operacion_booleana -> Operacion_binaria . IN Rango
    (45) Operacion_booleana -> Operacion_binaria . EQEQ Operacion_binaria
    (46) Operacion_booleana -> Operacion_binaria . NEQEQ Operacion_binaria
    (55) Operacion_binaria -> Operacion_binaria . PLUS Term
    (56) Operacion_binaria -> Operacion_binaria . MINUS Term
    (51) Opr_bool -> . GREAT
    (52) Opr_bool -> . LESS
    (53) Opr_bool -> . GREATEQ
    (54) Opr_bool -> . LESSEQ

    IN              shift and go to state 88
    EQEQ            shift and go to state 84
    NEQEQ           shift and go to state 81
    PLUS            shift and go to state 87
    MINUS           shift and go to state 89
    GREAT           shift and go to state 80
    LESS            shift and go to state 83
    GREATEQ         shift and go to state 79
    LESSEQ          shift and go to state 86

    Opr_bool                       shift and go to state 82

state 47

    (73) Inst_Lectura -> INST_READ VAR_IDENTIFIER .

    $end            reduce using rule 73 (Inst_Lectura -> INST_READ VAR_IDENTIFIER .)
    SEMICOLON       reduce using rule 73 (Inst_Lectura -> INST_READ VAR_IDENTIFIER .)
    INST_END        reduce using rule 73 (Inst_Lectura -> INST_READ VAR_IDENTIFIER .)
    INST_ELSE       reduce using rule 73 (Inst_Lectura -> INST_READ VAR_IDENTIFIER .)


state 48

    (25) Inst_Declare -> INST_DECLARE . Lista_DeclareTipos
    (26) Lista_DeclareTipos -> . Lista_Declare
    (27) Lista_DeclareTipos -> . Lista_Declare SEMICOLON Lista_DeclareTipos
    (28) Lista_Declare -> . Lista_Variables INST_AS Tipo
    (29) Lista_Variables -> . VAR_IDENTIFIER
    (30) Lista_Variables -> . VAR_IDENTIFIER COMMA Lista_Variables

    VAR_IDENTIFIER  shift and go to state 97

    Lista_Variables                shift and go to state 99
    Lista_Declare                  shift and go to state 100
    Lista_DeclareTipos             shift and go to state 98

state 49

    (16) Inst -> Bloque_Inst .

    SEMICOLON       reduce using rule 16 (Inst -> Bloque_Inst .)
    INST_END        reduce using rule 16 (Inst -> Bloque_Inst .)


state 50

    (4) Bloque_Inst -> INST_BEGIN Inst_Declare . Lista_Inst INST_END
    (5) Bloque_Inst -> INST_BEGIN Inst_Declare . INST_END
    (6) Lista_Inst -> . Inst
    (7) Lista_Inst -> . Inst SEMICOLON Lista_Inst
    (8) Inst -> . Inst_Asignacion
    (9) Inst -> . Inst_Lectura
    (10) Inst -> . Inst_For
    (11) Inst -> . Inst_While
    (12) Inst -> . Inst_If
    (13) Inst -> . Inst_Case
    (14) Inst -> . Inst_Salida
    (15) Inst -> . Inst_Funcion
    (16) Inst -> . Bloque_Inst
    (34) Inst_Asignacion -> . VAR_IDENTIFIER EQUAL Expresion
    (73) Inst_Lectura -> . INST_READ VAR_IDENTIFIER
    (89) Inst_For -> . INST_FOR VAR_IDENTIFIER INST_IN Rango INST_DO Bloque_Control
    (90) Inst_While -> . INST_WHILE Operacion_booleana INST_DO Bloque_Inst
    (91) Inst_While -> . INST_WHILE Operacion_booleana INST_DO Inst
    (82) Inst_If -> . INST_IF Operacion_booleana INST_THEN Bloque_Control
    (83) Inst_If -> . INST_IF Operacion_booleana INST_THEN Bloque_Control INST_ELSE Bloque_Control
    (84) Inst_Case -> . INST_CASE Operacion_binaria INST_OF Casos INST_END
    (74) Inst_Salida -> . INST_WRITE Lista_Aux
    (75) Inst_Salida -> . INST_WRITELN Lista_Aux
    (17) Inst_Funcion -> . RTOI LPAREN Rango RPAREN
    (18) Inst_Funcion -> . LENGTH LPAREN Rango RPAREN
    (19) Inst_Funcion -> . TOP LPAREN Rango RPAREN
    (20) Inst_Funcion -> . BOTTOM LPAREN Rango RPAREN
    (21) Inst_Funcion -> . RTOI LPAREN VAR_IDENTIFIER RPAREN
    (22) Inst_Funcion -> . LENGTH LPAREN VAR_IDENTIFIER RPAREN
    (23) Inst_Funcion -> . TOP LPAREN VAR_IDENTIFIER RPAREN
    (24) Inst_Funcion -> . BOTTOM LPAREN VAR_IDENTIFIER RPAREN
    (3) Bloque_Inst -> . INST_BEGIN Lista_Inst INST_END
    (4) Bloque_Inst -> . INST_BEGIN Inst_Declare Lista_Inst INST_END
    (5) Bloque_Inst -> . INST_BEGIN Inst_Declare INST_END

    INST_END        shift and go to state 101
    VAR_IDENTIFIER  shift and go to state 16
    INST_READ       shift and go to state 9
    INST_FOR        shift and go to state 19
    INST_WHILE      shift and go to state 8
    INST_IF         shift and go to state 20
    INST_CASE       shift and go to state 18
    INST_WRITE      shift and go to state 4
    INST_WRITELN    shift and go to state 21
    RTOI            shift and go to state 23
    LENGTH          shift and go to state 22
    TOP             shift and go to state 5
    BOTTOM          shift and go to state 11
    INST_BEGIN      shift and go to state 10

    Inst_Salida                    shift and go to state 7
    Inst_Funcion                   shift and go to state 3
    Bloque_Inst                    shift and go to state 49
    Inst_If                        shift and go to state 17
    Inst_For                       shift and go to state 12
    Inst_While                     shift and go to state 14
    Inst                           shift and go to state 51
    Inst_Asignacion                shift and go to state 24
    Inst_Case                      shift and go to state 25
    Inst_Lectura                   shift and go to state 15
    Lista_Inst                     shift and go to state 102

state 51

    (6) Lista_Inst -> Inst .
    (7) Lista_Inst -> Inst . SEMICOLON Lista_Inst

    INST_END        reduce using rule 6 (Lista_Inst -> Inst .)
    SEMICOLON       shift and go to state 103


state 52

    (3) Bloque_Inst -> INST_BEGIN Lista_Inst . INST_END

    INST_END        shift and go to state 104


state 53

    (20) Inst_Funcion -> BOTTOM LPAREN . Rango RPAREN
    (24) Inst_Funcion -> BOTTOM LPAREN . VAR_IDENTIFIER RPAREN
    (67) Rango -> . Operacion_binaria RANGE Operacion_binaria
    (68) Rango -> . Rango PLUS Rango
    (69) Rango -> . Rango TIMES Operacion_binaria
    (70) Rango -> . Rango INTERSECTION Rango
    (71) Rango -> . LPAREN Rango RPAREN
    (72) Rango -> . VAR_IDENTIFIER
    (55) Operacion_binaria -> . Operacion_binaria PLUS Term
    (56) Operacion_binaria -> . Operacion_binaria MINUS Term
    (57) Operacion_binaria -> . Term
    (58) Term -> . Term TIMES Factor
    (59) Term -> . Term DIVIDE Factor
    (60) Term -> . Term MOD Factor
    (61) Term -> . Factor
    (62) Factor -> . NUMBER
    (63) Factor -> . VAR_IDENTIFIER
    (64) Factor -> . LPAREN Operacion_binaria RPAREN
    (65) Factor -> . Inst_Funcion
    (66) Factor -> . MINUS Factor
    (17) Inst_Funcion -> . RTOI LPAREN Rango RPAREN
    (18) Inst_Funcion -> . LENGTH LPAREN Rango RPAREN
    (19) Inst_Funcion -> . TOP LPAREN Rango RPAREN
    (20) Inst_Funcion -> . BOTTOM LPAREN Rango RPAREN
    (21) Inst_Funcion -> . RTOI LPAREN VAR_IDENTIFIER RPAREN
    (22) Inst_Funcion -> . LENGTH LPAREN VAR_IDENTIFIER RPAREN
    (23) Inst_Funcion -> . TOP LPAREN VAR_IDENTIFIER RPAREN
    (24) Inst_Funcion -> . BOTTOM LPAREN VAR_IDENTIFIER RPAREN

    VAR_IDENTIFIER  shift and go to state 105
    LPAREN          shift and go to state 93
    NUMBER          shift and go to state 28
    MINUS           shift and go to state 31
    RTOI            shift and go to state 23
    LENGTH          shift and go to state 22
    TOP             shift and go to state 5
    BOTTOM          shift and go to state 11

    Rango                          shift and go to state 106
    Operacion_binaria              shift and go to state 91
    Inst_Funcion                   shift and go to state 26
    Term                           shift and go to state 34
    Factor                         shift and go to state 27

state 54

    (34) Inst_Asignacion -> VAR_IDENTIFIER EQUAL . Expresion
    (35) Expresion -> . Operacion_binaria
    (36) Expresion -> . Operacion_booleana
    (37) Expresion -> . Rango
    (55) Operacion_binaria -> . Operacion_binaria PLUS Term
    (56) Operacion_binaria -> . Operacion_binaria MINUS Term
    (57) Operacion_binaria -> . Term
    (38) Operacion_booleana -> . Operacion_binaria Opr_bool Operacion_binaria
    (39) Operacion_booleana -> . Operacion_booleana AND Operacion_booleana
    (40) Operacion_booleana -> . Operacion_booleana OR Operacion_booleana
    (41) Operacion_booleana -> . Operacion_binaria IN Rango
    (42) Operacion_booleana -> . LPAREN Operacion_booleana RPAREN
    (43) Operacion_booleana -> . Operacion_booleana EQEQ Operacion_booleana
    (44) Operacion_booleana -> . Operacion_booleana NEQEQ Operacion_booleana
    (45) Operacion_booleana -> . Operacion_binaria EQEQ Operacion_binaria
    (46) Operacion_booleana -> . Operacion_binaria NEQEQ Operacion_binaria
    (47) Operacion_booleana -> . TRUE
    (48) Operacion_booleana -> . FALSE
    (49) Operacion_booleana -> . VAR_IDENTIFIER
    (50) Operacion_booleana -> . NOT Operacion_booleana
    (67) Rango -> . Operacion_binaria RANGE Operacion_binaria
    (68) Rango -> . Rango PLUS Rango
    (69) Rango -> . Rango TIMES Operacion_binaria
    (70) Rango -> . Rango INTERSECTION Rango
    (71) Rango -> . LPAREN Rango RPAREN
    (72) Rango -> . VAR_IDENTIFIER
    (58) Term -> . Term TIMES Factor
    (59) Term -> . Term DIVIDE Factor
    (60) Term -> . Term MOD Factor
    (61) Term -> . Factor
    (62) Factor -> . NUMBER
    (63) Factor -> . VAR_IDENTIFIER
    (64) Factor -> . LPAREN Operacion_binaria RPAREN
    (65) Factor -> . Inst_Funcion
    (66) Factor -> . MINUS Factor
    (17) Inst_Funcion -> . RTOI LPAREN Rango RPAREN
    (18) Inst_Funcion -> . LENGTH LPAREN Rango RPAREN
    (19) Inst_Funcion -> . TOP LPAREN Rango RPAREN
    (20) Inst_Funcion -> . BOTTOM LPAREN Rango RPAREN
    (21) Inst_Funcion -> . RTOI LPAREN VAR_IDENTIFIER RPAREN
    (22) Inst_Funcion -> . LENGTH LPAREN VAR_IDENTIFIER RPAREN
    (23) Inst_Funcion -> . TOP LPAREN VAR_IDENTIFIER RPAREN
    (24) Inst_Funcion -> . BOTTOM LPAREN VAR_IDENTIFIER RPAREN

    LPAREN          shift and go to state 37
    TRUE            shift and go to state 30
    FALSE           shift and go to state 40
    VAR_IDENTIFIER  shift and go to state 36
    NOT             shift and go to state 41
    NUMBER          shift and go to state 28
    MINUS           shift and go to state 31
    RTOI            shift and go to state 23
    LENGTH          shift and go to state 22
    TOP             shift and go to state 5
    BOTTOM          shift and go to state 11

    Expresion                      shift and go to state 107
    Operacion_binaria              shift and go to state 39
    Inst_Funcion                   shift and go to state 26
    Term                           shift and go to state 34
    Factor                         shift and go to state 27
    Rango                          shift and go to state 38
    Operacion_booleana             shift and go to state 32

state 55

    (63) Factor -> VAR_IDENTIFIER .

    TIMES           reduce using rule 63 (Factor -> VAR_IDENTIFIER .)
    DIVIDE          reduce using rule 63 (Factor -> VAR_IDENTIFIER .)
    MOD             reduce using rule 63 (Factor -> VAR_IDENTIFIER .)
    PLUS            reduce using rule 63 (Factor -> VAR_IDENTIFIER .)
    MINUS           reduce using rule 63 (Factor -> VAR_IDENTIFIER .)
    IN              reduce using rule 63 (Factor -> VAR_IDENTIFIER .)
    EQEQ            reduce using rule 63 (Factor -> VAR_IDENTIFIER .)
    NEQEQ           reduce using rule 63 (Factor -> VAR_IDENTIFIER .)
    RANGE           reduce using rule 63 (Factor -> VAR_IDENTIFIER .)
    GREAT           reduce using rule 63 (Factor -> VAR_IDENTIFIER .)
    LESS            reduce using rule 63 (Factor -> VAR_IDENTIFIER .)
    GREATEQ         reduce using rule 63 (Factor -> VAR_IDENTIFIER .)
    LESSEQ          reduce using rule 63 (Factor -> VAR_IDENTIFIER .)
    COMMA           reduce using rule 63 (Factor -> VAR_IDENTIFIER .)
    $end            reduce using rule 63 (Factor -> VAR_IDENTIFIER .)
    SEMICOLON       reduce using rule 63 (Factor -> VAR_IDENTIFIER .)
    INST_END        reduce using rule 63 (Factor -> VAR_IDENTIFIER .)
    INST_ELSE       reduce using rule 63 (Factor -> VAR_IDENTIFIER .)
    INST_OF         reduce using rule 63 (Factor -> VAR_IDENTIFIER .)
    RPAREN          reduce using rule 63 (Factor -> VAR_IDENTIFIER .)
    INTERSECTION    reduce using rule 63 (Factor -> VAR_IDENTIFIER .)
    AND             reduce using rule 63 (Factor -> VAR_IDENTIFIER .)
    OR              reduce using rule 63 (Factor -> VAR_IDENTIFIER .)
    INST_DO         reduce using rule 63 (Factor -> VAR_IDENTIFIER .)
    INST_THEN       reduce using rule 63 (Factor -> VAR_IDENTIFIER .)
    CASE_ASSIGN     reduce using rule 63 (Factor -> VAR_IDENTIFIER .)


state 56

    (64) Factor -> LPAREN . Operacion_binaria RPAREN
    (55) Operacion_binaria -> . Operacion_binaria PLUS Term
    (56) Operacion_binaria -> . Operacion_binaria MINUS Term
    (57) Operacion_binaria -> . Term
    (58) Term -> . Term TIMES Factor
    (59) Term -> . Term DIVIDE Factor
    (60) Term -> . Term MOD Factor
    (61) Term -> . Factor
    (62) Factor -> . NUMBER
    (63) Factor -> . VAR_IDENTIFIER
    (64) Factor -> . LPAREN Operacion_binaria RPAREN
    (65) Factor -> . Inst_Funcion
    (66) Factor -> . MINUS Factor
    (17) Inst_Funcion -> . RTOI LPAREN Rango RPAREN
    (18) Inst_Funcion -> . LENGTH LPAREN Rango RPAREN
    (19) Inst_Funcion -> . TOP LPAREN Rango RPAREN
    (20) Inst_Funcion -> . BOTTOM LPAREN Rango RPAREN
    (21) Inst_Funcion -> . RTOI LPAREN VAR_IDENTIFIER RPAREN
    (22) Inst_Funcion -> . LENGTH LPAREN VAR_IDENTIFIER RPAREN
    (23) Inst_Funcion -> . TOP LPAREN VAR_IDENTIFIER RPAREN
    (24) Inst_Funcion -> . BOTTOM LPAREN VAR_IDENTIFIER RPAREN

    NUMBER          shift and go to state 28
    VAR_IDENTIFIER  shift and go to state 55
    LPAREN          shift and go to state 56
    MINUS           shift and go to state 31
    RTOI            shift and go to state 23
    LENGTH          shift and go to state 22
    TOP             shift and go to state 5
    BOTTOM          shift and go to state 11

    Operacion_binaria              shift and go to state 108
    Inst_Funcion                   shift and go to state 26
    Term                           shift and go to state 34
    Factor                         shift and go to state 27

state 57

    (84) Inst_Case -> INST_CASE Operacion_binaria . INST_OF Casos INST_END
    (55) Operacion_binaria -> Operacion_binaria . PLUS Term
    (56) Operacion_binaria -> Operacion_binaria . MINUS Term

    INST_OF         shift and go to state 109
    PLUS            shift and go to state 87
    MINUS           shift and go to state 89


state 58

    (89) Inst_For -> INST_FOR VAR_IDENTIFIER . INST_IN Rango INST_DO Bloque_Control

    INST_IN         shift and go to state 110


state 59

    (82) Inst_If -> INST_IF Operacion_booleana . INST_THEN Bloque_Control
    (83) Inst_If -> INST_IF Operacion_booleana . INST_THEN Bloque_Control INST_ELSE Bloque_Control
    (39) Operacion_booleana -> Operacion_booleana . AND Operacion_booleana
    (40) Operacion_booleana -> Operacion_booleana . OR Operacion_booleana
    (43) Operacion_booleana -> Operacion_booleana . EQEQ Operacion_booleana
    (44) Operacion_booleana -> Operacion_booleana . NEQEQ Operacion_booleana

    INST_THEN       shift and go to state 111
    AND             shift and go to state 64
    OR              shift and go to state 66
    EQEQ            shift and go to state 65
    NEQEQ           shift and go to state 67


state 60

    (75) Inst_Salida -> INST_WRITELN Lista_Aux .

    SEMICOLON       reduce using rule 75 (Inst_Salida -> INST_WRITELN Lista_Aux .)
    INST_END        reduce using rule 75 (Inst_Salida -> INST_WRITELN Lista_Aux .)
    $end            reduce using rule 75 (Inst_Salida -> INST_WRITELN Lista_Aux .)
    INST_ELSE       reduce using rule 75 (Inst_Salida -> INST_WRITELN Lista_Aux .)


state 61

    (18) Inst_Funcion -> LENGTH LPAREN . Rango RPAREN
    (22) Inst_Funcion -> LENGTH LPAREN . VAR_IDENTIFIER RPAREN
    (67) Rango -> . Operacion_binaria RANGE Operacion_binaria
    (68) Rango -> . Rango PLUS Rango
    (69) Rango -> . Rango TIMES Operacion_binaria
    (70) Rango -> . Rango INTERSECTION Rango
    (71) Rango -> . LPAREN Rango RPAREN
    (72) Rango -> . VAR_IDENTIFIER
    (55) Operacion_binaria -> . Operacion_binaria PLUS Term
    (56) Operacion_binaria -> . Operacion_binaria MINUS Term
    (57) Operacion_binaria -> . Term
    (58) Term -> . Term TIMES Factor
    (59) Term -> . Term DIVIDE Factor
    (60) Term -> . Term MOD Factor
    (61) Term -> . Factor
    (62) Factor -> . NUMBER
    (63) Factor -> . VAR_IDENTIFIER
    (64) Factor -> . LPAREN Operacion_binaria RPAREN
    (65) Factor -> . Inst_Funcion
    (66) Factor -> . MINUS Factor
    (17) Inst_Funcion -> . RTOI LPAREN Rango RPAREN
    (18) Inst_Funcion -> . LENGTH LPAREN Rango RPAREN
    (19) Inst_Funcion -> . TOP LPAREN Rango RPAREN
    (20) Inst_Funcion -> . BOTTOM LPAREN Rango RPAREN
    (21) Inst_Funcion -> . RTOI LPAREN VAR_IDENTIFIER RPAREN
    (22) Inst_Funcion -> . LENGTH LPAREN VAR_IDENTIFIER RPAREN
    (23) Inst_Funcion -> . TOP LPAREN VAR_IDENTIFIER RPAREN
    (24) Inst_Funcion -> . BOTTOM LPAREN VAR_IDENTIFIER RPAREN

    VAR_IDENTIFIER  shift and go to state 112
    LPAREN          shift and go to state 93
    NUMBER          shift and go to state 28
    MINUS           shift and go to state 31
    RTOI            shift and go to state 23
    LENGTH          shift and go to state 22
    TOP             shift and go to state 5
    BOTTOM          shift and go to state 11

    Rango                          shift and go to state 113
    Operacion_binaria              shift and go to state 91
    Inst_Funcion                   shift and go to state 26
    Term                           shift and go to state 34
    Factor                         shift and go to state 27

state 62

    (17) Inst_Funcion -> RTOI LPAREN . Rango RPAREN
    (21) Inst_Funcion -> RTOI LPAREN . VAR_IDENTIFIER RPAREN
    (67) Rango -> . Operacion_binaria RANGE Operacion_binaria
    (68) Rango -> . Rango PLUS Rango
    (69) Rango -> . Rango TIMES Operacion_binaria
    (70) Rango -> . Rango INTERSECTION Rango
    (71) Rango -> . LPAREN Rango RPAREN
    (72) Rango -> . VAR_IDENTIFIER
    (55) Operacion_binaria -> . Operacion_binaria PLUS Term
    (56) Operacion_binaria -> . Operacion_binaria MINUS Term
    (57) Operacion_binaria -> . Term
    (58) Term -> . Term TIMES Factor
    (59) Term -> . Term DIVIDE Factor
    (60) Term -> . Term MOD Factor
    (61) Term -> . Factor
    (62) Factor -> . NUMBER
    (63) Factor -> . VAR_IDENTIFIER
    (64) Factor -> . LPAREN Operacion_binaria RPAREN
    (65) Factor -> . Inst_Funcion
    (66) Factor -> . MINUS Factor
    (17) Inst_Funcion -> . RTOI LPAREN Rango RPAREN
    (18) Inst_Funcion -> . LENGTH LPAREN Rango RPAREN
    (19) Inst_Funcion -> . TOP LPAREN Rango RPAREN
    (20) Inst_Funcion -> . BOTTOM LPAREN Rango RPAREN
    (21) Inst_Funcion -> . RTOI LPAREN VAR_IDENTIFIER RPAREN
    (22) Inst_Funcion -> . LENGTH LPAREN VAR_IDENTIFIER RPAREN
    (23) Inst_Funcion -> . TOP LPAREN VAR_IDENTIFIER RPAREN
    (24) Inst_Funcion -> . BOTTOM LPAREN VAR_IDENTIFIER RPAREN

    VAR_IDENTIFIER  shift and go to state 114
    LPAREN          shift and go to state 93
    NUMBER          shift and go to state 28
    MINUS           shift and go to state 31
    RTOI            shift and go to state 23
    LENGTH          shift and go to state 22
    TOP             shift and go to state 5
    BOTTOM          shift and go to state 11

    Rango                          shift and go to state 115
    Operacion_binaria              shift and go to state 91
    Inst_Funcion                   shift and go to state 26
    Term                           shift and go to state 34
    Factor                         shift and go to state 27

state 63

    (66) Factor -> MINUS Factor .

    TIMES           reduce using rule 66 (Factor -> MINUS Factor .)
    DIVIDE          reduce using rule 66 (Factor -> MINUS Factor .)
    MOD             reduce using rule 66 (Factor -> MINUS Factor .)
    RPAREN          reduce using rule 66 (Factor -> MINUS Factor .)
    IN              reduce using rule 66 (Factor -> MINUS Factor .)
    EQEQ            reduce using rule 66 (Factor -> MINUS Factor .)
    NEQEQ           reduce using rule 66 (Factor -> MINUS Factor .)
    PLUS            reduce using rule 66 (Factor -> MINUS Factor .)
    MINUS           reduce using rule 66 (Factor -> MINUS Factor .)
    GREAT           reduce using rule 66 (Factor -> MINUS Factor .)
    LESS            reduce using rule 66 (Factor -> MINUS Factor .)
    GREATEQ         reduce using rule 66 (Factor -> MINUS Factor .)
    LESSEQ          reduce using rule 66 (Factor -> MINUS Factor .)
    RANGE           reduce using rule 66 (Factor -> MINUS Factor .)
    COMMA           reduce using rule 66 (Factor -> MINUS Factor .)
    $end            reduce using rule 66 (Factor -> MINUS Factor .)
    SEMICOLON       reduce using rule 66 (Factor -> MINUS Factor .)
    INST_END        reduce using rule 66 (Factor -> MINUS Factor .)
    INST_ELSE       reduce using rule 66 (Factor -> MINUS Factor .)
    INST_OF         reduce using rule 66 (Factor -> MINUS Factor .)
    INTERSECTION    reduce using rule 66 (Factor -> MINUS Factor .)
    AND             reduce using rule 66 (Factor -> MINUS Factor .)
    OR              reduce using rule 66 (Factor -> MINUS Factor .)
    INST_DO         reduce using rule 66 (Factor -> MINUS Factor .)
    INST_THEN       reduce using rule 66 (Factor -> MINUS Factor .)
    CASE_ASSIGN     reduce using rule 66 (Factor -> MINUS Factor .)


state 64

    (39) Operacion_booleana -> Operacion_booleana AND . Operacion_booleana
    (38) Operacion_booleana -> . Operacion_binaria Opr_bool Operacion_binaria
    (39) Operacion_booleana -> . Operacion_booleana AND Operacion_booleana
    (40) Operacion_booleana -> . Operacion_booleana OR Operacion_booleana
    (41) Operacion_booleana -> . Operacion_binaria IN Rango
    (42) Operacion_booleana -> . LPAREN Operacion_booleana RPAREN
    (43) Operacion_booleana -> . Operacion_booleana EQEQ Operacion_booleana
    (44) Operacion_booleana -> . Operacion_booleana NEQEQ Operacion_booleana
    (45) Operacion_booleana -> . Operacion_binaria EQEQ Operacion_binaria
    (46) Operacion_booleana -> . Operacion_binaria NEQEQ Operacion_binaria
    (47) Operacion_booleana -> . TRUE
    (48) Operacion_booleana -> . FALSE
    (49) Operacion_booleana -> . VAR_IDENTIFIER
    (50) Operacion_booleana -> . NOT Operacion_booleana
    (55) Operacion_binaria -> . Operacion_binaria PLUS Term
    (56) Operacion_binaria -> . Operacion_binaria MINUS Term
    (57) Operacion_binaria -> . Term
    (58) Term -> . Term TIMES Factor
    (59) Term -> . Term DIVIDE Factor
    (60) Term -> . Term MOD Factor
    (61) Term -> . Factor
    (62) Factor -> . NUMBER
    (63) Factor -> . VAR_IDENTIFIER
    (64) Factor -> . LPAREN Operacion_binaria RPAREN
    (65) Factor -> . Inst_Funcion
    (66) Factor -> . MINUS Factor
    (17) Inst_Funcion -> . RTOI LPAREN Rango RPAREN
    (18) Inst_Funcion -> . LENGTH LPAREN Rango RPAREN
    (19) Inst_Funcion -> . TOP LPAREN Rango RPAREN
    (20) Inst_Funcion -> . BOTTOM LPAREN Rango RPAREN
    (21) Inst_Funcion -> . RTOI LPAREN VAR_IDENTIFIER RPAREN
    (22) Inst_Funcion -> . LENGTH LPAREN VAR_IDENTIFIER RPAREN
    (23) Inst_Funcion -> . TOP LPAREN VAR_IDENTIFIER RPAREN
    (24) Inst_Funcion -> . BOTTOM LPAREN VAR_IDENTIFIER RPAREN

    LPAREN          shift and go to state 45
    TRUE            shift and go to state 30
    FALSE           shift and go to state 40
    VAR_IDENTIFIER  shift and go to state 44
    NOT             shift and go to state 41
    NUMBER          shift and go to state 28
    MINUS           shift and go to state 31
    RTOI            shift and go to state 23
    LENGTH          shift and go to state 22
    TOP             shift and go to state 5
    BOTTOM          shift and go to state 11

    Operacion_binaria              shift and go to state 46
    Inst_Funcion                   shift and go to state 26
    Term                           shift and go to state 34
    Factor                         shift and go to state 27
    Operacion_booleana             shift and go to state 116

state 65

    (43) Operacion_booleana -> Operacion_booleana EQEQ . Operacion_booleana
    (38) Operacion_booleana -> . Operacion_binaria Opr_bool Operacion_binaria
    (39) Operacion_booleana -> . Operacion_booleana AND Operacion_booleana
    (40) Operacion_booleana -> . Operacion_booleana OR Operacion_booleana
    (41) Operacion_booleana -> . Operacion_binaria IN Rango
    (42) Operacion_booleana -> . LPAREN Operacion_booleana RPAREN
    (43) Operacion_booleana -> . Operacion_booleana EQEQ Operacion_booleana
    (44) Operacion_booleana -> . Operacion_booleana NEQEQ Operacion_booleana
    (45) Operacion_booleana -> . Operacion_binaria EQEQ Operacion_binaria
    (46) Operacion_booleana -> . Operacion_binaria NEQEQ Operacion_binaria
    (47) Operacion_booleana -> . TRUE
    (48) Operacion_booleana -> . FALSE
    (49) Operacion_booleana -> . VAR_IDENTIFIER
    (50) Operacion_booleana -> . NOT Operacion_booleana
    (55) Operacion_binaria -> . Operacion_binaria PLUS Term
    (56) Operacion_binaria -> . Operacion_binaria MINUS Term
    (57) Operacion_binaria -> . Term
    (58) Term -> . Term TIMES Factor
    (59) Term -> . Term DIVIDE Factor
    (60) Term -> . Term MOD Factor
    (61) Term -> . Factor
    (62) Factor -> . NUMBER
    (63) Factor -> . VAR_IDENTIFIER
    (64) Factor -> . LPAREN Operacion_binaria RPAREN
    (65) Factor -> . Inst_Funcion
    (66) Factor -> . MINUS Factor
    (17) Inst_Funcion -> . RTOI LPAREN Rango RPAREN
    (18) Inst_Funcion -> . LENGTH LPAREN Rango RPAREN
    (19) Inst_Funcion -> . TOP LPAREN Rango RPAREN
    (20) Inst_Funcion -> . BOTTOM LPAREN Rango RPAREN
    (21) Inst_Funcion -> . RTOI LPAREN VAR_IDENTIFIER RPAREN
    (22) Inst_Funcion -> . LENGTH LPAREN VAR_IDENTIFIER RPAREN
    (23) Inst_Funcion -> . TOP LPAREN VAR_IDENTIFIER RPAREN
    (24) Inst_Funcion -> . BOTTOM LPAREN VAR_IDENTIFIER RPAREN

    LPAREN          shift and go to state 45
    TRUE            shift and go to state 30
    FALSE           shift and go to state 40
    VAR_IDENTIFIER  shift and go to state 44
    NOT             shift and go to state 41
    NUMBER          shift and go to state 28
    MINUS           shift and go to state 31
    RTOI            shift and go to state 23
    LENGTH          shift and go to state 22
    TOP             shift and go to state 5
    BOTTOM          shift and go to state 11

    Operacion_binaria              shift and go to state 46
    Inst_Funcion                   shift and go to state 26
    Term                           shift and go to state 34
    Factor                         shift and go to state 27
    Operacion_booleana             shift and go to state 117

state 66

    (40) Operacion_booleana -> Operacion_booleana OR . Operacion_booleana
    (38) Operacion_booleana -> . Operacion_binaria Opr_bool Operacion_binaria
    (39) Operacion_booleana -> . Operacion_booleana AND Operacion_booleana
    (40) Operacion_booleana -> . Operacion_booleana OR Operacion_booleana
    (41) Operacion_booleana -> . Operacion_binaria IN Rango
    (42) Operacion_booleana -> . LPAREN Operacion_booleana RPAREN
    (43) Operacion_booleana -> . Operacion_booleana EQEQ Operacion_booleana
    (44) Operacion_booleana -> . Operacion_booleana NEQEQ Operacion_booleana
    (45) Operacion_booleana -> . Operacion_binaria EQEQ Operacion_binaria
    (46) Operacion_booleana -> . Operacion_binaria NEQEQ Operacion_binaria
    (47) Operacion_booleana -> . TRUE
    (48) Operacion_booleana -> . FALSE
    (49) Operacion_booleana -> . VAR_IDENTIFIER
    (50) Operacion_booleana -> . NOT Operacion_booleana
    (55) Operacion_binaria -> . Operacion_binaria PLUS Term
    (56) Operacion_binaria -> . Operacion_binaria MINUS Term
    (57) Operacion_binaria -> . Term
    (58) Term -> . Term TIMES Factor
    (59) Term -> . Term DIVIDE Factor
    (60) Term -> . Term MOD Factor
    (61) Term -> . Factor
    (62) Factor -> . NUMBER
    (63) Factor -> . VAR_IDENTIFIER
    (64) Factor -> . LPAREN Operacion_binaria RPAREN
    (65) Factor -> . Inst_Funcion
    (66) Factor -> . MINUS Factor
    (17) Inst_Funcion -> . RTOI LPAREN Rango RPAREN
    (18) Inst_Funcion -> . LENGTH LPAREN Rango RPAREN
    (19) Inst_Funcion -> . TOP LPAREN Rango RPAREN
    (20) Inst_Funcion -> . BOTTOM LPAREN Rango RPAREN
    (21) Inst_Funcion -> . RTOI LPAREN VAR_IDENTIFIER RPAREN
    (22) Inst_Funcion -> . LENGTH LPAREN VAR_IDENTIFIER RPAREN
    (23) Inst_Funcion -> . TOP LPAREN VAR_IDENTIFIER RPAREN
    (24) Inst_Funcion -> . BOTTOM LPAREN VAR_IDENTIFIER RPAREN

    LPAREN          shift and go to state 45
    TRUE            shift and go to state 30
    FALSE           shift and go to state 40
    VAR_IDENTIFIER  shift and go to state 44
    NOT             shift and go to state 41
    NUMBER          shift and go to state 28
    MINUS           shift and go to state 31
    RTOI            shift and go to state 23
    LENGTH          shift and go to state 22
    TOP             shift and go to state 5
    BOTTOM          shift and go to state 11

    Operacion_binaria              shift and go to state 46
    Inst_Funcion                   shift and go to state 26
    Term                           shift and go to state 34
    Factor                         shift and go to state 27
    Operacion_booleana             shift and go to state 118

state 67

    (44) Operacion_booleana -> Operacion_booleana NEQEQ . Operacion_booleana
    (38) Operacion_booleana -> . Operacion_binaria Opr_bool Operacion_binaria
    (39) Operacion_booleana -> . Operacion_booleana AND Operacion_booleana
    (40) Operacion_booleana -> . Operacion_booleana OR Operacion_booleana
    (41) Operacion_booleana -> . Operacion_binaria IN Rango
    (42) Operacion_booleana -> . LPAREN Operacion_booleana RPAREN
    (43) Operacion_booleana -> . Operacion_booleana EQEQ Operacion_booleana
    (44) Operacion_booleana -> . Operacion_booleana NEQEQ Operacion_booleana
    (45) Operacion_booleana -> . Operacion_binaria EQEQ Operacion_binaria
    (46) Operacion_booleana -> . Operacion_binaria NEQEQ Operacion_binaria
    (47) Operacion_booleana -> . TRUE
    (48) Operacion_booleana -> . FALSE
    (49) Operacion_booleana -> . VAR_IDENTIFIER
    (50) Operacion_booleana -> . NOT Operacion_booleana
    (55) Operacion_binaria -> . Operacion_binaria PLUS Term
    (56) Operacion_binaria -> . Operacion_binaria MINUS Term
    (57) Operacion_binaria -> . Term
    (58) Term -> . Term TIMES Factor
    (59) Term -> . Term DIVIDE Factor
    (60) Term -> . Term MOD Factor
    (61) Term -> . Factor
    (62) Factor -> . NUMBER
    (63) Factor -> . VAR_IDENTIFIER
    (64) Factor -> . LPAREN Operacion_binaria RPAREN
    (65) Factor -> . Inst_Funcion
    (66) Factor -> . MINUS Factor
    (17) Inst_Funcion -> . RTOI LPAREN Rango RPAREN
    (18) Inst_Funcion -> . LENGTH LPAREN Rango RPAREN
    (19) Inst_Funcion -> . TOP LPAREN Rango RPAREN
    (20) Inst_Funcion -> . BOTTOM LPAREN Rango RPAREN
    (21) Inst_Funcion -> . RTOI LPAREN VAR_IDENTIFIER RPAREN
    (22) Inst_Funcion -> . LENGTH LPAREN VAR_IDENTIFIER RPAREN
    (23) Inst_Funcion -> . TOP LPAREN VAR_IDENTIFIER RPAREN
    (24) Inst_Funcion -> . BOTTOM LPAREN VAR_IDENTIFIER RPAREN

    LPAREN          shift and go to state 45
    TRUE            shift and go to state 30
    FALSE           shift and go to state 40
    VAR_IDENTIFIER  shift and go to state 44
    NOT             shift and go to state 41
    NUMBER          shift and go to state 28
    MINUS           shift and go to state 31
    RTOI            shift and go to state 23
    LENGTH          shift and go to state 22
    TOP             shift and go to state 5
    BOTTOM          shift and go to state 11

    Operacion_binaria              shift and go to state 46
    Inst_Funcion                   shift and go to state 26
    Term                           shift and go to state 34
    Factor                         shift and go to state 27
    Operacion_booleana             shift and go to state 119

state 68

    (78) Lista_Aux -> Expresion COMMA . Lista_Aux
    (76) Lista_Aux -> . Expresion
    (77) Lista_Aux -> . STRING
    (78) Lista_Aux -> . Expresion COMMA Lista_Aux
    (79) Lista_Aux -> . STRING COMMA Lista_Aux
    (35) Expresion -> . Operacion_binaria
    (36) Expresion -> . Operacion_booleana
    (37) Expresion -> . Rango
    (55) Operacion_binaria -> . Operacion_binaria PLUS Term
    (56) Operacion_binaria -> . Operacion_binaria MINUS Term
    (57) Operacion_binaria -> . Term
    (38) Operacion_booleana -> . Operacion_binaria Opr_bool Operacion_binaria
    (39) Operacion_booleana -> . Operacion_booleana AND Operacion_booleana
    (40) Operacion_booleana -> . Operacion_booleana OR Operacion_booleana
    (41) Operacion_booleana -> . Operacion_binaria IN Rango
    (42) Operacion_booleana -> . LPAREN Operacion_booleana RPAREN
    (43) Operacion_booleana -> . Operacion_booleana EQEQ Operacion_booleana
    (44) Operacion_booleana -> . Operacion_booleana NEQEQ Operacion_booleana
    (45) Operacion_booleana -> . Operacion_binaria EQEQ Operacion_binaria
    (46) Operacion_booleana -> . Operacion_binaria NEQEQ Operacion_binaria
    (47) Operacion_booleana -> . TRUE
    (48) Operacion_booleana -> . FALSE
    (49) Operacion_booleana -> . VAR_IDENTIFIER
    (50) Operacion_booleana -> . NOT Operacion_booleana
    (67) Rango -> . Operacion_binaria RANGE Operacion_binaria
    (68) Rango -> . Rango PLUS Rango
    (69) Rango -> . Rango TIMES Operacion_binaria
    (70) Rango -> . Rango INTERSECTION Rango
    (71) Rango -> . LPAREN Rango RPAREN
    (72) Rango -> . VAR_IDENTIFIER
    (58) Term -> . Term TIMES Factor
    (59) Term -> . Term DIVIDE Factor
    (60) Term -> . Term MOD Factor
    (61) Term -> . Factor
    (62) Factor -> . NUMBER
    (63) Factor -> . VAR_IDENTIFIER
    (64) Factor -> . LPAREN Operacion_binaria RPAREN
    (65) Factor -> . Inst_Funcion
    (66) Factor -> . MINUS Factor
    (17) Inst_Funcion -> . RTOI LPAREN Rango RPAREN
    (18) Inst_Funcion -> . LENGTH LPAREN Rango RPAREN
    (19) Inst_Funcion -> . TOP LPAREN Rango RPAREN
    (20) Inst_Funcion -> . BOTTOM LPAREN Rango RPAREN
    (21) Inst_Funcion -> . RTOI LPAREN VAR_IDENTIFIER RPAREN
    (22) Inst_Funcion -> . LENGTH LPAREN VAR_IDENTIFIER RPAREN
    (23) Inst_Funcion -> . TOP LPAREN VAR_IDENTIFIER RPAREN
    (24) Inst_Funcion -> . BOTTOM LPAREN VAR_IDENTIFIER RPAREN

    STRING          shift and go to state 35
    LPAREN          shift and go to state 37
    TRUE            shift and go to state 30
    FALSE           shift and go to state 40
    VAR_IDENTIFIER  shift and go to state 36
    NOT             shift and go to state 41
    NUMBER          shift and go to state 28
    MINUS           shift and go to state 31
    RTOI            shift and go to state 23
    LENGTH          shift and go to state 22
    TOP             shift and go to state 5
    BOTTOM          shift and go to state 11

    Expresion                      shift and go to state 33
    Operacion_binaria              shift and go to state 39
    Inst_Funcion                   shift and go to state 26
    Factor                         shift and go to state 27
    Term                           shift and go to state 34
    Lista_Aux                      shift and go to state 120
    Rango                          shift and go to state 38
    Operacion_booleana             shift and go to state 32

state 69

    (59) Term -> Term DIVIDE . Factor
    (62) Factor -> . NUMBER
    (63) Factor -> . VAR_IDENTIFIER
    (64) Factor -> . LPAREN Operacion_binaria RPAREN
    (65) Factor -> . Inst_Funcion
    (66) Factor -> . MINUS Factor
    (17) Inst_Funcion -> . RTOI LPAREN Rango RPAREN
    (18) Inst_Funcion -> . LENGTH LPAREN Rango RPAREN
    (19) Inst_Funcion -> . TOP LPAREN Rango RPAREN
    (20) Inst_Funcion -> . BOTTOM LPAREN Rango RPAREN
    (21) Inst_Funcion -> . RTOI LPAREN VAR_IDENTIFIER RPAREN
    (22) Inst_Funcion -> . LENGTH LPAREN VAR_IDENTIFIER RPAREN
    (23) Inst_Funcion -> . TOP LPAREN VAR_IDENTIFIER RPAREN
    (24) Inst_Funcion -> . BOTTOM LPAREN VAR_IDENTIFIER RPAREN

    NUMBER          shift and go to state 28
    VAR_IDENTIFIER  shift and go to state 55
    LPAREN          shift and go to state 56
    MINUS           shift and go to state 31
    RTOI            shift and go to state 23
    LENGTH          shift and go to state 22
    TOP             shift and go to state 5
    BOTTOM          shift and go to state 11

    Inst_Funcion                   shift and go to state 26
    Factor                         shift and go to state 121

state 70

    (60) Term -> Term MOD . Factor
    (62) Factor -> . NUMBER
    (63) Factor -> . VAR_IDENTIFIER
    (64) Factor -> . LPAREN Operacion_binaria RPAREN
    (65) Factor -> . Inst_Funcion
    (66) Factor -> . MINUS Factor
    (17) Inst_Funcion -> . RTOI LPAREN Rango RPAREN
    (18) Inst_Funcion -> . LENGTH LPAREN Rango RPAREN
    (19) Inst_Funcion -> . TOP LPAREN Rango RPAREN
    (20) Inst_Funcion -> . BOTTOM LPAREN Rango RPAREN
    (21) Inst_Funcion -> . RTOI LPAREN VAR_IDENTIFIER RPAREN
    (22) Inst_Funcion -> . LENGTH LPAREN VAR_IDENTIFIER RPAREN
    (23) Inst_Funcion -> . TOP LPAREN VAR_IDENTIFIER RPAREN
    (24) Inst_Funcion -> . BOTTOM LPAREN VAR_IDENTIFIER RPAREN

    NUMBER          shift and go to state 28
    VAR_IDENTIFIER  shift and go to state 55
    LPAREN          shift and go to state 56
    MINUS           shift and go to state 31
    RTOI            shift and go to state 23
    LENGTH          shift and go to state 22
    TOP             shift and go to state 5
    BOTTOM          shift and go to state 11

    Inst_Funcion                   shift and go to state 26
    Factor                         shift and go to state 122

state 71

    (58) Term -> Term TIMES . Factor
    (62) Factor -> . NUMBER
    (63) Factor -> . VAR_IDENTIFIER
    (64) Factor -> . LPAREN Operacion_binaria RPAREN
    (65) Factor -> . Inst_Funcion
    (66) Factor -> . MINUS Factor
    (17) Inst_Funcion -> . RTOI LPAREN Rango RPAREN
    (18) Inst_Funcion -> . LENGTH LPAREN Rango RPAREN
    (19) Inst_Funcion -> . TOP LPAREN Rango RPAREN
    (20) Inst_Funcion -> . BOTTOM LPAREN Rango RPAREN
    (21) Inst_Funcion -> . RTOI LPAREN VAR_IDENTIFIER RPAREN
    (22) Inst_Funcion -> . LENGTH LPAREN VAR_IDENTIFIER RPAREN
    (23) Inst_Funcion -> . TOP LPAREN VAR_IDENTIFIER RPAREN
    (24) Inst_Funcion -> . BOTTOM LPAREN VAR_IDENTIFIER RPAREN

    NUMBER          shift and go to state 28
    VAR_IDENTIFIER  shift and go to state 55
    LPAREN          shift and go to state 56
    MINUS           shift and go to state 31
    RTOI            shift and go to state 23
    LENGTH          shift and go to state 22
    TOP             shift and go to state 5
    BOTTOM          shift and go to state 11

    Inst_Funcion                   shift and go to state 26
    Factor                         shift and go to state 123

state 72

    (79) Lista_Aux -> STRING COMMA . Lista_Aux
    (76) Lista_Aux -> . Expresion
    (77) Lista_Aux -> . STRING
    (78) Lista_Aux -> . Expresion COMMA Lista_Aux
    (79) Lista_Aux -> . STRING COMMA Lista_Aux
    (35) Expresion -> . Operacion_binaria
    (36) Expresion -> . Operacion_booleana
    (37) Expresion -> . Rango
    (55) Operacion_binaria -> . Operacion_binaria PLUS Term
    (56) Operacion_binaria -> . Operacion_binaria MINUS Term
    (57) Operacion_binaria -> . Term
    (38) Operacion_booleana -> . Operacion_binaria Opr_bool Operacion_binaria
    (39) Operacion_booleana -> . Operacion_booleana AND Operacion_booleana
    (40) Operacion_booleana -> . Operacion_booleana OR Operacion_booleana
    (41) Operacion_booleana -> . Operacion_binaria IN Rango
    (42) Operacion_booleana -> . LPAREN Operacion_booleana RPAREN
    (43) Operacion_booleana -> . Operacion_booleana EQEQ Operacion_booleana
    (44) Operacion_booleana -> . Operacion_booleana NEQEQ Operacion_booleana
    (45) Operacion_booleana -> . Operacion_binaria EQEQ Operacion_binaria
    (46) Operacion_booleana -> . Operacion_binaria NEQEQ Operacion_binaria
    (47) Operacion_booleana -> . TRUE
    (48) Operacion_booleana -> . FALSE
    (49) Operacion_booleana -> . VAR_IDENTIFIER
    (50) Operacion_booleana -> . NOT Operacion_booleana
    (67) Rango -> . Operacion_binaria RANGE Operacion_binaria
    (68) Rango -> . Rango PLUS Rango
    (69) Rango -> . Rango TIMES Operacion_binaria
    (70) Rango -> . Rango INTERSECTION Rango
    (71) Rango -> . LPAREN Rango RPAREN
    (72) Rango -> . VAR_IDENTIFIER
    (58) Term -> . Term TIMES Factor
    (59) Term -> . Term DIVIDE Factor
    (60) Term -> . Term MOD Factor
    (61) Term -> . Factor
    (62) Factor -> . NUMBER
    (63) Factor -> . VAR_IDENTIFIER
    (64) Factor -> . LPAREN Operacion_binaria RPAREN
    (65) Factor -> . Inst_Funcion
    (66) Factor -> . MINUS Factor
    (17) Inst_Funcion -> . RTOI LPAREN Rango RPAREN
    (18) Inst_Funcion -> . LENGTH LPAREN Rango RPAREN
    (19) Inst_Funcion -> . TOP LPAREN Rango RPAREN
    (20) Inst_Funcion -> . BOTTOM LPAREN Rango RPAREN
    (21) Inst_Funcion -> . RTOI LPAREN VAR_IDENTIFIER RPAREN
    (22) Inst_Funcion -> . LENGTH LPAREN VAR_IDENTIFIER RPAREN
    (23) Inst_Funcion -> . TOP LPAREN VAR_IDENTIFIER RPAREN
    (24) Inst_Funcion -> . BOTTOM LPAREN VAR_IDENTIFIER RPAREN

    STRING          shift and go to state 35
    LPAREN          shift and go to state 37
    TRUE            shift and go to state 30
    FALSE           shift and go to state 40
    VAR_IDENTIFIER  shift and go to state 36
    NOT             shift and go to state 41
    NUMBER          shift and go to state 28
    MINUS           shift and go to state 31
    RTOI            shift and go to state 23
    LENGTH          shift and go to state 22
    TOP             shift and go to state 5
    BOTTOM          shift and go to state 11

    Expresion                      shift and go to state 33
    Operacion_binaria              shift and go to state 39
    Inst_Funcion                   shift and go to state 26
    Factor                         shift and go to state 27
    Term                           shift and go to state 34
    Lista_Aux                      shift and go to state 124
    Rango                          shift and go to state 38
    Operacion_booleana             shift and go to state 32

state 73

    (42) Operacion_booleana -> LPAREN Operacion_booleana . RPAREN
    (39) Operacion_booleana -> Operacion_booleana . AND Operacion_booleana
    (40) Operacion_booleana -> Operacion_booleana . OR Operacion_booleana
    (43) Operacion_booleana -> Operacion_booleana . EQEQ Operacion_booleana
    (44) Operacion_booleana -> Operacion_booleana . NEQEQ Operacion_booleana

    RPAREN          shift and go to state 125
    AND             shift and go to state 64
    OR              shift and go to state 66
    EQEQ            shift and go to state 65
    NEQEQ           shift and go to state 67


state 74

    (71) Rango -> LPAREN Rango . RPAREN
    (68) Rango -> Rango . PLUS Rango
    (69) Rango -> Rango . TIMES Operacion_binaria
    (70) Rango -> Rango . INTERSECTION Rango

    RPAREN          shift and go to state 126
    PLUS            shift and go to state 77
    TIMES           shift and go to state 78
    INTERSECTION    shift and go to state 76


state 75

    (64) Factor -> LPAREN Operacion_binaria . RPAREN
    (38) Operacion_booleana -> Operacion_binaria . Opr_bool Operacion_binaria
    (41) Operacion_booleana -> Operacion_binaria . IN Rango
    (45) Operacion_booleana -> Operacion_binaria . EQEQ Operacion_binaria
    (46) Operacion_booleana -> Operacion_binaria . NEQEQ Operacion_binaria
    (67) Rango -> Operacion_binaria . RANGE Operacion_binaria
    (55) Operacion_binaria -> Operacion_binaria . PLUS Term
    (56) Operacion_binaria -> Operacion_binaria . MINUS Term
    (51) Opr_bool -> . GREAT
    (52) Opr_bool -> . LESS
    (53) Opr_bool -> . GREATEQ
    (54) Opr_bool -> . LESSEQ

    RPAREN          shift and go to state 127
    IN              shift and go to state 88
    EQEQ            shift and go to state 84
    NEQEQ           shift and go to state 81
    RANGE           shift and go to state 85
    PLUS            shift and go to state 87
    MINUS           shift and go to state 89
    GREAT           shift and go to state 80
    LESS            shift and go to state 83
    GREATEQ         shift and go to state 79
    LESSEQ          shift and go to state 86

    Opr_bool                       shift and go to state 82

state 76

    (70) Rango -> Rango INTERSECTION . Rango
    (67) Rango -> . Operacion_binaria RANGE Operacion_binaria
    (68) Rango -> . Rango PLUS Rango
    (69) Rango -> . Rango TIMES Operacion_binaria
    (70) Rango -> . Rango INTERSECTION Rango
    (71) Rango -> . LPAREN Rango RPAREN
    (72) Rango -> . VAR_IDENTIFIER
    (55) Operacion_binaria -> . Operacion_binaria PLUS Term
    (56) Operacion_binaria -> . Operacion_binaria MINUS Term
    (57) Operacion_binaria -> . Term
    (58) Term -> . Term TIMES Factor
    (59) Term -> . Term DIVIDE Factor
    (60) Term -> . Term MOD Factor
    (61) Term -> . Factor
    (62) Factor -> . NUMBER
    (63) Factor -> . VAR_IDENTIFIER
    (64) Factor -> . LPAREN Operacion_binaria RPAREN
    (65) Factor -> . Inst_Funcion
    (66) Factor -> . MINUS Factor
    (17) Inst_Funcion -> . RTOI LPAREN Rango RPAREN
    (18) Inst_Funcion -> . LENGTH LPAREN Rango RPAREN
    (19) Inst_Funcion -> . TOP LPAREN Rango RPAREN
    (20) Inst_Funcion -> . BOTTOM LPAREN Rango RPAREN
    (21) Inst_Funcion -> . RTOI LPAREN VAR_IDENTIFIER RPAREN
    (22) Inst_Funcion -> . LENGTH LPAREN VAR_IDENTIFIER RPAREN
    (23) Inst_Funcion -> . TOP LPAREN VAR_IDENTIFIER RPAREN
    (24) Inst_Funcion -> . BOTTOM LPAREN VAR_IDENTIFIER RPAREN

    LPAREN          shift and go to state 93
    VAR_IDENTIFIER  shift and go to state 128
    NUMBER          shift and go to state 28
    MINUS           shift and go to state 31
    RTOI            shift and go to state 23
    LENGTH          shift and go to state 22
    TOP             shift and go to state 5
    BOTTOM          shift and go to state 11

    Rango                          shift and go to state 129
    Operacion_binaria              shift and go to state 91
    Inst_Funcion                   shift and go to state 26
    Term                           shift and go to state 34
    Factor                         shift and go to state 27

state 77

    (68) Rango -> Rango PLUS . Rango
    (67) Rango -> . Operacion_binaria RANGE Operacion_binaria
    (68) Rango -> . Rango PLUS Rango
    (69) Rango -> . Rango TIMES Operacion_binaria
    (70) Rango -> . Rango INTERSECTION Rango
    (71) Rango -> . LPAREN Rango RPAREN
    (72) Rango -> . VAR_IDENTIFIER
    (55) Operacion_binaria -> . Operacion_binaria PLUS Term
    (56) Operacion_binaria -> . Operacion_binaria MINUS Term
    (57) Operacion_binaria -> . Term
    (58) Term -> . Term TIMES Factor
    (59) Term -> . Term DIVIDE Factor
    (60) Term -> . Term MOD Factor
    (61) Term -> . Factor
    (62) Factor -> . NUMBER
    (63) Factor -> . VAR_IDENTIFIER
    (64) Factor -> . LPAREN Operacion_binaria RPAREN
    (65) Factor -> . Inst_Funcion
    (66) Factor -> . MINUS Factor
    (17) Inst_Funcion -> . RTOI LPAREN Rango RPAREN
    (18) Inst_Funcion -> . LENGTH LPAREN Rango RPAREN
    (19) Inst_Funcion -> . TOP LPAREN Rango RPAREN
    (20) Inst_Funcion -> . BOTTOM LPAREN Rango RPAREN
    (21) Inst_Funcion -> . RTOI LPAREN VAR_IDENTIFIER RPAREN
    (22) Inst_Funcion -> . LENGTH LPAREN VAR_IDENTIFIER RPAREN
    (23) Inst_Funcion -> . TOP LPAREN VAR_IDENTIFIER RPAREN
    (24) Inst_Funcion -> . BOTTOM LPAREN VAR_IDENTIFIER RPAREN

    LPAREN          shift and go to state 93
    VAR_IDENTIFIER  shift and go to state 128
    NUMBER          shift and go to state 28
    MINUS           shift and go to state 31
    RTOI            shift and go to state 23
    LENGTH          shift and go to state 22
    TOP             shift and go to state 5
    BOTTOM          shift and go to state 11

    Rango                          shift and go to state 130
    Operacion_binaria              shift and go to state 91
    Inst_Funcion                   shift and go to state 26
    Term                           shift and go to state 34
    Factor                         shift and go to state 27

state 78

    (69) Rango -> Rango TIMES . Operacion_binaria
    (55) Operacion_binaria -> . Operacion_binaria PLUS Term
    (56) Operacion_binaria -> . Operacion_binaria MINUS Term
    (57) Operacion_binaria -> . Term
    (58) Term -> . Term TIMES Factor
    (59) Term -> . Term DIVIDE Factor
    (60) Term -> . Term MOD Factor
    (61) Term -> . Factor
    (62) Factor -> . NUMBER
    (63) Factor -> . VAR_IDENTIFIER
    (64) Factor -> . LPAREN Operacion_binaria RPAREN
    (65) Factor -> . Inst_Funcion
    (66) Factor -> . MINUS Factor
    (17) Inst_Funcion -> . RTOI LPAREN Rango RPAREN
    (18) Inst_Funcion -> . LENGTH LPAREN Rango RPAREN
    (19) Inst_Funcion -> . TOP LPAREN Rango RPAREN
    (20) Inst_Funcion -> . BOTTOM LPAREN Rango RPAREN
    (21) Inst_Funcion -> . RTOI LPAREN VAR_IDENTIFIER RPAREN
    (22) Inst_Funcion -> . LENGTH LPAREN VAR_IDENTIFIER RPAREN
    (23) Inst_Funcion -> . TOP LPAREN VAR_IDENTIFIER RPAREN
    (24) Inst_Funcion -> . BOTTOM LPAREN VAR_IDENTIFIER RPAREN

    NUMBER          shift and go to state 28
    VAR_IDENTIFIER  shift and go to state 55
    LPAREN          shift and go to state 56
    MINUS           shift and go to state 31
    RTOI            shift and go to state 23
    LENGTH          shift and go to state 22
    TOP             shift and go to state 5
    BOTTOM          shift and go to state 11

    Operacion_binaria              shift and go to state 131
    Inst_Funcion                   shift and go to state 26
    Term                           shift and go to state 34
    Factor                         shift and go to state 27

state 79

    (53) Opr_bool -> GREATEQ .

    NUMBER          reduce using rule 53 (Opr_bool -> GREATEQ .)
    VAR_IDENTIFIER  reduce using rule 53 (Opr_bool -> GREATEQ .)
    LPAREN          reduce using rule 53 (Opr_bool -> GREATEQ .)
    MINUS           reduce using rule 53 (Opr_bool -> GREATEQ .)
    RTOI            reduce using rule 53 (Opr_bool -> GREATEQ .)
    LENGTH          reduce using rule 53 (Opr_bool -> GREATEQ .)
    TOP             reduce using rule 53 (Opr_bool -> GREATEQ .)
    BOTTOM          reduce using rule 53 (Opr_bool -> GREATEQ .)


state 80

    (51) Opr_bool -> GREAT .

    NUMBER          reduce using rule 51 (Opr_bool -> GREAT .)
    VAR_IDENTIFIER  reduce using rule 51 (Opr_bool -> GREAT .)
    LPAREN          reduce using rule 51 (Opr_bool -> GREAT .)
    MINUS           reduce using rule 51 (Opr_bool -> GREAT .)
    RTOI            reduce using rule 51 (Opr_bool -> GREAT .)
    LENGTH          reduce using rule 51 (Opr_bool -> GREAT .)
    TOP             reduce using rule 51 (Opr_bool -> GREAT .)
    BOTTOM          reduce using rule 51 (Opr_bool -> GREAT .)


state 81

    (46) Operacion_booleana -> Operacion_binaria NEQEQ . Operacion_binaria
    (55) Operacion_binaria -> . Operacion_binaria PLUS Term
    (56) Operacion_binaria -> . Operacion_binaria MINUS Term
    (57) Operacion_binaria -> . Term
    (58) Term -> . Term TIMES Factor
    (59) Term -> . Term DIVIDE Factor
    (60) Term -> . Term MOD Factor
    (61) Term -> . Factor
    (62) Factor -> . NUMBER
    (63) Factor -> . VAR_IDENTIFIER
    (64) Factor -> . LPAREN Operacion_binaria RPAREN
    (65) Factor -> . Inst_Funcion
    (66) Factor -> . MINUS Factor
    (17) Inst_Funcion -> . RTOI LPAREN Rango RPAREN
    (18) Inst_Funcion -> . LENGTH LPAREN Rango RPAREN
    (19) Inst_Funcion -> . TOP LPAREN Rango RPAREN
    (20) Inst_Funcion -> . BOTTOM LPAREN Rango RPAREN
    (21) Inst_Funcion -> . RTOI LPAREN VAR_IDENTIFIER RPAREN
    (22) Inst_Funcion -> . LENGTH LPAREN VAR_IDENTIFIER RPAREN
    (23) Inst_Funcion -> . TOP LPAREN VAR_IDENTIFIER RPAREN
    (24) Inst_Funcion -> . BOTTOM LPAREN VAR_IDENTIFIER RPAREN

    NUMBER          shift and go to state 28
    VAR_IDENTIFIER  shift and go to state 55
    LPAREN          shift and go to state 56
    MINUS           shift and go to state 31
    RTOI            shift and go to state 23
    LENGTH          shift and go to state 22
    TOP             shift and go to state 5
    BOTTOM          shift and go to state 11

    Operacion_binaria              shift and go to state 132
    Inst_Funcion                   shift and go to state 26
    Term                           shift and go to state 34
    Factor                         shift and go to state 27

state 82

    (38) Operacion_booleana -> Operacion_binaria Opr_bool . Operacion_binaria
    (55) Operacion_binaria -> . Operacion_binaria PLUS Term
    (56) Operacion_binaria -> . Operacion_binaria MINUS Term
    (57) Operacion_binaria -> . Term
    (58) Term -> . Term TIMES Factor
    (59) Term -> . Term DIVIDE Factor
    (60) Term -> . Term MOD Factor
    (61) Term -> . Factor
    (62) Factor -> . NUMBER
    (63) Factor -> . VAR_IDENTIFIER
    (64) Factor -> . LPAREN Operacion_binaria RPAREN
    (65) Factor -> . Inst_Funcion
    (66) Factor -> . MINUS Factor
    (17) Inst_Funcion -> . RTOI LPAREN Rango RPAREN
    (18) Inst_Funcion -> . LENGTH LPAREN Rango RPAREN
    (19) Inst_Funcion -> . TOP LPAREN Rango RPAREN
    (20) Inst_Funcion -> . BOTTOM LPAREN Rango RPAREN
    (21) Inst_Funcion -> . RTOI LPAREN VAR_IDENTIFIER RPAREN
    (22) Inst_Funcion -> . LENGTH LPAREN VAR_IDENTIFIER RPAREN
    (23) Inst_Funcion -> . TOP LPAREN VAR_IDENTIFIER RPAREN
    (24) Inst_Funcion -> . BOTTOM LPAREN VAR_IDENTIFIER RPAREN

    NUMBER          shift and go to state 28
    VAR_IDENTIFIER  shift and go to state 55
    LPAREN          shift and go to state 56
    MINUS           shift and go to state 31
    RTOI            shift and go to state 23
    LENGTH          shift and go to state 22
    TOP             shift and go to state 5
    BOTTOM          shift and go to state 11

    Operacion_binaria              shift and go to state 133
    Inst_Funcion                   shift and go to state 26
    Term                           shift and go to state 34
    Factor                         shift and go to state 27

state 83

    (52) Opr_bool -> LESS .

    NUMBER          reduce using rule 52 (Opr_bool -> LESS .)
    VAR_IDENTIFIER  reduce using rule 52 (Opr_bool -> LESS .)
    LPAREN          reduce using rule 52 (Opr_bool -> LESS .)
    MINUS           reduce using rule 52 (Opr_bool -> LESS .)
    RTOI            reduce using rule 52 (Opr_bool -> LESS .)
    LENGTH          reduce using rule 52 (Opr_bool -> LESS .)
    TOP             reduce using rule 52 (Opr_bool -> LESS .)
    BOTTOM          reduce using rule 52 (Opr_bool -> LESS .)


state 84

    (45) Operacion_booleana -> Operacion_binaria EQEQ . Operacion_binaria
    (55) Operacion_binaria -> . Operacion_binaria PLUS Term
    (56) Operacion_binaria -> . Operacion_binaria MINUS Term
    (57) Operacion_binaria -> . Term
    (58) Term -> . Term TIMES Factor
    (59) Term -> . Term DIVIDE Factor
    (60) Term -> . Term MOD Factor
    (61) Term -> . Factor
    (62) Factor -> . NUMBER
    (63) Factor -> . VAR_IDENTIFIER
    (64) Factor -> . LPAREN Operacion_binaria RPAREN
    (65) Factor -> . Inst_Funcion
    (66) Factor -> . MINUS Factor
    (17) Inst_Funcion -> . RTOI LPAREN Rango RPAREN
    (18) Inst_Funcion -> . LENGTH LPAREN Rango RPAREN
    (19) Inst_Funcion -> . TOP LPAREN Rango RPAREN
    (20) Inst_Funcion -> . BOTTOM LPAREN Rango RPAREN
    (21) Inst_Funcion -> . RTOI LPAREN VAR_IDENTIFIER RPAREN
    (22) Inst_Funcion -> . LENGTH LPAREN VAR_IDENTIFIER RPAREN
    (23) Inst_Funcion -> . TOP LPAREN VAR_IDENTIFIER RPAREN
    (24) Inst_Funcion -> . BOTTOM LPAREN VAR_IDENTIFIER RPAREN

    NUMBER          shift and go to state 28
    VAR_IDENTIFIER  shift and go to state 55
    LPAREN          shift and go to state 56
    MINUS           shift and go to state 31
    RTOI            shift and go to state 23
    LENGTH          shift and go to state 22
    TOP             shift and go to state 5
    BOTTOM          shift and go to state 11

    Operacion_binaria              shift and go to state 134
    Inst_Funcion                   shift and go to state 26
    Term                           shift and go to state 34
    Factor                         shift and go to state 27

state 85

    (67) Rango -> Operacion_binaria RANGE . Operacion_binaria
    (55) Operacion_binaria -> . Operacion_binaria PLUS Term
    (56) Operacion_binaria -> . Operacion_binaria MINUS Term
    (57) Operacion_binaria -> . Term
    (58) Term -> . Term TIMES Factor
    (59) Term -> . Term DIVIDE Factor
    (60) Term -> . Term MOD Factor
    (61) Term -> . Factor
    (62) Factor -> . NUMBER
    (63) Factor -> . VAR_IDENTIFIER
    (64) Factor -> . LPAREN Operacion_binaria RPAREN
    (65) Factor -> . Inst_Funcion
    (66) Factor -> . MINUS Factor
    (17) Inst_Funcion -> . RTOI LPAREN Rango RPAREN
    (18) Inst_Funcion -> . LENGTH LPAREN Rango RPAREN
    (19) Inst_Funcion -> . TOP LPAREN Rango RPAREN
    (20) Inst_Funcion -> . BOTTOM LPAREN Rango RPAREN
    (21) Inst_Funcion -> . RTOI LPAREN VAR_IDENTIFIER RPAREN
    (22) Inst_Funcion -> . LENGTH LPAREN VAR_IDENTIFIER RPAREN
    (23) Inst_Funcion -> . TOP LPAREN VAR_IDENTIFIER RPAREN
    (24) Inst_Funcion -> . BOTTOM LPAREN VAR_IDENTIFIER RPAREN

    NUMBER          shift and go to state 28
    VAR_IDENTIFIER  shift and go to state 55
    LPAREN          shift and go to state 56
    MINUS           shift and go to state 31
    RTOI            shift and go to state 23
    LENGTH          shift and go to state 22
    TOP             shift and go to state 5
    BOTTOM          shift and go to state 11

    Operacion_binaria              shift and go to state 135
    Inst_Funcion                   shift and go to state 26
    Term                           shift and go to state 34
    Factor                         shift and go to state 27

state 86

    (54) Opr_bool -> LESSEQ .

    NUMBER          reduce using rule 54 (Opr_bool -> LESSEQ .)
    VAR_IDENTIFIER  reduce using rule 54 (Opr_bool -> LESSEQ .)
    LPAREN          reduce using rule 54 (Opr_bool -> LESSEQ .)
    MINUS           reduce using rule 54 (Opr_bool -> LESSEQ .)
    RTOI            reduce using rule 54 (Opr_bool -> LESSEQ .)
    LENGTH          reduce using rule 54 (Opr_bool -> LESSEQ .)
    TOP             reduce using rule 54 (Opr_bool -> LESSEQ .)
    BOTTOM          reduce using rule 54 (Opr_bool -> LESSEQ .)


state 87

    (55) Operacion_binaria -> Operacion_binaria PLUS . Term
    (58) Term -> . Term TIMES Factor
    (59) Term -> . Term DIVIDE Factor
    (60) Term -> . Term MOD Factor
    (61) Term -> . Factor
    (62) Factor -> . NUMBER
    (63) Factor -> . VAR_IDENTIFIER
    (64) Factor -> . LPAREN Operacion_binaria RPAREN
    (65) Factor -> . Inst_Funcion
    (66) Factor -> . MINUS Factor
    (17) Inst_Funcion -> . RTOI LPAREN Rango RPAREN
    (18) Inst_Funcion -> . LENGTH LPAREN Rango RPAREN
    (19) Inst_Funcion -> . TOP LPAREN Rango RPAREN
    (20) Inst_Funcion -> . BOTTOM LPAREN Rango RPAREN
    (21) Inst_Funcion -> . RTOI LPAREN VAR_IDENTIFIER RPAREN
    (22) Inst_Funcion -> . LENGTH LPAREN VAR_IDENTIFIER RPAREN
    (23) Inst_Funcion -> . TOP LPAREN VAR_IDENTIFIER RPAREN
    (24) Inst_Funcion -> . BOTTOM LPAREN VAR_IDENTIFIER RPAREN

    NUMBER          shift and go to state 28
    VAR_IDENTIFIER  shift and go to state 55
    LPAREN          shift and go to state 56
    MINUS           shift and go to state 31
    RTOI            shift and go to state 23
    LENGTH          shift and go to state 22
    TOP             shift and go to state 5
    BOTTOM          shift and go to state 11

    Inst_Funcion                   shift and go to state 26
    Term                           shift and go to state 136
    Factor                         shift and go to state 27

state 88

    (41) Operacion_booleana -> Operacion_binaria IN . Rango
    (67) Rango -> . Operacion_binaria RANGE Operacion_binaria
    (68) Rango -> . Rango PLUS Rango
    (69) Rango -> . Rango TIMES Operacion_binaria
    (70) Rango -> . Rango INTERSECTION Rango
    (71) Rango -> . LPAREN Rango RPAREN
    (72) Rango -> . VAR_IDENTIFIER
    (55) Operacion_binaria -> . Operacion_binaria PLUS Term
    (56) Operacion_binaria -> . Operacion_binaria MINUS Term
    (57) Operacion_binaria -> . Term
    (58) Term -> . Term TIMES Factor
    (59) Term -> . Term DIVIDE Factor
    (60) Term -> . Term MOD Factor
    (61) Term -> . Factor
    (62) Factor -> . NUMBER
    (63) Factor -> . VAR_IDENTIFIER
    (64) Factor -> . LPAREN Operacion_binaria RPAREN
    (65) Factor -> . Inst_Funcion
    (66) Factor -> . MINUS Factor
    (17) Inst_Funcion -> . RTOI LPAREN Rango RPAREN
    (18) Inst_Funcion -> . LENGTH LPAREN Rango RPAREN
    (19) Inst_Funcion -> . TOP LPAREN Rango RPAREN
    (20) Inst_Funcion -> . BOTTOM LPAREN Rango RPAREN
    (21) Inst_Funcion -> . RTOI LPAREN VAR_IDENTIFIER RPAREN
    (22) Inst_Funcion -> . LENGTH LPAREN VAR_IDENTIFIER RPAREN
    (23) Inst_Funcion -> . TOP LPAREN VAR_IDENTIFIER RPAREN
    (24) Inst_Funcion -> . BOTTOM LPAREN VAR_IDENTIFIER RPAREN

    LPAREN          shift and go to state 93
    VAR_IDENTIFIER  shift and go to state 128
    NUMBER          shift and go to state 28
    MINUS           shift and go to state 31
    RTOI            shift and go to state 23
    LENGTH          shift and go to state 22
    TOP             shift and go to state 5
    BOTTOM          shift and go to state 11

    Rango                          shift and go to state 137
    Operacion_binaria              shift and go to state 91
    Inst_Funcion                   shift and go to state 26
    Term                           shift and go to state 34
    Factor                         shift and go to state 27

state 89

    (56) Operacion_binaria -> Operacion_binaria MINUS . Term
    (58) Term -> . Term TIMES Factor
    (59) Term -> . Term DIVIDE Factor
    (60) Term -> . Term MOD Factor
    (61) Term -> . Factor
    (62) Factor -> . NUMBER
    (63) Factor -> . VAR_IDENTIFIER
    (64) Factor -> . LPAREN Operacion_binaria RPAREN
    (65) Factor -> . Inst_Funcion
    (66) Factor -> . MINUS Factor
    (17) Inst_Funcion -> . RTOI LPAREN Rango RPAREN
    (18) Inst_Funcion -> . LENGTH LPAREN Rango RPAREN
    (19) Inst_Funcion -> . TOP LPAREN Rango RPAREN
    (20) Inst_Funcion -> . BOTTOM LPAREN Rango RPAREN
    (21) Inst_Funcion -> . RTOI LPAREN VAR_IDENTIFIER RPAREN
    (22) Inst_Funcion -> . LENGTH LPAREN VAR_IDENTIFIER RPAREN
    (23) Inst_Funcion -> . TOP LPAREN VAR_IDENTIFIER RPAREN
    (24) Inst_Funcion -> . BOTTOM LPAREN VAR_IDENTIFIER RPAREN

    NUMBER          shift and go to state 28
    VAR_IDENTIFIER  shift and go to state 55
    LPAREN          shift and go to state 56
    MINUS           shift and go to state 31
    RTOI            shift and go to state 23
    LENGTH          shift and go to state 22
    TOP             shift and go to state 5
    BOTTOM          shift and go to state 11

    Inst_Funcion                   shift and go to state 26
    Term                           shift and go to state 138
    Factor                         shift and go to state 27

state 90

    (50) Operacion_booleana -> NOT Operacion_booleana .
    (39) Operacion_booleana -> Operacion_booleana . AND Operacion_booleana
    (40) Operacion_booleana -> Operacion_booleana . OR Operacion_booleana
    (43) Operacion_booleana -> Operacion_booleana . EQEQ Operacion_booleana
    (44) Operacion_booleana -> Operacion_booleana . NEQEQ Operacion_booleana

    AND             reduce using rule 50 (Operacion_booleana -> NOT Operacion_booleana .)
    OR              reduce using rule 50 (Operacion_booleana -> NOT Operacion_booleana .)
    COMMA           reduce using rule 50 (Operacion_booleana -> NOT Operacion_booleana .)
    $end            reduce using rule 50 (Operacion_booleana -> NOT Operacion_booleana .)
    SEMICOLON       reduce using rule 50 (Operacion_booleana -> NOT Operacion_booleana .)
    INST_END        reduce using rule 50 (Operacion_booleana -> NOT Operacion_booleana .)
    INST_ELSE       reduce using rule 50 (Operacion_booleana -> NOT Operacion_booleana .)
    INST_DO         reduce using rule 50 (Operacion_booleana -> NOT Operacion_booleana .)
    INST_THEN       reduce using rule 50 (Operacion_booleana -> NOT Operacion_booleana .)
    RPAREN          reduce using rule 50 (Operacion_booleana -> NOT Operacion_booleana .)
    EQEQ            shift and go to state 65
    NEQEQ           shift and go to state 67

  ! EQEQ            [ reduce using rule 50 (Operacion_booleana -> NOT Operacion_booleana .) ]
  ! NEQEQ           [ reduce using rule 50 (Operacion_booleana -> NOT Operacion_booleana .) ]
  ! AND             [ shift and go to state 64 ]
  ! OR              [ shift and go to state 66 ]


state 91

    (67) Rango -> Operacion_binaria . RANGE Operacion_binaria
    (55) Operacion_binaria -> Operacion_binaria . PLUS Term
    (56) Operacion_binaria -> Operacion_binaria . MINUS Term

    RANGE           shift and go to state 85
    PLUS            shift and go to state 87
    MINUS           shift and go to state 89


state 92

    (23) Inst_Funcion -> TOP LPAREN VAR_IDENTIFIER . RPAREN
    (72) Rango -> VAR_IDENTIFIER .
    (63) Factor -> VAR_IDENTIFIER .

  ! shift/reduce conflict for RPAREN resolved as shift
  ! reduce/reduce conflict for TIMES resolved using rule 63 (Factor -> VAR_IDENTIFIER .)
  ! reduce/reduce conflict for PLUS resolved using rule 63 (Factor -> VAR_IDENTIFIER .)
    RPAREN          shift and go to state 139
    INTERSECTION    reduce using rule 72 (Rango -> VAR_IDENTIFIER .)
    TIMES           reduce using rule 63 (Factor -> VAR_IDENTIFIER .)
    DIVIDE          reduce using rule 63 (Factor -> VAR_IDENTIFIER .)
    MOD             reduce using rule 63 (Factor -> VAR_IDENTIFIER .)
    RANGE           reduce using rule 63 (Factor -> VAR_IDENTIFIER .)
    PLUS            reduce using rule 63 (Factor -> VAR_IDENTIFIER .)
    MINUS           reduce using rule 63 (Factor -> VAR_IDENTIFIER .)

  ! RPAREN          [ reduce using rule 72 (Rango -> VAR_IDENTIFIER .) ]
  ! PLUS            [ reduce using rule 72 (Rango -> VAR_IDENTIFIER .) ]
  ! TIMES           [ reduce using rule 72 (Rango -> VAR_IDENTIFIER .) ]


state 93

    (71) Rango -> LPAREN . Rango RPAREN
    (64) Factor -> LPAREN . Operacion_binaria RPAREN
    (67) Rango -> . Operacion_binaria RANGE Operacion_binaria
    (68) Rango -> . Rango PLUS Rango
    (69) Rango -> . Rango TIMES Operacion_binaria
    (70) Rango -> . Rango INTERSECTION Rango
    (71) Rango -> . LPAREN Rango RPAREN
    (72) Rango -> . VAR_IDENTIFIER
    (55) Operacion_binaria -> . Operacion_binaria PLUS Term
    (56) Operacion_binaria -> . Operacion_binaria MINUS Term
    (57) Operacion_binaria -> . Term
    (58) Term -> . Term TIMES Factor
    (59) Term -> . Term DIVIDE Factor
    (60) Term -> . Term MOD Factor
    (61) Term -> . Factor
    (62) Factor -> . NUMBER
    (63) Factor -> . VAR_IDENTIFIER
    (64) Factor -> . LPAREN Operacion_binaria RPAREN
    (65) Factor -> . Inst_Funcion
    (66) Factor -> . MINUS Factor
    (17) Inst_Funcion -> . RTOI LPAREN Rango RPAREN
    (18) Inst_Funcion -> . LENGTH LPAREN Rango RPAREN
    (19) Inst_Funcion -> . TOP LPAREN Rango RPAREN
    (20) Inst_Funcion -> . BOTTOM LPAREN Rango RPAREN
    (21) Inst_Funcion -> . RTOI LPAREN VAR_IDENTIFIER RPAREN
    (22) Inst_Funcion -> . LENGTH LPAREN VAR_IDENTIFIER RPAREN
    (23) Inst_Funcion -> . TOP LPAREN VAR_IDENTIFIER RPAREN
    (24) Inst_Funcion -> . BOTTOM LPAREN VAR_IDENTIFIER RPAREN

    LPAREN          shift and go to state 93
    VAR_IDENTIFIER  shift and go to state 128
    NUMBER          shift and go to state 28
    MINUS           shift and go to state 31
    RTOI            shift and go to state 23
    LENGTH          shift and go to state 22
    TOP             shift and go to state 5
    BOTTOM          shift and go to state 11

    Rango                          shift and go to state 74
    Operacion_binaria              shift and go to state 140
    Inst_Funcion                   shift and go to state 26
    Term                           shift and go to state 34
    Factor                         shift and go to state 27

state 94

    (19) Inst_Funcion -> TOP LPAREN Rango . RPAREN
    (68) Rango -> Rango . PLUS Rango
    (69) Rango -> Rango . TIMES Operacion_binaria
    (70) Rango -> Rango . INTERSECTION Rango

    RPAREN          shift and go to state 141
    PLUS            shift and go to state 77
    TIMES           shift and go to state 78
    INTERSECTION    shift and go to state 76


state 95

    (90) Inst_While -> INST_WHILE Operacion_booleana INST_DO . Bloque_Inst
    (91) Inst_While -> INST_WHILE Operacion_booleana INST_DO . Inst
    (3) Bloque_Inst -> . INST_BEGIN Lista_Inst INST_END
    (4) Bloque_Inst -> . INST_BEGIN Inst_Declare Lista_Inst INST_END
    (5) Bloque_Inst -> . INST_BEGIN Inst_Declare INST_END
    (8) Inst -> . Inst_Asignacion
    (9) Inst -> . Inst_Lectura
    (10) Inst -> . Inst_For
    (11) Inst -> . Inst_While
    (12) Inst -> . Inst_If
    (13) Inst -> . Inst_Case
    (14) Inst -> . Inst_Salida
    (15) Inst -> . Inst_Funcion
    (16) Inst -> . Bloque_Inst
    (34) Inst_Asignacion -> . VAR_IDENTIFIER EQUAL Expresion
    (73) Inst_Lectura -> . INST_READ VAR_IDENTIFIER
    (89) Inst_For -> . INST_FOR VAR_IDENTIFIER INST_IN Rango INST_DO Bloque_Control
    (90) Inst_While -> . INST_WHILE Operacion_booleana INST_DO Bloque_Inst
    (91) Inst_While -> . INST_WHILE Operacion_booleana INST_DO Inst
    (82) Inst_If -> . INST_IF Operacion_booleana INST_THEN Bloque_Control
    (83) Inst_If -> . INST_IF Operacion_booleana INST_THEN Bloque_Control INST_ELSE Bloque_Control
    (84) Inst_Case -> . INST_CASE Operacion_binaria INST_OF Casos INST_END
    (74) Inst_Salida -> . INST_WRITE Lista_Aux
    (75) Inst_Salida -> . INST_WRITELN Lista_Aux
    (17) Inst_Funcion -> . RTOI LPAREN Rango RPAREN
    (18) Inst_Funcion -> . LENGTH LPAREN Rango RPAREN
    (19) Inst_Funcion -> . TOP LPAREN Rango RPAREN
    (20) Inst_Funcion -> . BOTTOM LPAREN Rango RPAREN
    (21) Inst_Funcion -> . RTOI LPAREN VAR_IDENTIFIER RPAREN
    (22) Inst_Funcion -> . LENGTH LPAREN VAR_IDENTIFIER RPAREN
    (23) Inst_Funcion -> . TOP LPAREN VAR_IDENTIFIER RPAREN
    (24) Inst_Funcion -> . BOTTOM LPAREN VAR_IDENTIFIER RPAREN

    INST_BEGIN      shift and go to state 10
    VAR_IDENTIFIER  shift and go to state 16
    INST_READ       shift and go to state 9
    INST_FOR        shift and go to state 19
    INST_WHILE      shift and go to state 8
    INST_IF         shift and go to state 20
    INST_CASE       shift and go to state 18
    INST_WRITE      shift and go to state 4
    INST_WRITELN    shift and go to state 21
    RTOI            shift and go to state 23
    LENGTH          shift and go to state 22
    TOP             shift and go to state 5
    BOTTOM          shift and go to state 11

    Inst_Salida                    shift and go to state 7
    Inst_Funcion                   shift and go to state 3
    Bloque_Inst                    shift and go to state 142
    Inst_If                        shift and go to state 17
    Inst_For                       shift and go to state 12
    Inst_While                     shift and go to state 14
    Inst                           shift and go to state 143
    Inst_Asignacion                shift and go to state 24
    Inst_Case                      shift and go to state 25
    Inst_Lectura                   shift and go to state 15

state 96

    (64) Factor -> LPAREN Operacion_binaria . RPAREN
    (38) Operacion_booleana -> Operacion_binaria . Opr_bool Operacion_binaria
    (41) Operacion_booleana -> Operacion_binaria . IN Rango
    (45) Operacion_booleana -> Operacion_binaria . EQEQ Operacion_binaria
    (46) Operacion_booleana -> Operacion_binaria . NEQEQ Operacion_binaria
    (55) Operacion_binaria -> Operacion_binaria . PLUS Term
    (56) Operacion_binaria -> Operacion_binaria . MINUS Term
    (51) Opr_bool -> . GREAT
    (52) Opr_bool -> . LESS
    (53) Opr_bool -> . GREATEQ
    (54) Opr_bool -> . LESSEQ

    RPAREN          shift and go to state 127
    IN              shift and go to state 88
    EQEQ            shift and go to state 84
    NEQEQ           shift and go to state 81
    PLUS            shift and go to state 87
    MINUS           shift and go to state 89
    GREAT           shift and go to state 80
    LESS            shift and go to state 83
    GREATEQ         shift and go to state 79
    LESSEQ          shift and go to state 86

    Opr_bool                       shift and go to state 82

state 97

    (29) Lista_Variables -> VAR_IDENTIFIER .
    (30) Lista_Variables -> VAR_IDENTIFIER . COMMA Lista_Variables

    INST_AS         reduce using rule 29 (Lista_Variables -> VAR_IDENTIFIER .)
    COMMA           shift and go to state 144


state 98

    (25) Inst_Declare -> INST_DECLARE Lista_DeclareTipos .

    INST_END        reduce using rule 25 (Inst_Declare -> INST_DECLARE Lista_DeclareTipos .)
    VAR_IDENTIFIER  reduce using rule 25 (Inst_Declare -> INST_DECLARE Lista_DeclareTipos .)
    INST_READ       reduce using rule 25 (Inst_Declare -> INST_DECLARE Lista_DeclareTipos .)
    INST_FOR        reduce using rule 25 (Inst_Declare -> INST_DECLARE Lista_DeclareTipos .)
    INST_WHILE      reduce using rule 25 (Inst_Declare -> INST_DECLARE Lista_DeclareTipos .)
    INST_IF         reduce using rule 25 (Inst_Declare -> INST_DECLARE Lista_DeclareTipos .)
    INST_CASE       reduce using rule 25 (Inst_Declare -> INST_DECLARE Lista_DeclareTipos .)
    INST_WRITE      reduce using rule 25 (Inst_Declare -> INST_DECLARE Lista_DeclareTipos .)
    INST_WRITELN    reduce using rule 25 (Inst_Declare -> INST_DECLARE Lista_DeclareTipos .)
    RTOI            reduce using rule 25 (Inst_Declare -> INST_DECLARE Lista_DeclareTipos .)
    LENGTH          reduce using rule 25 (Inst_Declare -> INST_DECLARE Lista_DeclareTipos .)
    TOP             reduce using rule 25 (Inst_Declare -> INST_DECLARE Lista_DeclareTipos .)
    BOTTOM          reduce using rule 25 (Inst_Declare -> INST_DECLARE Lista_DeclareTipos .)
    INST_BEGIN      reduce using rule 25 (Inst_Declare -> INST_DECLARE Lista_DeclareTipos .)


state 99

    (28) Lista_Declare -> Lista_Variables . INST_AS Tipo

    INST_AS         shift and go to state 145


state 100

    (26) Lista_DeclareTipos -> Lista_Declare .
    (27) Lista_DeclareTipos -> Lista_Declare . SEMICOLON Lista_DeclareTipos

    INST_END        reduce using rule 26 (Lista_DeclareTipos -> Lista_Declare .)
    VAR_IDENTIFIER  reduce using rule 26 (Lista_DeclareTipos -> Lista_Declare .)
    INST_READ       reduce using rule 26 (Lista_DeclareTipos -> Lista_Declare .)
    INST_FOR        reduce using rule 26 (Lista_DeclareTipos -> Lista_Declare .)
    INST_WHILE      reduce using rule 26 (Lista_DeclareTipos -> Lista_Declare .)
    INST_IF         reduce using rule 26 (Lista_DeclareTipos -> Lista_Declare .)
    INST_CASE       reduce using rule 26 (Lista_DeclareTipos -> Lista_Declare .)
    INST_WRITE      reduce using rule 26 (Lista_DeclareTipos -> Lista_Declare .)
    INST_WRITELN    reduce using rule 26 (Lista_DeclareTipos -> Lista_Declare .)
    RTOI            reduce using rule 26 (Lista_DeclareTipos -> Lista_Declare .)
    LENGTH          reduce using rule 26 (Lista_DeclareTipos -> Lista_Declare .)
    TOP             reduce using rule 26 (Lista_DeclareTipos -> Lista_Declare .)
    BOTTOM          reduce using rule 26 (Lista_DeclareTipos -> Lista_Declare .)
    INST_BEGIN      reduce using rule 26 (Lista_DeclareTipos -> Lista_Declare .)
    SEMICOLON       shift and go to state 146


state 101

    (5) Bloque_Inst -> INST_BEGIN Inst_Declare INST_END .

    $end            reduce using rule 5 (Bloque_Inst -> INST_BEGIN Inst_Declare INST_END .)
    SEMICOLON       reduce using rule 5 (Bloque_Inst -> INST_BEGIN Inst_Declare INST_END .)
    INST_END        reduce using rule 5 (Bloque_Inst -> INST_BEGIN Inst_Declare INST_END .)
    INST_ELSE       reduce using rule 5 (Bloque_Inst -> INST_BEGIN Inst_Declare INST_END .)


state 102

    (4) Bloque_Inst -> INST_BEGIN Inst_Declare Lista_Inst . INST_END

    INST_END        shift and go to state 147


state 103

    (7) Lista_Inst -> Inst SEMICOLON . Lista_Inst
    (6) Lista_Inst -> . Inst
    (7) Lista_Inst -> . Inst SEMICOLON Lista_Inst
    (8) Inst -> . Inst_Asignacion
    (9) Inst -> . Inst_Lectura
    (10) Inst -> . Inst_For
    (11) Inst -> . Inst_While
    (12) Inst -> . Inst_If
    (13) Inst -> . Inst_Case
    (14) Inst -> . Inst_Salida
    (15) Inst -> . Inst_Funcion
    (16) Inst -> . Bloque_Inst
    (34) Inst_Asignacion -> . VAR_IDENTIFIER EQUAL Expresion
    (73) Inst_Lectura -> . INST_READ VAR_IDENTIFIER
    (89) Inst_For -> . INST_FOR VAR_IDENTIFIER INST_IN Rango INST_DO Bloque_Control
    (90) Inst_While -> . INST_WHILE Operacion_booleana INST_DO Bloque_Inst
    (91) Inst_While -> . INST_WHILE Operacion_booleana INST_DO Inst
    (82) Inst_If -> . INST_IF Operacion_booleana INST_THEN Bloque_Control
    (83) Inst_If -> . INST_IF Operacion_booleana INST_THEN Bloque_Control INST_ELSE Bloque_Control
    (84) Inst_Case -> . INST_CASE Operacion_binaria INST_OF Casos INST_END
    (74) Inst_Salida -> . INST_WRITE Lista_Aux
    (75) Inst_Salida -> . INST_WRITELN Lista_Aux
    (17) Inst_Funcion -> . RTOI LPAREN Rango RPAREN
    (18) Inst_Funcion -> . LENGTH LPAREN Rango RPAREN
    (19) Inst_Funcion -> . TOP LPAREN Rango RPAREN
    (20) Inst_Funcion -> . BOTTOM LPAREN Rango RPAREN
    (21) Inst_Funcion -> . RTOI LPAREN VAR_IDENTIFIER RPAREN
    (22) Inst_Funcion -> . LENGTH LPAREN VAR_IDENTIFIER RPAREN
    (23) Inst_Funcion -> . TOP LPAREN VAR_IDENTIFIER RPAREN
    (24) Inst_Funcion -> . BOTTOM LPAREN VAR_IDENTIFIER RPAREN
    (3) Bloque_Inst -> . INST_BEGIN Lista_Inst INST_END
    (4) Bloque_Inst -> . INST_BEGIN Inst_Declare Lista_Inst INST_END
    (5) Bloque_Inst -> . INST_BEGIN Inst_Declare INST_END

    VAR_IDENTIFIER  shift and go to state 16
    INST_READ       shift and go to state 9
    INST_FOR        shift and go to state 19
    INST_WHILE      shift and go to state 8
    INST_IF         shift and go to state 20
    INST_CASE       shift and go to state 18
    INST_WRITE      shift and go to state 4
    INST_WRITELN    shift and go to state 21
    RTOI            shift and go to state 23
    LENGTH          shift and go to state 22
    TOP             shift and go to state 5
    BOTTOM          shift and go to state 11
    INST_BEGIN      shift and go to state 10

    Inst_Salida                    shift and go to state 7
    Inst_Funcion                   shift and go to state 3
    Bloque_Inst                    shift and go to state 49
    Inst_If                        shift and go to state 17
    Inst_For                       shift and go to state 12
    Inst_While                     shift and go to state 14
    Inst                           shift and go to state 51
    Inst_Asignacion                shift and go to state 24
    Inst_Case                      shift and go to state 25
    Inst_Lectura                   shift and go to state 15
    Lista_Inst                     shift and go to state 148

state 104

    (3) Bloque_Inst -> INST_BEGIN Lista_Inst INST_END .

    $end            reduce using rule 3 (Bloque_Inst -> INST_BEGIN Lista_Inst INST_END .)
    SEMICOLON       reduce using rule 3 (Bloque_Inst -> INST_BEGIN Lista_Inst INST_END .)
    INST_END        reduce using rule 3 (Bloque_Inst -> INST_BEGIN Lista_Inst INST_END .)
    INST_ELSE       reduce using rule 3 (Bloque_Inst -> INST_BEGIN Lista_Inst INST_END .)


state 105

    (24) Inst_Funcion -> BOTTOM LPAREN VAR_IDENTIFIER . RPAREN
    (72) Rango -> VAR_IDENTIFIER .
    (63) Factor -> VAR_IDENTIFIER .

  ! shift/reduce conflict for RPAREN resolved as shift
  ! reduce/reduce conflict for TIMES resolved using rule 63 (Factor -> VAR_IDENTIFIER .)
  ! reduce/reduce conflict for PLUS resolved using rule 63 (Factor -> VAR_IDENTIFIER .)
    RPAREN          shift and go to state 149
    INTERSECTION    reduce using rule 72 (Rango -> VAR_IDENTIFIER .)
    TIMES           reduce using rule 63 (Factor -> VAR_IDENTIFIER .)
    DIVIDE          reduce using rule 63 (Factor -> VAR_IDENTIFIER .)
    MOD             reduce using rule 63 (Factor -> VAR_IDENTIFIER .)
    RANGE           reduce using rule 63 (Factor -> VAR_IDENTIFIER .)
    PLUS            reduce using rule 63 (Factor -> VAR_IDENTIFIER .)
    MINUS           reduce using rule 63 (Factor -> VAR_IDENTIFIER .)

  ! RPAREN          [ reduce using rule 72 (Rango -> VAR_IDENTIFIER .) ]
  ! PLUS            [ reduce using rule 72 (Rango -> VAR_IDENTIFIER .) ]
  ! TIMES           [ reduce using rule 72 (Rango -> VAR_IDENTIFIER .) ]


state 106

    (20) Inst_Funcion -> BOTTOM LPAREN Rango . RPAREN
    (68) Rango -> Rango . PLUS Rango
    (69) Rango -> Rango . TIMES Operacion_binaria
    (70) Rango -> Rango . INTERSECTION Rango

    RPAREN          shift and go to state 150
    PLUS            shift and go to state 77
    TIMES           shift and go to state 78
    INTERSECTION    shift and go to state 76


state 107

    (34) Inst_Asignacion -> VAR_IDENTIFIER EQUAL Expresion .

    SEMICOLON       reduce using rule 34 (Inst_Asignacion -> VAR_IDENTIFIER EQUAL Expresion .)
    INST_END        reduce using rule 34 (Inst_Asignacion -> VAR_IDENTIFIER EQUAL Expresion .)
    $end            reduce using rule 34 (Inst_Asignacion -> VAR_IDENTIFIER EQUAL Expresion .)
    INST_ELSE       reduce using rule 34 (Inst_Asignacion -> VAR_IDENTIFIER EQUAL Expresion .)


state 108

    (64) Factor -> LPAREN Operacion_binaria . RPAREN
    (55) Operacion_binaria -> Operacion_binaria . PLUS Term
    (56) Operacion_binaria -> Operacion_binaria . MINUS Term

    RPAREN          shift and go to state 127
    PLUS            shift and go to state 87
    MINUS           shift and go to state 89


state 109

    (84) Inst_Case -> INST_CASE Operacion_binaria INST_OF . Casos INST_END
    (85) Casos -> . VAR_IDENTIFIER CASE_ASSIGN Bloque_Control SEMICOLON
    (86) Casos -> . Rango CASE_ASSIGN Bloque_Control SEMICOLON
    (87) Casos -> . VAR_IDENTIFIER CASE_ASSIGN Bloque_Control SEMICOLON Casos
    (88) Casos -> . Rango CASE_ASSIGN Bloque_Control SEMICOLON Casos
    (67) Rango -> . Operacion_binaria RANGE Operacion_binaria
    (68) Rango -> . Rango PLUS Rango
    (69) Rango -> . Rango TIMES Operacion_binaria
    (70) Rango -> . Rango INTERSECTION Rango
    (71) Rango -> . LPAREN Rango RPAREN
    (72) Rango -> . VAR_IDENTIFIER
    (55) Operacion_binaria -> . Operacion_binaria PLUS Term
    (56) Operacion_binaria -> . Operacion_binaria MINUS Term
    (57) Operacion_binaria -> . Term
    (58) Term -> . Term TIMES Factor
    (59) Term -> . Term DIVIDE Factor
    (60) Term -> . Term MOD Factor
    (61) Term -> . Factor
    (62) Factor -> . NUMBER
    (63) Factor -> . VAR_IDENTIFIER
    (64) Factor -> . LPAREN Operacion_binaria RPAREN
    (65) Factor -> . Inst_Funcion
    (66) Factor -> . MINUS Factor
    (17) Inst_Funcion -> . RTOI LPAREN Rango RPAREN
    (18) Inst_Funcion -> . LENGTH LPAREN Rango RPAREN
    (19) Inst_Funcion -> . TOP LPAREN Rango RPAREN
    (20) Inst_Funcion -> . BOTTOM LPAREN Rango RPAREN
    (21) Inst_Funcion -> . RTOI LPAREN VAR_IDENTIFIER RPAREN
    (22) Inst_Funcion -> . LENGTH LPAREN VAR_IDENTIFIER RPAREN
    (23) Inst_Funcion -> . TOP LPAREN VAR_IDENTIFIER RPAREN
    (24) Inst_Funcion -> . BOTTOM LPAREN VAR_IDENTIFIER RPAREN

    VAR_IDENTIFIER  shift and go to state 152
    LPAREN          shift and go to state 93
    NUMBER          shift and go to state 28
    MINUS           shift and go to state 31
    RTOI            shift and go to state 23
    LENGTH          shift and go to state 22
    TOP             shift and go to state 5
    BOTTOM          shift and go to state 11

    Operacion_binaria              shift and go to state 91
    Inst_Funcion                   shift and go to state 26
    Term                           shift and go to state 34
    Factor                         shift and go to state 27
    Rango                          shift and go to state 153
    Casos                          shift and go to state 151

state 110

    (89) Inst_For -> INST_FOR VAR_IDENTIFIER INST_IN . Rango INST_DO Bloque_Control
    (67) Rango -> . Operacion_binaria RANGE Operacion_binaria
    (68) Rango -> . Rango PLUS Rango
    (69) Rango -> . Rango TIMES Operacion_binaria
    (70) Rango -> . Rango INTERSECTION Rango
    (71) Rango -> . LPAREN Rango RPAREN
    (72) Rango -> . VAR_IDENTIFIER
    (55) Operacion_binaria -> . Operacion_binaria PLUS Term
    (56) Operacion_binaria -> . Operacion_binaria MINUS Term
    (57) Operacion_binaria -> . Term
    (58) Term -> . Term TIMES Factor
    (59) Term -> . Term DIVIDE Factor
    (60) Term -> . Term MOD Factor
    (61) Term -> . Factor
    (62) Factor -> . NUMBER
    (63) Factor -> . VAR_IDENTIFIER
    (64) Factor -> . LPAREN Operacion_binaria RPAREN
    (65) Factor -> . Inst_Funcion
    (66) Factor -> . MINUS Factor
    (17) Inst_Funcion -> . RTOI LPAREN Rango RPAREN
    (18) Inst_Funcion -> . LENGTH LPAREN Rango RPAREN
    (19) Inst_Funcion -> . TOP LPAREN Rango RPAREN
    (20) Inst_Funcion -> . BOTTOM LPAREN Rango RPAREN
    (21) Inst_Funcion -> . RTOI LPAREN VAR_IDENTIFIER RPAREN
    (22) Inst_Funcion -> . LENGTH LPAREN VAR_IDENTIFIER RPAREN
    (23) Inst_Funcion -> . TOP LPAREN VAR_IDENTIFIER RPAREN
    (24) Inst_Funcion -> . BOTTOM LPAREN VAR_IDENTIFIER RPAREN

    LPAREN          shift and go to state 93
    VAR_IDENTIFIER  shift and go to state 128
    NUMBER          shift and go to state 28
    MINUS           shift and go to state 31
    RTOI            shift and go to state 23
    LENGTH          shift and go to state 22
    TOP             shift and go to state 5
    BOTTOM          shift and go to state 11

    Operacion_binaria              shift and go to state 91
    Inst_Funcion                   shift and go to state 26
    Term                           shift and go to state 34
    Factor                         shift and go to state 27
    Rango                          shift and go to state 154

state 111

    (82) Inst_If -> INST_IF Operacion_booleana INST_THEN . Bloque_Control
    (83) Inst_If -> INST_IF Operacion_booleana INST_THEN . Bloque_Control INST_ELSE Bloque_Control
    (80) Bloque_Control -> . Inst
    (81) Bloque_Control -> . Bloque_Inst
    (8) Inst -> . Inst_Asignacion
    (9) Inst -> . Inst_Lectura
    (10) Inst -> . Inst_For
    (11) Inst -> . Inst_While
    (12) Inst -> . Inst_If
    (13) Inst -> . Inst_Case
    (14) Inst -> . Inst_Salida
    (15) Inst -> . Inst_Funcion
    (16) Inst -> . Bloque_Inst
    (3) Bloque_Inst -> . INST_BEGIN Lista_Inst INST_END
    (4) Bloque_Inst -> . INST_BEGIN Inst_Declare Lista_Inst INST_END
    (5) Bloque_Inst -> . INST_BEGIN Inst_Declare INST_END
    (34) Inst_Asignacion -> . VAR_IDENTIFIER EQUAL Expresion
    (73) Inst_Lectura -> . INST_READ VAR_IDENTIFIER
    (89) Inst_For -> . INST_FOR VAR_IDENTIFIER INST_IN Rango INST_DO Bloque_Control
    (90) Inst_While -> . INST_WHILE Operacion_booleana INST_DO Bloque_Inst
    (91) Inst_While -> . INST_WHILE Operacion_booleana INST_DO Inst
    (82) Inst_If -> . INST_IF Operacion_booleana INST_THEN Bloque_Control
    (83) Inst_If -> . INST_IF Operacion_booleana INST_THEN Bloque_Control INST_ELSE Bloque_Control
    (84) Inst_Case -> . INST_CASE Operacion_binaria INST_OF Casos INST_END
    (74) Inst_Salida -> . INST_WRITE Lista_Aux
    (75) Inst_Salida -> . INST_WRITELN Lista_Aux
    (17) Inst_Funcion -> . RTOI LPAREN Rango RPAREN
    (18) Inst_Funcion -> . LENGTH LPAREN Rango RPAREN
    (19) Inst_Funcion -> . TOP LPAREN Rango RPAREN
    (20) Inst_Funcion -> . BOTTOM LPAREN Rango RPAREN
    (21) Inst_Funcion -> . RTOI LPAREN VAR_IDENTIFIER RPAREN
    (22) Inst_Funcion -> . LENGTH LPAREN VAR_IDENTIFIER RPAREN
    (23) Inst_Funcion -> . TOP LPAREN VAR_IDENTIFIER RPAREN
    (24) Inst_Funcion -> . BOTTOM LPAREN VAR_IDENTIFIER RPAREN

    INST_BEGIN      shift and go to state 10
    VAR_IDENTIFIER  shift and go to state 16
    INST_READ       shift and go to state 9
    INST_FOR        shift and go to state 19
    INST_WHILE      shift and go to state 8
    INST_IF         shift and go to state 20
    INST_CASE       shift and go to state 18
    INST_WRITE      shift and go to state 4
    INST_WRITELN    shift and go to state 21
    RTOI            shift and go to state 23
    LENGTH          shift and go to state 22
    TOP             shift and go to state 5
    BOTTOM          shift and go to state 11

    Bloque_Control                 shift and go to state 156
    Inst_Salida                    shift and go to state 7
    Inst_Funcion                   shift and go to state 3
    Bloque_Inst                    shift and go to state 155
    Inst_If                        shift and go to state 17
    Inst_For                       shift and go to state 12
    Inst_While                     shift and go to state 14
    Inst                           shift and go to state 157
    Inst_Asignacion                shift and go to state 24
    Inst_Case                      shift and go to state 25
    Inst_Lectura                   shift and go to state 15

state 112

    (22) Inst_Funcion -> LENGTH LPAREN VAR_IDENTIFIER . RPAREN
    (72) Rango -> VAR_IDENTIFIER .
    (63) Factor -> VAR_IDENTIFIER .

  ! shift/reduce conflict for RPAREN resolved as shift
  ! reduce/reduce conflict for TIMES resolved using rule 63 (Factor -> VAR_IDENTIFIER .)
  ! reduce/reduce conflict for PLUS resolved using rule 63 (Factor -> VAR_IDENTIFIER .)
    RPAREN          shift and go to state 158
    INTERSECTION    reduce using rule 72 (Rango -> VAR_IDENTIFIER .)
    TIMES           reduce using rule 63 (Factor -> VAR_IDENTIFIER .)
    DIVIDE          reduce using rule 63 (Factor -> VAR_IDENTIFIER .)
    MOD             reduce using rule 63 (Factor -> VAR_IDENTIFIER .)
    RANGE           reduce using rule 63 (Factor -> VAR_IDENTIFIER .)
    PLUS            reduce using rule 63 (Factor -> VAR_IDENTIFIER .)
    MINUS           reduce using rule 63 (Factor -> VAR_IDENTIFIER .)

  ! RPAREN          [ reduce using rule 72 (Rango -> VAR_IDENTIFIER .) ]
  ! PLUS            [ reduce using rule 72 (Rango -> VAR_IDENTIFIER .) ]
  ! TIMES           [ reduce using rule 72 (Rango -> VAR_IDENTIFIER .) ]


state 113

    (18) Inst_Funcion -> LENGTH LPAREN Rango . RPAREN
    (68) Rango -> Rango . PLUS Rango
    (69) Rango -> Rango . TIMES Operacion_binaria
    (70) Rango -> Rango . INTERSECTION Rango

    RPAREN          shift and go to state 159
    PLUS            shift and go to state 77
    TIMES           shift and go to state 78
    INTERSECTION    shift and go to state 76


state 114

    (21) Inst_Funcion -> RTOI LPAREN VAR_IDENTIFIER . RPAREN
    (72) Rango -> VAR_IDENTIFIER .
    (63) Factor -> VAR_IDENTIFIER .

  ! shift/reduce conflict for RPAREN resolved as shift
  ! reduce/reduce conflict for TIMES resolved using rule 63 (Factor -> VAR_IDENTIFIER .)
  ! reduce/reduce conflict for PLUS resolved using rule 63 (Factor -> VAR_IDENTIFIER .)
    RPAREN          shift and go to state 160
    INTERSECTION    reduce using rule 72 (Rango -> VAR_IDENTIFIER .)
    TIMES           reduce using rule 63 (Factor -> VAR_IDENTIFIER .)
    DIVIDE          reduce using rule 63 (Factor -> VAR_IDENTIFIER .)
    MOD             reduce using rule 63 (Factor -> VAR_IDENTIFIER .)
    RANGE           reduce using rule 63 (Factor -> VAR_IDENTIFIER .)
    PLUS            reduce using rule 63 (Factor -> VAR_IDENTIFIER .)
    MINUS           reduce using rule 63 (Factor -> VAR_IDENTIFIER .)

  ! RPAREN          [ reduce using rule 72 (Rango -> VAR_IDENTIFIER .) ]
  ! PLUS            [ reduce using rule 72 (Rango -> VAR_IDENTIFIER .) ]
  ! TIMES           [ reduce using rule 72 (Rango -> VAR_IDENTIFIER .) ]


state 115

    (17) Inst_Funcion -> RTOI LPAREN Rango . RPAREN
    (68) Rango -> Rango . PLUS Rango
    (69) Rango -> Rango . TIMES Operacion_binaria
    (70) Rango -> Rango . INTERSECTION Rango

    RPAREN          shift and go to state 161
    PLUS            shift and go to state 77
    TIMES           shift and go to state 78
    INTERSECTION    shift and go to state 76


state 116

    (39) Operacion_booleana -> Operacion_booleana AND Operacion_booleana .
    (39) Operacion_booleana -> Operacion_booleana . AND Operacion_booleana
    (40) Operacion_booleana -> Operacion_booleana . OR Operacion_booleana
    (43) Operacion_booleana -> Operacion_booleana . EQEQ Operacion_booleana
    (44) Operacion_booleana -> Operacion_booleana . NEQEQ Operacion_booleana

    AND             reduce using rule 39 (Operacion_booleana -> Operacion_booleana AND Operacion_booleana .)
    OR              reduce using rule 39 (Operacion_booleana -> Operacion_booleana AND Operacion_booleana .)
    COMMA           reduce using rule 39 (Operacion_booleana -> Operacion_booleana AND Operacion_booleana .)
    $end            reduce using rule 39 (Operacion_booleana -> Operacion_booleana AND Operacion_booleana .)
    SEMICOLON       reduce using rule 39 (Operacion_booleana -> Operacion_booleana AND Operacion_booleana .)
    INST_END        reduce using rule 39 (Operacion_booleana -> Operacion_booleana AND Operacion_booleana .)
    INST_ELSE       reduce using rule 39 (Operacion_booleana -> Operacion_booleana AND Operacion_booleana .)
    INST_DO         reduce using rule 39 (Operacion_booleana -> Operacion_booleana AND Operacion_booleana .)
    INST_THEN       reduce using rule 39 (Operacion_booleana -> Operacion_booleana AND Operacion_booleana .)
    RPAREN          reduce using rule 39 (Operacion_booleana -> Operacion_booleana AND Operacion_booleana .)
    EQEQ            shift and go to state 65
    NEQEQ           shift and go to state 67

  ! EQEQ            [ reduce using rule 39 (Operacion_booleana -> Operacion_booleana AND Operacion_booleana .) ]
  ! NEQEQ           [ reduce using rule 39 (Operacion_booleana -> Operacion_booleana AND Operacion_booleana .) ]
  ! AND             [ shift and go to state 64 ]
  ! OR              [ shift and go to state 66 ]


state 117

    (43) Operacion_booleana -> Operacion_booleana EQEQ Operacion_booleana .
    (39) Operacion_booleana -> Operacion_booleana . AND Operacion_booleana
    (40) Operacion_booleana -> Operacion_booleana . OR Operacion_booleana
    (43) Operacion_booleana -> Operacion_booleana . EQEQ Operacion_booleana
    (44) Operacion_booleana -> Operacion_booleana . NEQEQ Operacion_booleana

    AND             reduce using rule 43 (Operacion_booleana -> Operacion_booleana EQEQ Operacion_booleana .)
    OR              reduce using rule 43 (Operacion_booleana -> Operacion_booleana EQEQ Operacion_booleana .)
    EQEQ            reduce using rule 43 (Operacion_booleana -> Operacion_booleana EQEQ Operacion_booleana .)
    NEQEQ           reduce using rule 43 (Operacion_booleana -> Operacion_booleana EQEQ Operacion_booleana .)
    COMMA           reduce using rule 43 (Operacion_booleana -> Operacion_booleana EQEQ Operacion_booleana .)
    $end            reduce using rule 43 (Operacion_booleana -> Operacion_booleana EQEQ Operacion_booleana .)
    SEMICOLON       reduce using rule 43 (Operacion_booleana -> Operacion_booleana EQEQ Operacion_booleana .)
    INST_END        reduce using rule 43 (Operacion_booleana -> Operacion_booleana EQEQ Operacion_booleana .)
    INST_ELSE       reduce using rule 43 (Operacion_booleana -> Operacion_booleana EQEQ Operacion_booleana .)
    INST_DO         reduce using rule 43 (Operacion_booleana -> Operacion_booleana EQEQ Operacion_booleana .)
    INST_THEN       reduce using rule 43 (Operacion_booleana -> Operacion_booleana EQEQ Operacion_booleana .)
    RPAREN          reduce using rule 43 (Operacion_booleana -> Operacion_booleana EQEQ Operacion_booleana .)

  ! AND             [ shift and go to state 64 ]
  ! OR              [ shift and go to state 66 ]
  ! EQEQ            [ shift and go to state 65 ]
  ! NEQEQ           [ shift and go to state 67 ]


state 118

    (40) Operacion_booleana -> Operacion_booleana OR Operacion_booleana .
    (39) Operacion_booleana -> Operacion_booleana . AND Operacion_booleana
    (40) Operacion_booleana -> Operacion_booleana . OR Operacion_booleana
    (43) Operacion_booleana -> Operacion_booleana . EQEQ Operacion_booleana
    (44) Operacion_booleana -> Operacion_booleana . NEQEQ Operacion_booleana

    OR              reduce using rule 40 (Operacion_booleana -> Operacion_booleana OR Operacion_booleana .)
    COMMA           reduce using rule 40 (Operacion_booleana -> Operacion_booleana OR Operacion_booleana .)
    $end            reduce using rule 40 (Operacion_booleana -> Operacion_booleana OR Operacion_booleana .)
    SEMICOLON       reduce using rule 40 (Operacion_booleana -> Operacion_booleana OR Operacion_booleana .)
    INST_END        reduce using rule 40 (Operacion_booleana -> Operacion_booleana OR Operacion_booleana .)
    INST_ELSE       reduce using rule 40 (Operacion_booleana -> Operacion_booleana OR Operacion_booleana .)
    INST_DO         reduce using rule 40 (Operacion_booleana -> Operacion_booleana OR Operacion_booleana .)
    INST_THEN       reduce using rule 40 (Operacion_booleana -> Operacion_booleana OR Operacion_booleana .)
    RPAREN          reduce using rule 40 (Operacion_booleana -> Operacion_booleana OR Operacion_booleana .)
    AND             shift and go to state 64
    EQEQ            shift and go to state 65
    NEQEQ           shift and go to state 67

  ! AND             [ reduce using rule 40 (Operacion_booleana -> Operacion_booleana OR Operacion_booleana .) ]
  ! EQEQ            [ reduce using rule 40 (Operacion_booleana -> Operacion_booleana OR Operacion_booleana .) ]
  ! NEQEQ           [ reduce using rule 40 (Operacion_booleana -> Operacion_booleana OR Operacion_booleana .) ]
  ! OR              [ shift and go to state 66 ]


state 119

    (44) Operacion_booleana -> Operacion_booleana NEQEQ Operacion_booleana .
    (39) Operacion_booleana -> Operacion_booleana . AND Operacion_booleana
    (40) Operacion_booleana -> Operacion_booleana . OR Operacion_booleana
    (43) Operacion_booleana -> Operacion_booleana . EQEQ Operacion_booleana
    (44) Operacion_booleana -> Operacion_booleana . NEQEQ Operacion_booleana

    AND             reduce using rule 44 (Operacion_booleana -> Operacion_booleana NEQEQ Operacion_booleana .)
    OR              reduce using rule 44 (Operacion_booleana -> Operacion_booleana NEQEQ Operacion_booleana .)
    EQEQ            reduce using rule 44 (Operacion_booleana -> Operacion_booleana NEQEQ Operacion_booleana .)
    NEQEQ           reduce using rule 44 (Operacion_booleana -> Operacion_booleana NEQEQ Operacion_booleana .)
    COMMA           reduce using rule 44 (Operacion_booleana -> Operacion_booleana NEQEQ Operacion_booleana .)
    $end            reduce using rule 44 (Operacion_booleana -> Operacion_booleana NEQEQ Operacion_booleana .)
    SEMICOLON       reduce using rule 44 (Operacion_booleana -> Operacion_booleana NEQEQ Operacion_booleana .)
    INST_END        reduce using rule 44 (Operacion_booleana -> Operacion_booleana NEQEQ Operacion_booleana .)
    INST_ELSE       reduce using rule 44 (Operacion_booleana -> Operacion_booleana NEQEQ Operacion_booleana .)
    INST_DO         reduce using rule 44 (Operacion_booleana -> Operacion_booleana NEQEQ Operacion_booleana .)
    INST_THEN       reduce using rule 44 (Operacion_booleana -> Operacion_booleana NEQEQ Operacion_booleana .)
    RPAREN          reduce using rule 44 (Operacion_booleana -> Operacion_booleana NEQEQ Operacion_booleana .)

  ! AND             [ shift and go to state 64 ]
  ! OR              [ shift and go to state 66 ]
  ! EQEQ            [ shift and go to state 65 ]
  ! NEQEQ           [ shift and go to state 67 ]


state 120

    (78) Lista_Aux -> Expresion COMMA Lista_Aux .

    $end            reduce using rule 78 (Lista_Aux -> Expresion COMMA Lista_Aux .)
    SEMICOLON       reduce using rule 78 (Lista_Aux -> Expresion COMMA Lista_Aux .)
    INST_END        reduce using rule 78 (Lista_Aux -> Expresion COMMA Lista_Aux .)
    INST_ELSE       reduce using rule 78 (Lista_Aux -> Expresion COMMA Lista_Aux .)


state 121

    (59) Term -> Term DIVIDE Factor .

    TIMES           reduce using rule 59 (Term -> Term DIVIDE Factor .)
    DIVIDE          reduce using rule 59 (Term -> Term DIVIDE Factor .)
    MOD             reduce using rule 59 (Term -> Term DIVIDE Factor .)
    INST_OF         reduce using rule 59 (Term -> Term DIVIDE Factor .)
    PLUS            reduce using rule 59 (Term -> Term DIVIDE Factor .)
    MINUS           reduce using rule 59 (Term -> Term DIVIDE Factor .)
    IN              reduce using rule 59 (Term -> Term DIVIDE Factor .)
    EQEQ            reduce using rule 59 (Term -> Term DIVIDE Factor .)
    NEQEQ           reduce using rule 59 (Term -> Term DIVIDE Factor .)
    RANGE           reduce using rule 59 (Term -> Term DIVIDE Factor .)
    GREAT           reduce using rule 59 (Term -> Term DIVIDE Factor .)
    LESS            reduce using rule 59 (Term -> Term DIVIDE Factor .)
    GREATEQ         reduce using rule 59 (Term -> Term DIVIDE Factor .)
    LESSEQ          reduce using rule 59 (Term -> Term DIVIDE Factor .)
    $end            reduce using rule 59 (Term -> Term DIVIDE Factor .)
    SEMICOLON       reduce using rule 59 (Term -> Term DIVIDE Factor .)
    INST_END        reduce using rule 59 (Term -> Term DIVIDE Factor .)
    INST_ELSE       reduce using rule 59 (Term -> Term DIVIDE Factor .)
    COMMA           reduce using rule 59 (Term -> Term DIVIDE Factor .)
    RPAREN          reduce using rule 59 (Term -> Term DIVIDE Factor .)
    INTERSECTION    reduce using rule 59 (Term -> Term DIVIDE Factor .)
    AND             reduce using rule 59 (Term -> Term DIVIDE Factor .)
    OR              reduce using rule 59 (Term -> Term DIVIDE Factor .)
    INST_DO         reduce using rule 59 (Term -> Term DIVIDE Factor .)
    INST_THEN       reduce using rule 59 (Term -> Term DIVIDE Factor .)
    CASE_ASSIGN     reduce using rule 59 (Term -> Term DIVIDE Factor .)


state 122

    (60) Term -> Term MOD Factor .

    TIMES           reduce using rule 60 (Term -> Term MOD Factor .)
    DIVIDE          reduce using rule 60 (Term -> Term MOD Factor .)
    MOD             reduce using rule 60 (Term -> Term MOD Factor .)
    INST_OF         reduce using rule 60 (Term -> Term MOD Factor .)
    PLUS            reduce using rule 60 (Term -> Term MOD Factor .)
    MINUS           reduce using rule 60 (Term -> Term MOD Factor .)
    IN              reduce using rule 60 (Term -> Term MOD Factor .)
    EQEQ            reduce using rule 60 (Term -> Term MOD Factor .)
    NEQEQ           reduce using rule 60 (Term -> Term MOD Factor .)
    RANGE           reduce using rule 60 (Term -> Term MOD Factor .)
    GREAT           reduce using rule 60 (Term -> Term MOD Factor .)
    LESS            reduce using rule 60 (Term -> Term MOD Factor .)
    GREATEQ         reduce using rule 60 (Term -> Term MOD Factor .)
    LESSEQ          reduce using rule 60 (Term -> Term MOD Factor .)
    $end            reduce using rule 60 (Term -> Term MOD Factor .)
    SEMICOLON       reduce using rule 60 (Term -> Term MOD Factor .)
    INST_END        reduce using rule 60 (Term -> Term MOD Factor .)
    INST_ELSE       reduce using rule 60 (Term -> Term MOD Factor .)
    COMMA           reduce using rule 60 (Term -> Term MOD Factor .)
    RPAREN          reduce using rule 60 (Term -> Term MOD Factor .)
    INTERSECTION    reduce using rule 60 (Term -> Term MOD Factor .)
    AND             reduce using rule 60 (Term -> Term MOD Factor .)
    OR              reduce using rule 60 (Term -> Term MOD Factor .)
    INST_DO         reduce using rule 60 (Term -> Term MOD Factor .)
    INST_THEN       reduce using rule 60 (Term -> Term MOD Factor .)
    CASE_ASSIGN     reduce using rule 60 (Term -> Term MOD Factor .)


state 123

    (58) Term -> Term TIMES Factor .

    TIMES           reduce using rule 58 (Term -> Term TIMES Factor .)
    DIVIDE          reduce using rule 58 (Term -> Term TIMES Factor .)
    MOD             reduce using rule 58 (Term -> Term TIMES Factor .)
    INST_OF         reduce using rule 58 (Term -> Term TIMES Factor .)
    PLUS            reduce using rule 58 (Term -> Term TIMES Factor .)
    MINUS           reduce using rule 58 (Term -> Term TIMES Factor .)
    IN              reduce using rule 58 (Term -> Term TIMES Factor .)
    EQEQ            reduce using rule 58 (Term -> Term TIMES Factor .)
    NEQEQ           reduce using rule 58 (Term -> Term TIMES Factor .)
    RANGE           reduce using rule 58 (Term -> Term TIMES Factor .)
    GREAT           reduce using rule 58 (Term -> Term TIMES Factor .)
    LESS            reduce using rule 58 (Term -> Term TIMES Factor .)
    GREATEQ         reduce using rule 58 (Term -> Term TIMES Factor .)
    LESSEQ          reduce using rule 58 (Term -> Term TIMES Factor .)
    $end            reduce using rule 58 (Term -> Term TIMES Factor .)
    SEMICOLON       reduce using rule 58 (Term -> Term TIMES Factor .)
    INST_END        reduce using rule 58 (Term -> Term TIMES Factor .)
    INST_ELSE       reduce using rule 58 (Term -> Term TIMES Factor .)
    COMMA           reduce using rule 58 (Term -> Term TIMES Factor .)
    RPAREN          reduce using rule 58 (Term -> Term TIMES Factor .)
    INTERSECTION    reduce using rule 58 (Term -> Term TIMES Factor .)
    AND             reduce using rule 58 (Term -> Term TIMES Factor .)
    OR              reduce using rule 58 (Term -> Term TIMES Factor .)
    INST_DO         reduce using rule 58 (Term -> Term TIMES Factor .)
    INST_THEN       reduce using rule 58 (Term -> Term TIMES Factor .)
    CASE_ASSIGN     reduce using rule 58 (Term -> Term TIMES Factor .)


state 124

    (79) Lista_Aux -> STRING COMMA Lista_Aux .

    $end            reduce using rule 79 (Lista_Aux -> STRING COMMA Lista_Aux .)
    SEMICOLON       reduce using rule 79 (Lista_Aux -> STRING COMMA Lista_Aux .)
    INST_END        reduce using rule 79 (Lista_Aux -> STRING COMMA Lista_Aux .)
    INST_ELSE       reduce using rule 79 (Lista_Aux -> STRING COMMA Lista_Aux .)


state 125

    (42) Operacion_booleana -> LPAREN Operacion_booleana RPAREN .

    AND             reduce using rule 42 (Operacion_booleana -> LPAREN Operacion_booleana RPAREN .)
    OR              reduce using rule 42 (Operacion_booleana -> LPAREN Operacion_booleana RPAREN .)
    EQEQ            reduce using rule 42 (Operacion_booleana -> LPAREN Operacion_booleana RPAREN .)
    NEQEQ           reduce using rule 42 (Operacion_booleana -> LPAREN Operacion_booleana RPAREN .)
    COMMA           reduce using rule 42 (Operacion_booleana -> LPAREN Operacion_booleana RPAREN .)
    $end            reduce using rule 42 (Operacion_booleana -> LPAREN Operacion_booleana RPAREN .)
    SEMICOLON       reduce using rule 42 (Operacion_booleana -> LPAREN Operacion_booleana RPAREN .)
    INST_END        reduce using rule 42 (Operacion_booleana -> LPAREN Operacion_booleana RPAREN .)
    INST_ELSE       reduce using rule 42 (Operacion_booleana -> LPAREN Operacion_booleana RPAREN .)
    INST_DO         reduce using rule 42 (Operacion_booleana -> LPAREN Operacion_booleana RPAREN .)
    INST_THEN       reduce using rule 42 (Operacion_booleana -> LPAREN Operacion_booleana RPAREN .)
    RPAREN          reduce using rule 42 (Operacion_booleana -> LPAREN Operacion_booleana RPAREN .)


state 126

    (71) Rango -> LPAREN Rango RPAREN .

    CASE_ASSIGN     reduce using rule 71 (Rango -> LPAREN Rango RPAREN .)
    PLUS            reduce using rule 71 (Rango -> LPAREN Rango RPAREN .)
    TIMES           reduce using rule 71 (Rango -> LPAREN Rango RPAREN .)
    INTERSECTION    reduce using rule 71 (Rango -> LPAREN Rango RPAREN .)
    COMMA           reduce using rule 71 (Rango -> LPAREN Rango RPAREN .)
    $end            reduce using rule 71 (Rango -> LPAREN Rango RPAREN .)
    SEMICOLON       reduce using rule 71 (Rango -> LPAREN Rango RPAREN .)
    INST_END        reduce using rule 71 (Rango -> LPAREN Rango RPAREN .)
    INST_ELSE       reduce using rule 71 (Rango -> LPAREN Rango RPAREN .)
    RPAREN          reduce using rule 71 (Rango -> LPAREN Rango RPAREN .)
    AND             reduce using rule 71 (Rango -> LPAREN Rango RPAREN .)
    OR              reduce using rule 71 (Rango -> LPAREN Rango RPAREN .)
    EQEQ            reduce using rule 71 (Rango -> LPAREN Rango RPAREN .)
    NEQEQ           reduce using rule 71 (Rango -> LPAREN Rango RPAREN .)
    INST_DO         reduce using rule 71 (Rango -> LPAREN Rango RPAREN .)
    INST_THEN       reduce using rule 71 (Rango -> LPAREN Rango RPAREN .)


state 127

    (64) Factor -> LPAREN Operacion_binaria RPAREN .

    TIMES           reduce using rule 64 (Factor -> LPAREN Operacion_binaria RPAREN .)
    DIVIDE          reduce using rule 64 (Factor -> LPAREN Operacion_binaria RPAREN .)
    MOD             reduce using rule 64 (Factor -> LPAREN Operacion_binaria RPAREN .)
    RPAREN          reduce using rule 64 (Factor -> LPAREN Operacion_binaria RPAREN .)
    IN              reduce using rule 64 (Factor -> LPAREN Operacion_binaria RPAREN .)
    EQEQ            reduce using rule 64 (Factor -> LPAREN Operacion_binaria RPAREN .)
    NEQEQ           reduce using rule 64 (Factor -> LPAREN Operacion_binaria RPAREN .)
    PLUS            reduce using rule 64 (Factor -> LPAREN Operacion_binaria RPAREN .)
    MINUS           reduce using rule 64 (Factor -> LPAREN Operacion_binaria RPAREN .)
    GREAT           reduce using rule 64 (Factor -> LPAREN Operacion_binaria RPAREN .)
    LESS            reduce using rule 64 (Factor -> LPAREN Operacion_binaria RPAREN .)
    GREATEQ         reduce using rule 64 (Factor -> LPAREN Operacion_binaria RPAREN .)
    LESSEQ          reduce using rule 64 (Factor -> LPAREN Operacion_binaria RPAREN .)
    RANGE           reduce using rule 64 (Factor -> LPAREN Operacion_binaria RPAREN .)
    COMMA           reduce using rule 64 (Factor -> LPAREN Operacion_binaria RPAREN .)
    $end            reduce using rule 64 (Factor -> LPAREN Operacion_binaria RPAREN .)
    SEMICOLON       reduce using rule 64 (Factor -> LPAREN Operacion_binaria RPAREN .)
    INST_END        reduce using rule 64 (Factor -> LPAREN Operacion_binaria RPAREN .)
    INST_ELSE       reduce using rule 64 (Factor -> LPAREN Operacion_binaria RPAREN .)
    INST_OF         reduce using rule 64 (Factor -> LPAREN Operacion_binaria RPAREN .)
    INTERSECTION    reduce using rule 64 (Factor -> LPAREN Operacion_binaria RPAREN .)
    AND             reduce using rule 64 (Factor -> LPAREN Operacion_binaria RPAREN .)
    OR              reduce using rule 64 (Factor -> LPAREN Operacion_binaria RPAREN .)
    INST_DO         reduce using rule 64 (Factor -> LPAREN Operacion_binaria RPAREN .)
    INST_THEN       reduce using rule 64 (Factor -> LPAREN Operacion_binaria RPAREN .)
    CASE_ASSIGN     reduce using rule 64 (Factor -> LPAREN Operacion_binaria RPAREN .)


state 128

    (72) Rango -> VAR_IDENTIFIER .
    (63) Factor -> VAR_IDENTIFIER .

  ! reduce/reduce conflict for TIMES resolved using rule 63 (Factor -> VAR_IDENTIFIER .)
  ! reduce/reduce conflict for PLUS resolved using rule 63 (Factor -> VAR_IDENTIFIER .)
  ! reduce/reduce conflict for RPAREN resolved using rule 63 (Factor -> VAR_IDENTIFIER .)
    INTERSECTION    reduce using rule 72 (Rango -> VAR_IDENTIFIER .)
    COMMA           reduce using rule 72 (Rango -> VAR_IDENTIFIER .)
    $end            reduce using rule 72 (Rango -> VAR_IDENTIFIER .)
    SEMICOLON       reduce using rule 72 (Rango -> VAR_IDENTIFIER .)
    INST_END        reduce using rule 72 (Rango -> VAR_IDENTIFIER .)
    INST_ELSE       reduce using rule 72 (Rango -> VAR_IDENTIFIER .)
    AND             reduce using rule 72 (Rango -> VAR_IDENTIFIER .)
    OR              reduce using rule 72 (Rango -> VAR_IDENTIFIER .)
    EQEQ            reduce using rule 72 (Rango -> VAR_IDENTIFIER .)
    NEQEQ           reduce using rule 72 (Rango -> VAR_IDENTIFIER .)
    INST_DO         reduce using rule 72 (Rango -> VAR_IDENTIFIER .)
    INST_THEN       reduce using rule 72 (Rango -> VAR_IDENTIFIER .)
    CASE_ASSIGN     reduce using rule 72 (Rango -> VAR_IDENTIFIER .)
    TIMES           reduce using rule 63 (Factor -> VAR_IDENTIFIER .)
    DIVIDE          reduce using rule 63 (Factor -> VAR_IDENTIFIER .)
    MOD             reduce using rule 63 (Factor -> VAR_IDENTIFIER .)
    RANGE           reduce using rule 63 (Factor -> VAR_IDENTIFIER .)
    PLUS            reduce using rule 63 (Factor -> VAR_IDENTIFIER .)
    MINUS           reduce using rule 63 (Factor -> VAR_IDENTIFIER .)
    RPAREN          reduce using rule 63 (Factor -> VAR_IDENTIFIER .)

  ! PLUS            [ reduce using rule 72 (Rango -> VAR_IDENTIFIER .) ]
  ! TIMES           [ reduce using rule 72 (Rango -> VAR_IDENTIFIER .) ]
  ! RPAREN          [ reduce using rule 72 (Rango -> VAR_IDENTIFIER .) ]


state 129

    (70) Rango -> Rango INTERSECTION Rango .
    (68) Rango -> Rango . PLUS Rango
    (69) Rango -> Rango . TIMES Operacion_binaria
    (70) Rango -> Rango . INTERSECTION Rango

    CASE_ASSIGN     reduce using rule 70 (Rango -> Rango INTERSECTION Rango .)
    INTERSECTION    reduce using rule 70 (Rango -> Rango INTERSECTION Rango .)
    COMMA           reduce using rule 70 (Rango -> Rango INTERSECTION Rango .)
    $end            reduce using rule 70 (Rango -> Rango INTERSECTION Rango .)
    SEMICOLON       reduce using rule 70 (Rango -> Rango INTERSECTION Rango .)
    INST_END        reduce using rule 70 (Rango -> Rango INTERSECTION Rango .)
    INST_ELSE       reduce using rule 70 (Rango -> Rango INTERSECTION Rango .)
    RPAREN          reduce using rule 70 (Rango -> Rango INTERSECTION Rango .)
    AND             reduce using rule 70 (Rango -> Rango INTERSECTION Rango .)
    OR              reduce using rule 70 (Rango -> Rango INTERSECTION Rango .)
    EQEQ            reduce using rule 70 (Rango -> Rango INTERSECTION Rango .)
    NEQEQ           reduce using rule 70 (Rango -> Rango INTERSECTION Rango .)
    INST_DO         reduce using rule 70 (Rango -> Rango INTERSECTION Rango .)
    INST_THEN       reduce using rule 70 (Rango -> Rango INTERSECTION Rango .)
    PLUS            shift and go to state 77
    TIMES           shift and go to state 78

  ! PLUS            [ reduce using rule 70 (Rango -> Rango INTERSECTION Rango .) ]
  ! TIMES           [ reduce using rule 70 (Rango -> Rango INTERSECTION Rango .) ]
  ! INTERSECTION    [ shift and go to state 76 ]


state 130

    (68) Rango -> Rango PLUS Rango .
    (68) Rango -> Rango . PLUS Rango
    (69) Rango -> Rango . TIMES Operacion_binaria
    (70) Rango -> Rango . INTERSECTION Rango

    CASE_ASSIGN     reduce using rule 68 (Rango -> Rango PLUS Rango .)
    PLUS            reduce using rule 68 (Rango -> Rango PLUS Rango .)
    INTERSECTION    reduce using rule 68 (Rango -> Rango PLUS Rango .)
    COMMA           reduce using rule 68 (Rango -> Rango PLUS Rango .)
    $end            reduce using rule 68 (Rango -> Rango PLUS Rango .)
    SEMICOLON       reduce using rule 68 (Rango -> Rango PLUS Rango .)
    INST_END        reduce using rule 68 (Rango -> Rango PLUS Rango .)
    INST_ELSE       reduce using rule 68 (Rango -> Rango PLUS Rango .)
    RPAREN          reduce using rule 68 (Rango -> Rango PLUS Rango .)
    AND             reduce using rule 68 (Rango -> Rango PLUS Rango .)
    OR              reduce using rule 68 (Rango -> Rango PLUS Rango .)
    EQEQ            reduce using rule 68 (Rango -> Rango PLUS Rango .)
    NEQEQ           reduce using rule 68 (Rango -> Rango PLUS Rango .)
    INST_DO         reduce using rule 68 (Rango -> Rango PLUS Rango .)
    INST_THEN       reduce using rule 68 (Rango -> Rango PLUS Rango .)
    TIMES           shift and go to state 78

  ! TIMES           [ reduce using rule 68 (Rango -> Rango PLUS Rango .) ]
  ! PLUS            [ shift and go to state 77 ]
  ! INTERSECTION    [ shift and go to state 76 ]


state 131

    (69) Rango -> Rango TIMES Operacion_binaria .
    (55) Operacion_binaria -> Operacion_binaria . PLUS Term
    (56) Operacion_binaria -> Operacion_binaria . MINUS Term

    CASE_ASSIGN     reduce using rule 69 (Rango -> Rango TIMES Operacion_binaria .)
    PLUS            reduce using rule 69 (Rango -> Rango TIMES Operacion_binaria .)
    TIMES           reduce using rule 69 (Rango -> Rango TIMES Operacion_binaria .)
    INTERSECTION    reduce using rule 69 (Rango -> Rango TIMES Operacion_binaria .)
    COMMA           reduce using rule 69 (Rango -> Rango TIMES Operacion_binaria .)
    $end            reduce using rule 69 (Rango -> Rango TIMES Operacion_binaria .)
    SEMICOLON       reduce using rule 69 (Rango -> Rango TIMES Operacion_binaria .)
    INST_END        reduce using rule 69 (Rango -> Rango TIMES Operacion_binaria .)
    INST_ELSE       reduce using rule 69 (Rango -> Rango TIMES Operacion_binaria .)
    RPAREN          reduce using rule 69 (Rango -> Rango TIMES Operacion_binaria .)
    AND             reduce using rule 69 (Rango -> Rango TIMES Operacion_binaria .)
    OR              reduce using rule 69 (Rango -> Rango TIMES Operacion_binaria .)
    EQEQ            reduce using rule 69 (Rango -> Rango TIMES Operacion_binaria .)
    NEQEQ           reduce using rule 69 (Rango -> Rango TIMES Operacion_binaria .)
    INST_DO         reduce using rule 69 (Rango -> Rango TIMES Operacion_binaria .)
    INST_THEN       reduce using rule 69 (Rango -> Rango TIMES Operacion_binaria .)
    MINUS           shift and go to state 89

  ! PLUS            [ shift and go to state 87 ]


state 132

    (46) Operacion_booleana -> Operacion_binaria NEQEQ Operacion_binaria .
    (55) Operacion_binaria -> Operacion_binaria . PLUS Term
    (56) Operacion_binaria -> Operacion_binaria . MINUS Term

    AND             reduce using rule 46 (Operacion_booleana -> Operacion_binaria NEQEQ Operacion_binaria .)
    OR              reduce using rule 46 (Operacion_booleana -> Operacion_binaria NEQEQ Operacion_binaria .)
    EQEQ            reduce using rule 46 (Operacion_booleana -> Operacion_binaria NEQEQ Operacion_binaria .)
    NEQEQ           reduce using rule 46 (Operacion_booleana -> Operacion_binaria NEQEQ Operacion_binaria .)
    COMMA           reduce using rule 46 (Operacion_booleana -> Operacion_binaria NEQEQ Operacion_binaria .)
    $end            reduce using rule 46 (Operacion_booleana -> Operacion_binaria NEQEQ Operacion_binaria .)
    SEMICOLON       reduce using rule 46 (Operacion_booleana -> Operacion_binaria NEQEQ Operacion_binaria .)
    INST_END        reduce using rule 46 (Operacion_booleana -> Operacion_binaria NEQEQ Operacion_binaria .)
    INST_ELSE       reduce using rule 46 (Operacion_booleana -> Operacion_binaria NEQEQ Operacion_binaria .)
    INST_DO         reduce using rule 46 (Operacion_booleana -> Operacion_binaria NEQEQ Operacion_binaria .)
    INST_THEN       reduce using rule 46 (Operacion_booleana -> Operacion_binaria NEQEQ Operacion_binaria .)
    RPAREN          reduce using rule 46 (Operacion_booleana -> Operacion_binaria NEQEQ Operacion_binaria .)
    PLUS            shift and go to state 87
    MINUS           shift and go to state 89


state 133

    (38) Operacion_booleana -> Operacion_binaria Opr_bool Operacion_binaria .
    (55) Operacion_binaria -> Operacion_binaria . PLUS Term
    (56) Operacion_binaria -> Operacion_binaria . MINUS Term

    AND             reduce using rule 38 (Operacion_booleana -> Operacion_binaria Opr_bool Operacion_binaria .)
    OR              reduce using rule 38 (Operacion_booleana -> Operacion_binaria Opr_bool Operacion_binaria .)
    EQEQ            reduce using rule 38 (Operacion_booleana -> Operacion_binaria Opr_bool Operacion_binaria .)
    NEQEQ           reduce using rule 38 (Operacion_booleana -> Operacion_binaria Opr_bool Operacion_binaria .)
    COMMA           reduce using rule 38 (Operacion_booleana -> Operacion_binaria Opr_bool Operacion_binaria .)
    $end            reduce using rule 38 (Operacion_booleana -> Operacion_binaria Opr_bool Operacion_binaria .)
    SEMICOLON       reduce using rule 38 (Operacion_booleana -> Operacion_binaria Opr_bool Operacion_binaria .)
    INST_END        reduce using rule 38 (Operacion_booleana -> Operacion_binaria Opr_bool Operacion_binaria .)
    INST_ELSE       reduce using rule 38 (Operacion_booleana -> Operacion_binaria Opr_bool Operacion_binaria .)
    INST_DO         reduce using rule 38 (Operacion_booleana -> Operacion_binaria Opr_bool Operacion_binaria .)
    INST_THEN       reduce using rule 38 (Operacion_booleana -> Operacion_binaria Opr_bool Operacion_binaria .)
    RPAREN          reduce using rule 38 (Operacion_booleana -> Operacion_binaria Opr_bool Operacion_binaria .)
    PLUS            shift and go to state 87
    MINUS           shift and go to state 89


state 134

    (45) Operacion_booleana -> Operacion_binaria EQEQ Operacion_binaria .
    (55) Operacion_binaria -> Operacion_binaria . PLUS Term
    (56) Operacion_binaria -> Operacion_binaria . MINUS Term

    AND             reduce using rule 45 (Operacion_booleana -> Operacion_binaria EQEQ Operacion_binaria .)
    OR              reduce using rule 45 (Operacion_booleana -> Operacion_binaria EQEQ Operacion_binaria .)
    EQEQ            reduce using rule 45 (Operacion_booleana -> Operacion_binaria EQEQ Operacion_binaria .)
    NEQEQ           reduce using rule 45 (Operacion_booleana -> Operacion_binaria EQEQ Operacion_binaria .)
    COMMA           reduce using rule 45 (Operacion_booleana -> Operacion_binaria EQEQ Operacion_binaria .)
    $end            reduce using rule 45 (Operacion_booleana -> Operacion_binaria EQEQ Operacion_binaria .)
    SEMICOLON       reduce using rule 45 (Operacion_booleana -> Operacion_binaria EQEQ Operacion_binaria .)
    INST_END        reduce using rule 45 (Operacion_booleana -> Operacion_binaria EQEQ Operacion_binaria .)
    INST_ELSE       reduce using rule 45 (Operacion_booleana -> Operacion_binaria EQEQ Operacion_binaria .)
    INST_DO         reduce using rule 45 (Operacion_booleana -> Operacion_binaria EQEQ Operacion_binaria .)
    INST_THEN       reduce using rule 45 (Operacion_booleana -> Operacion_binaria EQEQ Operacion_binaria .)
    RPAREN          reduce using rule 45 (Operacion_booleana -> Operacion_binaria EQEQ Operacion_binaria .)
    PLUS            shift and go to state 87
    MINUS           shift and go to state 89


state 135

    (67) Rango -> Operacion_binaria RANGE Operacion_binaria .
    (55) Operacion_binaria -> Operacion_binaria . PLUS Term
    (56) Operacion_binaria -> Operacion_binaria . MINUS Term

    CASE_ASSIGN     reduce using rule 67 (Rango -> Operacion_binaria RANGE Operacion_binaria .)
    PLUS            reduce using rule 67 (Rango -> Operacion_binaria RANGE Operacion_binaria .)
    TIMES           reduce using rule 67 (Rango -> Operacion_binaria RANGE Operacion_binaria .)
    INTERSECTION    reduce using rule 67 (Rango -> Operacion_binaria RANGE Operacion_binaria .)
    COMMA           reduce using rule 67 (Rango -> Operacion_binaria RANGE Operacion_binaria .)
    $end            reduce using rule 67 (Rango -> Operacion_binaria RANGE Operacion_binaria .)
    SEMICOLON       reduce using rule 67 (Rango -> Operacion_binaria RANGE Operacion_binaria .)
    INST_END        reduce using rule 67 (Rango -> Operacion_binaria RANGE Operacion_binaria .)
    INST_ELSE       reduce using rule 67 (Rango -> Operacion_binaria RANGE Operacion_binaria .)
    RPAREN          reduce using rule 67 (Rango -> Operacion_binaria RANGE Operacion_binaria .)
    AND             reduce using rule 67 (Rango -> Operacion_binaria RANGE Operacion_binaria .)
    OR              reduce using rule 67 (Rango -> Operacion_binaria RANGE Operacion_binaria .)
    EQEQ            reduce using rule 67 (Rango -> Operacion_binaria RANGE Operacion_binaria .)
    NEQEQ           reduce using rule 67 (Rango -> Operacion_binaria RANGE Operacion_binaria .)
    INST_DO         reduce using rule 67 (Rango -> Operacion_binaria RANGE Operacion_binaria .)
    INST_THEN       reduce using rule 67 (Rango -> Operacion_binaria RANGE Operacion_binaria .)
    MINUS           shift and go to state 89

  ! PLUS            [ shift and go to state 87 ]


state 136

    (55) Operacion_binaria -> Operacion_binaria PLUS Term .
    (58) Term -> Term . TIMES Factor
    (59) Term -> Term . DIVIDE Factor
    (60) Term -> Term . MOD Factor

    IN              reduce using rule 55 (Operacion_binaria -> Operacion_binaria PLUS Term .)
    EQEQ            reduce using rule 55 (Operacion_binaria -> Operacion_binaria PLUS Term .)
    NEQEQ           reduce using rule 55 (Operacion_binaria -> Operacion_binaria PLUS Term .)
    PLUS            reduce using rule 55 (Operacion_binaria -> Operacion_binaria PLUS Term .)
    MINUS           reduce using rule 55 (Operacion_binaria -> Operacion_binaria PLUS Term .)
    GREAT           reduce using rule 55 (Operacion_binaria -> Operacion_binaria PLUS Term .)
    LESS            reduce using rule 55 (Operacion_binaria -> Operacion_binaria PLUS Term .)
    GREATEQ         reduce using rule 55 (Operacion_binaria -> Operacion_binaria PLUS Term .)
    LESSEQ          reduce using rule 55 (Operacion_binaria -> Operacion_binaria PLUS Term .)
    AND             reduce using rule 55 (Operacion_binaria -> Operacion_binaria PLUS Term .)
    OR              reduce using rule 55 (Operacion_binaria -> Operacion_binaria PLUS Term .)
    COMMA           reduce using rule 55 (Operacion_binaria -> Operacion_binaria PLUS Term .)
    $end            reduce using rule 55 (Operacion_binaria -> Operacion_binaria PLUS Term .)
    SEMICOLON       reduce using rule 55 (Operacion_binaria -> Operacion_binaria PLUS Term .)
    INST_END        reduce using rule 55 (Operacion_binaria -> Operacion_binaria PLUS Term .)
    INST_ELSE       reduce using rule 55 (Operacion_binaria -> Operacion_binaria PLUS Term .)
    INST_DO         reduce using rule 55 (Operacion_binaria -> Operacion_binaria PLUS Term .)
    INST_THEN       reduce using rule 55 (Operacion_binaria -> Operacion_binaria PLUS Term .)
    RPAREN          reduce using rule 55 (Operacion_binaria -> Operacion_binaria PLUS Term .)
    RANGE           reduce using rule 55 (Operacion_binaria -> Operacion_binaria PLUS Term .)
    INTERSECTION    reduce using rule 55 (Operacion_binaria -> Operacion_binaria PLUS Term .)
    CASE_ASSIGN     reduce using rule 55 (Operacion_binaria -> Operacion_binaria PLUS Term .)
    INST_OF         reduce using rule 55 (Operacion_binaria -> Operacion_binaria PLUS Term .)
    TIMES           shift and go to state 71
    DIVIDE          shift and go to state 69
    MOD             shift and go to state 70

  ! TIMES           [ reduce using rule 55 (Operacion_binaria -> Operacion_binaria PLUS Term .) ]


state 137

    (41) Operacion_booleana -> Operacion_binaria IN Rango .
    (68) Rango -> Rango . PLUS Rango
    (69) Rango -> Rango . TIMES Operacion_binaria
    (70) Rango -> Rango . INTERSECTION Rango

    AND             reduce using rule 41 (Operacion_booleana -> Operacion_binaria IN Rango .)
    OR              reduce using rule 41 (Operacion_booleana -> Operacion_binaria IN Rango .)
    EQEQ            reduce using rule 41 (Operacion_booleana -> Operacion_binaria IN Rango .)
    NEQEQ           reduce using rule 41 (Operacion_booleana -> Operacion_binaria IN Rango .)
    COMMA           reduce using rule 41 (Operacion_booleana -> Operacion_binaria IN Rango .)
    $end            reduce using rule 41 (Operacion_booleana -> Operacion_binaria IN Rango .)
    SEMICOLON       reduce using rule 41 (Operacion_booleana -> Operacion_binaria IN Rango .)
    INST_END        reduce using rule 41 (Operacion_booleana -> Operacion_binaria IN Rango .)
    INST_ELSE       reduce using rule 41 (Operacion_booleana -> Operacion_binaria IN Rango .)
    INST_DO         reduce using rule 41 (Operacion_booleana -> Operacion_binaria IN Rango .)
    INST_THEN       reduce using rule 41 (Operacion_booleana -> Operacion_binaria IN Rango .)
    RPAREN          reduce using rule 41 (Operacion_booleana -> Operacion_binaria IN Rango .)
    PLUS            shift and go to state 77
    TIMES           shift and go to state 78
    INTERSECTION    shift and go to state 76


state 138

    (56) Operacion_binaria -> Operacion_binaria MINUS Term .
    (58) Term -> Term . TIMES Factor
    (59) Term -> Term . DIVIDE Factor
    (60) Term -> Term . MOD Factor

    IN              reduce using rule 56 (Operacion_binaria -> Operacion_binaria MINUS Term .)
    EQEQ            reduce using rule 56 (Operacion_binaria -> Operacion_binaria MINUS Term .)
    NEQEQ           reduce using rule 56 (Operacion_binaria -> Operacion_binaria MINUS Term .)
    PLUS            reduce using rule 56 (Operacion_binaria -> Operacion_binaria MINUS Term .)
    MINUS           reduce using rule 56 (Operacion_binaria -> Operacion_binaria MINUS Term .)
    GREAT           reduce using rule 56 (Operacion_binaria -> Operacion_binaria MINUS Term .)
    LESS            reduce using rule 56 (Operacion_binaria -> Operacion_binaria MINUS Term .)
    GREATEQ         reduce using rule 56 (Operacion_binaria -> Operacion_binaria MINUS Term .)
    LESSEQ          reduce using rule 56 (Operacion_binaria -> Operacion_binaria MINUS Term .)
    AND             reduce using rule 56 (Operacion_binaria -> Operacion_binaria MINUS Term .)
    OR              reduce using rule 56 (Operacion_binaria -> Operacion_binaria MINUS Term .)
    COMMA           reduce using rule 56 (Operacion_binaria -> Operacion_binaria MINUS Term .)
    $end            reduce using rule 56 (Operacion_binaria -> Operacion_binaria MINUS Term .)
    SEMICOLON       reduce using rule 56 (Operacion_binaria -> Operacion_binaria MINUS Term .)
    INST_END        reduce using rule 56 (Operacion_binaria -> Operacion_binaria MINUS Term .)
    INST_ELSE       reduce using rule 56 (Operacion_binaria -> Operacion_binaria MINUS Term .)
    INST_DO         reduce using rule 56 (Operacion_binaria -> Operacion_binaria MINUS Term .)
    INST_THEN       reduce using rule 56 (Operacion_binaria -> Operacion_binaria MINUS Term .)
    RPAREN          reduce using rule 56 (Operacion_binaria -> Operacion_binaria MINUS Term .)
    RANGE           reduce using rule 56 (Operacion_binaria -> Operacion_binaria MINUS Term .)
    INTERSECTION    reduce using rule 56 (Operacion_binaria -> Operacion_binaria MINUS Term .)
    CASE_ASSIGN     reduce using rule 56 (Operacion_binaria -> Operacion_binaria MINUS Term .)
    INST_OF         reduce using rule 56 (Operacion_binaria -> Operacion_binaria MINUS Term .)
    TIMES           shift and go to state 71
    DIVIDE          shift and go to state 69
    MOD             shift and go to state 70

  ! TIMES           [ reduce using rule 56 (Operacion_binaria -> Operacion_binaria MINUS Term .) ]


state 139

    (23) Inst_Funcion -> TOP LPAREN VAR_IDENTIFIER RPAREN .

    TIMES           reduce using rule 23 (Inst_Funcion -> TOP LPAREN VAR_IDENTIFIER RPAREN .)
    DIVIDE          reduce using rule 23 (Inst_Funcion -> TOP LPAREN VAR_IDENTIFIER RPAREN .)
    MOD             reduce using rule 23 (Inst_Funcion -> TOP LPAREN VAR_IDENTIFIER RPAREN .)
    PLUS            reduce using rule 23 (Inst_Funcion -> TOP LPAREN VAR_IDENTIFIER RPAREN .)
    MINUS           reduce using rule 23 (Inst_Funcion -> TOP LPAREN VAR_IDENTIFIER RPAREN .)
    IN              reduce using rule 23 (Inst_Funcion -> TOP LPAREN VAR_IDENTIFIER RPAREN .)
    EQEQ            reduce using rule 23 (Inst_Funcion -> TOP LPAREN VAR_IDENTIFIER RPAREN .)
    NEQEQ           reduce using rule 23 (Inst_Funcion -> TOP LPAREN VAR_IDENTIFIER RPAREN .)
    RANGE           reduce using rule 23 (Inst_Funcion -> TOP LPAREN VAR_IDENTIFIER RPAREN .)
    GREAT           reduce using rule 23 (Inst_Funcion -> TOP LPAREN VAR_IDENTIFIER RPAREN .)
    LESS            reduce using rule 23 (Inst_Funcion -> TOP LPAREN VAR_IDENTIFIER RPAREN .)
    GREATEQ         reduce using rule 23 (Inst_Funcion -> TOP LPAREN VAR_IDENTIFIER RPAREN .)
    LESSEQ          reduce using rule 23 (Inst_Funcion -> TOP LPAREN VAR_IDENTIFIER RPAREN .)
    $end            reduce using rule 23 (Inst_Funcion -> TOP LPAREN VAR_IDENTIFIER RPAREN .)
    SEMICOLON       reduce using rule 23 (Inst_Funcion -> TOP LPAREN VAR_IDENTIFIER RPAREN .)
    INST_END        reduce using rule 23 (Inst_Funcion -> TOP LPAREN VAR_IDENTIFIER RPAREN .)
    INST_ELSE       reduce using rule 23 (Inst_Funcion -> TOP LPAREN VAR_IDENTIFIER RPAREN .)
    AND             reduce using rule 23 (Inst_Funcion -> TOP LPAREN VAR_IDENTIFIER RPAREN .)
    OR              reduce using rule 23 (Inst_Funcion -> TOP LPAREN VAR_IDENTIFIER RPAREN .)
    COMMA           reduce using rule 23 (Inst_Funcion -> TOP LPAREN VAR_IDENTIFIER RPAREN .)
    INST_DO         reduce using rule 23 (Inst_Funcion -> TOP LPAREN VAR_IDENTIFIER RPAREN .)
    INST_THEN       reduce using rule 23 (Inst_Funcion -> TOP LPAREN VAR_IDENTIFIER RPAREN .)
    RPAREN          reduce using rule 23 (Inst_Funcion -> TOP LPAREN VAR_IDENTIFIER RPAREN .)
    INST_OF         reduce using rule 23 (Inst_Funcion -> TOP LPAREN VAR_IDENTIFIER RPAREN .)
    INTERSECTION    reduce using rule 23 (Inst_Funcion -> TOP LPAREN VAR_IDENTIFIER RPAREN .)
    CASE_ASSIGN     reduce using rule 23 (Inst_Funcion -> TOP LPAREN VAR_IDENTIFIER RPAREN .)


state 140

    (64) Factor -> LPAREN Operacion_binaria . RPAREN
    (67) Rango -> Operacion_binaria . RANGE Operacion_binaria
    (55) Operacion_binaria -> Operacion_binaria . PLUS Term
    (56) Operacion_binaria -> Operacion_binaria . MINUS Term

    RPAREN          shift and go to state 127
    RANGE           shift and go to state 85
    PLUS            shift and go to state 87
    MINUS           shift and go to state 89


state 141

    (19) Inst_Funcion -> TOP LPAREN Rango RPAREN .

    TIMES           reduce using rule 19 (Inst_Funcion -> TOP LPAREN Rango RPAREN .)
    DIVIDE          reduce using rule 19 (Inst_Funcion -> TOP LPAREN Rango RPAREN .)
    MOD             reduce using rule 19 (Inst_Funcion -> TOP LPAREN Rango RPAREN .)
    PLUS            reduce using rule 19 (Inst_Funcion -> TOP LPAREN Rango RPAREN .)
    MINUS           reduce using rule 19 (Inst_Funcion -> TOP LPAREN Rango RPAREN .)
    IN              reduce using rule 19 (Inst_Funcion -> TOP LPAREN Rango RPAREN .)
    EQEQ            reduce using rule 19 (Inst_Funcion -> TOP LPAREN Rango RPAREN .)
    NEQEQ           reduce using rule 19 (Inst_Funcion -> TOP LPAREN Rango RPAREN .)
    RANGE           reduce using rule 19 (Inst_Funcion -> TOP LPAREN Rango RPAREN .)
    GREAT           reduce using rule 19 (Inst_Funcion -> TOP LPAREN Rango RPAREN .)
    LESS            reduce using rule 19 (Inst_Funcion -> TOP LPAREN Rango RPAREN .)
    GREATEQ         reduce using rule 19 (Inst_Funcion -> TOP LPAREN Rango RPAREN .)
    LESSEQ          reduce using rule 19 (Inst_Funcion -> TOP LPAREN Rango RPAREN .)
    $end            reduce using rule 19 (Inst_Funcion -> TOP LPAREN Rango RPAREN .)
    SEMICOLON       reduce using rule 19 (Inst_Funcion -> TOP LPAREN Rango RPAREN .)
    INST_END        reduce using rule 19 (Inst_Funcion -> TOP LPAREN Rango RPAREN .)
    INST_ELSE       reduce using rule 19 (Inst_Funcion -> TOP LPAREN Rango RPAREN .)
    AND             reduce using rule 19 (Inst_Funcion -> TOP LPAREN Rango RPAREN .)
    OR              reduce using rule 19 (Inst_Funcion -> TOP LPAREN Rango RPAREN .)
    COMMA           reduce using rule 19 (Inst_Funcion -> TOP LPAREN Rango RPAREN .)
    INST_DO         reduce using rule 19 (Inst_Funcion -> TOP LPAREN Rango RPAREN .)
    INST_THEN       reduce using rule 19 (Inst_Funcion -> TOP LPAREN Rango RPAREN .)
    RPAREN          reduce using rule 19 (Inst_Funcion -> TOP LPAREN Rango RPAREN .)
    INST_OF         reduce using rule 19 (Inst_Funcion -> TOP LPAREN Rango RPAREN .)
    INTERSECTION    reduce using rule 19 (Inst_Funcion -> TOP LPAREN Rango RPAREN .)
    CASE_ASSIGN     reduce using rule 19 (Inst_Funcion -> TOP LPAREN Rango RPAREN .)


state 142

    (90) Inst_While -> INST_WHILE Operacion_booleana INST_DO Bloque_Inst .
    (16) Inst -> Bloque_Inst .

  ! reduce/reduce conflict for $end resolved using rule 16 (Inst -> Bloque_Inst .)
  ! reduce/reduce conflict for SEMICOLON resolved using rule 16 (Inst -> Bloque_Inst .)
  ! reduce/reduce conflict for INST_END resolved using rule 16 (Inst -> Bloque_Inst .)
  ! reduce/reduce conflict for INST_ELSE resolved using rule 16 (Inst -> Bloque_Inst .)
    $end            reduce using rule 16 (Inst -> Bloque_Inst .)
    SEMICOLON       reduce using rule 16 (Inst -> Bloque_Inst .)
    INST_END        reduce using rule 16 (Inst -> Bloque_Inst .)
    INST_ELSE       reduce using rule 16 (Inst -> Bloque_Inst .)

  ! $end            [ reduce using rule 90 (Inst_While -> INST_WHILE Operacion_booleana INST_DO Bloque_Inst .) ]
  ! SEMICOLON       [ reduce using rule 90 (Inst_While -> INST_WHILE Operacion_booleana INST_DO Bloque_Inst .) ]
  ! INST_END        [ reduce using rule 90 (Inst_While -> INST_WHILE Operacion_booleana INST_DO Bloque_Inst .) ]
  ! INST_ELSE       [ reduce using rule 90 (Inst_While -> INST_WHILE Operacion_booleana INST_DO Bloque_Inst .) ]


state 143

    (91) Inst_While -> INST_WHILE Operacion_booleana INST_DO Inst .

    $end            reduce using rule 91 (Inst_While -> INST_WHILE Operacion_booleana INST_DO Inst .)
    SEMICOLON       reduce using rule 91 (Inst_While -> INST_WHILE Operacion_booleana INST_DO Inst .)
    INST_END        reduce using rule 91 (Inst_While -> INST_WHILE Operacion_booleana INST_DO Inst .)
    INST_ELSE       reduce using rule 91 (Inst_While -> INST_WHILE Operacion_booleana INST_DO Inst .)


state 144

    (30) Lista_Variables -> VAR_IDENTIFIER COMMA . Lista_Variables
    (29) Lista_Variables -> . VAR_IDENTIFIER
    (30) Lista_Variables -> . VAR_IDENTIFIER COMMA Lista_Variables

    VAR_IDENTIFIER  shift and go to state 97

    Lista_Variables                shift and go to state 162

state 145

    (28) Lista_Declare -> Lista_Variables INST_AS . Tipo
    (31) Tipo -> . TYPEDEF_INT
    (32) Tipo -> . TYPEDEF_BOOL
    (33) Tipo -> . TYPEDEF_RANGE

    TYPEDEF_INT     shift and go to state 163
    TYPEDEF_BOOL    shift and go to state 166
    TYPEDEF_RANGE   shift and go to state 165

    Tipo                           shift and go to state 164

state 146

    (27) Lista_DeclareTipos -> Lista_Declare SEMICOLON . Lista_DeclareTipos
    (26) Lista_DeclareTipos -> . Lista_Declare
    (27) Lista_DeclareTipos -> . Lista_Declare SEMICOLON Lista_DeclareTipos
    (28) Lista_Declare -> . Lista_Variables INST_AS Tipo
    (29) Lista_Variables -> . VAR_IDENTIFIER
    (30) Lista_Variables -> . VAR_IDENTIFIER COMMA Lista_Variables

    VAR_IDENTIFIER  shift and go to state 97

    Lista_Variables                shift and go to state 99
    Lista_Declare                  shift and go to state 100
    Lista_DeclareTipos             shift and go to state 167

state 147

    (4) Bloque_Inst -> INST_BEGIN Inst_Declare Lista_Inst INST_END .

    $end            reduce using rule 4 (Bloque_Inst -> INST_BEGIN Inst_Declare Lista_Inst INST_END .)
    SEMICOLON       reduce using rule 4 (Bloque_Inst -> INST_BEGIN Inst_Declare Lista_Inst INST_END .)
    INST_END        reduce using rule 4 (Bloque_Inst -> INST_BEGIN Inst_Declare Lista_Inst INST_END .)
    INST_ELSE       reduce using rule 4 (Bloque_Inst -> INST_BEGIN Inst_Declare Lista_Inst INST_END .)


state 148

    (7) Lista_Inst -> Inst SEMICOLON Lista_Inst .

    INST_END        reduce using rule 7 (Lista_Inst -> Inst SEMICOLON Lista_Inst .)


state 149

    (24) Inst_Funcion -> BOTTOM LPAREN VAR_IDENTIFIER RPAREN .

    TIMES           reduce using rule 24 (Inst_Funcion -> BOTTOM LPAREN VAR_IDENTIFIER RPAREN .)
    DIVIDE          reduce using rule 24 (Inst_Funcion -> BOTTOM LPAREN VAR_IDENTIFIER RPAREN .)
    MOD             reduce using rule 24 (Inst_Funcion -> BOTTOM LPAREN VAR_IDENTIFIER RPAREN .)
    PLUS            reduce using rule 24 (Inst_Funcion -> BOTTOM LPAREN VAR_IDENTIFIER RPAREN .)
    MINUS           reduce using rule 24 (Inst_Funcion -> BOTTOM LPAREN VAR_IDENTIFIER RPAREN .)
    IN              reduce using rule 24 (Inst_Funcion -> BOTTOM LPAREN VAR_IDENTIFIER RPAREN .)
    EQEQ            reduce using rule 24 (Inst_Funcion -> BOTTOM LPAREN VAR_IDENTIFIER RPAREN .)
    NEQEQ           reduce using rule 24 (Inst_Funcion -> BOTTOM LPAREN VAR_IDENTIFIER RPAREN .)
    RANGE           reduce using rule 24 (Inst_Funcion -> BOTTOM LPAREN VAR_IDENTIFIER RPAREN .)
    GREAT           reduce using rule 24 (Inst_Funcion -> BOTTOM LPAREN VAR_IDENTIFIER RPAREN .)
    LESS            reduce using rule 24 (Inst_Funcion -> BOTTOM LPAREN VAR_IDENTIFIER RPAREN .)
    GREATEQ         reduce using rule 24 (Inst_Funcion -> BOTTOM LPAREN VAR_IDENTIFIER RPAREN .)
    LESSEQ          reduce using rule 24 (Inst_Funcion -> BOTTOM LPAREN VAR_IDENTIFIER RPAREN .)
    $end            reduce using rule 24 (Inst_Funcion -> BOTTOM LPAREN VAR_IDENTIFIER RPAREN .)
    SEMICOLON       reduce using rule 24 (Inst_Funcion -> BOTTOM LPAREN VAR_IDENTIFIER RPAREN .)
    INST_END        reduce using rule 24 (Inst_Funcion -> BOTTOM LPAREN VAR_IDENTIFIER RPAREN .)
    INST_ELSE       reduce using rule 24 (Inst_Funcion -> BOTTOM LPAREN VAR_IDENTIFIER RPAREN .)
    AND             reduce using rule 24 (Inst_Funcion -> BOTTOM LPAREN VAR_IDENTIFIER RPAREN .)
    OR              reduce using rule 24 (Inst_Funcion -> BOTTOM LPAREN VAR_IDENTIFIER RPAREN .)
    COMMA           reduce using rule 24 (Inst_Funcion -> BOTTOM LPAREN VAR_IDENTIFIER RPAREN .)
    INST_DO         reduce using rule 24 (Inst_Funcion -> BOTTOM LPAREN VAR_IDENTIFIER RPAREN .)
    INST_THEN       reduce using rule 24 (Inst_Funcion -> BOTTOM LPAREN VAR_IDENTIFIER RPAREN .)
    RPAREN          reduce using rule 24 (Inst_Funcion -> BOTTOM LPAREN VAR_IDENTIFIER RPAREN .)
    INST_OF         reduce using rule 24 (Inst_Funcion -> BOTTOM LPAREN VAR_IDENTIFIER RPAREN .)
    INTERSECTION    reduce using rule 24 (Inst_Funcion -> BOTTOM LPAREN VAR_IDENTIFIER RPAREN .)
    CASE_ASSIGN     reduce using rule 24 (Inst_Funcion -> BOTTOM LPAREN VAR_IDENTIFIER RPAREN .)


state 150

    (20) Inst_Funcion -> BOTTOM LPAREN Rango RPAREN .

    TIMES           reduce using rule 20 (Inst_Funcion -> BOTTOM LPAREN Rango RPAREN .)
    DIVIDE          reduce using rule 20 (Inst_Funcion -> BOTTOM LPAREN Rango RPAREN .)
    MOD             reduce using rule 20 (Inst_Funcion -> BOTTOM LPAREN Rango RPAREN .)
    PLUS            reduce using rule 20 (Inst_Funcion -> BOTTOM LPAREN Rango RPAREN .)
    MINUS           reduce using rule 20 (Inst_Funcion -> BOTTOM LPAREN Rango RPAREN .)
    IN              reduce using rule 20 (Inst_Funcion -> BOTTOM LPAREN Rango RPAREN .)
    EQEQ            reduce using rule 20 (Inst_Funcion -> BOTTOM LPAREN Rango RPAREN .)
    NEQEQ           reduce using rule 20 (Inst_Funcion -> BOTTOM LPAREN Rango RPAREN .)
    RANGE           reduce using rule 20 (Inst_Funcion -> BOTTOM LPAREN Rango RPAREN .)
    GREAT           reduce using rule 20 (Inst_Funcion -> BOTTOM LPAREN Rango RPAREN .)
    LESS            reduce using rule 20 (Inst_Funcion -> BOTTOM LPAREN Rango RPAREN .)
    GREATEQ         reduce using rule 20 (Inst_Funcion -> BOTTOM LPAREN Rango RPAREN .)
    LESSEQ          reduce using rule 20 (Inst_Funcion -> BOTTOM LPAREN Rango RPAREN .)
    $end            reduce using rule 20 (Inst_Funcion -> BOTTOM LPAREN Rango RPAREN .)
    SEMICOLON       reduce using rule 20 (Inst_Funcion -> BOTTOM LPAREN Rango RPAREN .)
    INST_END        reduce using rule 20 (Inst_Funcion -> BOTTOM LPAREN Rango RPAREN .)
    INST_ELSE       reduce using rule 20 (Inst_Funcion -> BOTTOM LPAREN Rango RPAREN .)
    AND             reduce using rule 20 (Inst_Funcion -> BOTTOM LPAREN Rango RPAREN .)
    OR              reduce using rule 20 (Inst_Funcion -> BOTTOM LPAREN Rango RPAREN .)
    COMMA           reduce using rule 20 (Inst_Funcion -> BOTTOM LPAREN Rango RPAREN .)
    INST_DO         reduce using rule 20 (Inst_Funcion -> BOTTOM LPAREN Rango RPAREN .)
    INST_THEN       reduce using rule 20 (Inst_Funcion -> BOTTOM LPAREN Rango RPAREN .)
    RPAREN          reduce using rule 20 (Inst_Funcion -> BOTTOM LPAREN Rango RPAREN .)
    INST_OF         reduce using rule 20 (Inst_Funcion -> BOTTOM LPAREN Rango RPAREN .)
    INTERSECTION    reduce using rule 20 (Inst_Funcion -> BOTTOM LPAREN Rango RPAREN .)
    CASE_ASSIGN     reduce using rule 20 (Inst_Funcion -> BOTTOM LPAREN Rango RPAREN .)


state 151

    (84) Inst_Case -> INST_CASE Operacion_binaria INST_OF Casos . INST_END

    INST_END        shift and go to state 168


state 152

    (85) Casos -> VAR_IDENTIFIER . CASE_ASSIGN Bloque_Control SEMICOLON
    (87) Casos -> VAR_IDENTIFIER . CASE_ASSIGN Bloque_Control SEMICOLON Casos
    (72) Rango -> VAR_IDENTIFIER .
    (63) Factor -> VAR_IDENTIFIER .

  ! shift/reduce conflict for CASE_ASSIGN resolved as shift
  ! reduce/reduce conflict for TIMES resolved using rule 63 (Factor -> VAR_IDENTIFIER .)
  ! reduce/reduce conflict for PLUS resolved using rule 63 (Factor -> VAR_IDENTIFIER .)
    CASE_ASSIGN     shift and go to state 169
    INTERSECTION    reduce using rule 72 (Rango -> VAR_IDENTIFIER .)
    TIMES           reduce using rule 63 (Factor -> VAR_IDENTIFIER .)
    DIVIDE          reduce using rule 63 (Factor -> VAR_IDENTIFIER .)
    MOD             reduce using rule 63 (Factor -> VAR_IDENTIFIER .)
    RANGE           reduce using rule 63 (Factor -> VAR_IDENTIFIER .)
    PLUS            reduce using rule 63 (Factor -> VAR_IDENTIFIER .)
    MINUS           reduce using rule 63 (Factor -> VAR_IDENTIFIER .)

  ! CASE_ASSIGN     [ reduce using rule 72 (Rango -> VAR_IDENTIFIER .) ]
  ! PLUS            [ reduce using rule 72 (Rango -> VAR_IDENTIFIER .) ]
  ! TIMES           [ reduce using rule 72 (Rango -> VAR_IDENTIFIER .) ]


state 153

    (86) Casos -> Rango . CASE_ASSIGN Bloque_Control SEMICOLON
    (88) Casos -> Rango . CASE_ASSIGN Bloque_Control SEMICOLON Casos
    (68) Rango -> Rango . PLUS Rango
    (69) Rango -> Rango . TIMES Operacion_binaria
    (70) Rango -> Rango . INTERSECTION Rango

    CASE_ASSIGN     shift and go to state 170
    PLUS            shift and go to state 77
    TIMES           shift and go to state 78
    INTERSECTION    shift and go to state 76


state 154

    (89) Inst_For -> INST_FOR VAR_IDENTIFIER INST_IN Rango . INST_DO Bloque_Control
    (68) Rango -> Rango . PLUS Rango
    (69) Rango -> Rango . TIMES Operacion_binaria
    (70) Rango -> Rango . INTERSECTION Rango

    INST_DO         shift and go to state 171
    PLUS            shift and go to state 77
    TIMES           shift and go to state 78
    INTERSECTION    shift and go to state 76


state 155

    (81) Bloque_Control -> Bloque_Inst .
    (16) Inst -> Bloque_Inst .

  ! reduce/reduce conflict for $end resolved using rule 16 (Inst -> Bloque_Inst .)
  ! reduce/reduce conflict for SEMICOLON resolved using rule 16 (Inst -> Bloque_Inst .)
  ! reduce/reduce conflict for INST_END resolved using rule 16 (Inst -> Bloque_Inst .)
  ! reduce/reduce conflict for INST_ELSE resolved using rule 16 (Inst -> Bloque_Inst .)
    $end            reduce using rule 16 (Inst -> Bloque_Inst .)
    SEMICOLON       reduce using rule 16 (Inst -> Bloque_Inst .)
    INST_END        reduce using rule 16 (Inst -> Bloque_Inst .)
    INST_ELSE       reduce using rule 16 (Inst -> Bloque_Inst .)

  ! SEMICOLON       [ reduce using rule 81 (Bloque_Control -> Bloque_Inst .) ]
  ! $end            [ reduce using rule 81 (Bloque_Control -> Bloque_Inst .) ]
  ! INST_END        [ reduce using rule 81 (Bloque_Control -> Bloque_Inst .) ]
  ! INST_ELSE       [ reduce using rule 81 (Bloque_Control -> Bloque_Inst .) ]


state 156

    (82) Inst_If -> INST_IF Operacion_booleana INST_THEN Bloque_Control .
    (83) Inst_If -> INST_IF Operacion_booleana INST_THEN Bloque_Control . INST_ELSE Bloque_Control

  ! shift/reduce conflict for INST_ELSE resolved as shift
    SEMICOLON       reduce using rule 82 (Inst_If -> INST_IF Operacion_booleana INST_THEN Bloque_Control .)
    INST_END        reduce using rule 82 (Inst_If -> INST_IF Operacion_booleana INST_THEN Bloque_Control .)
    $end            reduce using rule 82 (Inst_If -> INST_IF Operacion_booleana INST_THEN Bloque_Control .)
    INST_ELSE       shift and go to state 172

  ! INST_ELSE       [ reduce using rule 82 (Inst_If -> INST_IF Operacion_booleana INST_THEN Bloque_Control .) ]


state 157

    (80) Bloque_Control -> Inst .

    SEMICOLON       reduce using rule 80 (Bloque_Control -> Inst .)
    $end            reduce using rule 80 (Bloque_Control -> Inst .)
    INST_END        reduce using rule 80 (Bloque_Control -> Inst .)
    INST_ELSE       reduce using rule 80 (Bloque_Control -> Inst .)


state 158

    (22) Inst_Funcion -> LENGTH LPAREN VAR_IDENTIFIER RPAREN .

    TIMES           reduce using rule 22 (Inst_Funcion -> LENGTH LPAREN VAR_IDENTIFIER RPAREN .)
    DIVIDE          reduce using rule 22 (Inst_Funcion -> LENGTH LPAREN VAR_IDENTIFIER RPAREN .)
    MOD             reduce using rule 22 (Inst_Funcion -> LENGTH LPAREN VAR_IDENTIFIER RPAREN .)
    PLUS            reduce using rule 22 (Inst_Funcion -> LENGTH LPAREN VAR_IDENTIFIER RPAREN .)
    MINUS           reduce using rule 22 (Inst_Funcion -> LENGTH LPAREN VAR_IDENTIFIER RPAREN .)
    IN              reduce using rule 22 (Inst_Funcion -> LENGTH LPAREN VAR_IDENTIFIER RPAREN .)
    EQEQ            reduce using rule 22 (Inst_Funcion -> LENGTH LPAREN VAR_IDENTIFIER RPAREN .)
    NEQEQ           reduce using rule 22 (Inst_Funcion -> LENGTH LPAREN VAR_IDENTIFIER RPAREN .)
    RANGE           reduce using rule 22 (Inst_Funcion -> LENGTH LPAREN VAR_IDENTIFIER RPAREN .)
    GREAT           reduce using rule 22 (Inst_Funcion -> LENGTH LPAREN VAR_IDENTIFIER RPAREN .)
    LESS            reduce using rule 22 (Inst_Funcion -> LENGTH LPAREN VAR_IDENTIFIER RPAREN .)
    GREATEQ         reduce using rule 22 (Inst_Funcion -> LENGTH LPAREN VAR_IDENTIFIER RPAREN .)
    LESSEQ          reduce using rule 22 (Inst_Funcion -> LENGTH LPAREN VAR_IDENTIFIER RPAREN .)
    $end            reduce using rule 22 (Inst_Funcion -> LENGTH LPAREN VAR_IDENTIFIER RPAREN .)
    SEMICOLON       reduce using rule 22 (Inst_Funcion -> LENGTH LPAREN VAR_IDENTIFIER RPAREN .)
    INST_END        reduce using rule 22 (Inst_Funcion -> LENGTH LPAREN VAR_IDENTIFIER RPAREN .)
    INST_ELSE       reduce using rule 22 (Inst_Funcion -> LENGTH LPAREN VAR_IDENTIFIER RPAREN .)
    AND             reduce using rule 22 (Inst_Funcion -> LENGTH LPAREN VAR_IDENTIFIER RPAREN .)
    OR              reduce using rule 22 (Inst_Funcion -> LENGTH LPAREN VAR_IDENTIFIER RPAREN .)
    COMMA           reduce using rule 22 (Inst_Funcion -> LENGTH LPAREN VAR_IDENTIFIER RPAREN .)
    INST_DO         reduce using rule 22 (Inst_Funcion -> LENGTH LPAREN VAR_IDENTIFIER RPAREN .)
    INST_THEN       reduce using rule 22 (Inst_Funcion -> LENGTH LPAREN VAR_IDENTIFIER RPAREN .)
    RPAREN          reduce using rule 22 (Inst_Funcion -> LENGTH LPAREN VAR_IDENTIFIER RPAREN .)
    INST_OF         reduce using rule 22 (Inst_Funcion -> LENGTH LPAREN VAR_IDENTIFIER RPAREN .)
    INTERSECTION    reduce using rule 22 (Inst_Funcion -> LENGTH LPAREN VAR_IDENTIFIER RPAREN .)
    CASE_ASSIGN     reduce using rule 22 (Inst_Funcion -> LENGTH LPAREN VAR_IDENTIFIER RPAREN .)


state 159

    (18) Inst_Funcion -> LENGTH LPAREN Rango RPAREN .

    TIMES           reduce using rule 18 (Inst_Funcion -> LENGTH LPAREN Rango RPAREN .)
    DIVIDE          reduce using rule 18 (Inst_Funcion -> LENGTH LPAREN Rango RPAREN .)
    MOD             reduce using rule 18 (Inst_Funcion -> LENGTH LPAREN Rango RPAREN .)
    PLUS            reduce using rule 18 (Inst_Funcion -> LENGTH LPAREN Rango RPAREN .)
    MINUS           reduce using rule 18 (Inst_Funcion -> LENGTH LPAREN Rango RPAREN .)
    IN              reduce using rule 18 (Inst_Funcion -> LENGTH LPAREN Rango RPAREN .)
    EQEQ            reduce using rule 18 (Inst_Funcion -> LENGTH LPAREN Rango RPAREN .)
    NEQEQ           reduce using rule 18 (Inst_Funcion -> LENGTH LPAREN Rango RPAREN .)
    RANGE           reduce using rule 18 (Inst_Funcion -> LENGTH LPAREN Rango RPAREN .)
    GREAT           reduce using rule 18 (Inst_Funcion -> LENGTH LPAREN Rango RPAREN .)
    LESS            reduce using rule 18 (Inst_Funcion -> LENGTH LPAREN Rango RPAREN .)
    GREATEQ         reduce using rule 18 (Inst_Funcion -> LENGTH LPAREN Rango RPAREN .)
    LESSEQ          reduce using rule 18 (Inst_Funcion -> LENGTH LPAREN Rango RPAREN .)
    $end            reduce using rule 18 (Inst_Funcion -> LENGTH LPAREN Rango RPAREN .)
    SEMICOLON       reduce using rule 18 (Inst_Funcion -> LENGTH LPAREN Rango RPAREN .)
    INST_END        reduce using rule 18 (Inst_Funcion -> LENGTH LPAREN Rango RPAREN .)
    INST_ELSE       reduce using rule 18 (Inst_Funcion -> LENGTH LPAREN Rango RPAREN .)
    AND             reduce using rule 18 (Inst_Funcion -> LENGTH LPAREN Rango RPAREN .)
    OR              reduce using rule 18 (Inst_Funcion -> LENGTH LPAREN Rango RPAREN .)
    COMMA           reduce using rule 18 (Inst_Funcion -> LENGTH LPAREN Rango RPAREN .)
    INST_DO         reduce using rule 18 (Inst_Funcion -> LENGTH LPAREN Rango RPAREN .)
    INST_THEN       reduce using rule 18 (Inst_Funcion -> LENGTH LPAREN Rango RPAREN .)
    RPAREN          reduce using rule 18 (Inst_Funcion -> LENGTH LPAREN Rango RPAREN .)
    INST_OF         reduce using rule 18 (Inst_Funcion -> LENGTH LPAREN Rango RPAREN .)
    INTERSECTION    reduce using rule 18 (Inst_Funcion -> LENGTH LPAREN Rango RPAREN .)
    CASE_ASSIGN     reduce using rule 18 (Inst_Funcion -> LENGTH LPAREN Rango RPAREN .)


state 160

    (21) Inst_Funcion -> RTOI LPAREN VAR_IDENTIFIER RPAREN .

    TIMES           reduce using rule 21 (Inst_Funcion -> RTOI LPAREN VAR_IDENTIFIER RPAREN .)
    DIVIDE          reduce using rule 21 (Inst_Funcion -> RTOI LPAREN VAR_IDENTIFIER RPAREN .)
    MOD             reduce using rule 21 (Inst_Funcion -> RTOI LPAREN VAR_IDENTIFIER RPAREN .)
    PLUS            reduce using rule 21 (Inst_Funcion -> RTOI LPAREN VAR_IDENTIFIER RPAREN .)
    MINUS           reduce using rule 21 (Inst_Funcion -> RTOI LPAREN VAR_IDENTIFIER RPAREN .)
    IN              reduce using rule 21 (Inst_Funcion -> RTOI LPAREN VAR_IDENTIFIER RPAREN .)
    EQEQ            reduce using rule 21 (Inst_Funcion -> RTOI LPAREN VAR_IDENTIFIER RPAREN .)
    NEQEQ           reduce using rule 21 (Inst_Funcion -> RTOI LPAREN VAR_IDENTIFIER RPAREN .)
    RANGE           reduce using rule 21 (Inst_Funcion -> RTOI LPAREN VAR_IDENTIFIER RPAREN .)
    GREAT           reduce using rule 21 (Inst_Funcion -> RTOI LPAREN VAR_IDENTIFIER RPAREN .)
    LESS            reduce using rule 21 (Inst_Funcion -> RTOI LPAREN VAR_IDENTIFIER RPAREN .)
    GREATEQ         reduce using rule 21 (Inst_Funcion -> RTOI LPAREN VAR_IDENTIFIER RPAREN .)
    LESSEQ          reduce using rule 21 (Inst_Funcion -> RTOI LPAREN VAR_IDENTIFIER RPAREN .)
    $end            reduce using rule 21 (Inst_Funcion -> RTOI LPAREN VAR_IDENTIFIER RPAREN .)
    SEMICOLON       reduce using rule 21 (Inst_Funcion -> RTOI LPAREN VAR_IDENTIFIER RPAREN .)
    INST_END        reduce using rule 21 (Inst_Funcion -> RTOI LPAREN VAR_IDENTIFIER RPAREN .)
    INST_ELSE       reduce using rule 21 (Inst_Funcion -> RTOI LPAREN VAR_IDENTIFIER RPAREN .)
    AND             reduce using rule 21 (Inst_Funcion -> RTOI LPAREN VAR_IDENTIFIER RPAREN .)
    OR              reduce using rule 21 (Inst_Funcion -> RTOI LPAREN VAR_IDENTIFIER RPAREN .)
    COMMA           reduce using rule 21 (Inst_Funcion -> RTOI LPAREN VAR_IDENTIFIER RPAREN .)
    INST_DO         reduce using rule 21 (Inst_Funcion -> RTOI LPAREN VAR_IDENTIFIER RPAREN .)
    INST_THEN       reduce using rule 21 (Inst_Funcion -> RTOI LPAREN VAR_IDENTIFIER RPAREN .)
    RPAREN          reduce using rule 21 (Inst_Funcion -> RTOI LPAREN VAR_IDENTIFIER RPAREN .)
    INST_OF         reduce using rule 21 (Inst_Funcion -> RTOI LPAREN VAR_IDENTIFIER RPAREN .)
    INTERSECTION    reduce using rule 21 (Inst_Funcion -> RTOI LPAREN VAR_IDENTIFIER RPAREN .)
    CASE_ASSIGN     reduce using rule 21 (Inst_Funcion -> RTOI LPAREN VAR_IDENTIFIER RPAREN .)


state 161

    (17) Inst_Funcion -> RTOI LPAREN Rango RPAREN .

    TIMES           reduce using rule 17 (Inst_Funcion -> RTOI LPAREN Rango RPAREN .)
    DIVIDE          reduce using rule 17 (Inst_Funcion -> RTOI LPAREN Rango RPAREN .)
    MOD             reduce using rule 17 (Inst_Funcion -> RTOI LPAREN Rango RPAREN .)
    PLUS            reduce using rule 17 (Inst_Funcion -> RTOI LPAREN Rango RPAREN .)
    MINUS           reduce using rule 17 (Inst_Funcion -> RTOI LPAREN Rango RPAREN .)
    IN              reduce using rule 17 (Inst_Funcion -> RTOI LPAREN Rango RPAREN .)
    EQEQ            reduce using rule 17 (Inst_Funcion -> RTOI LPAREN Rango RPAREN .)
    NEQEQ           reduce using rule 17 (Inst_Funcion -> RTOI LPAREN Rango RPAREN .)
    RANGE           reduce using rule 17 (Inst_Funcion -> RTOI LPAREN Rango RPAREN .)
    GREAT           reduce using rule 17 (Inst_Funcion -> RTOI LPAREN Rango RPAREN .)
    LESS            reduce using rule 17 (Inst_Funcion -> RTOI LPAREN Rango RPAREN .)
    GREATEQ         reduce using rule 17 (Inst_Funcion -> RTOI LPAREN Rango RPAREN .)
    LESSEQ          reduce using rule 17 (Inst_Funcion -> RTOI LPAREN Rango RPAREN .)
    $end            reduce using rule 17 (Inst_Funcion -> RTOI LPAREN Rango RPAREN .)
    SEMICOLON       reduce using rule 17 (Inst_Funcion -> RTOI LPAREN Rango RPAREN .)
    INST_END        reduce using rule 17 (Inst_Funcion -> RTOI LPAREN Rango RPAREN .)
    INST_ELSE       reduce using rule 17 (Inst_Funcion -> RTOI LPAREN Rango RPAREN .)
    AND             reduce using rule 17 (Inst_Funcion -> RTOI LPAREN Rango RPAREN .)
    OR              reduce using rule 17 (Inst_Funcion -> RTOI LPAREN Rango RPAREN .)
    COMMA           reduce using rule 17 (Inst_Funcion -> RTOI LPAREN Rango RPAREN .)
    INST_DO         reduce using rule 17 (Inst_Funcion -> RTOI LPAREN Rango RPAREN .)
    INST_THEN       reduce using rule 17 (Inst_Funcion -> RTOI LPAREN Rango RPAREN .)
    RPAREN          reduce using rule 17 (Inst_Funcion -> RTOI LPAREN Rango RPAREN .)
    INST_OF         reduce using rule 17 (Inst_Funcion -> RTOI LPAREN Rango RPAREN .)
    INTERSECTION    reduce using rule 17 (Inst_Funcion -> RTOI LPAREN Rango RPAREN .)
    CASE_ASSIGN     reduce using rule 17 (Inst_Funcion -> RTOI LPAREN Rango RPAREN .)


state 162

    (30) Lista_Variables -> VAR_IDENTIFIER COMMA Lista_Variables .

    INST_AS         reduce using rule 30 (Lista_Variables -> VAR_IDENTIFIER COMMA Lista_Variables .)


state 163

    (31) Tipo -> TYPEDEF_INT .

    SEMICOLON       reduce using rule 31 (Tipo -> TYPEDEF_INT .)
    INST_END        reduce using rule 31 (Tipo -> TYPEDEF_INT .)
    VAR_IDENTIFIER  reduce using rule 31 (Tipo -> TYPEDEF_INT .)
    INST_READ       reduce using rule 31 (Tipo -> TYPEDEF_INT .)
    INST_FOR        reduce using rule 31 (Tipo -> TYPEDEF_INT .)
    INST_WHILE      reduce using rule 31 (Tipo -> TYPEDEF_INT .)
    INST_IF         reduce using rule 31 (Tipo -> TYPEDEF_INT .)
    INST_CASE       reduce using rule 31 (Tipo -> TYPEDEF_INT .)
    INST_WRITE      reduce using rule 31 (Tipo -> TYPEDEF_INT .)
    INST_WRITELN    reduce using rule 31 (Tipo -> TYPEDEF_INT .)
    RTOI            reduce using rule 31 (Tipo -> TYPEDEF_INT .)
    LENGTH          reduce using rule 31 (Tipo -> TYPEDEF_INT .)
    TOP             reduce using rule 31 (Tipo -> TYPEDEF_INT .)
    BOTTOM          reduce using rule 31 (Tipo -> TYPEDEF_INT .)
    INST_BEGIN      reduce using rule 31 (Tipo -> TYPEDEF_INT .)


state 164

    (28) Lista_Declare -> Lista_Variables INST_AS Tipo .

    SEMICOLON       reduce using rule 28 (Lista_Declare -> Lista_Variables INST_AS Tipo .)
    INST_END        reduce using rule 28 (Lista_Declare -> Lista_Variables INST_AS Tipo .)
    VAR_IDENTIFIER  reduce using rule 28 (Lista_Declare -> Lista_Variables INST_AS Tipo .)
    INST_READ       reduce using rule 28 (Lista_Declare -> Lista_Variables INST_AS Tipo .)
    INST_FOR        reduce using rule 28 (Lista_Declare -> Lista_Variables INST_AS Tipo .)
    INST_WHILE      reduce using rule 28 (Lista_Declare -> Lista_Variables INST_AS Tipo .)
    INST_IF         reduce using rule 28 (Lista_Declare -> Lista_Variables INST_AS Tipo .)
    INST_CASE       reduce using rule 28 (Lista_Declare -> Lista_Variables INST_AS Tipo .)
    INST_WRITE      reduce using rule 28 (Lista_Declare -> Lista_Variables INST_AS Tipo .)
    INST_WRITELN    reduce using rule 28 (Lista_Declare -> Lista_Variables INST_AS Tipo .)
    RTOI            reduce using rule 28 (Lista_Declare -> Lista_Variables INST_AS Tipo .)
    LENGTH          reduce using rule 28 (Lista_Declare -> Lista_Variables INST_AS Tipo .)
    TOP             reduce using rule 28 (Lista_Declare -> Lista_Variables INST_AS Tipo .)
    BOTTOM          reduce using rule 28 (Lista_Declare -> Lista_Variables INST_AS Tipo .)
    INST_BEGIN      reduce using rule 28 (Lista_Declare -> Lista_Variables INST_AS Tipo .)


state 165

    (33) Tipo -> TYPEDEF_RANGE .

    SEMICOLON       reduce using rule 33 (Tipo -> TYPEDEF_RANGE .)
    INST_END        reduce using rule 33 (Tipo -> TYPEDEF_RANGE .)
    VAR_IDENTIFIER  reduce using rule 33 (Tipo -> TYPEDEF_RANGE .)
    INST_READ       reduce using rule 33 (Tipo -> TYPEDEF_RANGE .)
    INST_FOR        reduce using rule 33 (Tipo -> TYPEDEF_RANGE .)
    INST_WHILE      reduce using rule 33 (Tipo -> TYPEDEF_RANGE .)
    INST_IF         reduce using rule 33 (Tipo -> TYPEDEF_RANGE .)
    INST_CASE       reduce using rule 33 (Tipo -> TYPEDEF_RANGE .)
    INST_WRITE      reduce using rule 33 (Tipo -> TYPEDEF_RANGE .)
    INST_WRITELN    reduce using rule 33 (Tipo -> TYPEDEF_RANGE .)
    RTOI            reduce using rule 33 (Tipo -> TYPEDEF_RANGE .)
    LENGTH          reduce using rule 33 (Tipo -> TYPEDEF_RANGE .)
    TOP             reduce using rule 33 (Tipo -> TYPEDEF_RANGE .)
    BOTTOM          reduce using rule 33 (Tipo -> TYPEDEF_RANGE .)
    INST_BEGIN      reduce using rule 33 (Tipo -> TYPEDEF_RANGE .)


state 166

    (32) Tipo -> TYPEDEF_BOOL .

    SEMICOLON       reduce using rule 32 (Tipo -> TYPEDEF_BOOL .)
    INST_END        reduce using rule 32 (Tipo -> TYPEDEF_BOOL .)
    VAR_IDENTIFIER  reduce using rule 32 (Tipo -> TYPEDEF_BOOL .)
    INST_READ       reduce using rule 32 (Tipo -> TYPEDEF_BOOL .)
    INST_FOR        reduce using rule 32 (Tipo -> TYPEDEF_BOOL .)
    INST_WHILE      reduce using rule 32 (Tipo -> TYPEDEF_BOOL .)
    INST_IF         reduce using rule 32 (Tipo -> TYPEDEF_BOOL .)
    INST_CASE       reduce using rule 32 (Tipo -> TYPEDEF_BOOL .)
    INST_WRITE      reduce using rule 32 (Tipo -> TYPEDEF_BOOL .)
    INST_WRITELN    reduce using rule 32 (Tipo -> TYPEDEF_BOOL .)
    RTOI            reduce using rule 32 (Tipo -> TYPEDEF_BOOL .)
    LENGTH          reduce using rule 32 (Tipo -> TYPEDEF_BOOL .)
    TOP             reduce using rule 32 (Tipo -> TYPEDEF_BOOL .)
    BOTTOM          reduce using rule 32 (Tipo -> TYPEDEF_BOOL .)
    INST_BEGIN      reduce using rule 32 (Tipo -> TYPEDEF_BOOL .)


state 167

    (27) Lista_DeclareTipos -> Lista_Declare SEMICOLON Lista_DeclareTipos .

    INST_END        reduce using rule 27 (Lista_DeclareTipos -> Lista_Declare SEMICOLON Lista_DeclareTipos .)
    VAR_IDENTIFIER  reduce using rule 27 (Lista_DeclareTipos -> Lista_Declare SEMICOLON Lista_DeclareTipos .)
    INST_READ       reduce using rule 27 (Lista_DeclareTipos -> Lista_Declare SEMICOLON Lista_DeclareTipos .)
    INST_FOR        reduce using rule 27 (Lista_DeclareTipos -> Lista_Declare SEMICOLON Lista_DeclareTipos .)
    INST_WHILE      reduce using rule 27 (Lista_DeclareTipos -> Lista_Declare SEMICOLON Lista_DeclareTipos .)
    INST_IF         reduce using rule 27 (Lista_DeclareTipos -> Lista_Declare SEMICOLON Lista_DeclareTipos .)
    INST_CASE       reduce using rule 27 (Lista_DeclareTipos -> Lista_Declare SEMICOLON Lista_DeclareTipos .)
    INST_WRITE      reduce using rule 27 (Lista_DeclareTipos -> Lista_Declare SEMICOLON Lista_DeclareTipos .)
    INST_WRITELN    reduce using rule 27 (Lista_DeclareTipos -> Lista_Declare SEMICOLON Lista_DeclareTipos .)
    RTOI            reduce using rule 27 (Lista_DeclareTipos -> Lista_Declare SEMICOLON Lista_DeclareTipos .)
    LENGTH          reduce using rule 27 (Lista_DeclareTipos -> Lista_Declare SEMICOLON Lista_DeclareTipos .)
    TOP             reduce using rule 27 (Lista_DeclareTipos -> Lista_Declare SEMICOLON Lista_DeclareTipos .)
    BOTTOM          reduce using rule 27 (Lista_DeclareTipos -> Lista_Declare SEMICOLON Lista_DeclareTipos .)
    INST_BEGIN      reduce using rule 27 (Lista_DeclareTipos -> Lista_Declare SEMICOLON Lista_DeclareTipos .)


state 168

    (84) Inst_Case -> INST_CASE Operacion_binaria INST_OF Casos INST_END .

    SEMICOLON       reduce using rule 84 (Inst_Case -> INST_CASE Operacion_binaria INST_OF Casos INST_END .)
    $end            reduce using rule 84 (Inst_Case -> INST_CASE Operacion_binaria INST_OF Casos INST_END .)
    INST_END        reduce using rule 84 (Inst_Case -> INST_CASE Operacion_binaria INST_OF Casos INST_END .)
    INST_ELSE       reduce using rule 84 (Inst_Case -> INST_CASE Operacion_binaria INST_OF Casos INST_END .)


state 169

    (85) Casos -> VAR_IDENTIFIER CASE_ASSIGN . Bloque_Control SEMICOLON
    (87) Casos -> VAR_IDENTIFIER CASE_ASSIGN . Bloque_Control SEMICOLON Casos
    (80) Bloque_Control -> . Inst
    (81) Bloque_Control -> . Bloque_Inst
    (8) Inst -> . Inst_Asignacion
    (9) Inst -> . Inst_Lectura
    (10) Inst -> . Inst_For
    (11) Inst -> . Inst_While
    (12) Inst -> . Inst_If
    (13) Inst -> . Inst_Case
    (14) Inst -> . Inst_Salida
    (15) Inst -> . Inst_Funcion
    (16) Inst -> . Bloque_Inst
    (3) Bloque_Inst -> . INST_BEGIN Lista_Inst INST_END
    (4) Bloque_Inst -> . INST_BEGIN Inst_Declare Lista_Inst INST_END
    (5) Bloque_Inst -> . INST_BEGIN Inst_Declare INST_END
    (34) Inst_Asignacion -> . VAR_IDENTIFIER EQUAL Expresion
    (73) Inst_Lectura -> . INST_READ VAR_IDENTIFIER
    (89) Inst_For -> . INST_FOR VAR_IDENTIFIER INST_IN Rango INST_DO Bloque_Control
    (90) Inst_While -> . INST_WHILE Operacion_booleana INST_DO Bloque_Inst
    (91) Inst_While -> . INST_WHILE Operacion_booleana INST_DO Inst
    (82) Inst_If -> . INST_IF Operacion_booleana INST_THEN Bloque_Control
    (83) Inst_If -> . INST_IF Operacion_booleana INST_THEN Bloque_Control INST_ELSE Bloque_Control
    (84) Inst_Case -> . INST_CASE Operacion_binaria INST_OF Casos INST_END
    (74) Inst_Salida -> . INST_WRITE Lista_Aux
    (75) Inst_Salida -> . INST_WRITELN Lista_Aux
    (17) Inst_Funcion -> . RTOI LPAREN Rango RPAREN
    (18) Inst_Funcion -> . LENGTH LPAREN Rango RPAREN
    (19) Inst_Funcion -> . TOP LPAREN Rango RPAREN
    (20) Inst_Funcion -> . BOTTOM LPAREN Rango RPAREN
    (21) Inst_Funcion -> . RTOI LPAREN VAR_IDENTIFIER RPAREN
    (22) Inst_Funcion -> . LENGTH LPAREN VAR_IDENTIFIER RPAREN
    (23) Inst_Funcion -> . TOP LPAREN VAR_IDENTIFIER RPAREN
    (24) Inst_Funcion -> . BOTTOM LPAREN VAR_IDENTIFIER RPAREN

    INST_BEGIN      shift and go to state 10
    VAR_IDENTIFIER  shift and go to state 16
    INST_READ       shift and go to state 9
    INST_FOR        shift and go to state 19
    INST_WHILE      shift and go to state 8
    INST_IF         shift and go to state 20
    INST_CASE       shift and go to state 18
    INST_WRITE      shift and go to state 4
    INST_WRITELN    shift and go to state 21
    RTOI            shift and go to state 23
    LENGTH          shift and go to state 22
    TOP             shift and go to state 5
    BOTTOM          shift and go to state 11

    Bloque_Control                 shift and go to state 173
    Inst_Salida                    shift and go to state 7
    Inst_Funcion                   shift and go to state 3
    Bloque_Inst                    shift and go to state 155
    Inst_If                        shift and go to state 17
    Inst_For                       shift and go to state 12
    Inst_While                     shift and go to state 14
    Inst                           shift and go to state 157
    Inst_Asignacion                shift and go to state 24
    Inst_Case                      shift and go to state 25
    Inst_Lectura                   shift and go to state 15

state 170

    (86) Casos -> Rango CASE_ASSIGN . Bloque_Control SEMICOLON
    (88) Casos -> Rango CASE_ASSIGN . Bloque_Control SEMICOLON Casos
    (80) Bloque_Control -> . Inst
    (81) Bloque_Control -> . Bloque_Inst
    (8) Inst -> . Inst_Asignacion
    (9) Inst -> . Inst_Lectura
    (10) Inst -> . Inst_For
    (11) Inst -> . Inst_While
    (12) Inst -> . Inst_If
    (13) Inst -> . Inst_Case
    (14) Inst -> . Inst_Salida
    (15) Inst -> . Inst_Funcion
    (16) Inst -> . Bloque_Inst
    (3) Bloque_Inst -> . INST_BEGIN Lista_Inst INST_END
    (4) Bloque_Inst -> . INST_BEGIN Inst_Declare Lista_Inst INST_END
    (5) Bloque_Inst -> . INST_BEGIN Inst_Declare INST_END
    (34) Inst_Asignacion -> . VAR_IDENTIFIER EQUAL Expresion
    (73) Inst_Lectura -> . INST_READ VAR_IDENTIFIER
    (89) Inst_For -> . INST_FOR VAR_IDENTIFIER INST_IN Rango INST_DO Bloque_Control
    (90) Inst_While -> . INST_WHILE Operacion_booleana INST_DO Bloque_Inst
    (91) Inst_While -> . INST_WHILE Operacion_booleana INST_DO Inst
    (82) Inst_If -> . INST_IF Operacion_booleana INST_THEN Bloque_Control
    (83) Inst_If -> . INST_IF Operacion_booleana INST_THEN Bloque_Control INST_ELSE Bloque_Control
    (84) Inst_Case -> . INST_CASE Operacion_binaria INST_OF Casos INST_END
    (74) Inst_Salida -> . INST_WRITE Lista_Aux
    (75) Inst_Salida -> . INST_WRITELN Lista_Aux
    (17) Inst_Funcion -> . RTOI LPAREN Rango RPAREN
    (18) Inst_Funcion -> . LENGTH LPAREN Rango RPAREN
    (19) Inst_Funcion -> . TOP LPAREN Rango RPAREN
    (20) Inst_Funcion -> . BOTTOM LPAREN Rango RPAREN
    (21) Inst_Funcion -> . RTOI LPAREN VAR_IDENTIFIER RPAREN
    (22) Inst_Funcion -> . LENGTH LPAREN VAR_IDENTIFIER RPAREN
    (23) Inst_Funcion -> . TOP LPAREN VAR_IDENTIFIER RPAREN
    (24) Inst_Funcion -> . BOTTOM LPAREN VAR_IDENTIFIER RPAREN

    INST_BEGIN      shift and go to state 10
    VAR_IDENTIFIER  shift and go to state 16
    INST_READ       shift and go to state 9
    INST_FOR        shift and go to state 19
    INST_WHILE      shift and go to state 8
    INST_IF         shift and go to state 20
    INST_CASE       shift and go to state 18
    INST_WRITE      shift and go to state 4
    INST_WRITELN    shift and go to state 21
    RTOI            shift and go to state 23
    LENGTH          shift and go to state 22
    TOP             shift and go to state 5
    BOTTOM          shift and go to state 11

    Bloque_Control                 shift and go to state 174
    Inst_Salida                    shift and go to state 7
    Inst_Funcion                   shift and go to state 3
    Bloque_Inst                    shift and go to state 155
    Inst_If                        shift and go to state 17
    Inst_While                     shift and go to state 14
    Inst_For                       shift and go to state 12
    Inst_Asignacion                shift and go to state 24
    Inst                           shift and go to state 157
    Inst_Case                      shift and go to state 25
    Inst_Lectura                   shift and go to state 15

state 171

    (89) Inst_For -> INST_FOR VAR_IDENTIFIER INST_IN Rango INST_DO . Bloque_Control
    (80) Bloque_Control -> . Inst
    (81) Bloque_Control -> . Bloque_Inst
    (8) Inst -> . Inst_Asignacion
    (9) Inst -> . Inst_Lectura
    (10) Inst -> . Inst_For
    (11) Inst -> . Inst_While
    (12) Inst -> . Inst_If
    (13) Inst -> . Inst_Case
    (14) Inst -> . Inst_Salida
    (15) Inst -> . Inst_Funcion
    (16) Inst -> . Bloque_Inst
    (3) Bloque_Inst -> . INST_BEGIN Lista_Inst INST_END
    (4) Bloque_Inst -> . INST_BEGIN Inst_Declare Lista_Inst INST_END
    (5) Bloque_Inst -> . INST_BEGIN Inst_Declare INST_END
    (34) Inst_Asignacion -> . VAR_IDENTIFIER EQUAL Expresion
    (73) Inst_Lectura -> . INST_READ VAR_IDENTIFIER
    (89) Inst_For -> . INST_FOR VAR_IDENTIFIER INST_IN Rango INST_DO Bloque_Control
    (90) Inst_While -> . INST_WHILE Operacion_booleana INST_DO Bloque_Inst
    (91) Inst_While -> . INST_WHILE Operacion_booleana INST_DO Inst
    (82) Inst_If -> . INST_IF Operacion_booleana INST_THEN Bloque_Control
    (83) Inst_If -> . INST_IF Operacion_booleana INST_THEN Bloque_Control INST_ELSE Bloque_Control
    (84) Inst_Case -> . INST_CASE Operacion_binaria INST_OF Casos INST_END
    (74) Inst_Salida -> . INST_WRITE Lista_Aux
    (75) Inst_Salida -> . INST_WRITELN Lista_Aux
    (17) Inst_Funcion -> . RTOI LPAREN Rango RPAREN
    (18) Inst_Funcion -> . LENGTH LPAREN Rango RPAREN
    (19) Inst_Funcion -> . TOP LPAREN Rango RPAREN
    (20) Inst_Funcion -> . BOTTOM LPAREN Rango RPAREN
    (21) Inst_Funcion -> . RTOI LPAREN VAR_IDENTIFIER RPAREN
    (22) Inst_Funcion -> . LENGTH LPAREN VAR_IDENTIFIER RPAREN
    (23) Inst_Funcion -> . TOP LPAREN VAR_IDENTIFIER RPAREN
    (24) Inst_Funcion -> . BOTTOM LPAREN VAR_IDENTIFIER RPAREN

    INST_BEGIN      shift and go to state 10
    VAR_IDENTIFIER  shift and go to state 16
    INST_READ       shift and go to state 9
    INST_FOR        shift and go to state 19
    INST_WHILE      shift and go to state 8
    INST_IF         shift and go to state 20
    INST_CASE       shift and go to state 18
    INST_WRITE      shift and go to state 4
    INST_WRITELN    shift and go to state 21
    RTOI            shift and go to state 23
    LENGTH          shift and go to state 22
    TOP             shift and go to state 5
    BOTTOM          shift and go to state 11

    Bloque_Control                 shift and go to state 175
    Inst_Salida                    shift and go to state 7
    Inst_Funcion                   shift and go to state 3
    Bloque_Inst                    shift and go to state 155
    Inst_If                        shift and go to state 17
    Inst_While                     shift and go to state 14
    Inst_For                       shift and go to state 12
    Inst_Asignacion                shift and go to state 24
    Inst                           shift and go to state 157
    Inst_Case                      shift and go to state 25
    Inst_Lectura                   shift and go to state 15

state 172

    (83) Inst_If -> INST_IF Operacion_booleana INST_THEN Bloque_Control INST_ELSE . Bloque_Control
    (80) Bloque_Control -> . Inst
    (81) Bloque_Control -> . Bloque_Inst
    (8) Inst -> . Inst_Asignacion
    (9) Inst -> . Inst_Lectura
    (10) Inst -> . Inst_For
    (11) Inst -> . Inst_While
    (12) Inst -> . Inst_If
    (13) Inst -> . Inst_Case
    (14) Inst -> . Inst_Salida
    (15) Inst -> . Inst_Funcion
    (16) Inst -> . Bloque_Inst
    (3) Bloque_Inst -> . INST_BEGIN Lista_Inst INST_END
    (4) Bloque_Inst -> . INST_BEGIN Inst_Declare Lista_Inst INST_END
    (5) Bloque_Inst -> . INST_BEGIN Inst_Declare INST_END
    (34) Inst_Asignacion -> . VAR_IDENTIFIER EQUAL Expresion
    (73) Inst_Lectura -> . INST_READ VAR_IDENTIFIER
    (89) Inst_For -> . INST_FOR VAR_IDENTIFIER INST_IN Rango INST_DO Bloque_Control
    (90) Inst_While -> . INST_WHILE Operacion_booleana INST_DO Bloque_Inst
    (91) Inst_While -> . INST_WHILE Operacion_booleana INST_DO Inst
    (82) Inst_If -> . INST_IF Operacion_booleana INST_THEN Bloque_Control
    (83) Inst_If -> . INST_IF Operacion_booleana INST_THEN Bloque_Control INST_ELSE Bloque_Control
    (84) Inst_Case -> . INST_CASE Operacion_binaria INST_OF Casos INST_END
    (74) Inst_Salida -> . INST_WRITE Lista_Aux
    (75) Inst_Salida -> . INST_WRITELN Lista_Aux
    (17) Inst_Funcion -> . RTOI LPAREN Rango RPAREN
    (18) Inst_Funcion -> . LENGTH LPAREN Rango RPAREN
    (19) Inst_Funcion -> . TOP LPAREN Rango RPAREN
    (20) Inst_Funcion -> . BOTTOM LPAREN Rango RPAREN
    (21) Inst_Funcion -> . RTOI LPAREN VAR_IDENTIFIER RPAREN
    (22) Inst_Funcion -> . LENGTH LPAREN VAR_IDENTIFIER RPAREN
    (23) Inst_Funcion -> . TOP LPAREN VAR_IDENTIFIER RPAREN
    (24) Inst_Funcion -> . BOTTOM LPAREN VAR_IDENTIFIER RPAREN

    INST_BEGIN      shift and go to state 10
    VAR_IDENTIFIER  shift and go to state 16
    INST_READ       shift and go to state 9
    INST_FOR        shift and go to state 19
    INST_WHILE      shift and go to state 8
    INST_IF         shift and go to state 20
    INST_CASE       shift and go to state 18
    INST_WRITE      shift and go to state 4
    INST_WRITELN    shift and go to state 21
    RTOI            shift and go to state 23
    LENGTH          shift and go to state 22
    TOP             shift and go to state 5
    BOTTOM          shift and go to state 11

    Bloque_Control                 shift and go to state 176
    Inst_Salida                    shift and go to state 7
    Inst_Funcion                   shift and go to state 3
    Bloque_Inst                    shift and go to state 155
    Inst_If                        shift and go to state 17
    Inst_For                       shift and go to state 12
    Inst_While                     shift and go to state 14
    Inst                           shift and go to state 157
    Inst_Asignacion                shift and go to state 24
    Inst_Case                      shift and go to state 25
    Inst_Lectura                   shift and go to state 15

state 173

    (85) Casos -> VAR_IDENTIFIER CASE_ASSIGN Bloque_Control . SEMICOLON
    (87) Casos -> VAR_IDENTIFIER CASE_ASSIGN Bloque_Control . SEMICOLON Casos

    SEMICOLON       shift and go to state 177


state 174

    (86) Casos -> Rango CASE_ASSIGN Bloque_Control . SEMICOLON
    (88) Casos -> Rango CASE_ASSIGN Bloque_Control . SEMICOLON Casos

    SEMICOLON       shift and go to state 178


state 175

    (89) Inst_For -> INST_FOR VAR_IDENTIFIER INST_IN Rango INST_DO Bloque_Control .

    $end            reduce using rule 89 (Inst_For -> INST_FOR VAR_IDENTIFIER INST_IN Rango INST_DO Bloque_Control .)
    SEMICOLON       reduce using rule 89 (Inst_For -> INST_FOR VAR_IDENTIFIER INST_IN Rango INST_DO Bloque_Control .)
    INST_END        reduce using rule 89 (Inst_For -> INST_FOR VAR_IDENTIFIER INST_IN Rango INST_DO Bloque_Control .)
    INST_ELSE       reduce using rule 89 (Inst_For -> INST_FOR VAR_IDENTIFIER INST_IN Rango INST_DO Bloque_Control .)


state 176

    (83) Inst_If -> INST_IF Operacion_booleana INST_THEN Bloque_Control INST_ELSE Bloque_Control .

    SEMICOLON       reduce using rule 83 (Inst_If -> INST_IF Operacion_booleana INST_THEN Bloque_Control INST_ELSE Bloque_Control .)
    INST_END        reduce using rule 83 (Inst_If -> INST_IF Operacion_booleana INST_THEN Bloque_Control INST_ELSE Bloque_Control .)
    $end            reduce using rule 83 (Inst_If -> INST_IF Operacion_booleana INST_THEN Bloque_Control INST_ELSE Bloque_Control .)
    INST_ELSE       reduce using rule 83 (Inst_If -> INST_IF Operacion_booleana INST_THEN Bloque_Control INST_ELSE Bloque_Control .)


state 177

    (85) Casos -> VAR_IDENTIFIER CASE_ASSIGN Bloque_Control SEMICOLON .
    (87) Casos -> VAR_IDENTIFIER CASE_ASSIGN Bloque_Control SEMICOLON . Casos
    (85) Casos -> . VAR_IDENTIFIER CASE_ASSIGN Bloque_Control SEMICOLON
    (86) Casos -> . Rango CASE_ASSIGN Bloque_Control SEMICOLON
    (87) Casos -> . VAR_IDENTIFIER CASE_ASSIGN Bloque_Control SEMICOLON Casos
    (88) Casos -> . Rango CASE_ASSIGN Bloque_Control SEMICOLON Casos
    (67) Rango -> . Operacion_binaria RANGE Operacion_binaria
    (68) Rango -> . Rango PLUS Rango
    (69) Rango -> . Rango TIMES Operacion_binaria
    (70) Rango -> . Rango INTERSECTION Rango
    (71) Rango -> . LPAREN Rango RPAREN
    (72) Rango -> . VAR_IDENTIFIER
    (55) Operacion_binaria -> . Operacion_binaria PLUS Term
    (56) Operacion_binaria -> . Operacion_binaria MINUS Term
    (57) Operacion_binaria -> . Term
    (58) Term -> . Term TIMES Factor
    (59) Term -> . Term DIVIDE Factor
    (60) Term -> . Term MOD Factor
    (61) Term -> . Factor
    (62) Factor -> . NUMBER
    (63) Factor -> . VAR_IDENTIFIER
    (64) Factor -> . LPAREN Operacion_binaria RPAREN
    (65) Factor -> . Inst_Funcion
    (66) Factor -> . MINUS Factor
    (17) Inst_Funcion -> . RTOI LPAREN Rango RPAREN
    (18) Inst_Funcion -> . LENGTH LPAREN Rango RPAREN
    (19) Inst_Funcion -> . TOP LPAREN Rango RPAREN
    (20) Inst_Funcion -> . BOTTOM LPAREN Rango RPAREN
    (21) Inst_Funcion -> . RTOI LPAREN VAR_IDENTIFIER RPAREN
    (22) Inst_Funcion -> . LENGTH LPAREN VAR_IDENTIFIER RPAREN
    (23) Inst_Funcion -> . TOP LPAREN VAR_IDENTIFIER RPAREN
    (24) Inst_Funcion -> . BOTTOM LPAREN VAR_IDENTIFIER RPAREN

    INST_END        reduce using rule 85 (Casos -> VAR_IDENTIFIER CASE_ASSIGN Bloque_Control SEMICOLON .)
    VAR_IDENTIFIER  shift and go to state 152
    LPAREN          shift and go to state 93
    NUMBER          shift and go to state 28
    MINUS           shift and go to state 31
    RTOI            shift and go to state 23
    LENGTH          shift and go to state 22
    TOP             shift and go to state 5
    BOTTOM          shift and go to state 11

    Operacion_binaria              shift and go to state 91
    Inst_Funcion                   shift and go to state 26
    Term                           shift and go to state 34
    Factor                         shift and go to state 27
    Rango                          shift and go to state 153
    Casos                          shift and go to state 179

state 178

    (86) Casos -> Rango CASE_ASSIGN Bloque_Control SEMICOLON .
    (88) Casos -> Rango CASE_ASSIGN Bloque_Control SEMICOLON . Casos
    (85) Casos -> . VAR_IDENTIFIER CASE_ASSIGN Bloque_Control SEMICOLON
    (86) Casos -> . Rango CASE_ASSIGN Bloque_Control SEMICOLON
    (87) Casos -> . VAR_IDENTIFIER CASE_ASSIGN Bloque_Control SEMICOLON Casos
    (88) Casos -> . Rango CASE_ASSIGN Bloque_Control SEMICOLON Casos
    (67) Rango -> . Operacion_binaria RANGE Operacion_binaria
    (68) Rango -> . Rango PLUS Rango
    (69) Rango -> . Rango TIMES Operacion_binaria
    (70) Rango -> . Rango INTERSECTION Rango
    (71) Rango -> . LPAREN Rango RPAREN
    (72) Rango -> . VAR_IDENTIFIER
    (55) Operacion_binaria -> . Operacion_binaria PLUS Term
    (56) Operacion_binaria -> . Operacion_binaria MINUS Term
    (57) Operacion_binaria -> . Term
    (58) Term -> . Term TIMES Factor
    (59) Term -> . Term DIVIDE Factor
    (60) Term -> . Term MOD Factor
    (61) Term -> . Factor
    (62) Factor -> . NUMBER
    (63) Factor -> . VAR_IDENTIFIER
    (64) Factor -> . LPAREN Operacion_binaria RPAREN
    (65) Factor -> . Inst_Funcion
    (66) Factor -> . MINUS Factor
    (17) Inst_Funcion -> . RTOI LPAREN Rango RPAREN
    (18) Inst_Funcion -> . LENGTH LPAREN Rango RPAREN
    (19) Inst_Funcion -> . TOP LPAREN Rango RPAREN
    (20) Inst_Funcion -> . BOTTOM LPAREN Rango RPAREN
    (21) Inst_Funcion -> . RTOI LPAREN VAR_IDENTIFIER RPAREN
    (22) Inst_Funcion -> . LENGTH LPAREN VAR_IDENTIFIER RPAREN
    (23) Inst_Funcion -> . TOP LPAREN VAR_IDENTIFIER RPAREN
    (24) Inst_Funcion -> . BOTTOM LPAREN VAR_IDENTIFIER RPAREN

    INST_END        reduce using rule 86 (Casos -> Rango CASE_ASSIGN Bloque_Control SEMICOLON .)
    VAR_IDENTIFIER  shift and go to state 152
    LPAREN          shift and go to state 93
    NUMBER          shift and go to state 28
    MINUS           shift and go to state 31
    RTOI            shift and go to state 23
    LENGTH          shift and go to state 22
    TOP             shift and go to state 5
    BOTTOM          shift and go to state 11

    Operacion_binaria              shift and go to state 91
    Inst_Funcion                   shift and go to state 26
    Term                           shift and go to state 34
    Factor                         shift and go to state 27
    Rango                          shift and go to state 153
    Casos                          shift and go to state 180

state 179

    (87) Casos -> VAR_IDENTIFIER CASE_ASSIGN Bloque_Control SEMICOLON Casos .

    INST_END        reduce using rule 87 (Casos -> VAR_IDENTIFIER CASE_ASSIGN Bloque_Control SEMICOLON Casos .)


state 180

    (88) Casos -> Rango CASE_ASSIGN Bloque_Control SEMICOLON Casos .

    INST_END        reduce using rule 88 (Casos -> Rango CASE_ASSIGN Bloque_Control SEMICOLON Casos .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for TIMES in state 34 resolved as shift
WARNING: shift/reduce conflict for RPAREN in state 92 resolved as shift
WARNING: shift/reduce conflict for RPAREN in state 105 resolved as shift
WARNING: shift/reduce conflict for RPAREN in state 112 resolved as shift
WARNING: shift/reduce conflict for RPAREN in state 114 resolved as shift
WARNING: shift/reduce conflict for CASE_ASSIGN in state 152 resolved as shift
WARNING: shift/reduce conflict for INST_ELSE in state 156 resolved as shift
WARNING: reduce/reduce conflict in state 6 resolved using rule (program -> INST_PROGRAM Bloque_Inst)
WARNING: rejected rule (Inst -> Bloque_Inst) in state 6
WARNING: reduce/reduce conflict in state 36 resolved using rule (Operacion_booleana -> VAR_IDENTIFIER)
WARNING: rejected rule (Rango -> VAR_IDENTIFIER) in state 36
WARNING: reduce/reduce conflict in state 36 resolved using rule (Factor -> VAR_IDENTIFIER)
WARNING: rejected rule (Rango -> VAR_IDENTIFIER) in state 36
WARNING: reduce/reduce conflict in state 36 resolved using rule (Operacion_booleana -> VAR_IDENTIFIER)
WARNING: rejected rule (Factor -> VAR_IDENTIFIER) in state 36
WARNING: reduce/reduce conflict in state 44 resolved using rule (Operacion_booleana -> VAR_IDENTIFIER)
WARNING: rejected rule (Factor -> VAR_IDENTIFIER) in state 44
WARNING: reduce/reduce conflict in state 92 resolved using rule (Factor -> VAR_IDENTIFIER)
WARNING: rejected rule (Rango -> VAR_IDENTIFIER) in state 92
WARNING: reduce/reduce conflict in state 105 resolved using rule (Factor -> VAR_IDENTIFIER)
WARNING: rejected rule (Rango -> VAR_IDENTIFIER) in state 105
WARNING: reduce/reduce conflict in state 112 resolved using rule (Factor -> VAR_IDENTIFIER)
WARNING: rejected rule (Rango -> VAR_IDENTIFIER) in state 112
WARNING: reduce/reduce conflict in state 114 resolved using rule (Factor -> VAR_IDENTIFIER)
WARNING: rejected rule (Rango -> VAR_IDENTIFIER) in state 114
WARNING: reduce/reduce conflict in state 128 resolved using rule (Factor -> VAR_IDENTIFIER)
WARNING: rejected rule (Rango -> VAR_IDENTIFIER) in state 128
WARNING: reduce/reduce conflict in state 142 resolved using rule (Inst -> Bloque_Inst)
WARNING: rejected rule (Inst_While -> INST_WHILE Operacion_booleana INST_DO Bloque_Inst) in state 142
WARNING: reduce/reduce conflict in state 152 resolved using rule (Factor -> VAR_IDENTIFIER)
WARNING: rejected rule (Rango -> VAR_IDENTIFIER) in state 152
WARNING: reduce/reduce conflict in state 155 resolved using rule (Inst -> Bloque_Inst)
WARNING: rejected rule (Bloque_Control -> Bloque_Inst) in state 155
WARNING: Rule (Inst_While -> INST_WHILE Operacion_booleana INST_DO Bloque_Inst) is never reduced
WARNING: Rule (Bloque_Control -> Bloque_Inst) is never reduced
