Created by PLY version 3.4 (http://www.dabeaz.com/ply)

Unused terminals:

    COMMENT
    CASE_ASSIGN
    RESERVED
    IN
    MOD

Grammar

Rule 0     S' -> program
Rule 1     program -> INST_PROGRAM Bloque_Inst
Rule 2     Bloque_Inst -> INST_BEGIN Lista_Inst INST_END
Rule 3     Bloque_Inst -> Inst
Rule 4     Lista_Inst -> Inst
Rule 5     Lista_Inst -> Inst SEMICOLON Lista_Inst
Rule 6     Inst -> Inst_Declare
Rule 7     Inst -> Inst_Asignacion
Rule 8     Inst -> Inst_Lectura
Rule 9     Inst -> Inst_For
Rule 10    Inst -> Inst_While
Rule 11    Inst -> Inst_If
Rule 12    Inst -> Inst_Case
Rule 13    Inst -> Inst_Salida
Rule 14    Inst -> Inst_Funcion
Rule 15    Inst_Funcion -> RTOI LPAREN VAR_IDENTIFIER RPAREN
Rule 16    Inst_Funcion -> LENGTH LPAREN VAR_IDENTIFIER RPAREN
Rule 17    Inst_Funcion -> TOP LPAREN VAR_IDENTIFIER RPAREN
Rule 18    Inst_Funcion -> BOTTOM LPAREN VAR_IDENTIFIER RPAREN
Rule 19    Inst_Declare -> Inst_Declareau
Rule 20    Inst_Declare -> Inst_Declareau SEMICOLON Inst_Declare
Rule 21    Inst_Declareau -> INST_DECLARE Lista_Declare
Rule 22    Lista_Declare -> Lista_Variables INST_AS Tipo
Rule 23    Lista_Variables -> VAR_IDENTIFIER
Rule 24    Lista_Variables -> VAR_IDENTIFIER COMMA Lista_Variables
Rule 25    Tipo -> TYPEDEF_INT
Rule 26    Tipo -> TYPEDEF_BOOL
Rule 27    Tipo -> TYPEDEF_RANGE
Rule 28    Inst_Asignacion -> VAR_IDENTIFIER EQUAL Expresion
Rule 29    Expresion -> Operacion_binaria
Rule 30    Expresion -> Operacion_booleana
Rule 31    Expresion -> Rango
Rule 32    Operacion_booleana -> Operacion_binaria Opr_bool Operacion_binaria
Rule 33    Operacion_booleana -> Operacion_booleana AND Operacion_booleana
Rule 34    Operacion_booleana -> Operacion_booleana OR Operacion_booleana
Rule 35    Operacion_booleana -> LPAREN Operacion_booleana RPAREN
Rule 36    Operacion_booleana -> TRUE
Rule 37    Operacion_booleana -> FALSE
Rule 38    Operacion_booleana -> VAR_IDENTIFIER
Rule 39    Operacion_booleana -> NOT Operacion_booleana
Rule 40    Opr_bool -> EQEQ
Rule 41    Opr_bool -> NEQEQ
Rule 42    Opr_bool -> GREAT
Rule 43    Opr_bool -> LESS
Rule 44    Opr_bool -> GREATEQ
Rule 45    Opr_bool -> LESSEQ
Rule 46    Operacion_binaria -> Operacion_binaria PLUS Term
Rule 47    Operacion_binaria -> Operacion_binaria MINUS Term
Rule 48    Operacion_binaria -> Term
Rule 49    Term -> Term TIMES Factor
Rule 50    Term -> Term DIVIDE Factor
Rule 51    Term -> Factor
Rule 52    Factor -> NUMBER
Rule 53    Factor -> VAR_IDENTIFIER
Rule 54    Factor -> LPAREN Operacion_binaria RPAREN
Rule 55    Rango -> Operacion_binaria RANGE Operacion_binaria
Rule 56    Rango -> Rango PLUS Rango
Rule 57    Rango -> Rango TIMES Operacion_binaria
Rule 58    Rango -> Rango INTERSECTION Rango
Rule 59    Rango -> RangoF
Rule 60    RangoF -> LPAREN Rango RPAREN
Rule 61    Inst_Lectura -> INST_READ VAR_IDENTIFIER
Rule 62    Inst_Salida -> INST_WRITE Lista_Aux
Rule 63    Inst_Salida -> INST_WRITELN Lista_Aux
Rule 64    Lista_Aux -> Expresion
Rule 65    Lista_Aux -> STRING
Rule 66    Lista_Aux -> Expresion COMMA Lista_Aux
Rule 67    Lista_Aux -> STRING COMMA Lista_Aux
Rule 68    Inst_If -> INST_IF Operacion_booleana INST_THEN Bloque_Inst
Rule 69    Inst_If -> INST_IF Operacion_booleana INST_THEN Bloque_Inst INST_ELSE Bloque_Inst
Rule 70    Inst_Case -> INST_CASE Operacion_binaria INST_OF Casos
Rule 71    Casos -> VAR_IDENTIFIER - > Bloque_Inst
Rule 72    Casos -> Rango - > Bloque_Inst
Rule 73    Casos -> Casos Casos
Rule 74    Inst_For -> INST_FOR VAR_IDENTIFIER INST_IN Rango INST_DO Bloque_Inst
Rule 75    Inst_While -> INST_WHILE Operacion_booleana INST_DO Bloque_Inst

Terminals, with rules where they appear

-                    : 71 72
>                    : 71 72
AND                  : 33
BOTTOM               : 18
CASE_ASSIGN          : 
COMMA                : 24 66 67
COMMENT              : 
DIVIDE               : 50
EQEQ                 : 40
EQUAL                : 28
FALSE                : 37
GREAT                : 42
GREATEQ              : 44
IN                   : 
INST_AS              : 22
INST_BEGIN           : 2
INST_CASE            : 70
INST_DECLARE         : 21
INST_DO              : 74 75
INST_ELSE            : 69
INST_END             : 2
INST_FOR             : 74
INST_IF              : 68 69
INST_IN              : 74
INST_OF              : 70
INST_PROGRAM         : 1
INST_READ            : 61
INST_THEN            : 68 69
INST_WHILE           : 75
INST_WRITE           : 62
INST_WRITELN         : 63
INTERSECTION         : 58
LENGTH               : 16
LESS                 : 43
LESSEQ               : 45
LPAREN               : 15 16 17 18 35 54 60
MINUS                : 47
MOD                  : 
NEQEQ                : 41
NOT                  : 39
NUMBER               : 52
OR                   : 34
PLUS                 : 46 56
RANGE                : 55
RESERVED             : 
RPAREN               : 15 16 17 18 35 54 60
RTOI                 : 15
SEMICOLON            : 5 20
STRING               : 65 67
TIMES                : 49 57
TOP                  : 17
TRUE                 : 36
TYPEDEF_BOOL         : 26
TYPEDEF_INT          : 25
TYPEDEF_RANGE        : 27
VAR_IDENTIFIER       : 15 16 17 18 23 24 28 38 53 61 71 74
error                : 

Nonterminals, with rules where they appear

Bloque_Inst          : 1 68 69 69 71 72 74 75
Casos                : 70 73 73
Expresion            : 28 64 66
Factor               : 49 50 51
Inst                 : 3 4 5
Inst_Asignacion      : 7
Inst_Case            : 12
Inst_Declare         : 6 20
Inst_Declareau       : 19 20
Inst_For             : 9
Inst_Funcion         : 14
Inst_If              : 11
Inst_Lectura         : 8
Inst_Salida          : 13
Inst_While           : 10
Lista_Aux            : 62 63 66 67
Lista_Declare        : 21
Lista_Inst           : 2 5
Lista_Variables      : 22 24
Operacion_binaria    : 29 32 32 46 47 54 55 55 57 70
Operacion_booleana   : 30 33 33 34 34 35 39 68 69 75
Opr_bool             : 32
Rango                : 31 56 56 57 58 58 60 72 74
RangoF               : 59
Term                 : 46 47 48 49 50
Tipo                 : 22
program              : 0

Parsing method: LALR

state 0

    (0) S' -> . program
    (1) program -> . INST_PROGRAM Bloque_Inst

    INST_PROGRAM    shift and go to state 2

    program                        shift and go to state 1

state 1

    (0) S' -> program .



state 2

    (1) program -> INST_PROGRAM . Bloque_Inst
    (2) Bloque_Inst -> . INST_BEGIN Lista_Inst INST_END
    (3) Bloque_Inst -> . Inst
    (6) Inst -> . Inst_Declare
    (7) Inst -> . Inst_Asignacion
    (8) Inst -> . Inst_Lectura
    (9) Inst -> . Inst_For
    (10) Inst -> . Inst_While
    (11) Inst -> . Inst_If
    (12) Inst -> . Inst_Case
    (13) Inst -> . Inst_Salida
    (14) Inst -> . Inst_Funcion
    (19) Inst_Declare -> . Inst_Declareau
    (20) Inst_Declare -> . Inst_Declareau SEMICOLON Inst_Declare
    (28) Inst_Asignacion -> . VAR_IDENTIFIER EQUAL Expresion
    (61) Inst_Lectura -> . INST_READ VAR_IDENTIFIER
    (74) Inst_For -> . INST_FOR VAR_IDENTIFIER INST_IN Rango INST_DO Bloque_Inst
    (75) Inst_While -> . INST_WHILE Operacion_booleana INST_DO Bloque_Inst
    (68) Inst_If -> . INST_IF Operacion_booleana INST_THEN Bloque_Inst
    (69) Inst_If -> . INST_IF Operacion_booleana INST_THEN Bloque_Inst INST_ELSE Bloque_Inst
    (70) Inst_Case -> . INST_CASE Operacion_binaria INST_OF Casos
    (62) Inst_Salida -> . INST_WRITE Lista_Aux
    (63) Inst_Salida -> . INST_WRITELN Lista_Aux
    (15) Inst_Funcion -> . RTOI LPAREN VAR_IDENTIFIER RPAREN
    (16) Inst_Funcion -> . LENGTH LPAREN VAR_IDENTIFIER RPAREN
    (17) Inst_Funcion -> . TOP LPAREN VAR_IDENTIFIER RPAREN
    (18) Inst_Funcion -> . BOTTOM LPAREN VAR_IDENTIFIER RPAREN
    (21) Inst_Declareau -> . INST_DECLARE Lista_Declare

    INST_BEGIN      shift and go to state 11
    VAR_IDENTIFIER  shift and go to state 18
    INST_READ       shift and go to state 10
    INST_FOR        shift and go to state 21
    INST_WHILE      shift and go to state 9
    INST_IF         shift and go to state 22
    INST_CASE       shift and go to state 20
    INST_WRITE      shift and go to state 5
    INST_WRITELN    shift and go to state 23
    RTOI            shift and go to state 25
    LENGTH          shift and go to state 24
    TOP             shift and go to state 6
    BOTTOM          shift and go to state 13
    INST_DECLARE    shift and go to state 3

    Inst_Salida                    shift and go to state 8
    Inst_Declare                   shift and go to state 12
    Inst_Funcion                   shift and go to state 4
    Bloque_Inst                    shift and go to state 7
    Inst_If                        shift and go to state 19
    Inst_For                       shift and go to state 14
    Inst_While                     shift and go to state 16
    Inst                           shift and go to state 15
    Inst_Asignacion                shift and go to state 26
    Inst_Case                      shift and go to state 27
    Inst_Lectura                   shift and go to state 17
    Inst_Declareau                 shift and go to state 28

state 3

    (21) Inst_Declareau -> INST_DECLARE . Lista_Declare
    (22) Lista_Declare -> . Lista_Variables INST_AS Tipo
    (23) Lista_Variables -> . VAR_IDENTIFIER
    (24) Lista_Variables -> . VAR_IDENTIFIER COMMA Lista_Variables

    VAR_IDENTIFIER  shift and go to state 29

    Lista_Variables                shift and go to state 30
    Lista_Declare                  shift and go to state 31

state 4

    (14) Inst -> Inst_Funcion .

    SEMICOLON       reduce using rule 14 (Inst -> Inst_Funcion .)
    INST_END        reduce using rule 14 (Inst -> Inst_Funcion .)
    $end            reduce using rule 14 (Inst -> Inst_Funcion .)
    INST_ELSE       reduce using rule 14 (Inst -> Inst_Funcion .)
    VAR_IDENTIFIER  reduce using rule 14 (Inst -> Inst_Funcion .)
    LPAREN          reduce using rule 14 (Inst -> Inst_Funcion .)
    NUMBER          reduce using rule 14 (Inst -> Inst_Funcion .)


state 5

    (62) Inst_Salida -> INST_WRITE . Lista_Aux
    (64) Lista_Aux -> . Expresion
    (65) Lista_Aux -> . STRING
    (66) Lista_Aux -> . Expresion COMMA Lista_Aux
    (67) Lista_Aux -> . STRING COMMA Lista_Aux
    (29) Expresion -> . Operacion_binaria
    (30) Expresion -> . Operacion_booleana
    (31) Expresion -> . Rango
    (46) Operacion_binaria -> . Operacion_binaria PLUS Term
    (47) Operacion_binaria -> . Operacion_binaria MINUS Term
    (48) Operacion_binaria -> . Term
    (32) Operacion_booleana -> . Operacion_binaria Opr_bool Operacion_binaria
    (33) Operacion_booleana -> . Operacion_booleana AND Operacion_booleana
    (34) Operacion_booleana -> . Operacion_booleana OR Operacion_booleana
    (35) Operacion_booleana -> . LPAREN Operacion_booleana RPAREN
    (36) Operacion_booleana -> . TRUE
    (37) Operacion_booleana -> . FALSE
    (38) Operacion_booleana -> . VAR_IDENTIFIER
    (39) Operacion_booleana -> . NOT Operacion_booleana
    (55) Rango -> . Operacion_binaria RANGE Operacion_binaria
    (56) Rango -> . Rango PLUS Rango
    (57) Rango -> . Rango TIMES Operacion_binaria
    (58) Rango -> . Rango INTERSECTION Rango
    (59) Rango -> . RangoF
    (49) Term -> . Term TIMES Factor
    (50) Term -> . Term DIVIDE Factor
    (51) Term -> . Factor
    (60) RangoF -> . LPAREN Rango RPAREN
    (52) Factor -> . NUMBER
    (53) Factor -> . VAR_IDENTIFIER
    (54) Factor -> . LPAREN Operacion_binaria RPAREN

    STRING          shift and go to state 39
    LPAREN          shift and go to state 42
    TRUE            shift and go to state 35
    FALSE           shift and go to state 45
    VAR_IDENTIFIER  shift and go to state 41
    NOT             shift and go to state 46
    NUMBER          shift and go to state 33

    Expresion                      shift and go to state 37
    Operacion_binaria              shift and go to state 44
    RangoF                         shift and go to state 32
    Factor                         shift and go to state 40
    Term                           shift and go to state 38
    Lista_Aux                      shift and go to state 34
    Rango                          shift and go to state 43
    Operacion_booleana             shift and go to state 36

state 6

    (17) Inst_Funcion -> TOP . LPAREN VAR_IDENTIFIER RPAREN

    LPAREN          shift and go to state 47


state 7

    (1) program -> INST_PROGRAM Bloque_Inst .

    $end            reduce using rule 1 (program -> INST_PROGRAM Bloque_Inst .)


state 8

    (13) Inst -> Inst_Salida .

    SEMICOLON       reduce using rule 13 (Inst -> Inst_Salida .)
    INST_END        reduce using rule 13 (Inst -> Inst_Salida .)
    $end            reduce using rule 13 (Inst -> Inst_Salida .)
    INST_ELSE       reduce using rule 13 (Inst -> Inst_Salida .)
    VAR_IDENTIFIER  reduce using rule 13 (Inst -> Inst_Salida .)
    LPAREN          reduce using rule 13 (Inst -> Inst_Salida .)
    NUMBER          reduce using rule 13 (Inst -> Inst_Salida .)


state 9

    (75) Inst_While -> INST_WHILE . Operacion_booleana INST_DO Bloque_Inst
    (32) Operacion_booleana -> . Operacion_binaria Opr_bool Operacion_binaria
    (33) Operacion_booleana -> . Operacion_booleana AND Operacion_booleana
    (34) Operacion_booleana -> . Operacion_booleana OR Operacion_booleana
    (35) Operacion_booleana -> . LPAREN Operacion_booleana RPAREN
    (36) Operacion_booleana -> . TRUE
    (37) Operacion_booleana -> . FALSE
    (38) Operacion_booleana -> . VAR_IDENTIFIER
    (39) Operacion_booleana -> . NOT Operacion_booleana
    (46) Operacion_binaria -> . Operacion_binaria PLUS Term
    (47) Operacion_binaria -> . Operacion_binaria MINUS Term
    (48) Operacion_binaria -> . Term
    (49) Term -> . Term TIMES Factor
    (50) Term -> . Term DIVIDE Factor
    (51) Term -> . Factor
    (52) Factor -> . NUMBER
    (53) Factor -> . VAR_IDENTIFIER
    (54) Factor -> . LPAREN Operacion_binaria RPAREN

    LPAREN          shift and go to state 49
    TRUE            shift and go to state 35
    FALSE           shift and go to state 45
    VAR_IDENTIFIER  shift and go to state 41
    NOT             shift and go to state 46
    NUMBER          shift and go to state 33

    Operacion_binaria              shift and go to state 48
    Term                           shift and go to state 38
    Factor                         shift and go to state 40
    Operacion_booleana             shift and go to state 50

state 10

    (61) Inst_Lectura -> INST_READ . VAR_IDENTIFIER

    VAR_IDENTIFIER  shift and go to state 51


state 11

    (2) Bloque_Inst -> INST_BEGIN . Lista_Inst INST_END
    (4) Lista_Inst -> . Inst
    (5) Lista_Inst -> . Inst SEMICOLON Lista_Inst
    (6) Inst -> . Inst_Declare
    (7) Inst -> . Inst_Asignacion
    (8) Inst -> . Inst_Lectura
    (9) Inst -> . Inst_For
    (10) Inst -> . Inst_While
    (11) Inst -> . Inst_If
    (12) Inst -> . Inst_Case
    (13) Inst -> . Inst_Salida
    (14) Inst -> . Inst_Funcion
    (19) Inst_Declare -> . Inst_Declareau
    (20) Inst_Declare -> . Inst_Declareau SEMICOLON Inst_Declare
    (28) Inst_Asignacion -> . VAR_IDENTIFIER EQUAL Expresion
    (61) Inst_Lectura -> . INST_READ VAR_IDENTIFIER
    (74) Inst_For -> . INST_FOR VAR_IDENTIFIER INST_IN Rango INST_DO Bloque_Inst
    (75) Inst_While -> . INST_WHILE Operacion_booleana INST_DO Bloque_Inst
    (68) Inst_If -> . INST_IF Operacion_booleana INST_THEN Bloque_Inst
    (69) Inst_If -> . INST_IF Operacion_booleana INST_THEN Bloque_Inst INST_ELSE Bloque_Inst
    (70) Inst_Case -> . INST_CASE Operacion_binaria INST_OF Casos
    (62) Inst_Salida -> . INST_WRITE Lista_Aux
    (63) Inst_Salida -> . INST_WRITELN Lista_Aux
    (15) Inst_Funcion -> . RTOI LPAREN VAR_IDENTIFIER RPAREN
    (16) Inst_Funcion -> . LENGTH LPAREN VAR_IDENTIFIER RPAREN
    (17) Inst_Funcion -> . TOP LPAREN VAR_IDENTIFIER RPAREN
    (18) Inst_Funcion -> . BOTTOM LPAREN VAR_IDENTIFIER RPAREN
    (21) Inst_Declareau -> . INST_DECLARE Lista_Declare

    VAR_IDENTIFIER  shift and go to state 18
    INST_READ       shift and go to state 10
    INST_FOR        shift and go to state 21
    INST_WHILE      shift and go to state 9
    INST_IF         shift and go to state 22
    INST_CASE       shift and go to state 20
    INST_WRITE      shift and go to state 5
    INST_WRITELN    shift and go to state 23
    RTOI            shift and go to state 25
    LENGTH          shift and go to state 24
    TOP             shift and go to state 6
    BOTTOM          shift and go to state 13
    INST_DECLARE    shift and go to state 3

    Inst_Salida                    shift and go to state 8
    Inst_Declare                   shift and go to state 12
    Inst_Funcion                   shift and go to state 4
    Inst_If                        shift and go to state 19
    Inst_For                       shift and go to state 14
    Inst_While                     shift and go to state 16
    Inst                           shift and go to state 52
    Inst_Asignacion                shift and go to state 26
    Inst_Case                      shift and go to state 27
    Inst_Lectura                   shift and go to state 17
    Lista_Inst                     shift and go to state 53
    Inst_Declareau                 shift and go to state 28

state 12

    (6) Inst -> Inst_Declare .

    SEMICOLON       reduce using rule 6 (Inst -> Inst_Declare .)
    INST_END        reduce using rule 6 (Inst -> Inst_Declare .)
    $end            reduce using rule 6 (Inst -> Inst_Declare .)
    INST_ELSE       reduce using rule 6 (Inst -> Inst_Declare .)
    VAR_IDENTIFIER  reduce using rule 6 (Inst -> Inst_Declare .)
    LPAREN          reduce using rule 6 (Inst -> Inst_Declare .)
    NUMBER          reduce using rule 6 (Inst -> Inst_Declare .)


state 13

    (18) Inst_Funcion -> BOTTOM . LPAREN VAR_IDENTIFIER RPAREN

    LPAREN          shift and go to state 54


state 14

    (9) Inst -> Inst_For .

    SEMICOLON       reduce using rule 9 (Inst -> Inst_For .)
    INST_END        reduce using rule 9 (Inst -> Inst_For .)
    $end            reduce using rule 9 (Inst -> Inst_For .)
    INST_ELSE       reduce using rule 9 (Inst -> Inst_For .)
    VAR_IDENTIFIER  reduce using rule 9 (Inst -> Inst_For .)
    LPAREN          reduce using rule 9 (Inst -> Inst_For .)
    NUMBER          reduce using rule 9 (Inst -> Inst_For .)


state 15

    (3) Bloque_Inst -> Inst .

    $end            reduce using rule 3 (Bloque_Inst -> Inst .)
    SEMICOLON       reduce using rule 3 (Bloque_Inst -> Inst .)
    INST_END        reduce using rule 3 (Bloque_Inst -> Inst .)
    INST_ELSE       reduce using rule 3 (Bloque_Inst -> Inst .)
    VAR_IDENTIFIER  reduce using rule 3 (Bloque_Inst -> Inst .)
    LPAREN          reduce using rule 3 (Bloque_Inst -> Inst .)
    NUMBER          reduce using rule 3 (Bloque_Inst -> Inst .)


state 16

    (10) Inst -> Inst_While .

    SEMICOLON       reduce using rule 10 (Inst -> Inst_While .)
    INST_END        reduce using rule 10 (Inst -> Inst_While .)
    $end            reduce using rule 10 (Inst -> Inst_While .)
    INST_ELSE       reduce using rule 10 (Inst -> Inst_While .)
    VAR_IDENTIFIER  reduce using rule 10 (Inst -> Inst_While .)
    LPAREN          reduce using rule 10 (Inst -> Inst_While .)
    NUMBER          reduce using rule 10 (Inst -> Inst_While .)


state 17

    (8) Inst -> Inst_Lectura .

    SEMICOLON       reduce using rule 8 (Inst -> Inst_Lectura .)
    INST_END        reduce using rule 8 (Inst -> Inst_Lectura .)
    $end            reduce using rule 8 (Inst -> Inst_Lectura .)
    INST_ELSE       reduce using rule 8 (Inst -> Inst_Lectura .)
    VAR_IDENTIFIER  reduce using rule 8 (Inst -> Inst_Lectura .)
    LPAREN          reduce using rule 8 (Inst -> Inst_Lectura .)
    NUMBER          reduce using rule 8 (Inst -> Inst_Lectura .)


state 18

    (28) Inst_Asignacion -> VAR_IDENTIFIER . EQUAL Expresion

    EQUAL           shift and go to state 55


state 19

    (11) Inst -> Inst_If .

    SEMICOLON       reduce using rule 11 (Inst -> Inst_If .)
    INST_END        reduce using rule 11 (Inst -> Inst_If .)
    $end            reduce using rule 11 (Inst -> Inst_If .)
    INST_ELSE       reduce using rule 11 (Inst -> Inst_If .)
    VAR_IDENTIFIER  reduce using rule 11 (Inst -> Inst_If .)
    LPAREN          reduce using rule 11 (Inst -> Inst_If .)
    NUMBER          reduce using rule 11 (Inst -> Inst_If .)


state 20

    (70) Inst_Case -> INST_CASE . Operacion_binaria INST_OF Casos
    (46) Operacion_binaria -> . Operacion_binaria PLUS Term
    (47) Operacion_binaria -> . Operacion_binaria MINUS Term
    (48) Operacion_binaria -> . Term
    (49) Term -> . Term TIMES Factor
    (50) Term -> . Term DIVIDE Factor
    (51) Term -> . Factor
    (52) Factor -> . NUMBER
    (53) Factor -> . VAR_IDENTIFIER
    (54) Factor -> . LPAREN Operacion_binaria RPAREN

    NUMBER          shift and go to state 33
    VAR_IDENTIFIER  shift and go to state 56
    LPAREN          shift and go to state 58

    Operacion_binaria              shift and go to state 57
    Term                           shift and go to state 38
    Factor                         shift and go to state 40

state 21

    (74) Inst_For -> INST_FOR . VAR_IDENTIFIER INST_IN Rango INST_DO Bloque_Inst

    VAR_IDENTIFIER  shift and go to state 59


state 22

    (68) Inst_If -> INST_IF . Operacion_booleana INST_THEN Bloque_Inst
    (69) Inst_If -> INST_IF . Operacion_booleana INST_THEN Bloque_Inst INST_ELSE Bloque_Inst
    (32) Operacion_booleana -> . Operacion_binaria Opr_bool Operacion_binaria
    (33) Operacion_booleana -> . Operacion_booleana AND Operacion_booleana
    (34) Operacion_booleana -> . Operacion_booleana OR Operacion_booleana
    (35) Operacion_booleana -> . LPAREN Operacion_booleana RPAREN
    (36) Operacion_booleana -> . TRUE
    (37) Operacion_booleana -> . FALSE
    (38) Operacion_booleana -> . VAR_IDENTIFIER
    (39) Operacion_booleana -> . NOT Operacion_booleana
    (46) Operacion_binaria -> . Operacion_binaria PLUS Term
    (47) Operacion_binaria -> . Operacion_binaria MINUS Term
    (48) Operacion_binaria -> . Term
    (49) Term -> . Term TIMES Factor
    (50) Term -> . Term DIVIDE Factor
    (51) Term -> . Factor
    (52) Factor -> . NUMBER
    (53) Factor -> . VAR_IDENTIFIER
    (54) Factor -> . LPAREN Operacion_binaria RPAREN

    LPAREN          shift and go to state 49
    TRUE            shift and go to state 35
    FALSE           shift and go to state 45
    VAR_IDENTIFIER  shift and go to state 41
    NOT             shift and go to state 46
    NUMBER          shift and go to state 33

    Operacion_binaria              shift and go to state 48
    Term                           shift and go to state 38
    Factor                         shift and go to state 40
    Operacion_booleana             shift and go to state 60

state 23

    (63) Inst_Salida -> INST_WRITELN . Lista_Aux
    (64) Lista_Aux -> . Expresion
    (65) Lista_Aux -> . STRING
    (66) Lista_Aux -> . Expresion COMMA Lista_Aux
    (67) Lista_Aux -> . STRING COMMA Lista_Aux
    (29) Expresion -> . Operacion_binaria
    (30) Expresion -> . Operacion_booleana
    (31) Expresion -> . Rango
    (46) Operacion_binaria -> . Operacion_binaria PLUS Term
    (47) Operacion_binaria -> . Operacion_binaria MINUS Term
    (48) Operacion_binaria -> . Term
    (32) Operacion_booleana -> . Operacion_binaria Opr_bool Operacion_binaria
    (33) Operacion_booleana -> . Operacion_booleana AND Operacion_booleana
    (34) Operacion_booleana -> . Operacion_booleana OR Operacion_booleana
    (35) Operacion_booleana -> . LPAREN Operacion_booleana RPAREN
    (36) Operacion_booleana -> . TRUE
    (37) Operacion_booleana -> . FALSE
    (38) Operacion_booleana -> . VAR_IDENTIFIER
    (39) Operacion_booleana -> . NOT Operacion_booleana
    (55) Rango -> . Operacion_binaria RANGE Operacion_binaria
    (56) Rango -> . Rango PLUS Rango
    (57) Rango -> . Rango TIMES Operacion_binaria
    (58) Rango -> . Rango INTERSECTION Rango
    (59) Rango -> . RangoF
    (49) Term -> . Term TIMES Factor
    (50) Term -> . Term DIVIDE Factor
    (51) Term -> . Factor
    (60) RangoF -> . LPAREN Rango RPAREN
    (52) Factor -> . NUMBER
    (53) Factor -> . VAR_IDENTIFIER
    (54) Factor -> . LPAREN Operacion_binaria RPAREN

    STRING          shift and go to state 39
    LPAREN          shift and go to state 42
    TRUE            shift and go to state 35
    FALSE           shift and go to state 45
    VAR_IDENTIFIER  shift and go to state 41
    NOT             shift and go to state 46
    NUMBER          shift and go to state 33

    Expresion                      shift and go to state 37
    Operacion_binaria              shift and go to state 44
    RangoF                         shift and go to state 32
    Factor                         shift and go to state 40
    Term                           shift and go to state 38
    Lista_Aux                      shift and go to state 61
    Rango                          shift and go to state 43
    Operacion_booleana             shift and go to state 36

state 24

    (16) Inst_Funcion -> LENGTH . LPAREN VAR_IDENTIFIER RPAREN

    LPAREN          shift and go to state 62


state 25

    (15) Inst_Funcion -> RTOI . LPAREN VAR_IDENTIFIER RPAREN

    LPAREN          shift and go to state 63


state 26

    (7) Inst -> Inst_Asignacion .

    SEMICOLON       reduce using rule 7 (Inst -> Inst_Asignacion .)
    INST_END        reduce using rule 7 (Inst -> Inst_Asignacion .)
    $end            reduce using rule 7 (Inst -> Inst_Asignacion .)
    INST_ELSE       reduce using rule 7 (Inst -> Inst_Asignacion .)
    VAR_IDENTIFIER  reduce using rule 7 (Inst -> Inst_Asignacion .)
    LPAREN          reduce using rule 7 (Inst -> Inst_Asignacion .)
    NUMBER          reduce using rule 7 (Inst -> Inst_Asignacion .)


state 27

    (12) Inst -> Inst_Case .

    SEMICOLON       reduce using rule 12 (Inst -> Inst_Case .)
    INST_END        reduce using rule 12 (Inst -> Inst_Case .)
    $end            reduce using rule 12 (Inst -> Inst_Case .)
    INST_ELSE       reduce using rule 12 (Inst -> Inst_Case .)
    VAR_IDENTIFIER  reduce using rule 12 (Inst -> Inst_Case .)
    LPAREN          reduce using rule 12 (Inst -> Inst_Case .)
    NUMBER          reduce using rule 12 (Inst -> Inst_Case .)


state 28

    (19) Inst_Declare -> Inst_Declareau .
    (20) Inst_Declare -> Inst_Declareau . SEMICOLON Inst_Declare

  ! shift/reduce conflict for SEMICOLON resolved as shift
    INST_END        reduce using rule 19 (Inst_Declare -> Inst_Declareau .)
    $end            reduce using rule 19 (Inst_Declare -> Inst_Declareau .)
    INST_ELSE       reduce using rule 19 (Inst_Declare -> Inst_Declareau .)
    VAR_IDENTIFIER  reduce using rule 19 (Inst_Declare -> Inst_Declareau .)
    LPAREN          reduce using rule 19 (Inst_Declare -> Inst_Declareau .)
    NUMBER          reduce using rule 19 (Inst_Declare -> Inst_Declareau .)
    SEMICOLON       shift and go to state 64

  ! SEMICOLON       [ reduce using rule 19 (Inst_Declare -> Inst_Declareau .) ]


state 29

    (23) Lista_Variables -> VAR_IDENTIFIER .
    (24) Lista_Variables -> VAR_IDENTIFIER . COMMA Lista_Variables

    INST_AS         reduce using rule 23 (Lista_Variables -> VAR_IDENTIFIER .)
    COMMA           shift and go to state 65


state 30

    (22) Lista_Declare -> Lista_Variables . INST_AS Tipo

    INST_AS         shift and go to state 66


state 31

    (21) Inst_Declareau -> INST_DECLARE Lista_Declare .

    SEMICOLON       reduce using rule 21 (Inst_Declareau -> INST_DECLARE Lista_Declare .)
    $end            reduce using rule 21 (Inst_Declareau -> INST_DECLARE Lista_Declare .)
    INST_END        reduce using rule 21 (Inst_Declareau -> INST_DECLARE Lista_Declare .)
    INST_ELSE       reduce using rule 21 (Inst_Declareau -> INST_DECLARE Lista_Declare .)
    VAR_IDENTIFIER  reduce using rule 21 (Inst_Declareau -> INST_DECLARE Lista_Declare .)
    LPAREN          reduce using rule 21 (Inst_Declareau -> INST_DECLARE Lista_Declare .)
    NUMBER          reduce using rule 21 (Inst_Declareau -> INST_DECLARE Lista_Declare .)


state 32

    (59) Rango -> RangoF .

    PLUS            reduce using rule 59 (Rango -> RangoF .)
    TIMES           reduce using rule 59 (Rango -> RangoF .)
    INTERSECTION    reduce using rule 59 (Rango -> RangoF .)
    $end            reduce using rule 59 (Rango -> RangoF .)
    SEMICOLON       reduce using rule 59 (Rango -> RangoF .)
    INST_END        reduce using rule 59 (Rango -> RangoF .)
    INST_ELSE       reduce using rule 59 (Rango -> RangoF .)
    VAR_IDENTIFIER  reduce using rule 59 (Rango -> RangoF .)
    LPAREN          reduce using rule 59 (Rango -> RangoF .)
    NUMBER          reduce using rule 59 (Rango -> RangoF .)
    RPAREN          reduce using rule 59 (Rango -> RangoF .)
    COMMA           reduce using rule 59 (Rango -> RangoF .)
    -               reduce using rule 59 (Rango -> RangoF .)
    INST_DO         reduce using rule 59 (Rango -> RangoF .)


state 33

    (52) Factor -> NUMBER .

    TIMES           reduce using rule 52 (Factor -> NUMBER .)
    DIVIDE          reduce using rule 52 (Factor -> NUMBER .)
    PLUS            reduce using rule 52 (Factor -> NUMBER .)
    MINUS           reduce using rule 52 (Factor -> NUMBER .)
    EQEQ            reduce using rule 52 (Factor -> NUMBER .)
    NEQEQ           reduce using rule 52 (Factor -> NUMBER .)
    GREAT           reduce using rule 52 (Factor -> NUMBER .)
    LESS            reduce using rule 52 (Factor -> NUMBER .)
    GREATEQ         reduce using rule 52 (Factor -> NUMBER .)
    LESSEQ          reduce using rule 52 (Factor -> NUMBER .)
    RANGE           reduce using rule 52 (Factor -> NUMBER .)
    COMMA           reduce using rule 52 (Factor -> NUMBER .)
    $end            reduce using rule 52 (Factor -> NUMBER .)
    SEMICOLON       reduce using rule 52 (Factor -> NUMBER .)
    INST_END        reduce using rule 52 (Factor -> NUMBER .)
    INST_ELSE       reduce using rule 52 (Factor -> NUMBER .)
    VAR_IDENTIFIER  reduce using rule 52 (Factor -> NUMBER .)
    LPAREN          reduce using rule 52 (Factor -> NUMBER .)
    NUMBER          reduce using rule 52 (Factor -> NUMBER .)
    INST_OF         reduce using rule 52 (Factor -> NUMBER .)
    RPAREN          reduce using rule 52 (Factor -> NUMBER .)
    INTERSECTION    reduce using rule 52 (Factor -> NUMBER .)
    -               reduce using rule 52 (Factor -> NUMBER .)
    INST_DO         reduce using rule 52 (Factor -> NUMBER .)
    AND             reduce using rule 52 (Factor -> NUMBER .)
    OR              reduce using rule 52 (Factor -> NUMBER .)
    INST_THEN       reduce using rule 52 (Factor -> NUMBER .)


state 34

    (62) Inst_Salida -> INST_WRITE Lista_Aux .

    $end            reduce using rule 62 (Inst_Salida -> INST_WRITE Lista_Aux .)
    SEMICOLON       reduce using rule 62 (Inst_Salida -> INST_WRITE Lista_Aux .)
    INST_END        reduce using rule 62 (Inst_Salida -> INST_WRITE Lista_Aux .)
    INST_ELSE       reduce using rule 62 (Inst_Salida -> INST_WRITE Lista_Aux .)
    VAR_IDENTIFIER  reduce using rule 62 (Inst_Salida -> INST_WRITE Lista_Aux .)
    LPAREN          reduce using rule 62 (Inst_Salida -> INST_WRITE Lista_Aux .)
    NUMBER          reduce using rule 62 (Inst_Salida -> INST_WRITE Lista_Aux .)


state 35

    (36) Operacion_booleana -> TRUE .

    AND             reduce using rule 36 (Operacion_booleana -> TRUE .)
    OR              reduce using rule 36 (Operacion_booleana -> TRUE .)
    COMMA           reduce using rule 36 (Operacion_booleana -> TRUE .)
    $end            reduce using rule 36 (Operacion_booleana -> TRUE .)
    SEMICOLON       reduce using rule 36 (Operacion_booleana -> TRUE .)
    INST_END        reduce using rule 36 (Operacion_booleana -> TRUE .)
    INST_ELSE       reduce using rule 36 (Operacion_booleana -> TRUE .)
    VAR_IDENTIFIER  reduce using rule 36 (Operacion_booleana -> TRUE .)
    LPAREN          reduce using rule 36 (Operacion_booleana -> TRUE .)
    NUMBER          reduce using rule 36 (Operacion_booleana -> TRUE .)
    INST_DO         reduce using rule 36 (Operacion_booleana -> TRUE .)
    INST_THEN       reduce using rule 36 (Operacion_booleana -> TRUE .)
    RPAREN          reduce using rule 36 (Operacion_booleana -> TRUE .)


state 36

    (30) Expresion -> Operacion_booleana .
    (33) Operacion_booleana -> Operacion_booleana . AND Operacion_booleana
    (34) Operacion_booleana -> Operacion_booleana . OR Operacion_booleana

    COMMA           reduce using rule 30 (Expresion -> Operacion_booleana .)
    $end            reduce using rule 30 (Expresion -> Operacion_booleana .)
    SEMICOLON       reduce using rule 30 (Expresion -> Operacion_booleana .)
    INST_END        reduce using rule 30 (Expresion -> Operacion_booleana .)
    INST_ELSE       reduce using rule 30 (Expresion -> Operacion_booleana .)
    VAR_IDENTIFIER  reduce using rule 30 (Expresion -> Operacion_booleana .)
    LPAREN          reduce using rule 30 (Expresion -> Operacion_booleana .)
    NUMBER          reduce using rule 30 (Expresion -> Operacion_booleana .)
    AND             shift and go to state 67
    OR              shift and go to state 68


state 37

    (64) Lista_Aux -> Expresion .
    (66) Lista_Aux -> Expresion . COMMA Lista_Aux

    $end            reduce using rule 64 (Lista_Aux -> Expresion .)
    SEMICOLON       reduce using rule 64 (Lista_Aux -> Expresion .)
    INST_END        reduce using rule 64 (Lista_Aux -> Expresion .)
    INST_ELSE       reduce using rule 64 (Lista_Aux -> Expresion .)
    VAR_IDENTIFIER  reduce using rule 64 (Lista_Aux -> Expresion .)
    LPAREN          reduce using rule 64 (Lista_Aux -> Expresion .)
    NUMBER          reduce using rule 64 (Lista_Aux -> Expresion .)
    COMMA           shift and go to state 69


state 38

    (48) Operacion_binaria -> Term .
    (49) Term -> Term . TIMES Factor
    (50) Term -> Term . DIVIDE Factor

  ! shift/reduce conflict for TIMES resolved as shift
    RPAREN          reduce using rule 48 (Operacion_binaria -> Term .)
    RANGE           reduce using rule 48 (Operacion_binaria -> Term .)
    PLUS            reduce using rule 48 (Operacion_binaria -> Term .)
    MINUS           reduce using rule 48 (Operacion_binaria -> Term .)
    INTERSECTION    reduce using rule 48 (Operacion_binaria -> Term .)
    COMMA           reduce using rule 48 (Operacion_binaria -> Term .)
    $end            reduce using rule 48 (Operacion_binaria -> Term .)
    SEMICOLON       reduce using rule 48 (Operacion_binaria -> Term .)
    INST_END        reduce using rule 48 (Operacion_binaria -> Term .)
    INST_ELSE       reduce using rule 48 (Operacion_binaria -> Term .)
    VAR_IDENTIFIER  reduce using rule 48 (Operacion_binaria -> Term .)
    LPAREN          reduce using rule 48 (Operacion_binaria -> Term .)
    NUMBER          reduce using rule 48 (Operacion_binaria -> Term .)
    -               reduce using rule 48 (Operacion_binaria -> Term .)
    INST_DO         reduce using rule 48 (Operacion_binaria -> Term .)
    EQEQ            reduce using rule 48 (Operacion_binaria -> Term .)
    NEQEQ           reduce using rule 48 (Operacion_binaria -> Term .)
    GREAT           reduce using rule 48 (Operacion_binaria -> Term .)
    LESS            reduce using rule 48 (Operacion_binaria -> Term .)
    GREATEQ         reduce using rule 48 (Operacion_binaria -> Term .)
    LESSEQ          reduce using rule 48 (Operacion_binaria -> Term .)
    INST_OF         reduce using rule 48 (Operacion_binaria -> Term .)
    AND             reduce using rule 48 (Operacion_binaria -> Term .)
    OR              reduce using rule 48 (Operacion_binaria -> Term .)
    INST_THEN       reduce using rule 48 (Operacion_binaria -> Term .)
    TIMES           shift and go to state 71
    DIVIDE          shift and go to state 70

  ! TIMES           [ reduce using rule 48 (Operacion_binaria -> Term .) ]


state 39

    (65) Lista_Aux -> STRING .
    (67) Lista_Aux -> STRING . COMMA Lista_Aux

    $end            reduce using rule 65 (Lista_Aux -> STRING .)
    SEMICOLON       reduce using rule 65 (Lista_Aux -> STRING .)
    INST_END        reduce using rule 65 (Lista_Aux -> STRING .)
    INST_ELSE       reduce using rule 65 (Lista_Aux -> STRING .)
    VAR_IDENTIFIER  reduce using rule 65 (Lista_Aux -> STRING .)
    LPAREN          reduce using rule 65 (Lista_Aux -> STRING .)
    NUMBER          reduce using rule 65 (Lista_Aux -> STRING .)
    COMMA           shift and go to state 72


state 40

    (51) Term -> Factor .

    TIMES           reduce using rule 51 (Term -> Factor .)
    DIVIDE          reduce using rule 51 (Term -> Factor .)
    PLUS            reduce using rule 51 (Term -> Factor .)
    MINUS           reduce using rule 51 (Term -> Factor .)
    RANGE           reduce using rule 51 (Term -> Factor .)
    EQEQ            reduce using rule 51 (Term -> Factor .)
    NEQEQ           reduce using rule 51 (Term -> Factor .)
    GREAT           reduce using rule 51 (Term -> Factor .)
    LESS            reduce using rule 51 (Term -> Factor .)
    GREATEQ         reduce using rule 51 (Term -> Factor .)
    LESSEQ          reduce using rule 51 (Term -> Factor .)
    $end            reduce using rule 51 (Term -> Factor .)
    SEMICOLON       reduce using rule 51 (Term -> Factor .)
    INST_END        reduce using rule 51 (Term -> Factor .)
    INST_ELSE       reduce using rule 51 (Term -> Factor .)
    VAR_IDENTIFIER  reduce using rule 51 (Term -> Factor .)
    LPAREN          reduce using rule 51 (Term -> Factor .)
    NUMBER          reduce using rule 51 (Term -> Factor .)
    INTERSECTION    reduce using rule 51 (Term -> Factor .)
    COMMA           reduce using rule 51 (Term -> Factor .)
    RPAREN          reduce using rule 51 (Term -> Factor .)
    -               reduce using rule 51 (Term -> Factor .)
    INST_DO         reduce using rule 51 (Term -> Factor .)
    INST_OF         reduce using rule 51 (Term -> Factor .)
    AND             reduce using rule 51 (Term -> Factor .)
    OR              reduce using rule 51 (Term -> Factor .)
    INST_THEN       reduce using rule 51 (Term -> Factor .)


state 41

    (38) Operacion_booleana -> VAR_IDENTIFIER .
    (53) Factor -> VAR_IDENTIFIER .

  ! reduce/reduce conflict for COMMA resolved using rule 38 (Operacion_booleana -> VAR_IDENTIFIER .)
  ! reduce/reduce conflict for $end resolved using rule 38 (Operacion_booleana -> VAR_IDENTIFIER .)
  ! reduce/reduce conflict for SEMICOLON resolved using rule 38 (Operacion_booleana -> VAR_IDENTIFIER .)
  ! reduce/reduce conflict for INST_END resolved using rule 38 (Operacion_booleana -> VAR_IDENTIFIER .)
  ! reduce/reduce conflict for INST_ELSE resolved using rule 38 (Operacion_booleana -> VAR_IDENTIFIER .)
  ! reduce/reduce conflict for VAR_IDENTIFIER resolved using rule 38 (Operacion_booleana -> VAR_IDENTIFIER .)
  ! reduce/reduce conflict for LPAREN resolved using rule 38 (Operacion_booleana -> VAR_IDENTIFIER .)
  ! reduce/reduce conflict for NUMBER resolved using rule 38 (Operacion_booleana -> VAR_IDENTIFIER .)
  ! reduce/reduce conflict for RPAREN resolved using rule 38 (Operacion_booleana -> VAR_IDENTIFIER .)
    AND             reduce using rule 38 (Operacion_booleana -> VAR_IDENTIFIER .)
    OR              reduce using rule 38 (Operacion_booleana -> VAR_IDENTIFIER .)
    COMMA           reduce using rule 38 (Operacion_booleana -> VAR_IDENTIFIER .)
    $end            reduce using rule 38 (Operacion_booleana -> VAR_IDENTIFIER .)
    SEMICOLON       reduce using rule 38 (Operacion_booleana -> VAR_IDENTIFIER .)
    INST_END        reduce using rule 38 (Operacion_booleana -> VAR_IDENTIFIER .)
    INST_ELSE       reduce using rule 38 (Operacion_booleana -> VAR_IDENTIFIER .)
    VAR_IDENTIFIER  reduce using rule 38 (Operacion_booleana -> VAR_IDENTIFIER .)
    LPAREN          reduce using rule 38 (Operacion_booleana -> VAR_IDENTIFIER .)
    NUMBER          reduce using rule 38 (Operacion_booleana -> VAR_IDENTIFIER .)
    INST_DO         reduce using rule 38 (Operacion_booleana -> VAR_IDENTIFIER .)
    INST_THEN       reduce using rule 38 (Operacion_booleana -> VAR_IDENTIFIER .)
    RPAREN          reduce using rule 38 (Operacion_booleana -> VAR_IDENTIFIER .)
    TIMES           reduce using rule 53 (Factor -> VAR_IDENTIFIER .)
    DIVIDE          reduce using rule 53 (Factor -> VAR_IDENTIFIER .)
    PLUS            reduce using rule 53 (Factor -> VAR_IDENTIFIER .)
    MINUS           reduce using rule 53 (Factor -> VAR_IDENTIFIER .)
    EQEQ            reduce using rule 53 (Factor -> VAR_IDENTIFIER .)
    NEQEQ           reduce using rule 53 (Factor -> VAR_IDENTIFIER .)
    GREAT           reduce using rule 53 (Factor -> VAR_IDENTIFIER .)
    LESS            reduce using rule 53 (Factor -> VAR_IDENTIFIER .)
    GREATEQ         reduce using rule 53 (Factor -> VAR_IDENTIFIER .)
    LESSEQ          reduce using rule 53 (Factor -> VAR_IDENTIFIER .)
    RANGE           reduce using rule 53 (Factor -> VAR_IDENTIFIER .)

  ! COMMA           [ reduce using rule 53 (Factor -> VAR_IDENTIFIER .) ]
  ! $end            [ reduce using rule 53 (Factor -> VAR_IDENTIFIER .) ]
  ! SEMICOLON       [ reduce using rule 53 (Factor -> VAR_IDENTIFIER .) ]
  ! INST_END        [ reduce using rule 53 (Factor -> VAR_IDENTIFIER .) ]
  ! INST_ELSE       [ reduce using rule 53 (Factor -> VAR_IDENTIFIER .) ]
  ! VAR_IDENTIFIER  [ reduce using rule 53 (Factor -> VAR_IDENTIFIER .) ]
  ! LPAREN          [ reduce using rule 53 (Factor -> VAR_IDENTIFIER .) ]
  ! NUMBER          [ reduce using rule 53 (Factor -> VAR_IDENTIFIER .) ]
  ! RPAREN          [ reduce using rule 53 (Factor -> VAR_IDENTIFIER .) ]


state 42

    (35) Operacion_booleana -> LPAREN . Operacion_booleana RPAREN
    (60) RangoF -> LPAREN . Rango RPAREN
    (54) Factor -> LPAREN . Operacion_binaria RPAREN
    (32) Operacion_booleana -> . Operacion_binaria Opr_bool Operacion_binaria
    (33) Operacion_booleana -> . Operacion_booleana AND Operacion_booleana
    (34) Operacion_booleana -> . Operacion_booleana OR Operacion_booleana
    (35) Operacion_booleana -> . LPAREN Operacion_booleana RPAREN
    (36) Operacion_booleana -> . TRUE
    (37) Operacion_booleana -> . FALSE
    (38) Operacion_booleana -> . VAR_IDENTIFIER
    (39) Operacion_booleana -> . NOT Operacion_booleana
    (55) Rango -> . Operacion_binaria RANGE Operacion_binaria
    (56) Rango -> . Rango PLUS Rango
    (57) Rango -> . Rango TIMES Operacion_binaria
    (58) Rango -> . Rango INTERSECTION Rango
    (59) Rango -> . RangoF
    (46) Operacion_binaria -> . Operacion_binaria PLUS Term
    (47) Operacion_binaria -> . Operacion_binaria MINUS Term
    (48) Operacion_binaria -> . Term
    (60) RangoF -> . LPAREN Rango RPAREN
    (49) Term -> . Term TIMES Factor
    (50) Term -> . Term DIVIDE Factor
    (51) Term -> . Factor
    (52) Factor -> . NUMBER
    (53) Factor -> . VAR_IDENTIFIER
    (54) Factor -> . LPAREN Operacion_binaria RPAREN

    LPAREN          shift and go to state 42
    TRUE            shift and go to state 35
    FALSE           shift and go to state 45
    VAR_IDENTIFIER  shift and go to state 41
    NOT             shift and go to state 46
    NUMBER          shift and go to state 33

    Operacion_binaria              shift and go to state 75
    Factor                         shift and go to state 40
    Term                           shift and go to state 38
    RangoF                         shift and go to state 32
    Rango                          shift and go to state 74
    Operacion_booleana             shift and go to state 73

state 43

    (31) Expresion -> Rango .
    (56) Rango -> Rango . PLUS Rango
    (57) Rango -> Rango . TIMES Operacion_binaria
    (58) Rango -> Rango . INTERSECTION Rango

    COMMA           reduce using rule 31 (Expresion -> Rango .)
    $end            reduce using rule 31 (Expresion -> Rango .)
    SEMICOLON       reduce using rule 31 (Expresion -> Rango .)
    INST_END        reduce using rule 31 (Expresion -> Rango .)
    INST_ELSE       reduce using rule 31 (Expresion -> Rango .)
    VAR_IDENTIFIER  reduce using rule 31 (Expresion -> Rango .)
    LPAREN          reduce using rule 31 (Expresion -> Rango .)
    NUMBER          reduce using rule 31 (Expresion -> Rango .)
    PLUS            shift and go to state 77
    TIMES           shift and go to state 78
    INTERSECTION    shift and go to state 76


state 44

    (29) Expresion -> Operacion_binaria .
    (46) Operacion_binaria -> Operacion_binaria . PLUS Term
    (47) Operacion_binaria -> Operacion_binaria . MINUS Term
    (32) Operacion_booleana -> Operacion_binaria . Opr_bool Operacion_binaria
    (55) Rango -> Operacion_binaria . RANGE Operacion_binaria
    (40) Opr_bool -> . EQEQ
    (41) Opr_bool -> . NEQEQ
    (42) Opr_bool -> . GREAT
    (43) Opr_bool -> . LESS
    (44) Opr_bool -> . GREATEQ
    (45) Opr_bool -> . LESSEQ

    COMMA           reduce using rule 29 (Expresion -> Operacion_binaria .)
    $end            reduce using rule 29 (Expresion -> Operacion_binaria .)
    SEMICOLON       reduce using rule 29 (Expresion -> Operacion_binaria .)
    INST_END        reduce using rule 29 (Expresion -> Operacion_binaria .)
    INST_ELSE       reduce using rule 29 (Expresion -> Operacion_binaria .)
    VAR_IDENTIFIER  reduce using rule 29 (Expresion -> Operacion_binaria .)
    LPAREN          reduce using rule 29 (Expresion -> Operacion_binaria .)
    NUMBER          reduce using rule 29 (Expresion -> Operacion_binaria .)
    PLUS            shift and go to state 87
    MINUS           shift and go to state 88
    RANGE           shift and go to state 85
    EQEQ            shift and go to state 84
    NEQEQ           shift and go to state 81
    GREAT           shift and go to state 80
    LESS            shift and go to state 83
    GREATEQ         shift and go to state 79
    LESSEQ          shift and go to state 86

    Opr_bool                       shift and go to state 82

state 45

    (37) Operacion_booleana -> FALSE .

    AND             reduce using rule 37 (Operacion_booleana -> FALSE .)
    OR              reduce using rule 37 (Operacion_booleana -> FALSE .)
    COMMA           reduce using rule 37 (Operacion_booleana -> FALSE .)
    $end            reduce using rule 37 (Operacion_booleana -> FALSE .)
    SEMICOLON       reduce using rule 37 (Operacion_booleana -> FALSE .)
    INST_END        reduce using rule 37 (Operacion_booleana -> FALSE .)
    INST_ELSE       reduce using rule 37 (Operacion_booleana -> FALSE .)
    VAR_IDENTIFIER  reduce using rule 37 (Operacion_booleana -> FALSE .)
    LPAREN          reduce using rule 37 (Operacion_booleana -> FALSE .)
    NUMBER          reduce using rule 37 (Operacion_booleana -> FALSE .)
    INST_DO         reduce using rule 37 (Operacion_booleana -> FALSE .)
    INST_THEN       reduce using rule 37 (Operacion_booleana -> FALSE .)
    RPAREN          reduce using rule 37 (Operacion_booleana -> FALSE .)


state 46

    (39) Operacion_booleana -> NOT . Operacion_booleana
    (32) Operacion_booleana -> . Operacion_binaria Opr_bool Operacion_binaria
    (33) Operacion_booleana -> . Operacion_booleana AND Operacion_booleana
    (34) Operacion_booleana -> . Operacion_booleana OR Operacion_booleana
    (35) Operacion_booleana -> . LPAREN Operacion_booleana RPAREN
    (36) Operacion_booleana -> . TRUE
    (37) Operacion_booleana -> . FALSE
    (38) Operacion_booleana -> . VAR_IDENTIFIER
    (39) Operacion_booleana -> . NOT Operacion_booleana
    (46) Operacion_binaria -> . Operacion_binaria PLUS Term
    (47) Operacion_binaria -> . Operacion_binaria MINUS Term
    (48) Operacion_binaria -> . Term
    (49) Term -> . Term TIMES Factor
    (50) Term -> . Term DIVIDE Factor
    (51) Term -> . Factor
    (52) Factor -> . NUMBER
    (53) Factor -> . VAR_IDENTIFIER
    (54) Factor -> . LPAREN Operacion_binaria RPAREN

    LPAREN          shift and go to state 49
    TRUE            shift and go to state 35
    FALSE           shift and go to state 45
    VAR_IDENTIFIER  shift and go to state 41
    NOT             shift and go to state 46
    NUMBER          shift and go to state 33

    Operacion_binaria              shift and go to state 48
    Term                           shift and go to state 38
    Operacion_booleana             shift and go to state 89
    Factor                         shift and go to state 40

state 47

    (17) Inst_Funcion -> TOP LPAREN . VAR_IDENTIFIER RPAREN

    VAR_IDENTIFIER  shift and go to state 90


state 48

    (32) Operacion_booleana -> Operacion_binaria . Opr_bool Operacion_binaria
    (46) Operacion_binaria -> Operacion_binaria . PLUS Term
    (47) Operacion_binaria -> Operacion_binaria . MINUS Term
    (40) Opr_bool -> . EQEQ
    (41) Opr_bool -> . NEQEQ
    (42) Opr_bool -> . GREAT
    (43) Opr_bool -> . LESS
    (44) Opr_bool -> . GREATEQ
    (45) Opr_bool -> . LESSEQ

    PLUS            shift and go to state 87
    MINUS           shift and go to state 88
    EQEQ            shift and go to state 84
    NEQEQ           shift and go to state 81
    GREAT           shift and go to state 80
    LESS            shift and go to state 83
    GREATEQ         shift and go to state 79
    LESSEQ          shift and go to state 86

    Opr_bool                       shift and go to state 82

state 49

    (35) Operacion_booleana -> LPAREN . Operacion_booleana RPAREN
    (54) Factor -> LPAREN . Operacion_binaria RPAREN
    (32) Operacion_booleana -> . Operacion_binaria Opr_bool Operacion_binaria
    (33) Operacion_booleana -> . Operacion_booleana AND Operacion_booleana
    (34) Operacion_booleana -> . Operacion_booleana OR Operacion_booleana
    (35) Operacion_booleana -> . LPAREN Operacion_booleana RPAREN
    (36) Operacion_booleana -> . TRUE
    (37) Operacion_booleana -> . FALSE
    (38) Operacion_booleana -> . VAR_IDENTIFIER
    (39) Operacion_booleana -> . NOT Operacion_booleana
    (46) Operacion_binaria -> . Operacion_binaria PLUS Term
    (47) Operacion_binaria -> . Operacion_binaria MINUS Term
    (48) Operacion_binaria -> . Term
    (49) Term -> . Term TIMES Factor
    (50) Term -> . Term DIVIDE Factor
    (51) Term -> . Factor
    (52) Factor -> . NUMBER
    (53) Factor -> . VAR_IDENTIFIER
    (54) Factor -> . LPAREN Operacion_binaria RPAREN

    LPAREN          shift and go to state 49
    TRUE            shift and go to state 35
    FALSE           shift and go to state 45
    VAR_IDENTIFIER  shift and go to state 41
    NOT             shift and go to state 46
    NUMBER          shift and go to state 33

    Operacion_binaria              shift and go to state 91
    Term                           shift and go to state 38
    Operacion_booleana             shift and go to state 73
    Factor                         shift and go to state 40

state 50

    (75) Inst_While -> INST_WHILE Operacion_booleana . INST_DO Bloque_Inst
    (33) Operacion_booleana -> Operacion_booleana . AND Operacion_booleana
    (34) Operacion_booleana -> Operacion_booleana . OR Operacion_booleana

    INST_DO         shift and go to state 92
    AND             shift and go to state 67
    OR              shift and go to state 68


state 51

    (61) Inst_Lectura -> INST_READ VAR_IDENTIFIER .

    $end            reduce using rule 61 (Inst_Lectura -> INST_READ VAR_IDENTIFIER .)
    SEMICOLON       reduce using rule 61 (Inst_Lectura -> INST_READ VAR_IDENTIFIER .)
    INST_END        reduce using rule 61 (Inst_Lectura -> INST_READ VAR_IDENTIFIER .)
    INST_ELSE       reduce using rule 61 (Inst_Lectura -> INST_READ VAR_IDENTIFIER .)
    VAR_IDENTIFIER  reduce using rule 61 (Inst_Lectura -> INST_READ VAR_IDENTIFIER .)
    LPAREN          reduce using rule 61 (Inst_Lectura -> INST_READ VAR_IDENTIFIER .)
    NUMBER          reduce using rule 61 (Inst_Lectura -> INST_READ VAR_IDENTIFIER .)


state 52

    (4) Lista_Inst -> Inst .
    (5) Lista_Inst -> Inst . SEMICOLON Lista_Inst

    INST_END        reduce using rule 4 (Lista_Inst -> Inst .)
    SEMICOLON       shift and go to state 93


state 53

    (2) Bloque_Inst -> INST_BEGIN Lista_Inst . INST_END

    INST_END        shift and go to state 94


state 54

    (18) Inst_Funcion -> BOTTOM LPAREN . VAR_IDENTIFIER RPAREN

    VAR_IDENTIFIER  shift and go to state 95


state 55

    (28) Inst_Asignacion -> VAR_IDENTIFIER EQUAL . Expresion
    (29) Expresion -> . Operacion_binaria
    (30) Expresion -> . Operacion_booleana
    (31) Expresion -> . Rango
    (46) Operacion_binaria -> . Operacion_binaria PLUS Term
    (47) Operacion_binaria -> . Operacion_binaria MINUS Term
    (48) Operacion_binaria -> . Term
    (32) Operacion_booleana -> . Operacion_binaria Opr_bool Operacion_binaria
    (33) Operacion_booleana -> . Operacion_booleana AND Operacion_booleana
    (34) Operacion_booleana -> . Operacion_booleana OR Operacion_booleana
    (35) Operacion_booleana -> . LPAREN Operacion_booleana RPAREN
    (36) Operacion_booleana -> . TRUE
    (37) Operacion_booleana -> . FALSE
    (38) Operacion_booleana -> . VAR_IDENTIFIER
    (39) Operacion_booleana -> . NOT Operacion_booleana
    (55) Rango -> . Operacion_binaria RANGE Operacion_binaria
    (56) Rango -> . Rango PLUS Rango
    (57) Rango -> . Rango TIMES Operacion_binaria
    (58) Rango -> . Rango INTERSECTION Rango
    (59) Rango -> . RangoF
    (49) Term -> . Term TIMES Factor
    (50) Term -> . Term DIVIDE Factor
    (51) Term -> . Factor
    (60) RangoF -> . LPAREN Rango RPAREN
    (52) Factor -> . NUMBER
    (53) Factor -> . VAR_IDENTIFIER
    (54) Factor -> . LPAREN Operacion_binaria RPAREN

    LPAREN          shift and go to state 42
    TRUE            shift and go to state 35
    FALSE           shift and go to state 45
    VAR_IDENTIFIER  shift and go to state 41
    NOT             shift and go to state 46
    NUMBER          shift and go to state 33

    Expresion                      shift and go to state 96
    Operacion_binaria              shift and go to state 44
    Factor                         shift and go to state 40
    Term                           shift and go to state 38
    RangoF                         shift and go to state 32
    Rango                          shift and go to state 43
    Operacion_booleana             shift and go to state 36

state 56

    (53) Factor -> VAR_IDENTIFIER .

    TIMES           reduce using rule 53 (Factor -> VAR_IDENTIFIER .)
    DIVIDE          reduce using rule 53 (Factor -> VAR_IDENTIFIER .)
    PLUS            reduce using rule 53 (Factor -> VAR_IDENTIFIER .)
    MINUS           reduce using rule 53 (Factor -> VAR_IDENTIFIER .)
    RANGE           reduce using rule 53 (Factor -> VAR_IDENTIFIER .)
    EQEQ            reduce using rule 53 (Factor -> VAR_IDENTIFIER .)
    NEQEQ           reduce using rule 53 (Factor -> VAR_IDENTIFIER .)
    GREAT           reduce using rule 53 (Factor -> VAR_IDENTIFIER .)
    LESS            reduce using rule 53 (Factor -> VAR_IDENTIFIER .)
    GREATEQ         reduce using rule 53 (Factor -> VAR_IDENTIFIER .)
    LESSEQ          reduce using rule 53 (Factor -> VAR_IDENTIFIER .)
    COMMA           reduce using rule 53 (Factor -> VAR_IDENTIFIER .)
    $end            reduce using rule 53 (Factor -> VAR_IDENTIFIER .)
    SEMICOLON       reduce using rule 53 (Factor -> VAR_IDENTIFIER .)
    INST_END        reduce using rule 53 (Factor -> VAR_IDENTIFIER .)
    INST_ELSE       reduce using rule 53 (Factor -> VAR_IDENTIFIER .)
    VAR_IDENTIFIER  reduce using rule 53 (Factor -> VAR_IDENTIFIER .)
    LPAREN          reduce using rule 53 (Factor -> VAR_IDENTIFIER .)
    NUMBER          reduce using rule 53 (Factor -> VAR_IDENTIFIER .)
    INST_OF         reduce using rule 53 (Factor -> VAR_IDENTIFIER .)
    RPAREN          reduce using rule 53 (Factor -> VAR_IDENTIFIER .)
    INTERSECTION    reduce using rule 53 (Factor -> VAR_IDENTIFIER .)
    -               reduce using rule 53 (Factor -> VAR_IDENTIFIER .)
    INST_DO         reduce using rule 53 (Factor -> VAR_IDENTIFIER .)
    AND             reduce using rule 53 (Factor -> VAR_IDENTIFIER .)
    OR              reduce using rule 53 (Factor -> VAR_IDENTIFIER .)
    INST_THEN       reduce using rule 53 (Factor -> VAR_IDENTIFIER .)


state 57

    (70) Inst_Case -> INST_CASE Operacion_binaria . INST_OF Casos
    (46) Operacion_binaria -> Operacion_binaria . PLUS Term
    (47) Operacion_binaria -> Operacion_binaria . MINUS Term

    INST_OF         shift and go to state 97
    PLUS            shift and go to state 87
    MINUS           shift and go to state 88


state 58

    (54) Factor -> LPAREN . Operacion_binaria RPAREN
    (46) Operacion_binaria -> . Operacion_binaria PLUS Term
    (47) Operacion_binaria -> . Operacion_binaria MINUS Term
    (48) Operacion_binaria -> . Term
    (49) Term -> . Term TIMES Factor
    (50) Term -> . Term DIVIDE Factor
    (51) Term -> . Factor
    (52) Factor -> . NUMBER
    (53) Factor -> . VAR_IDENTIFIER
    (54) Factor -> . LPAREN Operacion_binaria RPAREN

    NUMBER          shift and go to state 33
    VAR_IDENTIFIER  shift and go to state 56
    LPAREN          shift and go to state 58

    Operacion_binaria              shift and go to state 98
    Term                           shift and go to state 38
    Factor                         shift and go to state 40

state 59

    (74) Inst_For -> INST_FOR VAR_IDENTIFIER . INST_IN Rango INST_DO Bloque_Inst

    INST_IN         shift and go to state 99


state 60

    (68) Inst_If -> INST_IF Operacion_booleana . INST_THEN Bloque_Inst
    (69) Inst_If -> INST_IF Operacion_booleana . INST_THEN Bloque_Inst INST_ELSE Bloque_Inst
    (33) Operacion_booleana -> Operacion_booleana . AND Operacion_booleana
    (34) Operacion_booleana -> Operacion_booleana . OR Operacion_booleana

    INST_THEN       shift and go to state 100
    AND             shift and go to state 67
    OR              shift and go to state 68


state 61

    (63) Inst_Salida -> INST_WRITELN Lista_Aux .

    $end            reduce using rule 63 (Inst_Salida -> INST_WRITELN Lista_Aux .)
    SEMICOLON       reduce using rule 63 (Inst_Salida -> INST_WRITELN Lista_Aux .)
    INST_END        reduce using rule 63 (Inst_Salida -> INST_WRITELN Lista_Aux .)
    INST_ELSE       reduce using rule 63 (Inst_Salida -> INST_WRITELN Lista_Aux .)
    VAR_IDENTIFIER  reduce using rule 63 (Inst_Salida -> INST_WRITELN Lista_Aux .)
    LPAREN          reduce using rule 63 (Inst_Salida -> INST_WRITELN Lista_Aux .)
    NUMBER          reduce using rule 63 (Inst_Salida -> INST_WRITELN Lista_Aux .)


state 62

    (16) Inst_Funcion -> LENGTH LPAREN . VAR_IDENTIFIER RPAREN

    VAR_IDENTIFIER  shift and go to state 101


state 63

    (15) Inst_Funcion -> RTOI LPAREN . VAR_IDENTIFIER RPAREN

    VAR_IDENTIFIER  shift and go to state 102


state 64

    (20) Inst_Declare -> Inst_Declareau SEMICOLON . Inst_Declare
    (19) Inst_Declare -> . Inst_Declareau
    (20) Inst_Declare -> . Inst_Declareau SEMICOLON Inst_Declare
    (21) Inst_Declareau -> . INST_DECLARE Lista_Declare

    INST_DECLARE    shift and go to state 3

    Inst_Declare                   shift and go to state 103
    Inst_Declareau                 shift and go to state 28

state 65

    (24) Lista_Variables -> VAR_IDENTIFIER COMMA . Lista_Variables
    (23) Lista_Variables -> . VAR_IDENTIFIER
    (24) Lista_Variables -> . VAR_IDENTIFIER COMMA Lista_Variables

    VAR_IDENTIFIER  shift and go to state 29

    Lista_Variables                shift and go to state 104

state 66

    (22) Lista_Declare -> Lista_Variables INST_AS . Tipo
    (25) Tipo -> . TYPEDEF_INT
    (26) Tipo -> . TYPEDEF_BOOL
    (27) Tipo -> . TYPEDEF_RANGE

    TYPEDEF_INT     shift and go to state 105
    TYPEDEF_BOOL    shift and go to state 108
    TYPEDEF_RANGE   shift and go to state 107

    Tipo                           shift and go to state 106

state 67

    (33) Operacion_booleana -> Operacion_booleana AND . Operacion_booleana
    (32) Operacion_booleana -> . Operacion_binaria Opr_bool Operacion_binaria
    (33) Operacion_booleana -> . Operacion_booleana AND Operacion_booleana
    (34) Operacion_booleana -> . Operacion_booleana OR Operacion_booleana
    (35) Operacion_booleana -> . LPAREN Operacion_booleana RPAREN
    (36) Operacion_booleana -> . TRUE
    (37) Operacion_booleana -> . FALSE
    (38) Operacion_booleana -> . VAR_IDENTIFIER
    (39) Operacion_booleana -> . NOT Operacion_booleana
    (46) Operacion_binaria -> . Operacion_binaria PLUS Term
    (47) Operacion_binaria -> . Operacion_binaria MINUS Term
    (48) Operacion_binaria -> . Term
    (49) Term -> . Term TIMES Factor
    (50) Term -> . Term DIVIDE Factor
    (51) Term -> . Factor
    (52) Factor -> . NUMBER
    (53) Factor -> . VAR_IDENTIFIER
    (54) Factor -> . LPAREN Operacion_binaria RPAREN

    LPAREN          shift and go to state 49
    TRUE            shift and go to state 35
    FALSE           shift and go to state 45
    VAR_IDENTIFIER  shift and go to state 41
    NOT             shift and go to state 46
    NUMBER          shift and go to state 33

    Operacion_binaria              shift and go to state 48
    Term                           shift and go to state 38
    Operacion_booleana             shift and go to state 109
    Factor                         shift and go to state 40

state 68

    (34) Operacion_booleana -> Operacion_booleana OR . Operacion_booleana
    (32) Operacion_booleana -> . Operacion_binaria Opr_bool Operacion_binaria
    (33) Operacion_booleana -> . Operacion_booleana AND Operacion_booleana
    (34) Operacion_booleana -> . Operacion_booleana OR Operacion_booleana
    (35) Operacion_booleana -> . LPAREN Operacion_booleana RPAREN
    (36) Operacion_booleana -> . TRUE
    (37) Operacion_booleana -> . FALSE
    (38) Operacion_booleana -> . VAR_IDENTIFIER
    (39) Operacion_booleana -> . NOT Operacion_booleana
    (46) Operacion_binaria -> . Operacion_binaria PLUS Term
    (47) Operacion_binaria -> . Operacion_binaria MINUS Term
    (48) Operacion_binaria -> . Term
    (49) Term -> . Term TIMES Factor
    (50) Term -> . Term DIVIDE Factor
    (51) Term -> . Factor
    (52) Factor -> . NUMBER
    (53) Factor -> . VAR_IDENTIFIER
    (54) Factor -> . LPAREN Operacion_binaria RPAREN

    LPAREN          shift and go to state 49
    TRUE            shift and go to state 35
    FALSE           shift and go to state 45
    VAR_IDENTIFIER  shift and go to state 41
    NOT             shift and go to state 46
    NUMBER          shift and go to state 33

    Operacion_binaria              shift and go to state 48
    Term                           shift and go to state 38
    Operacion_booleana             shift and go to state 110
    Factor                         shift and go to state 40

state 69

    (66) Lista_Aux -> Expresion COMMA . Lista_Aux
    (64) Lista_Aux -> . Expresion
    (65) Lista_Aux -> . STRING
    (66) Lista_Aux -> . Expresion COMMA Lista_Aux
    (67) Lista_Aux -> . STRING COMMA Lista_Aux
    (29) Expresion -> . Operacion_binaria
    (30) Expresion -> . Operacion_booleana
    (31) Expresion -> . Rango
    (46) Operacion_binaria -> . Operacion_binaria PLUS Term
    (47) Operacion_binaria -> . Operacion_binaria MINUS Term
    (48) Operacion_binaria -> . Term
    (32) Operacion_booleana -> . Operacion_binaria Opr_bool Operacion_binaria
    (33) Operacion_booleana -> . Operacion_booleana AND Operacion_booleana
    (34) Operacion_booleana -> . Operacion_booleana OR Operacion_booleana
    (35) Operacion_booleana -> . LPAREN Operacion_booleana RPAREN
    (36) Operacion_booleana -> . TRUE
    (37) Operacion_booleana -> . FALSE
    (38) Operacion_booleana -> . VAR_IDENTIFIER
    (39) Operacion_booleana -> . NOT Operacion_booleana
    (55) Rango -> . Operacion_binaria RANGE Operacion_binaria
    (56) Rango -> . Rango PLUS Rango
    (57) Rango -> . Rango TIMES Operacion_binaria
    (58) Rango -> . Rango INTERSECTION Rango
    (59) Rango -> . RangoF
    (49) Term -> . Term TIMES Factor
    (50) Term -> . Term DIVIDE Factor
    (51) Term -> . Factor
    (60) RangoF -> . LPAREN Rango RPAREN
    (52) Factor -> . NUMBER
    (53) Factor -> . VAR_IDENTIFIER
    (54) Factor -> . LPAREN Operacion_binaria RPAREN

    STRING          shift and go to state 39
    LPAREN          shift and go to state 42
    TRUE            shift and go to state 35
    FALSE           shift and go to state 45
    VAR_IDENTIFIER  shift and go to state 41
    NOT             shift and go to state 46
    NUMBER          shift and go to state 33

    Expresion                      shift and go to state 37
    Operacion_binaria              shift and go to state 44
    RangoF                         shift and go to state 32
    Factor                         shift and go to state 40
    Term                           shift and go to state 38
    Lista_Aux                      shift and go to state 111
    Rango                          shift and go to state 43
    Operacion_booleana             shift and go to state 36

state 70

    (50) Term -> Term DIVIDE . Factor
    (52) Factor -> . NUMBER
    (53) Factor -> . VAR_IDENTIFIER
    (54) Factor -> . LPAREN Operacion_binaria RPAREN

    NUMBER          shift and go to state 33
    VAR_IDENTIFIER  shift and go to state 56
    LPAREN          shift and go to state 58

    Factor                         shift and go to state 112

state 71

    (49) Term -> Term TIMES . Factor
    (52) Factor -> . NUMBER
    (53) Factor -> . VAR_IDENTIFIER
    (54) Factor -> . LPAREN Operacion_binaria RPAREN

    NUMBER          shift and go to state 33
    VAR_IDENTIFIER  shift and go to state 56
    LPAREN          shift and go to state 58

    Factor                         shift and go to state 113

state 72

    (67) Lista_Aux -> STRING COMMA . Lista_Aux
    (64) Lista_Aux -> . Expresion
    (65) Lista_Aux -> . STRING
    (66) Lista_Aux -> . Expresion COMMA Lista_Aux
    (67) Lista_Aux -> . STRING COMMA Lista_Aux
    (29) Expresion -> . Operacion_binaria
    (30) Expresion -> . Operacion_booleana
    (31) Expresion -> . Rango
    (46) Operacion_binaria -> . Operacion_binaria PLUS Term
    (47) Operacion_binaria -> . Operacion_binaria MINUS Term
    (48) Operacion_binaria -> . Term
    (32) Operacion_booleana -> . Operacion_binaria Opr_bool Operacion_binaria
    (33) Operacion_booleana -> . Operacion_booleana AND Operacion_booleana
    (34) Operacion_booleana -> . Operacion_booleana OR Operacion_booleana
    (35) Operacion_booleana -> . LPAREN Operacion_booleana RPAREN
    (36) Operacion_booleana -> . TRUE
    (37) Operacion_booleana -> . FALSE
    (38) Operacion_booleana -> . VAR_IDENTIFIER
    (39) Operacion_booleana -> . NOT Operacion_booleana
    (55) Rango -> . Operacion_binaria RANGE Operacion_binaria
    (56) Rango -> . Rango PLUS Rango
    (57) Rango -> . Rango TIMES Operacion_binaria
    (58) Rango -> . Rango INTERSECTION Rango
    (59) Rango -> . RangoF
    (49) Term -> . Term TIMES Factor
    (50) Term -> . Term DIVIDE Factor
    (51) Term -> . Factor
    (60) RangoF -> . LPAREN Rango RPAREN
    (52) Factor -> . NUMBER
    (53) Factor -> . VAR_IDENTIFIER
    (54) Factor -> . LPAREN Operacion_binaria RPAREN

    STRING          shift and go to state 39
    LPAREN          shift and go to state 42
    TRUE            shift and go to state 35
    FALSE           shift and go to state 45
    VAR_IDENTIFIER  shift and go to state 41
    NOT             shift and go to state 46
    NUMBER          shift and go to state 33

    Expresion                      shift and go to state 37
    Operacion_binaria              shift and go to state 44
    RangoF                         shift and go to state 32
    Factor                         shift and go to state 40
    Term                           shift and go to state 38
    Lista_Aux                      shift and go to state 114
    Rango                          shift and go to state 43
    Operacion_booleana             shift and go to state 36

state 73

    (35) Operacion_booleana -> LPAREN Operacion_booleana . RPAREN
    (33) Operacion_booleana -> Operacion_booleana . AND Operacion_booleana
    (34) Operacion_booleana -> Operacion_booleana . OR Operacion_booleana

    RPAREN          shift and go to state 115
    AND             shift and go to state 67
    OR              shift and go to state 68


state 74

    (60) RangoF -> LPAREN Rango . RPAREN
    (56) Rango -> Rango . PLUS Rango
    (57) Rango -> Rango . TIMES Operacion_binaria
    (58) Rango -> Rango . INTERSECTION Rango

    RPAREN          shift and go to state 116
    PLUS            shift and go to state 77
    TIMES           shift and go to state 78
    INTERSECTION    shift and go to state 76


state 75

    (54) Factor -> LPAREN Operacion_binaria . RPAREN
    (32) Operacion_booleana -> Operacion_binaria . Opr_bool Operacion_binaria
    (55) Rango -> Operacion_binaria . RANGE Operacion_binaria
    (46) Operacion_binaria -> Operacion_binaria . PLUS Term
    (47) Operacion_binaria -> Operacion_binaria . MINUS Term
    (40) Opr_bool -> . EQEQ
    (41) Opr_bool -> . NEQEQ
    (42) Opr_bool -> . GREAT
    (43) Opr_bool -> . LESS
    (44) Opr_bool -> . GREATEQ
    (45) Opr_bool -> . LESSEQ

    RPAREN          shift and go to state 117
    RANGE           shift and go to state 85
    PLUS            shift and go to state 87
    MINUS           shift and go to state 88
    EQEQ            shift and go to state 84
    NEQEQ           shift and go to state 81
    GREAT           shift and go to state 80
    LESS            shift and go to state 83
    GREATEQ         shift and go to state 79
    LESSEQ          shift and go to state 86

    Opr_bool                       shift and go to state 82

state 76

    (58) Rango -> Rango INTERSECTION . Rango
    (55) Rango -> . Operacion_binaria RANGE Operacion_binaria
    (56) Rango -> . Rango PLUS Rango
    (57) Rango -> . Rango TIMES Operacion_binaria
    (58) Rango -> . Rango INTERSECTION Rango
    (59) Rango -> . RangoF
    (46) Operacion_binaria -> . Operacion_binaria PLUS Term
    (47) Operacion_binaria -> . Operacion_binaria MINUS Term
    (48) Operacion_binaria -> . Term
    (60) RangoF -> . LPAREN Rango RPAREN
    (49) Term -> . Term TIMES Factor
    (50) Term -> . Term DIVIDE Factor
    (51) Term -> . Factor
    (52) Factor -> . NUMBER
    (53) Factor -> . VAR_IDENTIFIER
    (54) Factor -> . LPAREN Operacion_binaria RPAREN

    LPAREN          shift and go to state 119
    NUMBER          shift and go to state 33
    VAR_IDENTIFIER  shift and go to state 56

    Rango                          shift and go to state 120
    Operacion_binaria              shift and go to state 118
    Factor                         shift and go to state 40
    Term                           shift and go to state 38
    RangoF                         shift and go to state 32

state 77

    (56) Rango -> Rango PLUS . Rango
    (55) Rango -> . Operacion_binaria RANGE Operacion_binaria
    (56) Rango -> . Rango PLUS Rango
    (57) Rango -> . Rango TIMES Operacion_binaria
    (58) Rango -> . Rango INTERSECTION Rango
    (59) Rango -> . RangoF
    (46) Operacion_binaria -> . Operacion_binaria PLUS Term
    (47) Operacion_binaria -> . Operacion_binaria MINUS Term
    (48) Operacion_binaria -> . Term
    (60) RangoF -> . LPAREN Rango RPAREN
    (49) Term -> . Term TIMES Factor
    (50) Term -> . Term DIVIDE Factor
    (51) Term -> . Factor
    (52) Factor -> . NUMBER
    (53) Factor -> . VAR_IDENTIFIER
    (54) Factor -> . LPAREN Operacion_binaria RPAREN

    LPAREN          shift and go to state 119
    NUMBER          shift and go to state 33
    VAR_IDENTIFIER  shift and go to state 56

    Rango                          shift and go to state 121
    Operacion_binaria              shift and go to state 118
    Factor                         shift and go to state 40
    Term                           shift and go to state 38
    RangoF                         shift and go to state 32

state 78

    (57) Rango -> Rango TIMES . Operacion_binaria
    (46) Operacion_binaria -> . Operacion_binaria PLUS Term
    (47) Operacion_binaria -> . Operacion_binaria MINUS Term
    (48) Operacion_binaria -> . Term
    (49) Term -> . Term TIMES Factor
    (50) Term -> . Term DIVIDE Factor
    (51) Term -> . Factor
    (52) Factor -> . NUMBER
    (53) Factor -> . VAR_IDENTIFIER
    (54) Factor -> . LPAREN Operacion_binaria RPAREN

    NUMBER          shift and go to state 33
    VAR_IDENTIFIER  shift and go to state 56
    LPAREN          shift and go to state 58

    Operacion_binaria              shift and go to state 122
    Term                           shift and go to state 38
    Factor                         shift and go to state 40

state 79

    (44) Opr_bool -> GREATEQ .

    NUMBER          reduce using rule 44 (Opr_bool -> GREATEQ .)
    VAR_IDENTIFIER  reduce using rule 44 (Opr_bool -> GREATEQ .)
    LPAREN          reduce using rule 44 (Opr_bool -> GREATEQ .)


state 80

    (42) Opr_bool -> GREAT .

    NUMBER          reduce using rule 42 (Opr_bool -> GREAT .)
    VAR_IDENTIFIER  reduce using rule 42 (Opr_bool -> GREAT .)
    LPAREN          reduce using rule 42 (Opr_bool -> GREAT .)


state 81

    (41) Opr_bool -> NEQEQ .

    NUMBER          reduce using rule 41 (Opr_bool -> NEQEQ .)
    VAR_IDENTIFIER  reduce using rule 41 (Opr_bool -> NEQEQ .)
    LPAREN          reduce using rule 41 (Opr_bool -> NEQEQ .)


state 82

    (32) Operacion_booleana -> Operacion_binaria Opr_bool . Operacion_binaria
    (46) Operacion_binaria -> . Operacion_binaria PLUS Term
    (47) Operacion_binaria -> . Operacion_binaria MINUS Term
    (48) Operacion_binaria -> . Term
    (49) Term -> . Term TIMES Factor
    (50) Term -> . Term DIVIDE Factor
    (51) Term -> . Factor
    (52) Factor -> . NUMBER
    (53) Factor -> . VAR_IDENTIFIER
    (54) Factor -> . LPAREN Operacion_binaria RPAREN

    NUMBER          shift and go to state 33
    VAR_IDENTIFIER  shift and go to state 56
    LPAREN          shift and go to state 58

    Operacion_binaria              shift and go to state 123
    Term                           shift and go to state 38
    Factor                         shift and go to state 40

state 83

    (43) Opr_bool -> LESS .

    NUMBER          reduce using rule 43 (Opr_bool -> LESS .)
    VAR_IDENTIFIER  reduce using rule 43 (Opr_bool -> LESS .)
    LPAREN          reduce using rule 43 (Opr_bool -> LESS .)


state 84

    (40) Opr_bool -> EQEQ .

    NUMBER          reduce using rule 40 (Opr_bool -> EQEQ .)
    VAR_IDENTIFIER  reduce using rule 40 (Opr_bool -> EQEQ .)
    LPAREN          reduce using rule 40 (Opr_bool -> EQEQ .)


state 85

    (55) Rango -> Operacion_binaria RANGE . Operacion_binaria
    (46) Operacion_binaria -> . Operacion_binaria PLUS Term
    (47) Operacion_binaria -> . Operacion_binaria MINUS Term
    (48) Operacion_binaria -> . Term
    (49) Term -> . Term TIMES Factor
    (50) Term -> . Term DIVIDE Factor
    (51) Term -> . Factor
    (52) Factor -> . NUMBER
    (53) Factor -> . VAR_IDENTIFIER
    (54) Factor -> . LPAREN Operacion_binaria RPAREN

    NUMBER          shift and go to state 33
    VAR_IDENTIFIER  shift and go to state 56
    LPAREN          shift and go to state 58

    Operacion_binaria              shift and go to state 124
    Term                           shift and go to state 38
    Factor                         shift and go to state 40

state 86

    (45) Opr_bool -> LESSEQ .

    NUMBER          reduce using rule 45 (Opr_bool -> LESSEQ .)
    VAR_IDENTIFIER  reduce using rule 45 (Opr_bool -> LESSEQ .)
    LPAREN          reduce using rule 45 (Opr_bool -> LESSEQ .)


state 87

    (46) Operacion_binaria -> Operacion_binaria PLUS . Term
    (49) Term -> . Term TIMES Factor
    (50) Term -> . Term DIVIDE Factor
    (51) Term -> . Factor
    (52) Factor -> . NUMBER
    (53) Factor -> . VAR_IDENTIFIER
    (54) Factor -> . LPAREN Operacion_binaria RPAREN

    NUMBER          shift and go to state 33
    VAR_IDENTIFIER  shift and go to state 56
    LPAREN          shift and go to state 58

    Term                           shift and go to state 125
    Factor                         shift and go to state 40

state 88

    (47) Operacion_binaria -> Operacion_binaria MINUS . Term
    (49) Term -> . Term TIMES Factor
    (50) Term -> . Term DIVIDE Factor
    (51) Term -> . Factor
    (52) Factor -> . NUMBER
    (53) Factor -> . VAR_IDENTIFIER
    (54) Factor -> . LPAREN Operacion_binaria RPAREN

    NUMBER          shift and go to state 33
    VAR_IDENTIFIER  shift and go to state 56
    LPAREN          shift and go to state 58

    Term                           shift and go to state 126
    Factor                         shift and go to state 40

state 89

    (39) Operacion_booleana -> NOT Operacion_booleana .
    (33) Operacion_booleana -> Operacion_booleana . AND Operacion_booleana
    (34) Operacion_booleana -> Operacion_booleana . OR Operacion_booleana

    AND             reduce using rule 39 (Operacion_booleana -> NOT Operacion_booleana .)
    OR              reduce using rule 39 (Operacion_booleana -> NOT Operacion_booleana .)
    COMMA           reduce using rule 39 (Operacion_booleana -> NOT Operacion_booleana .)
    $end            reduce using rule 39 (Operacion_booleana -> NOT Operacion_booleana .)
    SEMICOLON       reduce using rule 39 (Operacion_booleana -> NOT Operacion_booleana .)
    INST_END        reduce using rule 39 (Operacion_booleana -> NOT Operacion_booleana .)
    INST_ELSE       reduce using rule 39 (Operacion_booleana -> NOT Operacion_booleana .)
    VAR_IDENTIFIER  reduce using rule 39 (Operacion_booleana -> NOT Operacion_booleana .)
    LPAREN          reduce using rule 39 (Operacion_booleana -> NOT Operacion_booleana .)
    NUMBER          reduce using rule 39 (Operacion_booleana -> NOT Operacion_booleana .)
    INST_DO         reduce using rule 39 (Operacion_booleana -> NOT Operacion_booleana .)
    INST_THEN       reduce using rule 39 (Operacion_booleana -> NOT Operacion_booleana .)
    RPAREN          reduce using rule 39 (Operacion_booleana -> NOT Operacion_booleana .)

  ! AND             [ shift and go to state 67 ]
  ! OR              [ shift and go to state 68 ]


state 90

    (17) Inst_Funcion -> TOP LPAREN VAR_IDENTIFIER . RPAREN

    RPAREN          shift and go to state 127


state 91

    (54) Factor -> LPAREN Operacion_binaria . RPAREN
    (32) Operacion_booleana -> Operacion_binaria . Opr_bool Operacion_binaria
    (46) Operacion_binaria -> Operacion_binaria . PLUS Term
    (47) Operacion_binaria -> Operacion_binaria . MINUS Term
    (40) Opr_bool -> . EQEQ
    (41) Opr_bool -> . NEQEQ
    (42) Opr_bool -> . GREAT
    (43) Opr_bool -> . LESS
    (44) Opr_bool -> . GREATEQ
    (45) Opr_bool -> . LESSEQ

    RPAREN          shift and go to state 117
    PLUS            shift and go to state 87
    MINUS           shift and go to state 88
    EQEQ            shift and go to state 84
    NEQEQ           shift and go to state 81
    GREAT           shift and go to state 80
    LESS            shift and go to state 83
    GREATEQ         shift and go to state 79
    LESSEQ          shift and go to state 86

    Opr_bool                       shift and go to state 82

state 92

    (75) Inst_While -> INST_WHILE Operacion_booleana INST_DO . Bloque_Inst
    (2) Bloque_Inst -> . INST_BEGIN Lista_Inst INST_END
    (3) Bloque_Inst -> . Inst
    (6) Inst -> . Inst_Declare
    (7) Inst -> . Inst_Asignacion
    (8) Inst -> . Inst_Lectura
    (9) Inst -> . Inst_For
    (10) Inst -> . Inst_While
    (11) Inst -> . Inst_If
    (12) Inst -> . Inst_Case
    (13) Inst -> . Inst_Salida
    (14) Inst -> . Inst_Funcion
    (19) Inst_Declare -> . Inst_Declareau
    (20) Inst_Declare -> . Inst_Declareau SEMICOLON Inst_Declare
    (28) Inst_Asignacion -> . VAR_IDENTIFIER EQUAL Expresion
    (61) Inst_Lectura -> . INST_READ VAR_IDENTIFIER
    (74) Inst_For -> . INST_FOR VAR_IDENTIFIER INST_IN Rango INST_DO Bloque_Inst
    (75) Inst_While -> . INST_WHILE Operacion_booleana INST_DO Bloque_Inst
    (68) Inst_If -> . INST_IF Operacion_booleana INST_THEN Bloque_Inst
    (69) Inst_If -> . INST_IF Operacion_booleana INST_THEN Bloque_Inst INST_ELSE Bloque_Inst
    (70) Inst_Case -> . INST_CASE Operacion_binaria INST_OF Casos
    (62) Inst_Salida -> . INST_WRITE Lista_Aux
    (63) Inst_Salida -> . INST_WRITELN Lista_Aux
    (15) Inst_Funcion -> . RTOI LPAREN VAR_IDENTIFIER RPAREN
    (16) Inst_Funcion -> . LENGTH LPAREN VAR_IDENTIFIER RPAREN
    (17) Inst_Funcion -> . TOP LPAREN VAR_IDENTIFIER RPAREN
    (18) Inst_Funcion -> . BOTTOM LPAREN VAR_IDENTIFIER RPAREN
    (21) Inst_Declareau -> . INST_DECLARE Lista_Declare

    INST_BEGIN      shift and go to state 11
    VAR_IDENTIFIER  shift and go to state 18
    INST_READ       shift and go to state 10
    INST_FOR        shift and go to state 21
    INST_WHILE      shift and go to state 9
    INST_IF         shift and go to state 22
    INST_CASE       shift and go to state 20
    INST_WRITE      shift and go to state 5
    INST_WRITELN    shift and go to state 23
    RTOI            shift and go to state 25
    LENGTH          shift and go to state 24
    TOP             shift and go to state 6
    BOTTOM          shift and go to state 13
    INST_DECLARE    shift and go to state 3

    Inst_Salida                    shift and go to state 8
    Inst_Declare                   shift and go to state 12
    Inst_Funcion                   shift and go to state 4
    Bloque_Inst                    shift and go to state 128
    Inst_If                        shift and go to state 19
    Inst_For                       shift and go to state 14
    Inst_While                     shift and go to state 16
    Inst                           shift and go to state 15
    Inst_Asignacion                shift and go to state 26
    Inst_Case                      shift and go to state 27
    Inst_Lectura                   shift and go to state 17
    Inst_Declareau                 shift and go to state 28

state 93

    (5) Lista_Inst -> Inst SEMICOLON . Lista_Inst
    (4) Lista_Inst -> . Inst
    (5) Lista_Inst -> . Inst SEMICOLON Lista_Inst
    (6) Inst -> . Inst_Declare
    (7) Inst -> . Inst_Asignacion
    (8) Inst -> . Inst_Lectura
    (9) Inst -> . Inst_For
    (10) Inst -> . Inst_While
    (11) Inst -> . Inst_If
    (12) Inst -> . Inst_Case
    (13) Inst -> . Inst_Salida
    (14) Inst -> . Inst_Funcion
    (19) Inst_Declare -> . Inst_Declareau
    (20) Inst_Declare -> . Inst_Declareau SEMICOLON Inst_Declare
    (28) Inst_Asignacion -> . VAR_IDENTIFIER EQUAL Expresion
    (61) Inst_Lectura -> . INST_READ VAR_IDENTIFIER
    (74) Inst_For -> . INST_FOR VAR_IDENTIFIER INST_IN Rango INST_DO Bloque_Inst
    (75) Inst_While -> . INST_WHILE Operacion_booleana INST_DO Bloque_Inst
    (68) Inst_If -> . INST_IF Operacion_booleana INST_THEN Bloque_Inst
    (69) Inst_If -> . INST_IF Operacion_booleana INST_THEN Bloque_Inst INST_ELSE Bloque_Inst
    (70) Inst_Case -> . INST_CASE Operacion_binaria INST_OF Casos
    (62) Inst_Salida -> . INST_WRITE Lista_Aux
    (63) Inst_Salida -> . INST_WRITELN Lista_Aux
    (15) Inst_Funcion -> . RTOI LPAREN VAR_IDENTIFIER RPAREN
    (16) Inst_Funcion -> . LENGTH LPAREN VAR_IDENTIFIER RPAREN
    (17) Inst_Funcion -> . TOP LPAREN VAR_IDENTIFIER RPAREN
    (18) Inst_Funcion -> . BOTTOM LPAREN VAR_IDENTIFIER RPAREN
    (21) Inst_Declareau -> . INST_DECLARE Lista_Declare

    VAR_IDENTIFIER  shift and go to state 18
    INST_READ       shift and go to state 10
    INST_FOR        shift and go to state 21
    INST_WHILE      shift and go to state 9
    INST_IF         shift and go to state 22
    INST_CASE       shift and go to state 20
    INST_WRITE      shift and go to state 5
    INST_WRITELN    shift and go to state 23
    RTOI            shift and go to state 25
    LENGTH          shift and go to state 24
    TOP             shift and go to state 6
    BOTTOM          shift and go to state 13
    INST_DECLARE    shift and go to state 3

    Inst_Salida                    shift and go to state 8
    Inst_Declare                   shift and go to state 12
    Inst_Funcion                   shift and go to state 4
    Inst_If                        shift and go to state 19
    Inst_For                       shift and go to state 14
    Inst_While                     shift and go to state 16
    Inst                           shift and go to state 52
    Inst_Asignacion                shift and go to state 26
    Inst_Case                      shift and go to state 27
    Inst_Lectura                   shift and go to state 17
    Lista_Inst                     shift and go to state 129
    Inst_Declareau                 shift and go to state 28

state 94

    (2) Bloque_Inst -> INST_BEGIN Lista_Inst INST_END .

    $end            reduce using rule 2 (Bloque_Inst -> INST_BEGIN Lista_Inst INST_END .)
    SEMICOLON       reduce using rule 2 (Bloque_Inst -> INST_BEGIN Lista_Inst INST_END .)
    INST_END        reduce using rule 2 (Bloque_Inst -> INST_BEGIN Lista_Inst INST_END .)
    INST_ELSE       reduce using rule 2 (Bloque_Inst -> INST_BEGIN Lista_Inst INST_END .)
    VAR_IDENTIFIER  reduce using rule 2 (Bloque_Inst -> INST_BEGIN Lista_Inst INST_END .)
    LPAREN          reduce using rule 2 (Bloque_Inst -> INST_BEGIN Lista_Inst INST_END .)
    NUMBER          reduce using rule 2 (Bloque_Inst -> INST_BEGIN Lista_Inst INST_END .)


state 95

    (18) Inst_Funcion -> BOTTOM LPAREN VAR_IDENTIFIER . RPAREN

    RPAREN          shift and go to state 130


state 96

    (28) Inst_Asignacion -> VAR_IDENTIFIER EQUAL Expresion .

    $end            reduce using rule 28 (Inst_Asignacion -> VAR_IDENTIFIER EQUAL Expresion .)
    SEMICOLON       reduce using rule 28 (Inst_Asignacion -> VAR_IDENTIFIER EQUAL Expresion .)
    INST_END        reduce using rule 28 (Inst_Asignacion -> VAR_IDENTIFIER EQUAL Expresion .)
    INST_ELSE       reduce using rule 28 (Inst_Asignacion -> VAR_IDENTIFIER EQUAL Expresion .)
    VAR_IDENTIFIER  reduce using rule 28 (Inst_Asignacion -> VAR_IDENTIFIER EQUAL Expresion .)
    LPAREN          reduce using rule 28 (Inst_Asignacion -> VAR_IDENTIFIER EQUAL Expresion .)
    NUMBER          reduce using rule 28 (Inst_Asignacion -> VAR_IDENTIFIER EQUAL Expresion .)


state 97

    (70) Inst_Case -> INST_CASE Operacion_binaria INST_OF . Casos
    (71) Casos -> . VAR_IDENTIFIER - > Bloque_Inst
    (72) Casos -> . Rango - > Bloque_Inst
    (73) Casos -> . Casos Casos
    (55) Rango -> . Operacion_binaria RANGE Operacion_binaria
    (56) Rango -> . Rango PLUS Rango
    (57) Rango -> . Rango TIMES Operacion_binaria
    (58) Rango -> . Rango INTERSECTION Rango
    (59) Rango -> . RangoF
    (46) Operacion_binaria -> . Operacion_binaria PLUS Term
    (47) Operacion_binaria -> . Operacion_binaria MINUS Term
    (48) Operacion_binaria -> . Term
    (60) RangoF -> . LPAREN Rango RPAREN
    (49) Term -> . Term TIMES Factor
    (50) Term -> . Term DIVIDE Factor
    (51) Term -> . Factor
    (52) Factor -> . NUMBER
    (53) Factor -> . VAR_IDENTIFIER
    (54) Factor -> . LPAREN Operacion_binaria RPAREN

    VAR_IDENTIFIER  shift and go to state 131
    LPAREN          shift and go to state 119
    NUMBER          shift and go to state 33

    Operacion_binaria              shift and go to state 118
    Factor                         shift and go to state 40
    Term                           shift and go to state 38
    RangoF                         shift and go to state 32
    Rango                          shift and go to state 132
    Casos                          shift and go to state 133

state 98

    (54) Factor -> LPAREN Operacion_binaria . RPAREN
    (46) Operacion_binaria -> Operacion_binaria . PLUS Term
    (47) Operacion_binaria -> Operacion_binaria . MINUS Term

    RPAREN          shift and go to state 117
    PLUS            shift and go to state 87
    MINUS           shift and go to state 88


state 99

    (74) Inst_For -> INST_FOR VAR_IDENTIFIER INST_IN . Rango INST_DO Bloque_Inst
    (55) Rango -> . Operacion_binaria RANGE Operacion_binaria
    (56) Rango -> . Rango PLUS Rango
    (57) Rango -> . Rango TIMES Operacion_binaria
    (58) Rango -> . Rango INTERSECTION Rango
    (59) Rango -> . RangoF
    (46) Operacion_binaria -> . Operacion_binaria PLUS Term
    (47) Operacion_binaria -> . Operacion_binaria MINUS Term
    (48) Operacion_binaria -> . Term
    (60) RangoF -> . LPAREN Rango RPAREN
    (49) Term -> . Term TIMES Factor
    (50) Term -> . Term DIVIDE Factor
    (51) Term -> . Factor
    (52) Factor -> . NUMBER
    (53) Factor -> . VAR_IDENTIFIER
    (54) Factor -> . LPAREN Operacion_binaria RPAREN

    LPAREN          shift and go to state 119
    NUMBER          shift and go to state 33
    VAR_IDENTIFIER  shift and go to state 56

    Operacion_binaria              shift and go to state 118
    RangoF                         shift and go to state 32
    Term                           shift and go to state 38
    Factor                         shift and go to state 40
    Rango                          shift and go to state 134

state 100

    (68) Inst_If -> INST_IF Operacion_booleana INST_THEN . Bloque_Inst
    (69) Inst_If -> INST_IF Operacion_booleana INST_THEN . Bloque_Inst INST_ELSE Bloque_Inst
    (2) Bloque_Inst -> . INST_BEGIN Lista_Inst INST_END
    (3) Bloque_Inst -> . Inst
    (6) Inst -> . Inst_Declare
    (7) Inst -> . Inst_Asignacion
    (8) Inst -> . Inst_Lectura
    (9) Inst -> . Inst_For
    (10) Inst -> . Inst_While
    (11) Inst -> . Inst_If
    (12) Inst -> . Inst_Case
    (13) Inst -> . Inst_Salida
    (14) Inst -> . Inst_Funcion
    (19) Inst_Declare -> . Inst_Declareau
    (20) Inst_Declare -> . Inst_Declareau SEMICOLON Inst_Declare
    (28) Inst_Asignacion -> . VAR_IDENTIFIER EQUAL Expresion
    (61) Inst_Lectura -> . INST_READ VAR_IDENTIFIER
    (74) Inst_For -> . INST_FOR VAR_IDENTIFIER INST_IN Rango INST_DO Bloque_Inst
    (75) Inst_While -> . INST_WHILE Operacion_booleana INST_DO Bloque_Inst
    (68) Inst_If -> . INST_IF Operacion_booleana INST_THEN Bloque_Inst
    (69) Inst_If -> . INST_IF Operacion_booleana INST_THEN Bloque_Inst INST_ELSE Bloque_Inst
    (70) Inst_Case -> . INST_CASE Operacion_binaria INST_OF Casos
    (62) Inst_Salida -> . INST_WRITE Lista_Aux
    (63) Inst_Salida -> . INST_WRITELN Lista_Aux
    (15) Inst_Funcion -> . RTOI LPAREN VAR_IDENTIFIER RPAREN
    (16) Inst_Funcion -> . LENGTH LPAREN VAR_IDENTIFIER RPAREN
    (17) Inst_Funcion -> . TOP LPAREN VAR_IDENTIFIER RPAREN
    (18) Inst_Funcion -> . BOTTOM LPAREN VAR_IDENTIFIER RPAREN
    (21) Inst_Declareau -> . INST_DECLARE Lista_Declare

    INST_BEGIN      shift and go to state 11
    VAR_IDENTIFIER  shift and go to state 18
    INST_READ       shift and go to state 10
    INST_FOR        shift and go to state 21
    INST_WHILE      shift and go to state 9
    INST_IF         shift and go to state 22
    INST_CASE       shift and go to state 20
    INST_WRITE      shift and go to state 5
    INST_WRITELN    shift and go to state 23
    RTOI            shift and go to state 25
    LENGTH          shift and go to state 24
    TOP             shift and go to state 6
    BOTTOM          shift and go to state 13
    INST_DECLARE    shift and go to state 3

    Inst_Salida                    shift and go to state 8
    Inst_Declare                   shift and go to state 12
    Inst_Funcion                   shift and go to state 4
    Bloque_Inst                    shift and go to state 135
    Inst_If                        shift and go to state 19
    Inst_For                       shift and go to state 14
    Inst_While                     shift and go to state 16
    Inst                           shift and go to state 15
    Inst_Asignacion                shift and go to state 26
    Inst_Case                      shift and go to state 27
    Inst_Lectura                   shift and go to state 17
    Inst_Declareau                 shift and go to state 28

state 101

    (16) Inst_Funcion -> LENGTH LPAREN VAR_IDENTIFIER . RPAREN

    RPAREN          shift and go to state 136


state 102

    (15) Inst_Funcion -> RTOI LPAREN VAR_IDENTIFIER . RPAREN

    RPAREN          shift and go to state 137


state 103

    (20) Inst_Declare -> Inst_Declareau SEMICOLON Inst_Declare .

    SEMICOLON       reduce using rule 20 (Inst_Declare -> Inst_Declareau SEMICOLON Inst_Declare .)
    INST_END        reduce using rule 20 (Inst_Declare -> Inst_Declareau SEMICOLON Inst_Declare .)
    $end            reduce using rule 20 (Inst_Declare -> Inst_Declareau SEMICOLON Inst_Declare .)
    INST_ELSE       reduce using rule 20 (Inst_Declare -> Inst_Declareau SEMICOLON Inst_Declare .)
    VAR_IDENTIFIER  reduce using rule 20 (Inst_Declare -> Inst_Declareau SEMICOLON Inst_Declare .)
    LPAREN          reduce using rule 20 (Inst_Declare -> Inst_Declareau SEMICOLON Inst_Declare .)
    NUMBER          reduce using rule 20 (Inst_Declare -> Inst_Declareau SEMICOLON Inst_Declare .)


state 104

    (24) Lista_Variables -> VAR_IDENTIFIER COMMA Lista_Variables .

    INST_AS         reduce using rule 24 (Lista_Variables -> VAR_IDENTIFIER COMMA Lista_Variables .)


state 105

    (25) Tipo -> TYPEDEF_INT .

    SEMICOLON       reduce using rule 25 (Tipo -> TYPEDEF_INT .)
    $end            reduce using rule 25 (Tipo -> TYPEDEF_INT .)
    INST_END        reduce using rule 25 (Tipo -> TYPEDEF_INT .)
    INST_ELSE       reduce using rule 25 (Tipo -> TYPEDEF_INT .)
    VAR_IDENTIFIER  reduce using rule 25 (Tipo -> TYPEDEF_INT .)
    LPAREN          reduce using rule 25 (Tipo -> TYPEDEF_INT .)
    NUMBER          reduce using rule 25 (Tipo -> TYPEDEF_INT .)


state 106

    (22) Lista_Declare -> Lista_Variables INST_AS Tipo .

    SEMICOLON       reduce using rule 22 (Lista_Declare -> Lista_Variables INST_AS Tipo .)
    $end            reduce using rule 22 (Lista_Declare -> Lista_Variables INST_AS Tipo .)
    INST_END        reduce using rule 22 (Lista_Declare -> Lista_Variables INST_AS Tipo .)
    INST_ELSE       reduce using rule 22 (Lista_Declare -> Lista_Variables INST_AS Tipo .)
    VAR_IDENTIFIER  reduce using rule 22 (Lista_Declare -> Lista_Variables INST_AS Tipo .)
    LPAREN          reduce using rule 22 (Lista_Declare -> Lista_Variables INST_AS Tipo .)
    NUMBER          reduce using rule 22 (Lista_Declare -> Lista_Variables INST_AS Tipo .)


state 107

    (27) Tipo -> TYPEDEF_RANGE .

    SEMICOLON       reduce using rule 27 (Tipo -> TYPEDEF_RANGE .)
    $end            reduce using rule 27 (Tipo -> TYPEDEF_RANGE .)
    INST_END        reduce using rule 27 (Tipo -> TYPEDEF_RANGE .)
    INST_ELSE       reduce using rule 27 (Tipo -> TYPEDEF_RANGE .)
    VAR_IDENTIFIER  reduce using rule 27 (Tipo -> TYPEDEF_RANGE .)
    LPAREN          reduce using rule 27 (Tipo -> TYPEDEF_RANGE .)
    NUMBER          reduce using rule 27 (Tipo -> TYPEDEF_RANGE .)


state 108

    (26) Tipo -> TYPEDEF_BOOL .

    SEMICOLON       reduce using rule 26 (Tipo -> TYPEDEF_BOOL .)
    $end            reduce using rule 26 (Tipo -> TYPEDEF_BOOL .)
    INST_END        reduce using rule 26 (Tipo -> TYPEDEF_BOOL .)
    INST_ELSE       reduce using rule 26 (Tipo -> TYPEDEF_BOOL .)
    VAR_IDENTIFIER  reduce using rule 26 (Tipo -> TYPEDEF_BOOL .)
    LPAREN          reduce using rule 26 (Tipo -> TYPEDEF_BOOL .)
    NUMBER          reduce using rule 26 (Tipo -> TYPEDEF_BOOL .)


state 109

    (33) Operacion_booleana -> Operacion_booleana AND Operacion_booleana .
    (33) Operacion_booleana -> Operacion_booleana . AND Operacion_booleana
    (34) Operacion_booleana -> Operacion_booleana . OR Operacion_booleana

    AND             reduce using rule 33 (Operacion_booleana -> Operacion_booleana AND Operacion_booleana .)
    OR              reduce using rule 33 (Operacion_booleana -> Operacion_booleana AND Operacion_booleana .)
    COMMA           reduce using rule 33 (Operacion_booleana -> Operacion_booleana AND Operacion_booleana .)
    $end            reduce using rule 33 (Operacion_booleana -> Operacion_booleana AND Operacion_booleana .)
    SEMICOLON       reduce using rule 33 (Operacion_booleana -> Operacion_booleana AND Operacion_booleana .)
    INST_END        reduce using rule 33 (Operacion_booleana -> Operacion_booleana AND Operacion_booleana .)
    INST_ELSE       reduce using rule 33 (Operacion_booleana -> Operacion_booleana AND Operacion_booleana .)
    VAR_IDENTIFIER  reduce using rule 33 (Operacion_booleana -> Operacion_booleana AND Operacion_booleana .)
    LPAREN          reduce using rule 33 (Operacion_booleana -> Operacion_booleana AND Operacion_booleana .)
    NUMBER          reduce using rule 33 (Operacion_booleana -> Operacion_booleana AND Operacion_booleana .)
    INST_DO         reduce using rule 33 (Operacion_booleana -> Operacion_booleana AND Operacion_booleana .)
    INST_THEN       reduce using rule 33 (Operacion_booleana -> Operacion_booleana AND Operacion_booleana .)
    RPAREN          reduce using rule 33 (Operacion_booleana -> Operacion_booleana AND Operacion_booleana .)

  ! AND             [ shift and go to state 67 ]
  ! OR              [ shift and go to state 68 ]


state 110

    (34) Operacion_booleana -> Operacion_booleana OR Operacion_booleana .
    (33) Operacion_booleana -> Operacion_booleana . AND Operacion_booleana
    (34) Operacion_booleana -> Operacion_booleana . OR Operacion_booleana

    OR              reduce using rule 34 (Operacion_booleana -> Operacion_booleana OR Operacion_booleana .)
    COMMA           reduce using rule 34 (Operacion_booleana -> Operacion_booleana OR Operacion_booleana .)
    $end            reduce using rule 34 (Operacion_booleana -> Operacion_booleana OR Operacion_booleana .)
    SEMICOLON       reduce using rule 34 (Operacion_booleana -> Operacion_booleana OR Operacion_booleana .)
    INST_END        reduce using rule 34 (Operacion_booleana -> Operacion_booleana OR Operacion_booleana .)
    INST_ELSE       reduce using rule 34 (Operacion_booleana -> Operacion_booleana OR Operacion_booleana .)
    VAR_IDENTIFIER  reduce using rule 34 (Operacion_booleana -> Operacion_booleana OR Operacion_booleana .)
    LPAREN          reduce using rule 34 (Operacion_booleana -> Operacion_booleana OR Operacion_booleana .)
    NUMBER          reduce using rule 34 (Operacion_booleana -> Operacion_booleana OR Operacion_booleana .)
    INST_DO         reduce using rule 34 (Operacion_booleana -> Operacion_booleana OR Operacion_booleana .)
    INST_THEN       reduce using rule 34 (Operacion_booleana -> Operacion_booleana OR Operacion_booleana .)
    RPAREN          reduce using rule 34 (Operacion_booleana -> Operacion_booleana OR Operacion_booleana .)
    AND             shift and go to state 67

  ! AND             [ reduce using rule 34 (Operacion_booleana -> Operacion_booleana OR Operacion_booleana .) ]
  ! OR              [ shift and go to state 68 ]


state 111

    (66) Lista_Aux -> Expresion COMMA Lista_Aux .

    $end            reduce using rule 66 (Lista_Aux -> Expresion COMMA Lista_Aux .)
    SEMICOLON       reduce using rule 66 (Lista_Aux -> Expresion COMMA Lista_Aux .)
    INST_END        reduce using rule 66 (Lista_Aux -> Expresion COMMA Lista_Aux .)
    INST_ELSE       reduce using rule 66 (Lista_Aux -> Expresion COMMA Lista_Aux .)
    VAR_IDENTIFIER  reduce using rule 66 (Lista_Aux -> Expresion COMMA Lista_Aux .)
    LPAREN          reduce using rule 66 (Lista_Aux -> Expresion COMMA Lista_Aux .)
    NUMBER          reduce using rule 66 (Lista_Aux -> Expresion COMMA Lista_Aux .)


state 112

    (50) Term -> Term DIVIDE Factor .

    TIMES           reduce using rule 50 (Term -> Term DIVIDE Factor .)
    DIVIDE          reduce using rule 50 (Term -> Term DIVIDE Factor .)
    PLUS            reduce using rule 50 (Term -> Term DIVIDE Factor .)
    MINUS           reduce using rule 50 (Term -> Term DIVIDE Factor .)
    RANGE           reduce using rule 50 (Term -> Term DIVIDE Factor .)
    EQEQ            reduce using rule 50 (Term -> Term DIVIDE Factor .)
    NEQEQ           reduce using rule 50 (Term -> Term DIVIDE Factor .)
    GREAT           reduce using rule 50 (Term -> Term DIVIDE Factor .)
    LESS            reduce using rule 50 (Term -> Term DIVIDE Factor .)
    GREATEQ         reduce using rule 50 (Term -> Term DIVIDE Factor .)
    LESSEQ          reduce using rule 50 (Term -> Term DIVIDE Factor .)
    $end            reduce using rule 50 (Term -> Term DIVIDE Factor .)
    SEMICOLON       reduce using rule 50 (Term -> Term DIVIDE Factor .)
    INST_END        reduce using rule 50 (Term -> Term DIVIDE Factor .)
    INST_ELSE       reduce using rule 50 (Term -> Term DIVIDE Factor .)
    VAR_IDENTIFIER  reduce using rule 50 (Term -> Term DIVIDE Factor .)
    LPAREN          reduce using rule 50 (Term -> Term DIVIDE Factor .)
    NUMBER          reduce using rule 50 (Term -> Term DIVIDE Factor .)
    INTERSECTION    reduce using rule 50 (Term -> Term DIVIDE Factor .)
    COMMA           reduce using rule 50 (Term -> Term DIVIDE Factor .)
    RPAREN          reduce using rule 50 (Term -> Term DIVIDE Factor .)
    -               reduce using rule 50 (Term -> Term DIVIDE Factor .)
    INST_DO         reduce using rule 50 (Term -> Term DIVIDE Factor .)
    INST_OF         reduce using rule 50 (Term -> Term DIVIDE Factor .)
    AND             reduce using rule 50 (Term -> Term DIVIDE Factor .)
    OR              reduce using rule 50 (Term -> Term DIVIDE Factor .)
    INST_THEN       reduce using rule 50 (Term -> Term DIVIDE Factor .)


state 113

    (49) Term -> Term TIMES Factor .

    TIMES           reduce using rule 49 (Term -> Term TIMES Factor .)
    DIVIDE          reduce using rule 49 (Term -> Term TIMES Factor .)
    PLUS            reduce using rule 49 (Term -> Term TIMES Factor .)
    MINUS           reduce using rule 49 (Term -> Term TIMES Factor .)
    RANGE           reduce using rule 49 (Term -> Term TIMES Factor .)
    EQEQ            reduce using rule 49 (Term -> Term TIMES Factor .)
    NEQEQ           reduce using rule 49 (Term -> Term TIMES Factor .)
    GREAT           reduce using rule 49 (Term -> Term TIMES Factor .)
    LESS            reduce using rule 49 (Term -> Term TIMES Factor .)
    GREATEQ         reduce using rule 49 (Term -> Term TIMES Factor .)
    LESSEQ          reduce using rule 49 (Term -> Term TIMES Factor .)
    $end            reduce using rule 49 (Term -> Term TIMES Factor .)
    SEMICOLON       reduce using rule 49 (Term -> Term TIMES Factor .)
    INST_END        reduce using rule 49 (Term -> Term TIMES Factor .)
    INST_ELSE       reduce using rule 49 (Term -> Term TIMES Factor .)
    VAR_IDENTIFIER  reduce using rule 49 (Term -> Term TIMES Factor .)
    LPAREN          reduce using rule 49 (Term -> Term TIMES Factor .)
    NUMBER          reduce using rule 49 (Term -> Term TIMES Factor .)
    INTERSECTION    reduce using rule 49 (Term -> Term TIMES Factor .)
    COMMA           reduce using rule 49 (Term -> Term TIMES Factor .)
    RPAREN          reduce using rule 49 (Term -> Term TIMES Factor .)
    -               reduce using rule 49 (Term -> Term TIMES Factor .)
    INST_DO         reduce using rule 49 (Term -> Term TIMES Factor .)
    INST_OF         reduce using rule 49 (Term -> Term TIMES Factor .)
    AND             reduce using rule 49 (Term -> Term TIMES Factor .)
    OR              reduce using rule 49 (Term -> Term TIMES Factor .)
    INST_THEN       reduce using rule 49 (Term -> Term TIMES Factor .)


state 114

    (67) Lista_Aux -> STRING COMMA Lista_Aux .

    $end            reduce using rule 67 (Lista_Aux -> STRING COMMA Lista_Aux .)
    SEMICOLON       reduce using rule 67 (Lista_Aux -> STRING COMMA Lista_Aux .)
    INST_END        reduce using rule 67 (Lista_Aux -> STRING COMMA Lista_Aux .)
    INST_ELSE       reduce using rule 67 (Lista_Aux -> STRING COMMA Lista_Aux .)
    VAR_IDENTIFIER  reduce using rule 67 (Lista_Aux -> STRING COMMA Lista_Aux .)
    LPAREN          reduce using rule 67 (Lista_Aux -> STRING COMMA Lista_Aux .)
    NUMBER          reduce using rule 67 (Lista_Aux -> STRING COMMA Lista_Aux .)


state 115

    (35) Operacion_booleana -> LPAREN Operacion_booleana RPAREN .

    AND             reduce using rule 35 (Operacion_booleana -> LPAREN Operacion_booleana RPAREN .)
    OR              reduce using rule 35 (Operacion_booleana -> LPAREN Operacion_booleana RPAREN .)
    COMMA           reduce using rule 35 (Operacion_booleana -> LPAREN Operacion_booleana RPAREN .)
    $end            reduce using rule 35 (Operacion_booleana -> LPAREN Operacion_booleana RPAREN .)
    SEMICOLON       reduce using rule 35 (Operacion_booleana -> LPAREN Operacion_booleana RPAREN .)
    INST_END        reduce using rule 35 (Operacion_booleana -> LPAREN Operacion_booleana RPAREN .)
    INST_ELSE       reduce using rule 35 (Operacion_booleana -> LPAREN Operacion_booleana RPAREN .)
    VAR_IDENTIFIER  reduce using rule 35 (Operacion_booleana -> LPAREN Operacion_booleana RPAREN .)
    LPAREN          reduce using rule 35 (Operacion_booleana -> LPAREN Operacion_booleana RPAREN .)
    NUMBER          reduce using rule 35 (Operacion_booleana -> LPAREN Operacion_booleana RPAREN .)
    INST_DO         reduce using rule 35 (Operacion_booleana -> LPAREN Operacion_booleana RPAREN .)
    INST_THEN       reduce using rule 35 (Operacion_booleana -> LPAREN Operacion_booleana RPAREN .)
    RPAREN          reduce using rule 35 (Operacion_booleana -> LPAREN Operacion_booleana RPAREN .)


state 116

    (60) RangoF -> LPAREN Rango RPAREN .

    -               reduce using rule 60 (RangoF -> LPAREN Rango RPAREN .)
    PLUS            reduce using rule 60 (RangoF -> LPAREN Rango RPAREN .)
    TIMES           reduce using rule 60 (RangoF -> LPAREN Rango RPAREN .)
    INTERSECTION    reduce using rule 60 (RangoF -> LPAREN Rango RPAREN .)
    RPAREN          reduce using rule 60 (RangoF -> LPAREN Rango RPAREN .)
    COMMA           reduce using rule 60 (RangoF -> LPAREN Rango RPAREN .)
    $end            reduce using rule 60 (RangoF -> LPAREN Rango RPAREN .)
    SEMICOLON       reduce using rule 60 (RangoF -> LPAREN Rango RPAREN .)
    INST_END        reduce using rule 60 (RangoF -> LPAREN Rango RPAREN .)
    INST_ELSE       reduce using rule 60 (RangoF -> LPAREN Rango RPAREN .)
    VAR_IDENTIFIER  reduce using rule 60 (RangoF -> LPAREN Rango RPAREN .)
    LPAREN          reduce using rule 60 (RangoF -> LPAREN Rango RPAREN .)
    NUMBER          reduce using rule 60 (RangoF -> LPAREN Rango RPAREN .)
    INST_DO         reduce using rule 60 (RangoF -> LPAREN Rango RPAREN .)


state 117

    (54) Factor -> LPAREN Operacion_binaria RPAREN .

    TIMES           reduce using rule 54 (Factor -> LPAREN Operacion_binaria RPAREN .)
    DIVIDE          reduce using rule 54 (Factor -> LPAREN Operacion_binaria RPAREN .)
    PLUS            reduce using rule 54 (Factor -> LPAREN Operacion_binaria RPAREN .)
    MINUS           reduce using rule 54 (Factor -> LPAREN Operacion_binaria RPAREN .)
    EQEQ            reduce using rule 54 (Factor -> LPAREN Operacion_binaria RPAREN .)
    NEQEQ           reduce using rule 54 (Factor -> LPAREN Operacion_binaria RPAREN .)
    GREAT           reduce using rule 54 (Factor -> LPAREN Operacion_binaria RPAREN .)
    LESS            reduce using rule 54 (Factor -> LPAREN Operacion_binaria RPAREN .)
    GREATEQ         reduce using rule 54 (Factor -> LPAREN Operacion_binaria RPAREN .)
    LESSEQ          reduce using rule 54 (Factor -> LPAREN Operacion_binaria RPAREN .)
    RANGE           reduce using rule 54 (Factor -> LPAREN Operacion_binaria RPAREN .)
    COMMA           reduce using rule 54 (Factor -> LPAREN Operacion_binaria RPAREN .)
    $end            reduce using rule 54 (Factor -> LPAREN Operacion_binaria RPAREN .)
    SEMICOLON       reduce using rule 54 (Factor -> LPAREN Operacion_binaria RPAREN .)
    INST_END        reduce using rule 54 (Factor -> LPAREN Operacion_binaria RPAREN .)
    INST_ELSE       reduce using rule 54 (Factor -> LPAREN Operacion_binaria RPAREN .)
    VAR_IDENTIFIER  reduce using rule 54 (Factor -> LPAREN Operacion_binaria RPAREN .)
    LPAREN          reduce using rule 54 (Factor -> LPAREN Operacion_binaria RPAREN .)
    NUMBER          reduce using rule 54 (Factor -> LPAREN Operacion_binaria RPAREN .)
    INST_OF         reduce using rule 54 (Factor -> LPAREN Operacion_binaria RPAREN .)
    RPAREN          reduce using rule 54 (Factor -> LPAREN Operacion_binaria RPAREN .)
    INTERSECTION    reduce using rule 54 (Factor -> LPAREN Operacion_binaria RPAREN .)
    -               reduce using rule 54 (Factor -> LPAREN Operacion_binaria RPAREN .)
    INST_DO         reduce using rule 54 (Factor -> LPAREN Operacion_binaria RPAREN .)
    AND             reduce using rule 54 (Factor -> LPAREN Operacion_binaria RPAREN .)
    OR              reduce using rule 54 (Factor -> LPAREN Operacion_binaria RPAREN .)
    INST_THEN       reduce using rule 54 (Factor -> LPAREN Operacion_binaria RPAREN .)


state 118

    (55) Rango -> Operacion_binaria . RANGE Operacion_binaria
    (46) Operacion_binaria -> Operacion_binaria . PLUS Term
    (47) Operacion_binaria -> Operacion_binaria . MINUS Term

    RANGE           shift and go to state 85
    PLUS            shift and go to state 87
    MINUS           shift and go to state 88


state 119

    (60) RangoF -> LPAREN . Rango RPAREN
    (54) Factor -> LPAREN . Operacion_binaria RPAREN
    (55) Rango -> . Operacion_binaria RANGE Operacion_binaria
    (56) Rango -> . Rango PLUS Rango
    (57) Rango -> . Rango TIMES Operacion_binaria
    (58) Rango -> . Rango INTERSECTION Rango
    (59) Rango -> . RangoF
    (46) Operacion_binaria -> . Operacion_binaria PLUS Term
    (47) Operacion_binaria -> . Operacion_binaria MINUS Term
    (48) Operacion_binaria -> . Term
    (60) RangoF -> . LPAREN Rango RPAREN
    (49) Term -> . Term TIMES Factor
    (50) Term -> . Term DIVIDE Factor
    (51) Term -> . Factor
    (52) Factor -> . NUMBER
    (53) Factor -> . VAR_IDENTIFIER
    (54) Factor -> . LPAREN Operacion_binaria RPAREN

    LPAREN          shift and go to state 119
    NUMBER          shift and go to state 33
    VAR_IDENTIFIER  shift and go to state 56

    Rango                          shift and go to state 74
    Operacion_binaria              shift and go to state 138
    Factor                         shift and go to state 40
    Term                           shift and go to state 38
    RangoF                         shift and go to state 32

state 120

    (58) Rango -> Rango INTERSECTION Rango .
    (56) Rango -> Rango . PLUS Rango
    (57) Rango -> Rango . TIMES Operacion_binaria
    (58) Rango -> Rango . INTERSECTION Rango

    INTERSECTION    reduce using rule 58 (Rango -> Rango INTERSECTION Rango .)
    $end            reduce using rule 58 (Rango -> Rango INTERSECTION Rango .)
    SEMICOLON       reduce using rule 58 (Rango -> Rango INTERSECTION Rango .)
    INST_END        reduce using rule 58 (Rango -> Rango INTERSECTION Rango .)
    INST_ELSE       reduce using rule 58 (Rango -> Rango INTERSECTION Rango .)
    VAR_IDENTIFIER  reduce using rule 58 (Rango -> Rango INTERSECTION Rango .)
    LPAREN          reduce using rule 58 (Rango -> Rango INTERSECTION Rango .)
    NUMBER          reduce using rule 58 (Rango -> Rango INTERSECTION Rango .)
    RPAREN          reduce using rule 58 (Rango -> Rango INTERSECTION Rango .)
    COMMA           reduce using rule 58 (Rango -> Rango INTERSECTION Rango .)
    -               reduce using rule 58 (Rango -> Rango INTERSECTION Rango .)
    INST_DO         reduce using rule 58 (Rango -> Rango INTERSECTION Rango .)
    PLUS            shift and go to state 77
    TIMES           shift and go to state 78

  ! PLUS            [ reduce using rule 58 (Rango -> Rango INTERSECTION Rango .) ]
  ! TIMES           [ reduce using rule 58 (Rango -> Rango INTERSECTION Rango .) ]
  ! INTERSECTION    [ shift and go to state 76 ]


state 121

    (56) Rango -> Rango PLUS Rango .
    (56) Rango -> Rango . PLUS Rango
    (57) Rango -> Rango . TIMES Operacion_binaria
    (58) Rango -> Rango . INTERSECTION Rango

    PLUS            reduce using rule 56 (Rango -> Rango PLUS Rango .)
    INTERSECTION    reduce using rule 56 (Rango -> Rango PLUS Rango .)
    $end            reduce using rule 56 (Rango -> Rango PLUS Rango .)
    SEMICOLON       reduce using rule 56 (Rango -> Rango PLUS Rango .)
    INST_END        reduce using rule 56 (Rango -> Rango PLUS Rango .)
    INST_ELSE       reduce using rule 56 (Rango -> Rango PLUS Rango .)
    VAR_IDENTIFIER  reduce using rule 56 (Rango -> Rango PLUS Rango .)
    LPAREN          reduce using rule 56 (Rango -> Rango PLUS Rango .)
    NUMBER          reduce using rule 56 (Rango -> Rango PLUS Rango .)
    RPAREN          reduce using rule 56 (Rango -> Rango PLUS Rango .)
    COMMA           reduce using rule 56 (Rango -> Rango PLUS Rango .)
    -               reduce using rule 56 (Rango -> Rango PLUS Rango .)
    INST_DO         reduce using rule 56 (Rango -> Rango PLUS Rango .)
    TIMES           shift and go to state 78

  ! TIMES           [ reduce using rule 56 (Rango -> Rango PLUS Rango .) ]
  ! PLUS            [ shift and go to state 77 ]
  ! INTERSECTION    [ shift and go to state 76 ]


state 122

    (57) Rango -> Rango TIMES Operacion_binaria .
    (46) Operacion_binaria -> Operacion_binaria . PLUS Term
    (47) Operacion_binaria -> Operacion_binaria . MINUS Term

    PLUS            reduce using rule 57 (Rango -> Rango TIMES Operacion_binaria .)
    TIMES           reduce using rule 57 (Rango -> Rango TIMES Operacion_binaria .)
    INTERSECTION    reduce using rule 57 (Rango -> Rango TIMES Operacion_binaria .)
    $end            reduce using rule 57 (Rango -> Rango TIMES Operacion_binaria .)
    SEMICOLON       reduce using rule 57 (Rango -> Rango TIMES Operacion_binaria .)
    INST_END        reduce using rule 57 (Rango -> Rango TIMES Operacion_binaria .)
    INST_ELSE       reduce using rule 57 (Rango -> Rango TIMES Operacion_binaria .)
    VAR_IDENTIFIER  reduce using rule 57 (Rango -> Rango TIMES Operacion_binaria .)
    LPAREN          reduce using rule 57 (Rango -> Rango TIMES Operacion_binaria .)
    NUMBER          reduce using rule 57 (Rango -> Rango TIMES Operacion_binaria .)
    RPAREN          reduce using rule 57 (Rango -> Rango TIMES Operacion_binaria .)
    COMMA           reduce using rule 57 (Rango -> Rango TIMES Operacion_binaria .)
    -               reduce using rule 57 (Rango -> Rango TIMES Operacion_binaria .)
    INST_DO         reduce using rule 57 (Rango -> Rango TIMES Operacion_binaria .)
    MINUS           shift and go to state 88

  ! PLUS            [ shift and go to state 87 ]


state 123

    (32) Operacion_booleana -> Operacion_binaria Opr_bool Operacion_binaria .
    (46) Operacion_binaria -> Operacion_binaria . PLUS Term
    (47) Operacion_binaria -> Operacion_binaria . MINUS Term

    AND             reduce using rule 32 (Operacion_booleana -> Operacion_binaria Opr_bool Operacion_binaria .)
    OR              reduce using rule 32 (Operacion_booleana -> Operacion_binaria Opr_bool Operacion_binaria .)
    COMMA           reduce using rule 32 (Operacion_booleana -> Operacion_binaria Opr_bool Operacion_binaria .)
    $end            reduce using rule 32 (Operacion_booleana -> Operacion_binaria Opr_bool Operacion_binaria .)
    SEMICOLON       reduce using rule 32 (Operacion_booleana -> Operacion_binaria Opr_bool Operacion_binaria .)
    INST_END        reduce using rule 32 (Operacion_booleana -> Operacion_binaria Opr_bool Operacion_binaria .)
    INST_ELSE       reduce using rule 32 (Operacion_booleana -> Operacion_binaria Opr_bool Operacion_binaria .)
    VAR_IDENTIFIER  reduce using rule 32 (Operacion_booleana -> Operacion_binaria Opr_bool Operacion_binaria .)
    LPAREN          reduce using rule 32 (Operacion_booleana -> Operacion_binaria Opr_bool Operacion_binaria .)
    NUMBER          reduce using rule 32 (Operacion_booleana -> Operacion_binaria Opr_bool Operacion_binaria .)
    INST_DO         reduce using rule 32 (Operacion_booleana -> Operacion_binaria Opr_bool Operacion_binaria .)
    INST_THEN       reduce using rule 32 (Operacion_booleana -> Operacion_binaria Opr_bool Operacion_binaria .)
    RPAREN          reduce using rule 32 (Operacion_booleana -> Operacion_binaria Opr_bool Operacion_binaria .)
    PLUS            shift and go to state 87
    MINUS           shift and go to state 88


state 124

    (55) Rango -> Operacion_binaria RANGE Operacion_binaria .
    (46) Operacion_binaria -> Operacion_binaria . PLUS Term
    (47) Operacion_binaria -> Operacion_binaria . MINUS Term

    PLUS            reduce using rule 55 (Rango -> Operacion_binaria RANGE Operacion_binaria .)
    TIMES           reduce using rule 55 (Rango -> Operacion_binaria RANGE Operacion_binaria .)
    INTERSECTION    reduce using rule 55 (Rango -> Operacion_binaria RANGE Operacion_binaria .)
    $end            reduce using rule 55 (Rango -> Operacion_binaria RANGE Operacion_binaria .)
    SEMICOLON       reduce using rule 55 (Rango -> Operacion_binaria RANGE Operacion_binaria .)
    INST_END        reduce using rule 55 (Rango -> Operacion_binaria RANGE Operacion_binaria .)
    INST_ELSE       reduce using rule 55 (Rango -> Operacion_binaria RANGE Operacion_binaria .)
    VAR_IDENTIFIER  reduce using rule 55 (Rango -> Operacion_binaria RANGE Operacion_binaria .)
    LPAREN          reduce using rule 55 (Rango -> Operacion_binaria RANGE Operacion_binaria .)
    NUMBER          reduce using rule 55 (Rango -> Operacion_binaria RANGE Operacion_binaria .)
    RPAREN          reduce using rule 55 (Rango -> Operacion_binaria RANGE Operacion_binaria .)
    COMMA           reduce using rule 55 (Rango -> Operacion_binaria RANGE Operacion_binaria .)
    -               reduce using rule 55 (Rango -> Operacion_binaria RANGE Operacion_binaria .)
    INST_DO         reduce using rule 55 (Rango -> Operacion_binaria RANGE Operacion_binaria .)
    MINUS           shift and go to state 88

  ! PLUS            [ shift and go to state 87 ]


state 125

    (46) Operacion_binaria -> Operacion_binaria PLUS Term .
    (49) Term -> Term . TIMES Factor
    (50) Term -> Term . DIVIDE Factor

    RPAREN          reduce using rule 46 (Operacion_binaria -> Operacion_binaria PLUS Term .)
    RANGE           reduce using rule 46 (Operacion_binaria -> Operacion_binaria PLUS Term .)
    PLUS            reduce using rule 46 (Operacion_binaria -> Operacion_binaria PLUS Term .)
    MINUS           reduce using rule 46 (Operacion_binaria -> Operacion_binaria PLUS Term .)
    INTERSECTION    reduce using rule 46 (Operacion_binaria -> Operacion_binaria PLUS Term .)
    COMMA           reduce using rule 46 (Operacion_binaria -> Operacion_binaria PLUS Term .)
    $end            reduce using rule 46 (Operacion_binaria -> Operacion_binaria PLUS Term .)
    SEMICOLON       reduce using rule 46 (Operacion_binaria -> Operacion_binaria PLUS Term .)
    INST_END        reduce using rule 46 (Operacion_binaria -> Operacion_binaria PLUS Term .)
    INST_ELSE       reduce using rule 46 (Operacion_binaria -> Operacion_binaria PLUS Term .)
    VAR_IDENTIFIER  reduce using rule 46 (Operacion_binaria -> Operacion_binaria PLUS Term .)
    LPAREN          reduce using rule 46 (Operacion_binaria -> Operacion_binaria PLUS Term .)
    NUMBER          reduce using rule 46 (Operacion_binaria -> Operacion_binaria PLUS Term .)
    -               reduce using rule 46 (Operacion_binaria -> Operacion_binaria PLUS Term .)
    INST_DO         reduce using rule 46 (Operacion_binaria -> Operacion_binaria PLUS Term .)
    EQEQ            reduce using rule 46 (Operacion_binaria -> Operacion_binaria PLUS Term .)
    NEQEQ           reduce using rule 46 (Operacion_binaria -> Operacion_binaria PLUS Term .)
    GREAT           reduce using rule 46 (Operacion_binaria -> Operacion_binaria PLUS Term .)
    LESS            reduce using rule 46 (Operacion_binaria -> Operacion_binaria PLUS Term .)
    GREATEQ         reduce using rule 46 (Operacion_binaria -> Operacion_binaria PLUS Term .)
    LESSEQ          reduce using rule 46 (Operacion_binaria -> Operacion_binaria PLUS Term .)
    INST_OF         reduce using rule 46 (Operacion_binaria -> Operacion_binaria PLUS Term .)
    AND             reduce using rule 46 (Operacion_binaria -> Operacion_binaria PLUS Term .)
    OR              reduce using rule 46 (Operacion_binaria -> Operacion_binaria PLUS Term .)
    INST_THEN       reduce using rule 46 (Operacion_binaria -> Operacion_binaria PLUS Term .)
    TIMES           shift and go to state 71
    DIVIDE          shift and go to state 70

  ! TIMES           [ reduce using rule 46 (Operacion_binaria -> Operacion_binaria PLUS Term .) ]


state 126

    (47) Operacion_binaria -> Operacion_binaria MINUS Term .
    (49) Term -> Term . TIMES Factor
    (50) Term -> Term . DIVIDE Factor

    RPAREN          reduce using rule 47 (Operacion_binaria -> Operacion_binaria MINUS Term .)
    RANGE           reduce using rule 47 (Operacion_binaria -> Operacion_binaria MINUS Term .)
    PLUS            reduce using rule 47 (Operacion_binaria -> Operacion_binaria MINUS Term .)
    MINUS           reduce using rule 47 (Operacion_binaria -> Operacion_binaria MINUS Term .)
    INTERSECTION    reduce using rule 47 (Operacion_binaria -> Operacion_binaria MINUS Term .)
    COMMA           reduce using rule 47 (Operacion_binaria -> Operacion_binaria MINUS Term .)
    $end            reduce using rule 47 (Operacion_binaria -> Operacion_binaria MINUS Term .)
    SEMICOLON       reduce using rule 47 (Operacion_binaria -> Operacion_binaria MINUS Term .)
    INST_END        reduce using rule 47 (Operacion_binaria -> Operacion_binaria MINUS Term .)
    INST_ELSE       reduce using rule 47 (Operacion_binaria -> Operacion_binaria MINUS Term .)
    VAR_IDENTIFIER  reduce using rule 47 (Operacion_binaria -> Operacion_binaria MINUS Term .)
    LPAREN          reduce using rule 47 (Operacion_binaria -> Operacion_binaria MINUS Term .)
    NUMBER          reduce using rule 47 (Operacion_binaria -> Operacion_binaria MINUS Term .)
    -               reduce using rule 47 (Operacion_binaria -> Operacion_binaria MINUS Term .)
    INST_DO         reduce using rule 47 (Operacion_binaria -> Operacion_binaria MINUS Term .)
    EQEQ            reduce using rule 47 (Operacion_binaria -> Operacion_binaria MINUS Term .)
    NEQEQ           reduce using rule 47 (Operacion_binaria -> Operacion_binaria MINUS Term .)
    GREAT           reduce using rule 47 (Operacion_binaria -> Operacion_binaria MINUS Term .)
    LESS            reduce using rule 47 (Operacion_binaria -> Operacion_binaria MINUS Term .)
    GREATEQ         reduce using rule 47 (Operacion_binaria -> Operacion_binaria MINUS Term .)
    LESSEQ          reduce using rule 47 (Operacion_binaria -> Operacion_binaria MINUS Term .)
    INST_OF         reduce using rule 47 (Operacion_binaria -> Operacion_binaria MINUS Term .)
    AND             reduce using rule 47 (Operacion_binaria -> Operacion_binaria MINUS Term .)
    OR              reduce using rule 47 (Operacion_binaria -> Operacion_binaria MINUS Term .)
    INST_THEN       reduce using rule 47 (Operacion_binaria -> Operacion_binaria MINUS Term .)
    TIMES           shift and go to state 71
    DIVIDE          shift and go to state 70

  ! TIMES           [ reduce using rule 47 (Operacion_binaria -> Operacion_binaria MINUS Term .) ]


state 127

    (17) Inst_Funcion -> TOP LPAREN VAR_IDENTIFIER RPAREN .

    $end            reduce using rule 17 (Inst_Funcion -> TOP LPAREN VAR_IDENTIFIER RPAREN .)
    SEMICOLON       reduce using rule 17 (Inst_Funcion -> TOP LPAREN VAR_IDENTIFIER RPAREN .)
    INST_END        reduce using rule 17 (Inst_Funcion -> TOP LPAREN VAR_IDENTIFIER RPAREN .)
    INST_ELSE       reduce using rule 17 (Inst_Funcion -> TOP LPAREN VAR_IDENTIFIER RPAREN .)
    VAR_IDENTIFIER  reduce using rule 17 (Inst_Funcion -> TOP LPAREN VAR_IDENTIFIER RPAREN .)
    LPAREN          reduce using rule 17 (Inst_Funcion -> TOP LPAREN VAR_IDENTIFIER RPAREN .)
    NUMBER          reduce using rule 17 (Inst_Funcion -> TOP LPAREN VAR_IDENTIFIER RPAREN .)


state 128

    (75) Inst_While -> INST_WHILE Operacion_booleana INST_DO Bloque_Inst .

    SEMICOLON       reduce using rule 75 (Inst_While -> INST_WHILE Operacion_booleana INST_DO Bloque_Inst .)
    INST_END        reduce using rule 75 (Inst_While -> INST_WHILE Operacion_booleana INST_DO Bloque_Inst .)
    $end            reduce using rule 75 (Inst_While -> INST_WHILE Operacion_booleana INST_DO Bloque_Inst .)
    INST_ELSE       reduce using rule 75 (Inst_While -> INST_WHILE Operacion_booleana INST_DO Bloque_Inst .)
    VAR_IDENTIFIER  reduce using rule 75 (Inst_While -> INST_WHILE Operacion_booleana INST_DO Bloque_Inst .)
    LPAREN          reduce using rule 75 (Inst_While -> INST_WHILE Operacion_booleana INST_DO Bloque_Inst .)
    NUMBER          reduce using rule 75 (Inst_While -> INST_WHILE Operacion_booleana INST_DO Bloque_Inst .)


state 129

    (5) Lista_Inst -> Inst SEMICOLON Lista_Inst .

    INST_END        reduce using rule 5 (Lista_Inst -> Inst SEMICOLON Lista_Inst .)


state 130

    (18) Inst_Funcion -> BOTTOM LPAREN VAR_IDENTIFIER RPAREN .

    $end            reduce using rule 18 (Inst_Funcion -> BOTTOM LPAREN VAR_IDENTIFIER RPAREN .)
    SEMICOLON       reduce using rule 18 (Inst_Funcion -> BOTTOM LPAREN VAR_IDENTIFIER RPAREN .)
    INST_END        reduce using rule 18 (Inst_Funcion -> BOTTOM LPAREN VAR_IDENTIFIER RPAREN .)
    INST_ELSE       reduce using rule 18 (Inst_Funcion -> BOTTOM LPAREN VAR_IDENTIFIER RPAREN .)
    VAR_IDENTIFIER  reduce using rule 18 (Inst_Funcion -> BOTTOM LPAREN VAR_IDENTIFIER RPAREN .)
    LPAREN          reduce using rule 18 (Inst_Funcion -> BOTTOM LPAREN VAR_IDENTIFIER RPAREN .)
    NUMBER          reduce using rule 18 (Inst_Funcion -> BOTTOM LPAREN VAR_IDENTIFIER RPAREN .)


state 131

    (71) Casos -> VAR_IDENTIFIER . - > Bloque_Inst
    (53) Factor -> VAR_IDENTIFIER .

    -               shift and go to state 139
    TIMES           reduce using rule 53 (Factor -> VAR_IDENTIFIER .)
    DIVIDE          reduce using rule 53 (Factor -> VAR_IDENTIFIER .)
    RANGE           reduce using rule 53 (Factor -> VAR_IDENTIFIER .)
    PLUS            reduce using rule 53 (Factor -> VAR_IDENTIFIER .)
    MINUS           reduce using rule 53 (Factor -> VAR_IDENTIFIER .)


state 132

    (72) Casos -> Rango . - > Bloque_Inst
    (56) Rango -> Rango . PLUS Rango
    (57) Rango -> Rango . TIMES Operacion_binaria
    (58) Rango -> Rango . INTERSECTION Rango

    -               shift and go to state 140
    PLUS            shift and go to state 77
    TIMES           shift and go to state 78
    INTERSECTION    shift and go to state 76


state 133

    (70) Inst_Case -> INST_CASE Operacion_binaria INST_OF Casos .
    (73) Casos -> Casos . Casos
    (71) Casos -> . VAR_IDENTIFIER - > Bloque_Inst
    (72) Casos -> . Rango - > Bloque_Inst
    (73) Casos -> . Casos Casos
    (55) Rango -> . Operacion_binaria RANGE Operacion_binaria
    (56) Rango -> . Rango PLUS Rango
    (57) Rango -> . Rango TIMES Operacion_binaria
    (58) Rango -> . Rango INTERSECTION Rango
    (59) Rango -> . RangoF
    (46) Operacion_binaria -> . Operacion_binaria PLUS Term
    (47) Operacion_binaria -> . Operacion_binaria MINUS Term
    (48) Operacion_binaria -> . Term
    (60) RangoF -> . LPAREN Rango RPAREN
    (49) Term -> . Term TIMES Factor
    (50) Term -> . Term DIVIDE Factor
    (51) Term -> . Factor
    (52) Factor -> . NUMBER
    (53) Factor -> . VAR_IDENTIFIER
    (54) Factor -> . LPAREN Operacion_binaria RPAREN

  ! shift/reduce conflict for VAR_IDENTIFIER resolved as shift
  ! shift/reduce conflict for LPAREN resolved as shift
  ! shift/reduce conflict for NUMBER resolved as shift
    $end            reduce using rule 70 (Inst_Case -> INST_CASE Operacion_binaria INST_OF Casos .)
    SEMICOLON       reduce using rule 70 (Inst_Case -> INST_CASE Operacion_binaria INST_OF Casos .)
    INST_END        reduce using rule 70 (Inst_Case -> INST_CASE Operacion_binaria INST_OF Casos .)
    INST_ELSE       reduce using rule 70 (Inst_Case -> INST_CASE Operacion_binaria INST_OF Casos .)
    VAR_IDENTIFIER  shift and go to state 131
    LPAREN          shift and go to state 119
    NUMBER          shift and go to state 33

  ! VAR_IDENTIFIER  [ reduce using rule 70 (Inst_Case -> INST_CASE Operacion_binaria INST_OF Casos .) ]
  ! LPAREN          [ reduce using rule 70 (Inst_Case -> INST_CASE Operacion_binaria INST_OF Casos .) ]
  ! NUMBER          [ reduce using rule 70 (Inst_Case -> INST_CASE Operacion_binaria INST_OF Casos .) ]

    Operacion_binaria              shift and go to state 118
    Factor                         shift and go to state 40
    Term                           shift and go to state 38
    RangoF                         shift and go to state 32
    Rango                          shift and go to state 132
    Casos                          shift and go to state 141

state 134

    (74) Inst_For -> INST_FOR VAR_IDENTIFIER INST_IN Rango . INST_DO Bloque_Inst
    (56) Rango -> Rango . PLUS Rango
    (57) Rango -> Rango . TIMES Operacion_binaria
    (58) Rango -> Rango . INTERSECTION Rango

    INST_DO         shift and go to state 142
    PLUS            shift and go to state 77
    TIMES           shift and go to state 78
    INTERSECTION    shift and go to state 76


state 135

    (68) Inst_If -> INST_IF Operacion_booleana INST_THEN Bloque_Inst .
    (69) Inst_If -> INST_IF Operacion_booleana INST_THEN Bloque_Inst . INST_ELSE Bloque_Inst

  ! shift/reduce conflict for INST_ELSE resolved as shift
    $end            reduce using rule 68 (Inst_If -> INST_IF Operacion_booleana INST_THEN Bloque_Inst .)
    SEMICOLON       reduce using rule 68 (Inst_If -> INST_IF Operacion_booleana INST_THEN Bloque_Inst .)
    INST_END        reduce using rule 68 (Inst_If -> INST_IF Operacion_booleana INST_THEN Bloque_Inst .)
    VAR_IDENTIFIER  reduce using rule 68 (Inst_If -> INST_IF Operacion_booleana INST_THEN Bloque_Inst .)
    LPAREN          reduce using rule 68 (Inst_If -> INST_IF Operacion_booleana INST_THEN Bloque_Inst .)
    NUMBER          reduce using rule 68 (Inst_If -> INST_IF Operacion_booleana INST_THEN Bloque_Inst .)
    INST_ELSE       shift and go to state 143

  ! INST_ELSE       [ reduce using rule 68 (Inst_If -> INST_IF Operacion_booleana INST_THEN Bloque_Inst .) ]


state 136

    (16) Inst_Funcion -> LENGTH LPAREN VAR_IDENTIFIER RPAREN .

    $end            reduce using rule 16 (Inst_Funcion -> LENGTH LPAREN VAR_IDENTIFIER RPAREN .)
    SEMICOLON       reduce using rule 16 (Inst_Funcion -> LENGTH LPAREN VAR_IDENTIFIER RPAREN .)
    INST_END        reduce using rule 16 (Inst_Funcion -> LENGTH LPAREN VAR_IDENTIFIER RPAREN .)
    INST_ELSE       reduce using rule 16 (Inst_Funcion -> LENGTH LPAREN VAR_IDENTIFIER RPAREN .)
    VAR_IDENTIFIER  reduce using rule 16 (Inst_Funcion -> LENGTH LPAREN VAR_IDENTIFIER RPAREN .)
    LPAREN          reduce using rule 16 (Inst_Funcion -> LENGTH LPAREN VAR_IDENTIFIER RPAREN .)
    NUMBER          reduce using rule 16 (Inst_Funcion -> LENGTH LPAREN VAR_IDENTIFIER RPAREN .)


state 137

    (15) Inst_Funcion -> RTOI LPAREN VAR_IDENTIFIER RPAREN .

    $end            reduce using rule 15 (Inst_Funcion -> RTOI LPAREN VAR_IDENTIFIER RPAREN .)
    SEMICOLON       reduce using rule 15 (Inst_Funcion -> RTOI LPAREN VAR_IDENTIFIER RPAREN .)
    INST_END        reduce using rule 15 (Inst_Funcion -> RTOI LPAREN VAR_IDENTIFIER RPAREN .)
    INST_ELSE       reduce using rule 15 (Inst_Funcion -> RTOI LPAREN VAR_IDENTIFIER RPAREN .)
    VAR_IDENTIFIER  reduce using rule 15 (Inst_Funcion -> RTOI LPAREN VAR_IDENTIFIER RPAREN .)
    LPAREN          reduce using rule 15 (Inst_Funcion -> RTOI LPAREN VAR_IDENTIFIER RPAREN .)
    NUMBER          reduce using rule 15 (Inst_Funcion -> RTOI LPAREN VAR_IDENTIFIER RPAREN .)


state 138

    (54) Factor -> LPAREN Operacion_binaria . RPAREN
    (55) Rango -> Operacion_binaria . RANGE Operacion_binaria
    (46) Operacion_binaria -> Operacion_binaria . PLUS Term
    (47) Operacion_binaria -> Operacion_binaria . MINUS Term

    RPAREN          shift and go to state 117
    RANGE           shift and go to state 85
    PLUS            shift and go to state 87
    MINUS           shift and go to state 88


state 139

    (71) Casos -> VAR_IDENTIFIER - . > Bloque_Inst

    >               shift and go to state 144


state 140

    (72) Casos -> Rango - . > Bloque_Inst

    >               shift and go to state 145


state 141

    (73) Casos -> Casos Casos .
    (73) Casos -> Casos . Casos
    (71) Casos -> . VAR_IDENTIFIER - > Bloque_Inst
    (72) Casos -> . Rango - > Bloque_Inst
    (73) Casos -> . Casos Casos
    (55) Rango -> . Operacion_binaria RANGE Operacion_binaria
    (56) Rango -> . Rango PLUS Rango
    (57) Rango -> . Rango TIMES Operacion_binaria
    (58) Rango -> . Rango INTERSECTION Rango
    (59) Rango -> . RangoF
    (46) Operacion_binaria -> . Operacion_binaria PLUS Term
    (47) Operacion_binaria -> . Operacion_binaria MINUS Term
    (48) Operacion_binaria -> . Term
    (60) RangoF -> . LPAREN Rango RPAREN
    (49) Term -> . Term TIMES Factor
    (50) Term -> . Term DIVIDE Factor
    (51) Term -> . Factor
    (52) Factor -> . NUMBER
    (53) Factor -> . VAR_IDENTIFIER
    (54) Factor -> . LPAREN Operacion_binaria RPAREN

  ! shift/reduce conflict for VAR_IDENTIFIER resolved as shift
  ! shift/reduce conflict for LPAREN resolved as shift
  ! shift/reduce conflict for NUMBER resolved as shift
    $end            reduce using rule 73 (Casos -> Casos Casos .)
    SEMICOLON       reduce using rule 73 (Casos -> Casos Casos .)
    INST_END        reduce using rule 73 (Casos -> Casos Casos .)
    INST_ELSE       reduce using rule 73 (Casos -> Casos Casos .)
    VAR_IDENTIFIER  shift and go to state 131
    LPAREN          shift and go to state 119
    NUMBER          shift and go to state 33

  ! VAR_IDENTIFIER  [ reduce using rule 73 (Casos -> Casos Casos .) ]
  ! LPAREN          [ reduce using rule 73 (Casos -> Casos Casos .) ]
  ! NUMBER          [ reduce using rule 73 (Casos -> Casos Casos .) ]

    Operacion_binaria              shift and go to state 118
    Factor                         shift and go to state 40
    Term                           shift and go to state 38
    RangoF                         shift and go to state 32
    Rango                          shift and go to state 132
    Casos                          shift and go to state 141

state 142

    (74) Inst_For -> INST_FOR VAR_IDENTIFIER INST_IN Rango INST_DO . Bloque_Inst
    (2) Bloque_Inst -> . INST_BEGIN Lista_Inst INST_END
    (3) Bloque_Inst -> . Inst
    (6) Inst -> . Inst_Declare
    (7) Inst -> . Inst_Asignacion
    (8) Inst -> . Inst_Lectura
    (9) Inst -> . Inst_For
    (10) Inst -> . Inst_While
    (11) Inst -> . Inst_If
    (12) Inst -> . Inst_Case
    (13) Inst -> . Inst_Salida
    (14) Inst -> . Inst_Funcion
    (19) Inst_Declare -> . Inst_Declareau
    (20) Inst_Declare -> . Inst_Declareau SEMICOLON Inst_Declare
    (28) Inst_Asignacion -> . VAR_IDENTIFIER EQUAL Expresion
    (61) Inst_Lectura -> . INST_READ VAR_IDENTIFIER
    (74) Inst_For -> . INST_FOR VAR_IDENTIFIER INST_IN Rango INST_DO Bloque_Inst
    (75) Inst_While -> . INST_WHILE Operacion_booleana INST_DO Bloque_Inst
    (68) Inst_If -> . INST_IF Operacion_booleana INST_THEN Bloque_Inst
    (69) Inst_If -> . INST_IF Operacion_booleana INST_THEN Bloque_Inst INST_ELSE Bloque_Inst
    (70) Inst_Case -> . INST_CASE Operacion_binaria INST_OF Casos
    (62) Inst_Salida -> . INST_WRITE Lista_Aux
    (63) Inst_Salida -> . INST_WRITELN Lista_Aux
    (15) Inst_Funcion -> . RTOI LPAREN VAR_IDENTIFIER RPAREN
    (16) Inst_Funcion -> . LENGTH LPAREN VAR_IDENTIFIER RPAREN
    (17) Inst_Funcion -> . TOP LPAREN VAR_IDENTIFIER RPAREN
    (18) Inst_Funcion -> . BOTTOM LPAREN VAR_IDENTIFIER RPAREN
    (21) Inst_Declareau -> . INST_DECLARE Lista_Declare

    INST_BEGIN      shift and go to state 11
    VAR_IDENTIFIER  shift and go to state 18
    INST_READ       shift and go to state 10
    INST_FOR        shift and go to state 21
    INST_WHILE      shift and go to state 9
    INST_IF         shift and go to state 22
    INST_CASE       shift and go to state 20
    INST_WRITE      shift and go to state 5
    INST_WRITELN    shift and go to state 23
    RTOI            shift and go to state 25
    LENGTH          shift and go to state 24
    TOP             shift and go to state 6
    BOTTOM          shift and go to state 13
    INST_DECLARE    shift and go to state 3

    Inst_Salida                    shift and go to state 8
    Inst_Declare                   shift and go to state 12
    Inst_Funcion                   shift and go to state 4
    Bloque_Inst                    shift and go to state 146
    Inst_If                        shift and go to state 19
    Inst_While                     shift and go to state 16
    Inst_For                       shift and go to state 14
    Inst_Asignacion                shift and go to state 26
    Inst                           shift and go to state 15
    Inst_Case                      shift and go to state 27
    Inst_Lectura                   shift and go to state 17
    Inst_Declareau                 shift and go to state 28

state 143

    (69) Inst_If -> INST_IF Operacion_booleana INST_THEN Bloque_Inst INST_ELSE . Bloque_Inst
    (2) Bloque_Inst -> . INST_BEGIN Lista_Inst INST_END
    (3) Bloque_Inst -> . Inst
    (6) Inst -> . Inst_Declare
    (7) Inst -> . Inst_Asignacion
    (8) Inst -> . Inst_Lectura
    (9) Inst -> . Inst_For
    (10) Inst -> . Inst_While
    (11) Inst -> . Inst_If
    (12) Inst -> . Inst_Case
    (13) Inst -> . Inst_Salida
    (14) Inst -> . Inst_Funcion
    (19) Inst_Declare -> . Inst_Declareau
    (20) Inst_Declare -> . Inst_Declareau SEMICOLON Inst_Declare
    (28) Inst_Asignacion -> . VAR_IDENTIFIER EQUAL Expresion
    (61) Inst_Lectura -> . INST_READ VAR_IDENTIFIER
    (74) Inst_For -> . INST_FOR VAR_IDENTIFIER INST_IN Rango INST_DO Bloque_Inst
    (75) Inst_While -> . INST_WHILE Operacion_booleana INST_DO Bloque_Inst
    (68) Inst_If -> . INST_IF Operacion_booleana INST_THEN Bloque_Inst
    (69) Inst_If -> . INST_IF Operacion_booleana INST_THEN Bloque_Inst INST_ELSE Bloque_Inst
    (70) Inst_Case -> . INST_CASE Operacion_binaria INST_OF Casos
    (62) Inst_Salida -> . INST_WRITE Lista_Aux
    (63) Inst_Salida -> . INST_WRITELN Lista_Aux
    (15) Inst_Funcion -> . RTOI LPAREN VAR_IDENTIFIER RPAREN
    (16) Inst_Funcion -> . LENGTH LPAREN VAR_IDENTIFIER RPAREN
    (17) Inst_Funcion -> . TOP LPAREN VAR_IDENTIFIER RPAREN
    (18) Inst_Funcion -> . BOTTOM LPAREN VAR_IDENTIFIER RPAREN
    (21) Inst_Declareau -> . INST_DECLARE Lista_Declare

    INST_BEGIN      shift and go to state 11
    VAR_IDENTIFIER  shift and go to state 18
    INST_READ       shift and go to state 10
    INST_FOR        shift and go to state 21
    INST_WHILE      shift and go to state 9
    INST_IF         shift and go to state 22
    INST_CASE       shift and go to state 20
    INST_WRITE      shift and go to state 5
    INST_WRITELN    shift and go to state 23
    RTOI            shift and go to state 25
    LENGTH          shift and go to state 24
    TOP             shift and go to state 6
    BOTTOM          shift and go to state 13
    INST_DECLARE    shift and go to state 3

    Inst_Salida                    shift and go to state 8
    Inst_Declare                   shift and go to state 12
    Inst_Funcion                   shift and go to state 4
    Bloque_Inst                    shift and go to state 147
    Inst_If                        shift and go to state 19
    Inst_For                       shift and go to state 14
    Inst_While                     shift and go to state 16
    Inst                           shift and go to state 15
    Inst_Asignacion                shift and go to state 26
    Inst_Case                      shift and go to state 27
    Inst_Lectura                   shift and go to state 17
    Inst_Declareau                 shift and go to state 28

state 144

    (71) Casos -> VAR_IDENTIFIER - > . Bloque_Inst
    (2) Bloque_Inst -> . INST_BEGIN Lista_Inst INST_END
    (3) Bloque_Inst -> . Inst
    (6) Inst -> . Inst_Declare
    (7) Inst -> . Inst_Asignacion
    (8) Inst -> . Inst_Lectura
    (9) Inst -> . Inst_For
    (10) Inst -> . Inst_While
    (11) Inst -> . Inst_If
    (12) Inst -> . Inst_Case
    (13) Inst -> . Inst_Salida
    (14) Inst -> . Inst_Funcion
    (19) Inst_Declare -> . Inst_Declareau
    (20) Inst_Declare -> . Inst_Declareau SEMICOLON Inst_Declare
    (28) Inst_Asignacion -> . VAR_IDENTIFIER EQUAL Expresion
    (61) Inst_Lectura -> . INST_READ VAR_IDENTIFIER
    (74) Inst_For -> . INST_FOR VAR_IDENTIFIER INST_IN Rango INST_DO Bloque_Inst
    (75) Inst_While -> . INST_WHILE Operacion_booleana INST_DO Bloque_Inst
    (68) Inst_If -> . INST_IF Operacion_booleana INST_THEN Bloque_Inst
    (69) Inst_If -> . INST_IF Operacion_booleana INST_THEN Bloque_Inst INST_ELSE Bloque_Inst
    (70) Inst_Case -> . INST_CASE Operacion_binaria INST_OF Casos
    (62) Inst_Salida -> . INST_WRITE Lista_Aux
    (63) Inst_Salida -> . INST_WRITELN Lista_Aux
    (15) Inst_Funcion -> . RTOI LPAREN VAR_IDENTIFIER RPAREN
    (16) Inst_Funcion -> . LENGTH LPAREN VAR_IDENTIFIER RPAREN
    (17) Inst_Funcion -> . TOP LPAREN VAR_IDENTIFIER RPAREN
    (18) Inst_Funcion -> . BOTTOM LPAREN VAR_IDENTIFIER RPAREN
    (21) Inst_Declareau -> . INST_DECLARE Lista_Declare

    INST_BEGIN      shift and go to state 11
    VAR_IDENTIFIER  shift and go to state 18
    INST_READ       shift and go to state 10
    INST_FOR        shift and go to state 21
    INST_WHILE      shift and go to state 9
    INST_IF         shift and go to state 22
    INST_CASE       shift and go to state 20
    INST_WRITE      shift and go to state 5
    INST_WRITELN    shift and go to state 23
    RTOI            shift and go to state 25
    LENGTH          shift and go to state 24
    TOP             shift and go to state 6
    BOTTOM          shift and go to state 13
    INST_DECLARE    shift and go to state 3

    Inst_Salida                    shift and go to state 8
    Inst_Declare                   shift and go to state 12
    Inst_Funcion                   shift and go to state 4
    Bloque_Inst                    shift and go to state 148
    Inst_If                        shift and go to state 19
    Inst_For                       shift and go to state 14
    Inst_While                     shift and go to state 16
    Inst                           shift and go to state 15
    Inst_Asignacion                shift and go to state 26
    Inst_Case                      shift and go to state 27
    Inst_Lectura                   shift and go to state 17
    Inst_Declareau                 shift and go to state 28

state 145

    (72) Casos -> Rango - > . Bloque_Inst
    (2) Bloque_Inst -> . INST_BEGIN Lista_Inst INST_END
    (3) Bloque_Inst -> . Inst
    (6) Inst -> . Inst_Declare
    (7) Inst -> . Inst_Asignacion
    (8) Inst -> . Inst_Lectura
    (9) Inst -> . Inst_For
    (10) Inst -> . Inst_While
    (11) Inst -> . Inst_If
    (12) Inst -> . Inst_Case
    (13) Inst -> . Inst_Salida
    (14) Inst -> . Inst_Funcion
    (19) Inst_Declare -> . Inst_Declareau
    (20) Inst_Declare -> . Inst_Declareau SEMICOLON Inst_Declare
    (28) Inst_Asignacion -> . VAR_IDENTIFIER EQUAL Expresion
    (61) Inst_Lectura -> . INST_READ VAR_IDENTIFIER
    (74) Inst_For -> . INST_FOR VAR_IDENTIFIER INST_IN Rango INST_DO Bloque_Inst
    (75) Inst_While -> . INST_WHILE Operacion_booleana INST_DO Bloque_Inst
    (68) Inst_If -> . INST_IF Operacion_booleana INST_THEN Bloque_Inst
    (69) Inst_If -> . INST_IF Operacion_booleana INST_THEN Bloque_Inst INST_ELSE Bloque_Inst
    (70) Inst_Case -> . INST_CASE Operacion_binaria INST_OF Casos
    (62) Inst_Salida -> . INST_WRITE Lista_Aux
    (63) Inst_Salida -> . INST_WRITELN Lista_Aux
    (15) Inst_Funcion -> . RTOI LPAREN VAR_IDENTIFIER RPAREN
    (16) Inst_Funcion -> . LENGTH LPAREN VAR_IDENTIFIER RPAREN
    (17) Inst_Funcion -> . TOP LPAREN VAR_IDENTIFIER RPAREN
    (18) Inst_Funcion -> . BOTTOM LPAREN VAR_IDENTIFIER RPAREN
    (21) Inst_Declareau -> . INST_DECLARE Lista_Declare

    INST_BEGIN      shift and go to state 11
    VAR_IDENTIFIER  shift and go to state 18
    INST_READ       shift and go to state 10
    INST_FOR        shift and go to state 21
    INST_WHILE      shift and go to state 9
    INST_IF         shift and go to state 22
    INST_CASE       shift and go to state 20
    INST_WRITE      shift and go to state 5
    INST_WRITELN    shift and go to state 23
    RTOI            shift and go to state 25
    LENGTH          shift and go to state 24
    TOP             shift and go to state 6
    BOTTOM          shift and go to state 13
    INST_DECLARE    shift and go to state 3

    Inst_Salida                    shift and go to state 8
    Inst_Declare                   shift and go to state 12
    Inst_Funcion                   shift and go to state 4
    Bloque_Inst                    shift and go to state 149
    Inst_If                        shift and go to state 19
    Inst_While                     shift and go to state 16
    Inst_For                       shift and go to state 14
    Inst_Asignacion                shift and go to state 26
    Inst                           shift and go to state 15
    Inst_Case                      shift and go to state 27
    Inst_Lectura                   shift and go to state 17
    Inst_Declareau                 shift and go to state 28

state 146

    (74) Inst_For -> INST_FOR VAR_IDENTIFIER INST_IN Rango INST_DO Bloque_Inst .

    $end            reduce using rule 74 (Inst_For -> INST_FOR VAR_IDENTIFIER INST_IN Rango INST_DO Bloque_Inst .)
    SEMICOLON       reduce using rule 74 (Inst_For -> INST_FOR VAR_IDENTIFIER INST_IN Rango INST_DO Bloque_Inst .)
    INST_END        reduce using rule 74 (Inst_For -> INST_FOR VAR_IDENTIFIER INST_IN Rango INST_DO Bloque_Inst .)
    INST_ELSE       reduce using rule 74 (Inst_For -> INST_FOR VAR_IDENTIFIER INST_IN Rango INST_DO Bloque_Inst .)
    VAR_IDENTIFIER  reduce using rule 74 (Inst_For -> INST_FOR VAR_IDENTIFIER INST_IN Rango INST_DO Bloque_Inst .)
    LPAREN          reduce using rule 74 (Inst_For -> INST_FOR VAR_IDENTIFIER INST_IN Rango INST_DO Bloque_Inst .)
    NUMBER          reduce using rule 74 (Inst_For -> INST_FOR VAR_IDENTIFIER INST_IN Rango INST_DO Bloque_Inst .)


state 147

    (69) Inst_If -> INST_IF Operacion_booleana INST_THEN Bloque_Inst INST_ELSE Bloque_Inst .

    $end            reduce using rule 69 (Inst_If -> INST_IF Operacion_booleana INST_THEN Bloque_Inst INST_ELSE Bloque_Inst .)
    SEMICOLON       reduce using rule 69 (Inst_If -> INST_IF Operacion_booleana INST_THEN Bloque_Inst INST_ELSE Bloque_Inst .)
    INST_END        reduce using rule 69 (Inst_If -> INST_IF Operacion_booleana INST_THEN Bloque_Inst INST_ELSE Bloque_Inst .)
    INST_ELSE       reduce using rule 69 (Inst_If -> INST_IF Operacion_booleana INST_THEN Bloque_Inst INST_ELSE Bloque_Inst .)
    VAR_IDENTIFIER  reduce using rule 69 (Inst_If -> INST_IF Operacion_booleana INST_THEN Bloque_Inst INST_ELSE Bloque_Inst .)
    LPAREN          reduce using rule 69 (Inst_If -> INST_IF Operacion_booleana INST_THEN Bloque_Inst INST_ELSE Bloque_Inst .)
    NUMBER          reduce using rule 69 (Inst_If -> INST_IF Operacion_booleana INST_THEN Bloque_Inst INST_ELSE Bloque_Inst .)


state 148

    (71) Casos -> VAR_IDENTIFIER - > Bloque_Inst .

    $end            reduce using rule 71 (Casos -> VAR_IDENTIFIER - > Bloque_Inst .)
    SEMICOLON       reduce using rule 71 (Casos -> VAR_IDENTIFIER - > Bloque_Inst .)
    INST_END        reduce using rule 71 (Casos -> VAR_IDENTIFIER - > Bloque_Inst .)
    INST_ELSE       reduce using rule 71 (Casos -> VAR_IDENTIFIER - > Bloque_Inst .)
    VAR_IDENTIFIER  reduce using rule 71 (Casos -> VAR_IDENTIFIER - > Bloque_Inst .)
    LPAREN          reduce using rule 71 (Casos -> VAR_IDENTIFIER - > Bloque_Inst .)
    NUMBER          reduce using rule 71 (Casos -> VAR_IDENTIFIER - > Bloque_Inst .)


state 149

    (72) Casos -> Rango - > Bloque_Inst .

    $end            reduce using rule 72 (Casos -> Rango - > Bloque_Inst .)
    SEMICOLON       reduce using rule 72 (Casos -> Rango - > Bloque_Inst .)
    INST_END        reduce using rule 72 (Casos -> Rango - > Bloque_Inst .)
    INST_ELSE       reduce using rule 72 (Casos -> Rango - > Bloque_Inst .)
    VAR_IDENTIFIER  reduce using rule 72 (Casos -> Rango - > Bloque_Inst .)
    LPAREN          reduce using rule 72 (Casos -> Rango - > Bloque_Inst .)
    NUMBER          reduce using rule 72 (Casos -> Rango - > Bloque_Inst .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for SEMICOLON in state 28 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 38 resolved as shift
WARNING: shift/reduce conflict for VAR_IDENTIFIER in state 133 resolved as shift
WARNING: shift/reduce conflict for LPAREN in state 133 resolved as shift
WARNING: shift/reduce conflict for NUMBER in state 133 resolved as shift
WARNING: shift/reduce conflict for INST_ELSE in state 135 resolved as shift
WARNING: shift/reduce conflict for VAR_IDENTIFIER in state 141 resolved as shift
WARNING: shift/reduce conflict for LPAREN in state 141 resolved as shift
WARNING: shift/reduce conflict for NUMBER in state 141 resolved as shift
WARNING: reduce/reduce conflict in state 41 resolved using rule (Operacion_booleana -> VAR_IDENTIFIER)
WARNING: rejected rule (Factor -> VAR_IDENTIFIER) in state 41
